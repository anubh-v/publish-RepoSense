{
  "authorDailyContributionsMap": {
    "Holger Peters": [
      {
        "insertions": 10,
        "deletions": 2,
        "date": "2014-04-07",
        "commitResults": [
          {
            "hash": "6840323498decdc2fe902834fb34088b530c9e08",
            "messageTitle": "Add \u0027ignored-modules\u0027 option to type checker to avoid false-positives w/ numpy",
            "messageBody": "",
            "insertions": 10,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 73,
        "deletions": 18,
        "date": "2014-04-11",
        "commitResults": [
          {
            "hash": "15bbb7c35655990e1d4a7b422d4b43d000dc10d1",
            "messageTitle": "Make optparse a default for the ignored modules parameter",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "27a10e0a7d350f39366c1bc81f7bae5da6b5b754",
            "messageTitle": "Create a test for the TypeChecker",
            "messageBody": "",
            "insertions": 29,
            "deletions": 0
          },
          {
            "hash": "0499a1b0ce7e3925e89d23eb44b7841df6e59be6",
            "messageTitle": "Add more tests for TypeChecker\u0027s getattr check and ignored_modules",
            "messageBody": "",
            "insertions": 39,
            "deletions": 13
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2014-04-15",
        "commitResults": [
          {
            "hash": "d2c0adc5c98b3c961bec8c25851b0fc9a70d16df",
            "messageTitle": "Removing numpy from defaults for ignored modules in type checker",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Ryan McGuire": [
      {
        "insertions": 2,
        "deletions": 3,
        "date": "2018-04-07",
        "commitResults": [
          {
            "hash": "39338dcb1c3b7b855db9688203ad2bfc8b8bf850",
            "messageTitle": "Fixes erroneous default arguments to epylint (#2001)",
            "messageBody": "Fixes a bug where epylint ignores settings in pylintrc\r\ndue to hard coded default arguments. Now with this fix,\r\nthe output of epylint is identical to pylint.",
            "insertions": 2,
            "deletions": 3
          }
        ]
      }
    ],
    "Carey Metcalfe": [
      {
        "insertions": 13,
        "deletions": 7,
        "date": "2018-07-22",
        "commitResults": [
          {
            "hash": "a7866ad4be9edfd9a1c58398d82611944a0e6d40",
            "messageTitle": "Demote \u0027try-except-raise\u0027 from an error to a warning (#2324)",
            "messageBody": "This changes the `try-accept-raise` message from `E0705` to `W0706` to\r\nbe more in line with the way the rest of the messages are organized.\r\n\r\nFixes #2323",
            "insertions": 13,
            "deletions": 7
          }
        ]
      }
    ],
    "Derek Harland": [
      {
        "insertions": 6,
        "deletions": 19,
        "date": "2014-03-31",
        "commitResults": [
          {
            "hash": "4c6278a1c646765ff0b0f6a888c76461e493e758",
            "messageTitle": "epylint must use a msg-template that includes the message id, as that is what is used to determine if it is an Error or Warning",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "8be827fc73a61d5d5469c164d57e2741e546bda0",
            "messageTitle": "Alter msg_template to directly produce emacs compatible warning/error lines, and thus remove the whole regex hack",
            "messageBody": "",
            "insertions": 4,
            "deletions": 17
          }
        ]
      }
    ],
    "jab": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2019-02-28",
        "commitResults": [
          {
            "hash": "66f36eec1e3daf86373739113f656b2e11e870b5",
            "messageTitle": "Pin dependencies to non-breaking version ranges",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Manuel Vázquez Acosta": [
      {
        "insertions": 38,
        "deletions": 26,
        "date": "2014-01-06",
        "commitResults": [
          {
            "hash": "2da336b446b6bf7410527c9a16531a0defb27845",
            "messageTitle": "Injects the current sys.path into `lint.py` subprocess env",
            "messageBody": "This allows installing pylint in a buildout setup and *see* the eggs in the\nbuildout.  Since buildout modifies the installed scripts (like epyling) by\nprepending and assignment to ``sys.path[0:0]`` all the eggs, we need to make\nsure those path are the ones seen by pylint.\n",
            "insertions": 24,
            "deletions": 3
          },
          {
            "hash": "2aecb5d99aee9a037f06ef4adead253db356a798",
            "messageTitle": "Refactors the PYTHONPATH detector into a function",
            "messageBody": "",
            "insertions": 14,
            "deletions": 23
          }
        ]
      },
      {
        "insertions": 9,
        "deletions": 28,
        "date": "2014-04-14",
        "commitResults": [
          {
            "hash": "ffb1230347afb5fa866208a91d2a910d1553f14b",
            "messageTitle": "Removes overloaded PYTHONPATH.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 7
          },
          {
            "hash": "db303eb0c3ef4ed77ba01de7e1193028961590b8",
            "messageTitle": "Fix merge error.  Closes #133.",
            "messageBody": "",
            "insertions": 6,
            "deletions": 5
          },
          {
            "hash": "f8fdbc3f71eb981e10b6705dd6771157f26f911a",
            "messageTitle": "More fixes to merge.",
            "messageBody": "Sorry. I\u0027m not used to hg merges.\n",
            "insertions": 2,
            "deletions": 16
          }
        ]
      }
    ],
    "Elias Dorneles": [
      {
        "insertions": 11,
        "deletions": 0,
        "date": "2016-07-17",
        "commitResults": [
          {
            "hash": "7f8b944db06a89c526856b16a5fb68c292e8f53d",
            "messageTitle": "Document how to run a subset of tests during development (#1020)",
            "messageBody": "During development, it\u0027s helpful to run only a subset of tests\r\nto have faster feedback, this adds instructions on how to do it.\r\n\r\nIt took me more time to figure this out than to make the changes\r\nneeded for #1016, so it will be nice to have it in the docs.",
            "insertions": 11,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 35,
        "deletions": 1,
        "date": "2016-07-18",
        "commitResults": [
          {
            "hash": "0a19131d0757781891fc076697790c21d5d9db75",
            "messageTitle": "Relax size limit for names intended for private scope",
            "messageBody": "This will let people to use longer names for methods and functions\nthat have a shorter scope (to be considered private), thus not\ndiscouraging people to write nice descriptive names.\n",
            "insertions": 35,
            "deletions": 1
          }
        ]
      }
    ],
    "Moisés López": [
      {
        "insertions": 2,
        "deletions": 0,
        "date": "2016-04-07",
        "commitResults": [
          {
            "hash": "e552598b4d47f6616639438adc6c1fdb4fdeed31",
            "messageTitle": "[REF] CONTRIBUTORS.txt: Add Moisés López contribution",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 68,
        "deletions": 0,
        "date": "2016-07-09",
        "commitResults": [
          {
            "hash": "1be0e7d8d1ba025ac7d48e88ceb62c126c42bcfc",
            "messageTitle": "redundant-returns-doc: Consider *yield* as a type or *return* (Fixes #989)",
            "messageBody": "",
            "insertions": 68,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 149,
        "deletions": 4,
        "date": "2016-07-12",
        "commitResults": [
          {
            "hash": "5c40fd9ae3c7c8e8181a473d7708ed670924cc6d",
            "messageTitle": "Add a new refactoring message, \u0027consider-merging-isinstance`.",
            "messageBody": "",
            "insertions": 149,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 133,
        "deletions": 35,
        "date": "2016-12-04",
        "commitResults": [
          {
            "hash": "56cc7be69843a786f9d194772d0d9dea4996df5b",
            "messageTitle": "Add a new check, superflous-else-return",
            "messageBody": "This rule verifies that an if statement does not have an else branch,\npreceded by a return statement inside the if branch.\n",
            "insertions": 113,
            "deletions": 10
          },
          {
            "hash": "537e9ab0a7c4b2a25e0b42f41edab1abce5388e8",
            "messageTitle": "Fix superfluous-else-return across the project.",
            "messageBody": "",
            "insertions": 20,
            "deletions": 25
          }
        ]
      }
    ],
    "Alexandru Coman": [
      {
        "insertions": 38,
        "deletions": 27,
        "date": "2014-07-09",
        "commitResults": [
          {
            "hash": "1ab3a5b65b0b61f63ea153e6f9a0ed0b555e155b",
            "messageTitle": "Fixing Issue #149 (W0511 false positive)",
            "messageBody": "",
            "insertions": 23,
            "deletions": 17
          },
          {
            "hash": "b0ba4593a379c01a1ea420414d58f1ba81fac11f",
            "messageTitle": "Code refactoring.",
            "messageBody": "",
            "insertions": 6,
            "deletions": 7
          },
          {
            "hash": "c381b7ce66bfe897a4b7a39514476420d864f891",
            "messageTitle": "Fix a false positive regarding W0511. Closes issue #149.",
            "messageBody": "",
            "insertions": 9,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 8,
        "deletions": 2,
        "date": "2014-07-11",
        "commitResults": [
          {
            "hash": "da5ea3dedcde21b46abe67c7fabab213518978fd",
            "messageTitle": "Checkers respect priority now. Close issue #229.",
            "messageBody": "",
            "insertions": 7,
            "deletions": 1
          },
          {
            "hash": "5814625d4cae7ef202860e6b732a1951505f3fd2",
            "messageTitle": "Remove extra spaces.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Kevin Phillips": [
      {
        "insertions": 5,
        "deletions": 5,
        "date": "2016-03-02",
        "commitResults": [
          {
            "hash": "47a988fc662c1cf902a30123bd208d1cfc734937",
            "messageTitle": "Fixed Windows startup scripts so they redirect to the executable files generated by setuptools.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          }
        ]
      }
    ],
    "Nick Smith": [
      {
        "insertions": 5,
        "deletions": 6,
        "date": "2019-05-19",
        "commitResults": [
          {
            "hash": "312dde3946433e36dfe2f2c5ba1229374a302932",
            "messageTitle": "Fix misspellings in documentation (#2922)",
            "messageBody": "",
            "insertions": 5,
            "deletions": 6
          }
        ]
      }
    ],
    "Pavel Roskin": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2015-02-07",
        "commitResults": [
          {
            "hash": "4254f6caf51706d008a18a8452381b03eda67196",
            "messageTitle": "Use green for info messages, lightblue is hard to see. Closes issue #474.",
            "messageBody": "The checkbox label for informational messages is shown in light blue on\nlight gray, which is hard to see. Green is a good choice both visually\n(not too bright, but clearly visible), and semantically (not a problem\nwith the code).\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 0,
        "date": "2015-02-25",
        "commitResults": [
          {
            "hash": "210a685194092e1a7b4baa008af5ed9ef454ebaf",
            "messageTitle": "Clear Python3Checker state on every new module",
            "messageBody": "This fixes detection of missing __future__ imports when processing\nmultiple files.\n",
            "insertions": 5,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 7,
        "date": "2015-02-26",
        "commitResults": [
          {
            "hash": "a0dd393b85042526f5bfc0d4ab958c64d403c2f8",
            "messageTitle": "Remove excessive quotes in docstrings",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "090c6f41f65d28931f934b35a18500ade7f066ba",
            "messageTitle": "Remove Python3Checker constructor, visit_module() does all its job",
            "messageBody": "",
            "insertions": 0,
            "deletions": 5
          },
          {
            "hash": "d5d0170282fef687c3825632ce881f3d005a1047",
            "messageTitle": "Add missing call to unittest.main() in unittest_checker_exceptions.py",
            "messageBody": "",
            "insertions": 4,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2015-03-02",
        "commitResults": [
          {
            "hash": "6eb3ef35956d0219a1fe41397776ff956642425b",
            "messageTitle": "Fix the number of underscores in __implements__",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 0,
        "date": "2015-03-27",
        "commitResults": [
          {
            "hash": "f935691aa865111f98c146ea82c2d773603c5299",
            "messageTitle": "Expand tilde in spelling-private-dict-file",
            "messageBody": "This closes issue #503\n",
            "insertions": 6,
            "deletions": 0
          }
        ]
      }
    ],
    "Viorel Stirbu": [
      {
        "insertions": 7,
        "deletions": 0,
        "date": "2015-02-14",
        "commitResults": [
          {
            "hash": "b064a27291f355179f72fca82a78efa60755393f",
            "messageTitle": "Add warning for \"intern\" in Python 3",
            "messageBody": "Closes issue #473\n",
            "insertions": 7,
            "deletions": 0
          }
        ]
      }
    ],
    "Simu Toni": [
      {
        "insertions": 25,
        "deletions": 24,
        "date": "2015-03-28",
        "commitResults": [
          {
            "hash": "39cd98b6b8065b38ee3f365fd37ea471fdae6418",
            "messageTitle": "issue-422 solved some pylint warnings when running pylint on pylint code base",
            "messageBody": "",
            "insertions": 25,
            "deletions": 24
          }
        ]
      }
    ],
    "mattlbeck": [
      {
        "insertions": 124,
        "deletions": 4,
        "date": "2019-08-16",
        "commitResults": [
          {
            "hash": "4bf6f03c84281a7c6d23dcf9329cb346dcd70bbb",
            "messageTitle": "Add a new check `arguments-out-of-order`",
            "messageBody": "The implementation successfully warns against the most obvious cases\r\nwhere named variables are supplied to a function that all match a\r\nfunction\u0027s positional argument, but are in the wrong order.\r\n\r\nThere are some additional corner cases that need to be addresses, such\r\nas call sites that are not typical function calls.\r\n\r\nAdded additional checking for the presence of `self` arguments when\r\ncalling instance attributes.\r\n\r\nRefactored the check into its own function so that we can bail out\r\ncleanly with a return if needed.\r\n\r\nClose #2975",
            "insertions": 124,
            "deletions": 4
          }
        ]
      }
    ],
    "Denis Laxalde": [
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2013-05-07",
        "commitResults": [
          {
            "hash": "86c05cca464f1e6ee354d7724b0bad69516cb51a",
            "messageTitle": "Fix url of code-quality mailing list",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      }
    ],
    "Jacques Kvam": [
      {
        "insertions": 18,
        "deletions": 2,
        "date": "2017-12-24",
        "commitResults": [
          {
            "hash": "dbb2f3e65b9a452cf981e1bda318ec019b43bd8c",
            "messageTitle": "Use the proper node to get the name for redefined functions (#1792)",
            "messageBody": "Close #1774",
            "insertions": 18,
            "deletions": 2
          }
        ]
      }
    ],
    "Julien Palard": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2019-11-21",
        "commitResults": [
          {
            "hash": "092038516bb8ed9b4026b93a5ae1fd1070c6cf48",
            "messageTitle": "FIX: Typo. (#3264)",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Yury Gribov": [
      {
        "insertions": 101,
        "deletions": 7,
        "date": "2018-09-04",
        "commitResults": [
          {
            "hash": "ba62048e04fbe0e691cfccaf173c4ccbccca2992",
            "messageTitle": "Added checker for format string type mismatches.",
            "messageBody": "",
            "insertions": 101,
            "deletions": 7
          }
        ]
      }
    ],
    "John Leach": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2015-07-15",
        "commitResults": [
          {
            "hash": "d14c7613db3df22bf8b5b78388684c7a31ab21c6",
            "messageTitle": "Close branch jfleach/removed-broken-link-and-replaced-with-th-1436980631932",
            "messageBody": "--HG--",
            "insertions": 0,
            "deletions": 0
          },
          {
            "hash": "76b5f8af295952cf660474b125e127999d1bbe11",
            "messageTitle": "Removed broken link and replaced with the logilab-common URL.",
            "messageBody": "--HG--\nbranch : jfleach/removed-broken-link-and-replaced-with-th-1436980631932\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Calin Don": [
      {
        "insertions": 47,
        "deletions": 0,
        "date": "2014-11-22",
        "commitResults": [
          {
            "hash": "3d626908623578a4585264fd8a3b31f5913b64ef",
            "messageTitle": "Added test for issue #263",
            "messageBody": "",
            "insertions": 47,
            "deletions": 0
          }
        ]
      }
    ],
    "Taewon D. Kim": [
      {
        "insertions": 27,
        "deletions": 5,
        "date": "2019-03-27",
        "commitResults": [
          {
            "hash": "24687f5dfbaf03bb35d9b5d788b67ce7b5d416d0",
            "messageTitle": "Ignore raw docstrings in Similarities check with ignore-docstring\u003dyes",
            "messageBody": "Raw docstrings is a type of docstring (PEP 257), so they too should be ignored\n\n- Add raw docstring to be removed with `ignore_docstring\u003dTrue` inside\n  `pylint.checkers.similar.stripped_lines`\n",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "b14d5e950f69571a3109e7cfb2d91614dadb66f3",
            "messageTitle": "Add/modify tests for checking raw docstring in Similarities checker",
            "messageBody": "- Add an extra case to the examples used to test similarities checker\n- Modify outputs of tests (total number of lines and the percent changed)\n",
            "insertions": 20,
            "deletions": 4
          },
          {
            "hash": "8acc80f7f3bcf055ad7a0ac06f8f5b6faf8a12c2",
            "messageTitle": "Add ChangeLog entry for ignoring raw docstring in Similarities checker",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "6989448dc461daafc2605623546d8d0f5fe4633f",
            "messageTitle": "Add Contributor for ignoring raw docstring in Similarities checker",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      }
    ],
    "mar-chi-pan": [
      {
        "insertions": 40,
        "deletions": 4,
        "date": "2018-05-15",
        "commitResults": [
          {
            "hash": "c011c53ba207b40904b43d60f3f1ede328cd6372",
            "messageTitle": " Check if global is set for import (#2090)",
            "messageBody": "The following code should trigger a global-variable-unassigned, as it is assigned\r\nby the import statement:\r\n\r\ndef func():\r\n    global sys\r\n    import sys\r\n\r\n\r\nCloses #1453 ",
            "insertions": 40,
            "deletions": 4
          }
        ]
      }
    ],
    "Mariatta Wijaya": [
      {
        "insertions": 52,
        "deletions": 4,
        "date": "2018-05-15",
        "commitResults": [
          {
            "hash": "a66133b2933f18f3ef1b65f58f010aa9484ca47d",
            "messageTitle": "Add a new check: `logging-fstring-interpolation`.",
            "messageBody": "A new check `logging-fstring-interpolation` is added.\nIt emits a warning when f-string is used within logging\nfunction calls.\n\nFixes https://github.com/PyCQA/pylint/issues/1998\n",
            "insertions": 50,
            "deletions": 2
          },
          {
            "hash": "d5565f9f9f0986144b9a00d597d87f2cb146f564",
            "messageTitle": "Fix the test.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 18,
        "deletions": 4,
        "date": "2018-06-05",
        "commitResults": [
          {
            "hash": "d8c03a63bc87617a9a37f8a46d5223507da16255",
            "messageTitle": "Use python-docs-theme",
            "messageBody": "Closes https://github.com/PyCQA/pylint/issues/2167\n",
            "insertions": 16,
            "deletions": 4
          },
          {
            "hash": "784a113be16f6476f8860381bc44f9b458fb5ce0",
            "messageTitle": "Set the title to PyCQA instead of Python. Link to https://pylint.pycqa.org",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      }
    ],
    "Martin von Gagern": [
      {
        "insertions": 4,
        "deletions": 0,
        "date": "2017-07-19",
        "commitResults": [
          {
            "hash": "69949c29c70f70df42492c5bd65ec14963616826",
            "messageTitle": "Have Travis run test suite on Python 2.7.6",
            "messageBody": "",
            "insertions": 3,
            "deletions": 0
          },
          {
            "hash": "1584802347e6d7c9852edeb4e42c886fd3833fb5",
            "messageTitle": "Set min_pyver for invalid_encoding_py27 test case",
            "messageBody": "This sets the version range of that test to Python versions ≥ 2.7.10 as that\nis the first version for which Travis was able to run successfully.  2.7.9\nfailed to install the Python package, 2.7.6 and 2.7.8 failed this test.\n\nThe problem with the failed tests is the line number: older versions\napparently report line number one (1-based indexing) for an encoding error\neven if the encoding specification is on the second line.\n",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 95,
        "deletions": 1,
        "date": "2017-07-21",
        "commitResults": [
          {
            "hash": "84ee94fe14deec5ca147d81a2d461fd2e2a37205",
            "messageTitle": "Warn when raising an exception with a format string and some arguments",
            "messageBody": "Bad (now causing a new warning):\n  raise SomeError(\u0027message about %s\u0027, foo)\n  raise SomeError(\u0027message about {}\u0027, foo)\nGood (likely intended):\n  raise SomeError(\u0027message about %s\u0027 % foo)\n  raise SomeError(\u0027message about {}\u0027.format(foo))\n\nPeople used to printf in C might accidentally write a comma to separate a\nmessage format containing % placeholders from the arguments to substitute,\ninstead of the % sign required to actually do the formatting and build the\nerror message as a single string.  But even when using {…} as a placeholder,\nsome libraries will prefer deferred evaluation for e.g. logging calls, so a\nuser might have a habit of using commas instead of a str.format() call for\nthose, too.  This warning points out such use cases.  It can be ignored on\nprojects which deliberately use lazy formatting at all user-facing exception\nhandlers.\n",
            "insertions": 71,
            "deletions": 1
          },
          {
            "hash": "48345b5fabd40bd4b2b590a46e7fa8f25639e9aa",
            "messageTitle": "Added ChangeLog and whatsnew entries for raising-format-tuple",
            "messageBody": "",
            "insertions": 24,
            "deletions": 0
          }
        ]
      }
    ],
    "Bruno Daniel": [
      {
        "insertions": 367,
        "deletions": 0,
        "date": "2014-07-30",
        "commitResults": [
          {
            "hash": "2241eb2a8382aed97828056e6fe6a0dfefef283d",
            "messageTitle": "* created new module     pylint/extensions * added new optional checker     pylint/check_docs.py   containing SphinxDocChecker which checks the   documentation of function, method, and constructor parameters * added a test for this checker     pylint/test/test_check_docs.py",
            "messageBody": "",
            "insertions": 361,
            "deletions": 0
          },
          {
            "hash": "f6032e32de318633026bc3433566ca18c6b6ff8d",
            "messageTitle": "documentation about how to activate the new checker   pylint.extensions.check_docs",
            "messageBody": "",
            "insertions": 6,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 81,
        "deletions": 79,
        "date": "2014-07-31",
        "commitResults": [
          {
            "hash": "063a66dee76229efd4e002f6f2787e9d32e4e5ca",
            "messageTitle": "removed superfluous comments and imports; 80-characters limit; removed trailing whitespace",
            "messageBody": "",
            "insertions": 4,
            "deletions": 7
          },
          {
            "hash": "c776e817093023068d2e88db026e7068d38066a6",
            "messageTitle": " * used symbolic names instead of \"W9003\" etc.  * 80-character limit  * removed superfluous imports  * better module docstring for the test module  * removed trailing whitespace",
            "messageBody": "",
            "insertions": 22,
            "deletions": 20
          },
          {
            "hash": "c45c0825397c6c9f2fb150e3a40bb41b091178a1",
            "messageTitle": "used pylint on my own code and fixed all warnings",
            "messageBody": "",
            "insertions": 55,
            "deletions": 52
          },
          {
            "hash": "5c23482e59f90f4032a089ef2fc0ab19d4191129",
            "messageTitle": "moved test_check_docs.py to the new directory pylint/test/extensions",
            "messageBody": "",
            "insertions": 0,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 135,
        "deletions": 24,
        "date": "2014-08-08",
        "commitResults": [
          {
            "hash": "dc7131707ff484381070320660f11cac0f181289",
            "messageTitle": "support for Sphinx type declarations like     :param int mgid:",
            "messageBody": "",
            "insertions": 30,
            "deletions": 13
          },
          {
            "hash": "345f5df48beb527b15674befd9182d949f7a203a",
            "messageTitle": "Sphinx\u0027s mixed param-type declarations; clean up the code.",
            "messageBody": "",
            "insertions": 19,
            "deletions": 8
          },
          {
            "hash": "b0b40f1deabd6075b09be88ea7ff7cee8bda1b97",
            "messageTitle": "check_docs: shorter name for method",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "80e98ebf9c49b2fdc9bf3eb01e553eaa455b013a",
            "messageTitle": "changelog entry for the new extensions module and the new checker \u0027check_docs\u0027",
            "messageBody": "",
            "insertions": 6,
            "deletions": 0
          },
          {
            "hash": "fd8982416b64280a7047449a072a510e815687e2",
            "messageTitle": "rst documentation file for the extensions module; extensive documentation for the new checker extensions.check_docs",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "3214a834149b2502a6c62fea26b66430eb611441",
            "messageTitle": "rst documentation file for the extensions module; extensive documentation for the new checker extensions.check_docs",
            "messageBody": "",
            "insertions": 76,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 38,
        "deletions": 6,
        "date": "2015-05-08",
        "commitResults": [
          {
            "hash": "c4d5422b9f43a28bcec0dfaf8384956db76ff926",
            "messageTitle": "Move the extensions tests to the new test directory.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 0
          },
          {
            "hash": "e89c18f90b18063c244488f98e3e36a54507f18a",
            "messageTitle": "Move the extensions tests to a test subdirectory of extensions.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 0
          },
          {
            "hash": "e25399590e65e2c7209885b70bfc00acc67ca810",
            "messageTitle": "Tolerate no Sphinx parameter documentation at all: unit test",
            "messageBody": "",
            "insertions": 26,
            "deletions": 5
          },
          {
            "hash": "9650beb4d6218ae98b5de9a390794298848a7181",
            "messageTitle": "check_docs: Emit error messages only when it detects that at least one :param: definition is found? In that case, we will actually know that the user intended to use Sphinx style documentation or not.",
            "messageBody": "",
            "insertions": 10,
            "deletions": 1
          },
          {
            "hash": "d5bcaffc114e8cc76a0a7504833a566a19483f79",
            "messageTitle": "documentation",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 764,
        "deletions": 160,
        "date": "2015-05-10",
        "commitResults": [
          {
            "hash": "ce8fcc55e4444d109a4db9fce4a5d421e158235c",
            "messageTitle": "unittest for Google style parameter documentation; first implementation of Google and numpy style parameter documentation",
            "messageBody": "",
            "insertions": 170,
            "deletions": 33
          },
          {
            "hash": "c2a6b65108148a460b67712bb3a2eea5d55126c4",
            "messageTitle": "unit test for Numpy style parameter documentation; improvements of other unit tests",
            "messageBody": "",
            "insertions": 40,
            "deletions": 9
          },
          {
            "hash": "198fac24f6566856ef5bda9f511fbc5112a9c3fd",
            "messageTitle": "unit tests for Google and Numpy style in class methods",
            "messageBody": "",
            "insertions": 62,
            "deletions": 2
          },
          {
            "hash": "9302340740d63fd747eda6f9c4f0a09495805374",
            "messageTitle": "unit tests for correctly documented parameters and return values (all 3 styles)",
            "messageBody": "",
            "insertions": 53,
            "deletions": 2
          },
          {
            "hash": "dbf9f4460dffe7f3ff14bba0cf0092d9bcd7e3e0",
            "messageTitle": "unit test for wrong names of function params in Google and numpy style docstrings",
            "messageBody": "",
            "insertions": 110,
            "deletions": 2
          },
          {
            "hash": "ce2bb8797d58bcc2b510036a800345e2d5181dc4",
            "messageTitle": "unit test for see sentence in Google and Numpy style docstring",
            "messageBody": "",
            "insertions": 42,
            "deletions": 2
          },
          {
            "hash": "fcffac0c4906f0aff9f0451c8f36f60b8552f61a",
            "messageTitle": "unit test for constructor parameter documentation in Google and Numpy style",
            "messageBody": "",
            "insertions": 68,
            "deletions": 1
          },
          {
            "hash": "e28051fc88daf109fd252e542eb0cec00c08a8f9",
            "messageTitle": "better naming, because the checker now supports not just the Sphinx style",
            "messageBody": "",
            "insertions": 57,
            "deletions": 58
          },
          {
            "hash": "ede6447cc2953d678d690cb26a438d15c5a9de14",
            "messageTitle": "pylint documentation: Demonstrate parameter documentation checking for Google and Numpy style as well.",
            "messageBody": "",
            "insertions": 77,
            "deletions": 11
          },
          {
            "hash": "4ceaf9de5ba2796c1466ca477b87fad0752a34a5",
            "messageTitle": "adapted the changelog",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "4f22bd0cca54602e8dd29ebe2138a284c77fc550",
            "messageTitle": "moved the changelog entry to the topmost section",
            "messageBody": "",
            "insertions": 6,
            "deletions": 6
          },
          {
            "hash": "cfa9e110acb61fc75aa82217ef2f8f7e8b364fb2",
            "messageTitle": "check_docs: implementation of option \"accept-no-param-doc\"",
            "messageBody": "",
            "insertions": 10,
            "deletions": 2
          },
          {
            "hash": "52ab691c06e04654ca6e4c671e10cc9308d2ae55",
            "messageTitle": "unit test for the option accept_no_param_doc",
            "messageBody": "",
            "insertions": 26,
            "deletions": 1
          },
          {
            "hash": "743e42c9cce74f6839e757dcd694cceb9586bff6",
            "messageTitle": "accept-no-param-doc turned into a yes/no option; documentation for this parameter",
            "messageBody": "",
            "insertions": 5,
            "deletions": 2
          },
          {
            "hash": "08c9b3e6558290d77bab2a506b72606317823ea3",
            "messageTitle": "check_docs: Handle class constructors from within visit_function.",
            "messageBody": "",
            "insertions": 17,
            "deletions": 10
          },
          {
            "hash": "e9a7fca36caaa22c48ee601ab463ad3c96feef01",
            "messageTitle": "method visit_class is no longer necessary in the checker; auxiliary method _visit_methods_of_class in the unit test",
            "messageBody": "",
            "insertions": 18,
            "deletions": 17
          },
          {
            "hash": "ac7b4496679ef9cae7f115173f44876a76b300f4",
            "messageTitle": "further unit test for space_indentation",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      }
    ],
    "Ionel Cristian Maries": [
      {
        "insertions": 30,
        "deletions": 61,
        "date": "2015-02-14",
        "commitResults": [
          {
            "hash": "26eb7f9a2e6cc6c229c6a86b6c6bb823e8f5de57",
            "messageTitle": "Move all package files to a pylint package.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 0
          },
          {
            "hash": "086391fca6239b75046d382ef3adb7159b51230e",
            "messageTitle": "Remove support for subpackage_of. Use absolute path for readme. Use absolute path for __pkginfo__.py. Graft the tests dir (via MANIFEST.in).",
            "messageBody": "--HG--\nbranch : support-editable-installs\n",
            "insertions": 30,
            "deletions": 61
          }
        ]
      }
    ],
    "Cameron Olechowski": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2017-06-03",
        "commitResults": [
          {
            "hash": "22d30b769fecd67ad905a184dba3b08bfc42e11b",
            "messageTitle": "Update tutorial.rst (#1520)",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Emile Anclin": [
      {
        "insertions": 40,
        "deletions": 37,
        "date": "2008-07-29",
        "commitResults": [
          {
            "hash": "cdf89a9e0e94eef18728e5dc09ceaa67183c9f6f",
            "messageTitle": "remove NotImplemented node in test",
            "messageBody": "",
            "insertions": 9,
            "deletions": 7
          },
          {
            "hash": "f59c03b3a23ea0502568e09985a1a979e2cf0f0c",
            "messageTitle": "simplify diadefslib and add search-level option for DiadefsHandler",
            "messageBody": "",
            "insertions": 31,
            "deletions": 30
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 17,
        "date": "2008-07-30",
        "commitResults": [
          {
            "hash": "7e25fb063226809b9db1cb2494ce5c6b62d392af",
            "messageTitle": "correct diadefslib simplification",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "ca16bac2471f2792417445d2c9338f49265ad264",
            "messageTitle": "adapt unittest_diadefs to diadefs changes",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "ad7189bcf7fca5b37f4432b5403d0643c6fa9785",
            "messageTitle": "clean up and simplify",
            "messageBody": "",
            "insertions": 6,
            "deletions": 14
          },
          {
            "hash": "42ad963a5c79d4fd23c2848adf89ea95711a26aa",
            "messageTitle": "typing error : replace , by )",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "be062a4c0ad68a1182be4d5fc841a47753a4c9f0",
            "messageTitle": "fix missing association arrows",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 52,
        "deletions": 31,
        "date": "2008-08-04",
        "commitResults": [
          {
            "hash": "13892638b810ebf10f28bfca608e4a1c9bdc832b",
            "messageTitle": "factorize cleanup of locals inserted by the astng",
            "messageBody": "",
            "insertions": 14,
            "deletions": 19
          },
          {
            "hash": "35ff53479fe06d6cc82748742153c81cc477c43d",
            "messageTitle": "add pydot test files",
            "messageBody": "",
            "insertions": 16,
            "deletions": 0
          },
          {
            "hash": "728dfa5d40a9f9b78ec121510b61e54dce719e91",
            "messageTitle": "add module-names option and adapt to current default behavior",
            "messageBody": "",
            "insertions": 22,
            "deletions": 12
          }
        ]
      },
      {
        "insertions": 48,
        "deletions": 45,
        "date": "2008-08-05",
        "commitResults": [
          {
            "hash": "bcfebb180035f35dbde341ec4c0af31dc22f9ff4",
            "messageTitle": "add OptionHandler",
            "messageBody": "",
            "insertions": 16,
            "deletions": 13
          },
          {
            "hash": "04f5276c471b4f90acb6b3f1dea32dc219c6ea55",
            "messageTitle": "replace \u0027FilterMixIn.filter\u0027 by \u0027show_attr\u0027 and \u0027r_type\u0027 by \u0027relation_type\u0027",
            "messageBody": "",
            "insertions": 10,
            "deletions": 13
          },
          {
            "hash": "d4853f28f9b57be684f4cfe2a80ab4fdfd64d2d4",
            "messageTitle": "fix diadefslib and utils bugs",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "db6c1604b6aea3d6ade8f69287c20e428b4bd8b4",
            "messageTitle": "adapt expected *dot to logilab.common.graph output",
            "messageBody": "",
            "insertions": 19,
            "deletions": 16
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 3,
        "date": "2008-08-06",
        "commitResults": [
          {
            "hash": "b26da39610c838a4e02f03e402ebc4344249c007",
            "messageTitle": "remove double import",
            "messageBody": "",
            "insertions": 1,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 132,
        "deletions": 103,
        "date": "2008-08-12",
        "commitResults": [
          {
            "hash": "e8d576e20ab8068eb4e1918e59392d24c12e966a",
            "messageTitle": "move FilterMixIn into DiadefsHandler; write methods and attrs in ClassDiagram",
            "messageBody": "",
            "insertions": 53,
            "deletions": 31
          },
          {
            "hash": "b9e7fd3112a20efa412684c615f7095779164b0b",
            "messageTitle": "adapt unittests to new option handling",
            "messageBody": "",
            "insertions": 15,
            "deletions": 14
          },
          {
            "hash": "abaf6b4803c1cfea839411a288a9724ef5f03e33",
            "messageTitle": "show_builtin option and cleanup",
            "messageBody": "",
            "insertions": 34,
            "deletions": 29
          },
          {
            "hash": "1e7b252f59b1b135700034c8f516b50bda26b938",
            "messageTitle": "pylint-cleanups",
            "messageBody": "",
            "insertions": 12,
            "deletions": 16
          },
          {
            "hash": "ef5652bd0847603b597285d23b159a54a400e516",
            "messageTitle": "add get_attrs and get_methods; change add_object calls",
            "messageBody": "",
            "insertions": 18,
            "deletions": 13
          }
        ]
      },
      {
        "insertions": 49,
        "deletions": 119,
        "date": "2008-08-13",
        "commitResults": [
          {
            "hash": "e29171a7d507f4ac5ba07b4405e86729a0145087",
            "messageTitle": "first pyreverse command sketch",
            "messageBody": "",
            "insertions": 27,
            "deletions": 0
          },
          {
            "hash": "c1e63a22d7d0e24cb875ce82d98c4a4f481532ce",
            "messageTitle": "adapt diadefslib, vcgutils and dotwrite to commands.py",
            "messageBody": "",
            "insertions": 10,
            "deletions": 9
          },
          {
            "hash": "b62152df05b3731714db4d24009bad688d3d034d",
            "messageTitle": "unittest_diadefs and _vcg",
            "messageBody": "",
            "insertions": 7,
            "deletions": 4
          },
          {
            "hash": "1c61510b1c163c2f6bb0ca0eb9c584fcae50946c",
            "messageTitle": "cleanup old option handling",
            "messageBody": "",
            "insertions": 3,
            "deletions": 99
          },
          {
            "hash": "b2005841595242ae76017888ddf14756530d3860",
            "messageTitle": "more cleanup ; #5707 fixed w previous commits",
            "messageBody": "",
            "insertions": 2,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 188,
        "deletions": 89,
        "date": "2008-08-18",
        "commitResults": [
          {
            "hash": "2bf8b2776b516f9ee563c1b4bfce1c45783062e5",
            "messageTitle": "remove useless __init__",
            "messageBody": "",
            "insertions": 0,
            "deletions": 3
          },
          {
            "hash": "f47d22d69b68fd159ebd7fe7f132fe6299855846",
            "messageTitle": "change FilterMixin inheritance",
            "messageBody": "",
            "insertions": 39,
            "deletions": 39
          },
          {
            "hash": "bee0e1d2c54ea9b32826b27184ede854578a2515",
            "messageTitle": "fix utils bug ; make running tests",
            "messageBody": "",
            "insertions": 11,
            "deletions": 11
          },
          {
            "hash": "45ea00ac3106f4733927c38b19216b790c5dfe0f",
            "messageTitle": "little changes",
            "messageBody": "",
            "insertions": 2,
            "deletions": 3
          },
          {
            "hash": "36944ceefcd22a4923356263caacb1622bdd6f27",
            "messageTitle": "first sketch for showing class names",
            "messageBody": "",
            "insertions": 19,
            "deletions": 10
          },
          {
            "hash": "c14c4ffccb722ea73128fcfdbe3fdd9a8d6285c9",
            "messageTitle": "filter doubled class names",
            "messageBody": "",
            "insertions": 15,
            "deletions": 6
          },
          {
            "hash": "e2b541e7fd8424692c9c62d8aac62e77f46c8320",
            "messageTitle": "first pyreverse manpage sketch",
            "messageBody": "",
            "insertions": 78,
            "deletions": 0
          },
          {
            "hash": "c4afd7457140342c2b72017ababb50721d085376",
            "messageTitle": "manpage; add command line shortcuts",
            "messageBody": "",
            "insertions": 24,
            "deletions": 17
          }
        ]
      },
      {
        "insertions": 35,
        "deletions": 13,
        "date": "2008-08-19",
        "commitResults": [
          {
            "hash": "8905a36d96c19da2e8ed849dda49201a566095af",
            "messageTitle": "get from-import dependencies",
            "messageBody": "",
            "insertions": 31,
            "deletions": 11
          },
          {
            "hash": "55bb04d15e68028864f613d562d8a257c9620e11",
            "messageTitle": "fix tests for attributs and packages corrections",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "7309c13fbbb63aae298c87a97dc620123d0acf61",
            "messageTitle": "fix \u0027package dependencies\u0027",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 260,
        "deletions": 75,
        "date": "2008-08-25",
        "commitResults": [
          {
            "hash": "4d29d8e4559938bef1eb52b1613d2596aeba395b",
            "messageTitle": "merge dot and vcg writers",
            "messageBody": "",
            "insertions": 176,
            "deletions": 1
          },
          {
            "hash": "ec49e5344a2e550b867b4d2d92cac52c51ed710c",
            "messageTitle": "remove old writers and cleanup",
            "messageBody": "",
            "insertions": 13,
            "deletions": 28
          },
          {
            "hash": "ca49a4413dbf09247ff406e9dd0c97ba979def18",
            "messageTitle": "update manpage for pyreverse",
            "messageBody": "",
            "insertions": 28,
            "deletions": 28
          },
          {
            "hash": "2f6db863423755e8a5d3dafa4475314b45d3e72e",
            "messageTitle": "update expected test files",
            "messageBody": "",
            "insertions": 10,
            "deletions": 6
          },
          {
            "hash": "b034eda26057d09ab121879c77751d0410b4390a",
            "messageTitle": "correct arrow directions",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "0aa97e0cf8fbc54be6589e7a6d1b5ca4bb489fd1",
            "messageTitle": "doc strings for writer",
            "messageBody": "",
            "insertions": 19,
            "deletions": 4
          },
          {
            "hash": "8cfc1a6daf7c16797167b08dde7ec5e136dba4c8",
            "messageTitle": "ancestor option : without recursion",
            "messageBody": "",
            "insertions": 9,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 112,
        "deletions": 85,
        "date": "2008-08-26",
        "commitResults": [
          {
            "hash": "11381be33e9216aaa0a4b44f754f80b8cf446865",
            "messageTitle": "rebuild ancestor and associated options",
            "messageBody": "",
            "insertions": 41,
            "deletions": 31
          },
          {
            "hash": "83ad7b1aadb7d905d327b5f7fc2ff7fad6b848e1",
            "messageTitle": "cleanup class extractions recursions",
            "messageBody": "",
            "insertions": 71,
            "deletions": 54
          }
        ]
      },
      {
        "insertions": 61,
        "deletions": 27,
        "date": "2008-08-27",
        "commitResults": [
          {
            "hash": "3eb9c7dd72cdcedb60bc146edf9c8c0412c75212",
            "messageTitle": "correct level values",
            "messageBody": "",
            "insertions": 25,
            "deletions": 25
          },
          {
            "hash": "4e92064e242ef9e272a5c0ec858b265647252263",
            "messageTitle": "add option tests",
            "messageBody": "",
            "insertions": 36,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 45,
        "deletions": 42,
        "date": "2008-09-01",
        "commitResults": [
          {
            "hash": "e4eea2f07bc22ca9b51c753322f2afcece02041a",
            "messageTitle": "add option to show only classnames",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "231f83581f199c172d21df4d93510d6451544371",
            "messageTitle": "red color for exceptions and cleanup",
            "messageBody": "",
            "insertions": 43,
            "deletions": 42
          }
        ]
      },
      {
        "insertions": 39,
        "deletions": 40,
        "date": "2008-09-02",
        "commitResults": [
          {
            "hash": "89a4fb6d68375e0a754b84251264711999d177bc",
            "messageTitle": "fix builtin option and cleanup",
            "messageBody": "",
            "insertions": 12,
            "deletions": 18
          },
          {
            "hash": "5f07d71f177eda51f043663701cef3eaa25d25a3",
            "messageTitle": "doc, docstrings and some cleanup",
            "messageBody": "",
            "insertions": 27,
            "deletions": 22
          }
        ]
      },
      {
        "insertions": 31,
        "deletions": 8,
        "date": "2008-09-03",
        "commitResults": [
          {
            "hash": "4dfae9da4eb6c20ed115d440df5359a3bf06399c",
            "messageTitle": "add examples to manpage",
            "messageBody": "",
            "insertions": 31,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 454,
        "deletions": 278,
        "date": "2008-09-08",
        "commitResults": [
          {
            "hash": "e86dcea2df897496ee5a2c8da275d628417cedcb",
            "messageTitle": "slight improvements on imports",
            "messageBody": "",
            "insertions": 22,
            "deletions": 11
          },
          {
            "hash": "dc2c80d0e79e96d54f8e4d248b21518f4beddfab",
            "messageTitle": "adapt pyreverse for inclusion into pylint",
            "messageBody": "",
            "insertions": 432,
            "deletions": 267
          }
        ]
      },
      {
        "insertions": 43,
        "deletions": 13,
        "date": "2008-09-09",
        "commitResults": [
          {
            "hash": "682f99ad017f2adceac903c2bb08c80066aee77c",
            "messageTitle": "add pyreverse files to MANIFEST.in",
            "messageBody": "",
            "insertions": 4,
            "deletions": 0
          },
          {
            "hash": "ba4b74c51610dc356c5436e2faa5bde26ecc4e4f",
            "messageTitle": "add bin/pyreverse.bat",
            "messageBody": "",
            "insertions": 18,
            "deletions": 0
          },
          {
            "hash": "436da0355c45176e1f8b3a370a07fe16c0b2a7b1",
            "messageTitle": "little simplifying",
            "messageBody": "",
            "insertions": 6,
            "deletions": 10
          },
          {
            "hash": "cd3f99f0dc20f269222f46222aa349148f632610",
            "messageTitle": "explicit Writer interfaces",
            "messageBody": "",
            "insertions": 15,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 81,
        "deletions": 91,
        "date": "2008-09-10",
        "commitResults": [
          {
            "hash": "70d3aa72ce202fb42a094ec3b8f4439a12e824f2",
            "messageTitle": "use DotBackend",
            "messageBody": "",
            "insertions": 13,
            "deletions": 24
          },
          {
            "hash": "be37bb32c08778c63ac8b2224ce032e726240d9c",
            "messageTitle": "fix DotBackend.emit-edge bug",
            "messageBody": "",
            "insertions": 16,
            "deletions": 19
          },
          {
            "hash": "9e70aade2c11439b7a2b6dfc19f3d89d9b835b05",
            "messageTitle": "little simplifying",
            "messageBody": "",
            "insertions": 4,
            "deletions": 13
          },
          {
            "hash": "dc838fed64f87c8981cf986def3ed594015d4fcb",
            "messageTitle": "cleanup",
            "messageBody": "",
            "insertions": 34,
            "deletions": 28
          },
          {
            "hash": "e3ca242765cb447dd81c4ffd32ddda4afd25ee4b",
            "messageTitle": "no edge concentrate",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "c00dce38af105408f9d0603194555a713c552af3",
            "messageTitle": "prepare new version",
            "messageBody": "",
            "insertions": 11,
            "deletions": 6
          },
          {
            "hash": "446d1ff2c79f18597223949bef45b7f53537abc5",
            "messageTitle": "Added tag pylint-version-0_15_0 for changeset 9f21b4da368a",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "c87f6b0c6f78939114ce63f49c1fce23d32930ea",
            "messageTitle": "Added tag pylint-debian-version-0_15_0-1 for changeset d90270eddb4a",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 369,
        "deletions": 314,
        "date": "2008-09-15",
        "commitResults": [
          {
            "hash": "77affb6e2ffb857f7c87d2a009cdb3df663717c1",
            "messageTitle": "fix #5991: missing files in 0.15.0 tarball",
            "messageBody": "",
            "insertions": 4,
            "deletions": 3
          },
          {
            "hash": "176bbe58ce26357d3b71c4fa33ddb954351c5872",
            "messageTitle": "boxes for pylint import graphs",
            "messageBody": "",
            "insertions": 2,
            "deletions": 6
          },
          {
            "hash": "aca85ac973dad8d15f4b7a8b4f52bce0f6e6c8a1",
            "messageTitle": "fix #4910: default values are missing in manpage",
            "messageBody": "",
            "insertions": 60,
            "deletions": 59
          },
          {
            "hash": "d5339ac741faecd93c0cfd9c329c3d3baa1208cf",
            "messageTitle": "several documentation changes",
            "messageBody": "",
            "insertions": 286,
            "deletions": 242
          },
          {
            "hash": "1afff6f4d89232dfe3f4c1cfba3ca08d18c64148",
            "messageTitle": "prepare subversion",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "978c3ff5abdaa621864b14aecc6a251deb752369",
            "messageTitle": "debian package informations",
            "messageBody": "",
            "insertions": 15,
            "deletions": 4
          },
          {
            "hash": "e1bfe0b6fe7ca46ce08c8dcd014eaddd666c97c7",
            "messageTitle": "debian package 0.15.1",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 6,
        "date": "2008-09-16",
        "commitResults": [
          {
            "hash": "3cb3e3cdb6d21d95df8fb9fa92ddb9cc0ddc3eb6",
            "messageTitle": "fix pyreverse writer tests",
            "messageBody": "",
            "insertions": 0,
            "deletions": 2
          },
          {
            "hash": "f24f9257890b9787e8223c6955a580cc19245c86",
            "messageTitle": "fix #5634: pylint crashes if a wrong filename is given on the command line we need to open checkers *before* calling set_current_module in expand_files",
            "messageBody": "",
            "insertions": 1,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 10,
        "date": "2008-09-17",
        "commitResults": [
          {
            "hash": "fdc2bd9980b6fa5bf6ecffdb5ee06e948639585f",
            "messageTitle": "cleanup",
            "messageBody": "",
            "insertions": 3,
            "deletions": 9
          },
          {
            "hash": "b11efe9028a3919d75fdcb3cb52ad47405d91a08",
            "messageTitle": "#5998: documentation points to wrong url for mailing list",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 66,
        "deletions": 56,
        "date": "2008-09-22",
        "commitResults": [
          {
            "hash": "0f9f88c50eeec72d9a526beb5748d20ea2304e3f",
            "messageTitle": "small test/messages corrections",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "584d009a1fc1f495c76685f71d1ae96deca129f7",
            "messageTitle": "factorize import utils",
            "messageBody": "",
            "insertions": 61,
            "deletions": 51
          }
        ]
      },
      {
        "insertions": 31,
        "deletions": 15,
        "date": "2008-09-23",
        "commitResults": [
          {
            "hash": "5500f7a94c73575a3b3091b886617d0e6207c7c5",
            "messageTitle": "first steps for better import handling",
            "messageBody": "",
            "insertions": 26,
            "deletions": 10
          },
          {
            "hash": "617d8dcfa6dde103f4cdc8927a5ed3fb0bd111dd",
            "messageTitle": "small corrections",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "4a091599bed072c561bef4ec419dda600577fa2e",
            "messageTitle": "rename tests to be executed by pytest",
            "messageBody": "",
            "insertions": 0,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 175,
        "deletions": 162,
        "date": "2008-10-13",
        "commitResults": [
          {
            "hash": "140628ae75953a573c4a6f862e475c5284e93e99",
            "messageTitle": "prepare new *raise* handling",
            "messageBody": "",
            "insertions": 15,
            "deletions": 5
          },
          {
            "hash": "0ad52532c4038add919a3b4be65bf4bf00eacf19",
            "messageTitle": "first sketch for new *raise* handling",
            "messageBody": "",
            "insertions": 51,
            "deletions": 31
          },
          {
            "hash": "e67f234ce9a4ad47ae9b556f2ac58db42974e8f4",
            "messageTitle": "remove visit_raise from checkers.newstyle",
            "messageBody": "",
            "insertions": 3,
            "deletions": 44
          },
          {
            "hash": "16ca7225be9d835a8376b5dc7d884da667740edd",
            "messageTitle": "fix for raising a class",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "795ac591b7a2eb6dbeb3bc91ea58a8cbbf7bd891",
            "messageTitle": "add bug #5672 noerrror test",
            "messageBody": "",
            "insertions": 15,
            "deletions": 0
          },
          {
            "hash": "542ccd5cc53cd6f6c0a5da51c98211e206fa4ae5",
            "messageTitle": "correct raised test/messages",
            "messageBody": "",
            "insertions": 6,
            "deletions": 6
          },
          {
            "hash": "9d1a6291502a5ac65f84207312a9c1f92a75dd5c",
            "messageTitle": "remove E1010 testing for python2.5",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "72b67e8e786f6adab9f597bcfa4d165537a04fe8",
            "messageTitle": "Added tag pylint-version-0_15_2 for changeset de872bba1fb3",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "9329022de4ac6776272b7fea1a88ea767557f1a8",
            "messageTitle": "fix test_func module renaming",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "5d91cd4c763cbd713ddcc5f361a4efb13e945ab6",
            "messageTitle": "prepare debian package 0.15.2",
            "messageBody": "",
            "insertions": 13,
            "deletions": 1
          },
          {
            "hash": "8ad1c599c27f7c9b23a83356889893862df5e90c",
            "messageTitle": "Added tag pylint-debian-version-0_15_2-1 for changeset b9b1d099db1f",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "afa5d58db1f4e12aa4305157075ed176d9f93e90",
            "messageTitle": "use new generated doc and man",
            "messageBody": "",
            "insertions": 66,
            "deletions": 71
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 8,
        "date": "2008-11-24",
        "commitResults": [
          {
            "hash": "d581f1b5b082f8ce6dcc5122c9272f1f6b1a8269",
            "messageTitle": "remove bugfix for astng \u003c\u003d  0.17.3",
            "messageBody": "",
            "insertions": 1,
            "deletions": 4
          },
          {
            "hash": "b440f55ec0c93cef9275f41482ce37c27b00ea70",
            "messageTitle": "fix test for new logilab.common.graph",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2009-02-16",
        "commitResults": [
          {
            "hash": "31e38ef35460fcaf934e5b8bb8c1148a33084bda",
            "messageTitle": "doc update: output format html",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 54,
        "deletions": 51,
        "date": "2009-03-06",
        "commitResults": [
          {
            "hash": "aa3f47c860c199f5c8d11349ca7dd281858aa261",
            "messageTitle": "some more astng2 support / attr modifications",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 54,
            "deletions": 51
          }
        ]
      },
      {
        "insertions": 45,
        "deletions": 45,
        "date": "2009-03-09",
        "commitResults": [
          {
            "hash": "c093c48501b124147297a6fad7dee37409046241",
            "messageTitle": "no source_line() / last_source_line() are replaced by fromlineno / tolineno",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 5,
            "deletions": 6
          },
          {
            "hash": "fe5e3610f3951fd095436974fe7bcd25b7e09464",
            "messageTitle": "replace argnames by args.args",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 21,
            "deletions": 21
          },
          {
            "hash": "c3c3a7a103a79c2429b8757c31a3993abf1eeac1",
            "messageTitle": "a lot of small attribute corrections and more",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 16,
            "deletions": 15
          },
          {
            "hash": "ea91e6400491ee98985fdb320cfed909885fb9f6",
            "messageTitle": "yet some more attribute corrections",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "86f3b55939f03b986a291b7bf3c9ddd0aec8b343",
            "messageTitle": "get the right regex method for filtering tests",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 55,
        "deletions": 33,
        "date": "2009-03-10",
        "commitResults": [
          {
            "hash": "1d62af300c3c01f9d0fa6ae59fe6a19b00b85fb4",
            "messageTitle": "we want the names, not AssName nodes : use new argnames method",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 13,
            "deletions": 12
          },
          {
            "hash": "c19ce4a4aeee6b0c938889e76dd1ea14391e698b",
            "messageTitle": "We catch a new w0612 now ! So remove it from noerror test",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 8,
            "deletions": 3
          },
          {
            "hash": "5739513476a0b09a55bf232cce549cd064a79738",
            "messageTitle": "We need the new \u0027child_sequence\u0027 method",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "8fb3a4bbb0bcdf0ade3f1642c136255d0a19bd6c",
            "messageTitle": "fix argnames for nested arguments in astng",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 1,
            "deletions": 3
          },
          {
            "hash": "29e6587a774c967e2ac67297e5580b0aff635723",
            "messageTitle": "fix default value Name nodes",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 23,
            "deletions": 6
          },
          {
            "hash": "3919bd332181d3d8e9cddd3825c442102c192681",
            "messageTitle": "little corrections",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 8,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 49,
        "deletions": 41,
        "date": "2009-03-11",
        "commitResults": [
          {
            "hash": "b718c5bbcc097bd1fa7ff602c02139dd768852be",
            "messageTitle": "add a test for undefined variable access",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 12,
            "deletions": 0
          },
          {
            "hash": "84f51d79a590a0055aadce0b273a84039fdf3c69",
            "messageTitle": "cleanup \u0026 simplify",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 21,
            "deletions": 26
          },
          {
            "hash": "c77323ce1430c8a37dfce3b1dfe4d549c786be1a",
            "messageTitle": "fix lambda vararg and kwarg checking",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 6,
            "deletions": 10
          },
          {
            "hash": "4c335c20bd6882e6b7355d8924d1a195b06f9835",
            "messageTitle": "fix branch counting",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 6,
            "deletions": 5
          },
          {
            "hash": "3fa1086afd8b8dff661ff34f83e5738f8e837fc5",
            "messageTitle": "variable can also be defined as vararg or kwarg",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 4,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 7,
        "date": "2009-03-12",
        "commitResults": [
          {
            "hash": "6c4ce70ecdcb39c947a5aee9e9a5ef30d0207755",
            "messageTitle": "None is now instance of Const",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "365f6fb2a462f20e4175a8a37c3ad2b2969c8157",
            "messageTitle": "remove old comment",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 1,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 26,
        "deletions": 1575,
        "date": "2009-03-16",
        "commitResults": [
          {
            "hash": "b7257898d215cdb9620961e50fedf4b6e0a2a4eb",
            "messageTitle": "remove all rpython stuff",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 0,
            "deletions": 1511
          },
          {
            "hash": "5bf13145a470ba3a63a5cd12dbb2036f3a79344a",
            "messageTitle": "remove a lot of more rpython stuff",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 6,
            "deletions": 58
          },
          {
            "hash": "1f45a0df5fb932440c50e202e6789e4a4c56e74f",
            "messageTitle": "stmt.fromlineno can be 0 for names defined on module level",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 13,
            "deletions": 1
          },
          {
            "hash": "fdfeb72680abcd05960806c260457e75218d030b",
            "messageTitle": "fix E0601/E0602 alternative and tests",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 7,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 133,
        "deletions": 70,
        "date": "2009-03-17",
        "commitResults": [
          {
            "hash": "ebd08d752ba1b9780da4613632f931abe50ce619",
            "messageTitle": "move W0601 to W0301",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 18,
            "deletions": 18
          },
          {
            "hash": "213fc2e6132785dad50ae3576d6926c030117b1f",
            "messageTitle": "import are_exclusive from astng where it\u0027s defined",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 5,
            "deletions": 3
          },
          {
            "hash": "5f1a5ff5841440aab3e05ab9809d25ecb0a4a81f",
            "messageTitle": "fix messages",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 3,
            "deletions": 2
          },
          {
            "hash": "86490805c8b92df934a92310a4e06fb38c63be35",
            "messageTitle": "fromlineno *must not be zero* either",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "16528d1c8b1949afd85a101c5fe5733102214490",
            "messageTitle": "local_attr now return a list of nodes",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "cfcad24073f7cb5b39e3e0a345e10741f9287f3a",
            "messageTitle": "rename noerror_staticmethod_as_decorator test",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 0,
            "deletions": 0
          },
          {
            "hash": "84d7e44574ff1600991aa405f5f6fe8994e21eac",
            "messageTitle": "fix python version handling in test_func",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 4,
            "deletions": 3
          },
          {
            "hash": "b8adf6482e12d5e041d3f651394c4859b461b044",
            "messageTitle": "revert wrong message correction",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "727279e9c7ebef4922587a3c20d9dcea3e97be7e",
            "messageTitle": "handle Del* and AugAssing situations",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 12,
            "deletions": 6
          },
          {
            "hash": "33827426b56cfc0922e7f268e0c9b45f8fe648e2",
            "messageTitle": "explicit class diagram option handling",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 14,
            "deletions": 6
          },
          {
            "hash": "57a4a49081446a2728e0b64a667b052b95422f77",
            "messageTitle": "use capital letters for globals; little cleanup",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 26,
            "deletions": 20
          },
          {
            "hash": "7af79e602152aa122328063d5d7d5a16c65e594a",
            "messageTitle": "relation extraction tests",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 44,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 16,
        "deletions": 18,
        "date": "2009-03-18",
        "commitResults": [
          {
            "hash": "da40d28740131445607779e678bf653f7cfc810b",
            "messageTitle": "fix relation test bug",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 5,
            "deletions": 6
          },
          {
            "hash": "493ef1a8246f1751b9e177defb65fc66dc44f44c",
            "messageTitle": "Changelog : semicolon check",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 6,
            "deletions": 4
          },
          {
            "hash": "950f31de6d1061318debf3dcf02a9ea7305eed4c",
            "messageTitle": "remove print",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 0,
            "deletions": 2
          },
          {
            "hash": "ded53ca907812bf06ddf1fbf2bee6db8a35b5e05",
            "messageTitle": "same graph represented differently",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 5,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 22,
        "deletions": 15,
        "date": "2009-03-19",
        "commitResults": [
          {
            "hash": "3d8b89c3e879585ec8368f413e791653179e9c0b",
            "messageTitle": "pylint  0.18 release",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "524f92028126f98f89b13a42501d9b4c2e00cd24",
            "messageTitle": "Added tag pylint-version-0_17_0 for changeset c2dc06fd9a75",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "4d7bb9f0d29d67638e2be3e6bf74c427b826fa91",
            "messageTitle": "prepare debian release 0.17.0-1",
            "messageBody": "",
            "insertions": 7,
            "deletions": 5
          },
          {
            "hash": "254471e3117adf59dc3d1d6b8f9b6d6252e8242d",
            "messageTitle": "disable setuptools XXX",
            "messageBody": "",
            "insertions": 11,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 13,
        "deletions": 13,
        "date": "2009-09-16",
        "commitResults": [
          {
            "hash": "880876866288e18f64615f171e2fe2ef9cb224c0",
            "messageTitle": "[typos] dependanc(y|ies) -\u003e dependenc(y|ies)",
            "messageBody": "",
            "insertions": 13,
            "deletions": 13
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2010-01-27",
        "commitResults": [
          {
            "hash": "8f4f372b50450a395777441a011a858b19415658",
            "messageTitle": "fix updating dependency information: we need astng 0.19.3",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 21,
        "deletions": 37,
        "date": "2010-03-22",
        "commitResults": [
          {
            "hash": "be5996b93d2e2674566fa186af78bf5029b0b9d8",
            "messageTitle": "remove cache_size option: it was desactivated anyway",
            "messageBody": "",
            "insertions": 8,
            "deletions": 20
          },
          {
            "hash": "c50f000425ea7168149b690b08e4f9a2f7cc47e5",
            "messageTitle": "update custom checker in example/custom.py",
            "messageBody": "We don\u0027t use compiler.ast nodes, but astng nodes.\n",
            "insertions": 7,
            "deletions": 9
          },
          {
            "hash": "d6b41bf89b74a4217fa43da32da885a0d76cb4c3",
            "messageTitle": "modify astng imports after astng \u0027rebuild\u0027 refactoring",
            "messageBody": "",
            "insertions": 6,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 91,
        "deletions": 136,
        "date": "2010-03-23",
        "commitResults": [
          {
            "hash": "9edcbd941951e53c79b84b8d3bbbca741d2c9af4",
            "messageTitle": "copyright update : date up 2010",
            "messageBody": "",
            "insertions": 26,
            "deletions": 26
          },
          {
            "hash": "6b917a6599cd97ae4626809e88adc4aa74323a7e",
            "messageTitle": "fix #19498: apply windows batch patch",
            "messageBody": "",
            "insertions": 22,
            "deletions": 90
          },
          {
            "hash": "aca3164a8190c0ee207ed861a231db9c2850d4e9",
            "messageTitle": "fix #19339: pylint.el : non existing py-mod-map",
            "messageBody": "",
            "insertions": 21,
            "deletions": 17
          },
          {
            "hash": "56474c0c75c83dc914f44993ef1bedbde42695f6",
            "messageTitle": "update Changelog",
            "messageBody": "",
            "insertions": 5,
            "deletions": 0
          },
          {
            "hash": "425d410fac89f25dcb0f23a40bdc7925bfb15bdc",
            "messageTitle": "0.20.0",
            "messageBody": "",
            "insertions": 12,
            "deletions": 3
          },
          {
            "hash": "e8459da973c6f2bb28e8a91a0268a0f5873512d8",
            "messageTitle": "Added tag pylint-version-0.20.0 for changeset 9e1395d66819",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "30e92d7a308fe3161db15604d599911ed77dcee7",
            "messageTitle": "Added tag pylint-debian-version-0.20.0-1 for changeset 72807aa7bf30",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "f66455cd9dc34a2864cbbd808429229c7ceba2ec",
            "messageTitle": "Changelog :add #5561: checker for function arguments",
            "messageBody": "",
            "insertions": 3,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 46,
        "deletions": 5,
        "date": "2010-03-24",
        "commitResults": [
          {
            "hash": "b53aca2105b9153a5a861c707555eaabd03bdb8d",
            "messageTitle": "apply Scott Pilkey patch: fix #9018: when using defining-attr-method order matters",
            "messageBody": "",
            "insertions": 46,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 87,
        "deletions": 22,
        "date": "2010-03-29",
        "commitResults": [
          {
            "hash": "cb9893f54a7161bff9a8b60bbc8da2be835491c3",
            "messageTitle": "Sarah Strong patch for #4595: don\u0027t warn on trailing comma in dict, list and tuple definition",
            "messageBody": "",
            "insertions": 13,
            "deletions": 1
          },
          {
            "hash": "cdecd2ed16e2d623160e79fe8e84c661b6e8f247",
            "messageTitle": "apply Donovan Lee Wanhoy patch: don\u0027t warn on missing doc string for child classes.",
            "messageBody": "",
            "insertions": 54,
            "deletions": 1
          },
          {
            "hash": "e92224761a7ba9cdfdf724328166b91c6c7e34b8",
            "messageTitle": "apply Sandro Tosi patch for pyreverse man page",
            "messageBody": "",
            "insertions": 20,
            "deletions": 20
          }
        ]
      },
      {
        "insertions": 28,
        "deletions": 0,
        "date": "2010-03-30",
        "commitResults": [
          {
            "hash": "ae065beb23668ab8cd8c9d1510ef6804d366037f",
            "messageTitle": "apply Alexander Artemenko patch for non-ascii caracters This fixes #4683: Non-ASCII characters count double if utf8",
            "messageBody": "",
            "insertions": 28,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 1,
        "date": "2010-04-06",
        "commitResults": [
          {
            "hash": "17038e70880fdc45352b596b60213bb0e070415d",
            "messageTitle": "don\u0027t print \u0027hopp\u0027",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 20,
        "deletions": 0,
        "date": "2010-04-15",
        "commitResults": [
          {
            "hash": "0feba9d538733f775d705b59abaff52b4a273696",
            "messageTitle": "fix #20067: pylint crash with AttributeError in a with statement without \u0027as\u0027, node.vars is None",
            "messageBody": "",
            "insertions": 3,
            "deletions": 0
          },
          {
            "hash": "6205a48495039cb25c4cf36830cfe1590cdb02f4",
            "messageTitle": "add a little test on a with statement with triggered #20067",
            "messageBody": "",
            "insertions": 17,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 16,
        "deletions": 9,
        "date": "2010-04-21",
        "commitResults": [
          {
            "hash": "aaa8ea61a9c2054e81e45d7399615063f4895fa9",
            "messageTitle": "pyreverse: take into account class attributes which are stored in locals_type",
            "messageBody": "",
            "insertions": 8,
            "deletions": 4
          },
          {
            "hash": "2b77a5b0b3ce2d1731d4b77cac3760276fbdb00e",
            "messageTitle": "pyreverse test: add a class member and adapt tests",
            "messageBody": "",
            "insertions": 8,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2010-05-11",
        "commitResults": [
          {
            "hash": "6f32f408ac874cfc656783bf5bb96a030466d31e",
            "messageTitle": "fix epylint : use new options",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2010-09-01",
        "commitResults": [
          {
            "hash": "46322544aa45bb7f351650f5208d0afef8fe216c",
            "messageTitle": "typo",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 14,
        "deletions": 8,
        "date": "2010-09-02",
        "commitResults": [
          {
            "hash": "ab71bff637d31e5269d74551400e38f752be50a2",
            "messageTitle": "[pyreverse] remove useless optional argument The astng_wrapper is already the default argument in the astng.manager module.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "e9c5760cf85b73fa252c242943b0ce630bffddf0",
            "messageTitle": "[pyreverse] add current working directory to sys.path It is not enough to do it in the astng.manager (in the project_from_files method) since we call the \"ancestors\" method after it in the DiadefsHandler.",
            "messageBody": "",
            "insertions": 10,
            "deletions": 6
          },
          {
            "hash": "dcb2a720b50eb39d0f07d3d3c398808d382956de",
            "messageTitle": "add a comment: closing #9542: unrecognized ancestor",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 2,
        "date": "2010-09-22",
        "commitResults": [
          {
            "hash": "97ef5afc42a85d63c03bbe90c4d2e6eeb27defdf",
            "messageTitle": "python2.3 compat fixes",
            "messageBody": "",
            "insertions": 7,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 4,
        "date": "2010-10-06",
        "commitResults": [
          {
            "hash": "90f0356f3ae2ea318bba17644c5f9713639e8346",
            "messageTitle": "remove useless lgc.compat imports",
            "messageBody": "",
            "insertions": 3,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2010-10-12",
        "commitResults": [
          {
            "hash": "c560f2ae9b36088477b6ad8c78860311eaf8ebeb",
            "messageTitle": "Raise: modified attribute name",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 34,
        "deletions": 18,
        "date": "2010-10-21",
        "commitResults": [
          {
            "hash": "894b821ed4fa01b669dad66dbb98b486c75ce2a1",
            "messageTitle": "close #48066: crash on redirecting non-ascii output",
            "messageBody": "just apply patch at the tracker\n",
            "insertions": 14,
            "deletions": 11
          },
          {
            "hash": "fda878a1b21bcc26360ea6e9160500cc5d4af088",
            "messageTitle": "add a minimal class decorator test",
            "messageBody": "",
            "insertions": 9,
            "deletions": 0
          },
          {
            "hash": "5b6c9053d073e5d3a6b97afbb6f9b72bda277be4",
            "messageTitle": "fix broken smoketest",
            "messageBody": "",
            "insertions": 11,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 568,
        "deletions": 668,
        "date": "2010-10-25",
        "commitResults": [
          {
            "hash": "2f57c3b90806e851462029498ad6214a7263f878",
            "messageTitle": "fix exit code on bad options",
            "messageBody": "",
            "insertions": 6,
            "deletions": 1
          },
          {
            "hash": "06a3ddb16d12a7e1b80877dadda64c3dcd66766b",
            "messageTitle": "help / man: more explicit on dummy variable regex",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "110fe0299bd93b29d196464933aec406bfbb8207",
            "messageTitle": "example: updated  examples/pylintrc by using --generate-rcfile",
            "messageBody": "",
            "insertions": 79,
            "deletions": 147
          },
          {
            "hash": "a004b900ea8a67ef4fabcc68a4c31aa35f4807ad",
            "messageTitle": "doc: update FAQ, quickstart, beginner_pylint_tutorial",
            "messageBody": "",
            "insertions": 17,
            "deletions": 20
          },
          {
            "hash": "2554a84f4948a426abfcee3e443a5c37f49c18af",
            "messageTitle": "doc : more update on options",
            "messageBody": "",
            "insertions": 463,
            "deletions": 497
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 0,
        "date": "2010-10-26",
        "commitResults": [
          {
            "hash": "d48167beefe27948b59d2bac266841ec0cd7fdda",
            "messageTitle": "doc: little full-documentation improvement (closes #47885)",
            "messageBody": "",
            "insertions": 3,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 21,
        "deletions": 5,
        "date": "2010-10-27",
        "commitResults": [
          {
            "hash": "2a67607fe43f5e96dff9df594790dd3e4d001afd",
            "messageTitle": "prepare version 0.21.4",
            "messageBody": "",
            "insertions": 19,
            "deletions": 5
          },
          {
            "hash": "e53d8887876ab55a181ec1428e5fdf3b2786b881",
            "messageTitle": "Added tag pylint-version-0.21.4 for changeset dcaa757b05f5",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "b86e249b45505dc62908a5d66d542aeb0810772a",
            "messageTitle": "Added tag pylint-debian-version-0.21.4-1 for changeset 7bc5d177ffb6",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 34,
        "deletions": 43,
        "date": "2010-10-28",
        "commitResults": [
          {
            "hash": "51608038c6057174b3b0cb4504643f4f5788c3e9",
            "messageTitle": "py3k: make unittest_pyreverse_diadefs.py compatible",
            "messageBody": "",
            "insertions": 22,
            "deletions": 37
          },
          {
            "hash": "fa0b496f50c85b977c92c15f1ba2e242ad78f02f",
            "messageTitle": "py3k: fix __builtin__ vs builtins",
            "messageBody": "",
            "insertions": 12,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 40,
        "deletions": 25,
        "date": "2010-11-02",
        "commitResults": [
          {
            "hash": "4a3ad550bd6bd50589289a37cae2d43b77e46f48",
            "messageTitle": "py3k: ignore __pycache__ directory for loading checkers",
            "messageBody": "",
            "insertions": 5,
            "deletions": 4
          },
          {
            "hash": "52a5a85c9fc5c21220935beda6ac2f4c0170688f",
            "messageTitle": "py3k: import reload from lgc.compat",
            "messageBody": "",
            "insertions": 1,
            "deletions": 2
          },
          {
            "hash": "ae9463857ca21dc977b811e5b47014bc6b0e4fec",
            "messageTitle": "py3k / similar: typos, output improvement, fix sorted",
            "messageBody": "",
            "insertions": 9,
            "deletions": 10
          },
          {
            "hash": "d6dc9c23e0459fa3512bf5485bece8ea9a0003cd",
            "messageTitle": "py3k: remove deprecate \"new\" usage",
            "messageBody": "",
            "insertions": 3,
            "deletions": 6
          },
          {
            "hash": "95e39254ef70ae4f4fefd1b809e49b6ab534e222",
            "messageTitle": "223 : second expression of raise is instantiation arguments",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "329598bb0ee56a8b0e1d7b97ee1c19fc1b018184",
            "messageTitle": "py3k tests: raising a string becomes a syntax error",
            "messageBody": "",
            "insertions": 14,
            "deletions": 0
          },
          {
            "hash": "d4ac15ea474363cd8866dc5b56bb003db763c2a8",
            "messageTitle": "py3k: pickle needs a byte IO",
            "messageBody": "",
            "insertions": 7,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 120,
        "deletions": 84,
        "date": "2010-11-04",
        "commitResults": [
          {
            "hash": "6ba4a8b8ecb47b2d382616385f84eb60cca81615",
            "messageTitle": "py3k: fix some tests",
            "messageBody": "",
            "insertions": 3,
            "deletions": 5
          },
          {
            "hash": "a1d7362cb39cd7644d3476111a49c7c7fb7d30cf",
            "messageTitle": "test: make tests independent of current working directory",
            "messageBody": "",
            "insertions": 65,
            "deletions": 44
          },
          {
            "hash": "e6f6b530a482343b8e8ce49bb6d3e77606ac3614",
            "messageTitle": "py3k: list comprehension is now a scoped node",
            "messageBody": "",
            "insertions": 18,
            "deletions": 0
          },
          {
            "hash": "25828dad105d41de0f76f6bf4c81f7cddeae30c5",
            "messageTitle": "cleanup; remove a useless \"else\" indentation",
            "messageBody": "",
            "insertions": 34,
            "deletions": 35
          }
        ]
      },
      {
        "insertions": 21,
        "deletions": 27,
        "date": "2010-11-08",
        "commitResults": [
          {
            "hash": "66d7e9acbac2134015c497c821758f825f944ada",
            "messageTitle": "py3k: exceptions are now in the builtins module",
            "messageBody": "",
            "insertions": 10,
            "deletions": 3
          },
          {
            "hash": "a605124438586163135107349a1862874944b2df",
            "messageTitle": "py3k: update profile option",
            "messageBody": "",
            "insertions": 3,
            "deletions": 5
          },
          {
            "hash": "3d406bf504db41d0939fc2b6ce45779945d7ea2e",
            "messageTitle": "make utf-8 noerror test pass (2to3 will add a character with \"print\")",
            "messageBody": "",
            "insertions": 3,
            "deletions": 2
          },
          {
            "hash": "36935b394d5768fcd1eb39e00c0fe817fbcf36f4",
            "messageTitle": "cleanup: we don\u0027t support python 2.2 anymore",
            "messageBody": "",
            "insertions": 5,
            "deletions": 17
          }
        ]
      },
      {
        "insertions": 45,
        "deletions": 24,
        "date": "2010-11-09",
        "commitResults": [
          {
            "hash": "8026bae0b0a8dd43d6f4d0bf57db2f7439423d2c",
            "messageTitle": "test: add a test for encoding crash",
            "messageBody": "",
            "insertions": 22,
            "deletions": 2
          },
          {
            "hash": "095ecf66e888c070da401632cca9a8e8e68d3463",
            "messageTitle": "fix /py3k : self import is no problem (fixed in astng); fix message in tests",
            "messageBody": "",
            "insertions": 3,
            "deletions": 5
          },
          {
            "hash": "b21d59ff8f52f512809ee5321e0db80aa395465f",
            "messageTitle": "typo",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "44b654850d4bbb8d78dcdf907d6b81c5b7720da9",
            "messageTitle": "py3k : fix reporter output (don\u0027t print bytes but strings)",
            "messageBody": "",
            "insertions": 18,
            "deletions": 15
          }
        ]
      },
      {
        "insertions": 226,
        "deletions": 96,
        "date": "2010-11-10",
        "commitResults": [
          {
            "hash": "74834e81bf42f446f4d99f0fe43b9bf471a3f748",
            "messageTitle": "packaging : add py3k target; update setup.py and other files to make py3k packaging work",
            "messageBody": "",
            "insertions": 201,
            "deletions": 73
          },
          {
            "hash": "6ffa27d605345cc96e15252175813a0925c7e7a0",
            "messageTitle": "py3k: fix test (module StringIO disappeared)",
            "messageBody": "",
            "insertions": 8,
            "deletions": 3
          },
          {
            "hash": "1e44813300c240910bb62b09de8763b79444a2b9",
            "messageTitle": "py3k: fix sort_msgs: cmp keyword does not exist anymore",
            "messageBody": "",
            "insertions": 10,
            "deletions": 9
          },
          {
            "hash": "de8216178228ed027f140300bf0c698cc59c8090",
            "messageTitle": "fix: raise NotImplemented with a callfunc is also bad",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          },
          {
            "hash": "160f0c65a8b696bbb77fdf0e953601b671430418",
            "messageTitle": "cleanup: norm_open can be done directly",
            "messageBody": "",
            "insertions": 1,
            "deletions": 2
          },
          {
            "hash": "703175e78335e5d6ea0ade701bd93bf23a3dec5b",
            "messageTitle": "cleanup: remove python \u003c 2.5 support",
            "messageBody": "",
            "insertions": 2,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 229,
        "deletions": 213,
        "date": "2010-11-15",
        "commitResults": [
          {
            "hash": "e0296d8ad72f27d8e7899d5ec38827081e6f47a0",
            "messageTitle": "remove more 2.4 compat",
            "messageBody": "",
            "insertions": 6,
            "deletions": 19
          },
          {
            "hash": "62b387d773a2e50dd4a554de93fb199324ea7fc7",
            "messageTitle": "223 : run python2.x compatible fixers",
            "messageBody": "",
            "insertions": 24,
            "deletions": 25
          },
          {
            "hash": "566815597c3ebf327c8c84932f48c3649304c4e5",
            "messageTitle": "prepare 0.22.0",
            "messageBody": "",
            "insertions": 22,
            "deletions": 10
          },
          {
            "hash": "3ff282ffef9f010bca780f506e525924f64c1f24",
            "messageTitle": "update documentation and manpage",
            "messageBody": "",
            "insertions": 175,
            "deletions": 159
          },
          {
            "hash": "519ed5e736a16e3570695a71aa48f714712395b7",
            "messageTitle": "Added tag pylint-version-0.22.0 for changeset d96b6f5a2531",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "0d84569cb7cfba8cba9d704e7da44829f40039d6",
            "messageTitle": "Added tag pylint-debian-version-0.22.0-1 for changeset 060ad9adbd93",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 74,
        "deletions": 62,
        "date": "2010-11-16",
        "commitResults": [
          {
            "hash": "7ae94c3d9b2c309e008af1ebe430f8422e084a40",
            "messageTitle": "py3k: add a README.Python3",
            "messageBody": "",
            "insertions": 32,
            "deletions": 0
          },
          {
            "hash": "b41bf75c109c3f920975a3eccf1aca867520c0e3",
            "messageTitle": "cleanup; don\u0027t need to talk about  python \u003e\u003d 2.5 anymore",
            "messageBody": "",
            "insertions": 3,
            "deletions": 5
          },
          {
            "hash": "55460518f3bf1f1945153d424738b0aeefd69119",
            "messageTitle": "test cleanup",
            "messageBody": "",
            "insertions": 7,
            "deletions": 23
          },
          {
            "hash": "73b5aa30f8eb9efd9f2cabbe02e12e1ec8aa2180",
            "messageTitle": "py3k: test corrections",
            "messageBody": "* no more relative imports\n* py3k: replace file by open\n* a special input for stuff / problems removed in 3.x\n",
            "insertions": 19,
            "deletions": 14
          },
          {
            "hash": "4322619b775d4ad7f9e6b75aedd61c59ead4ea37",
            "messageTitle": "test_func: error message improvement",
            "messageBody": "",
            "insertions": 5,
            "deletions": 4
          },
          {
            "hash": "2e82094c1bc37313b74726eaffe09cf4517355bd",
            "messageTitle": "py3k: apply is removed: move test to func_3k_removed_stuff",
            "messageBody": "",
            "insertions": 4,
            "deletions": 6
          },
          {
            "hash": "aab318f594ac64f865762c700d31487214559c2b",
            "messageTitle": "py3k: moved __future__ import test to func_3k_removed_stuff_py_30",
            "messageBody": "",
            "insertions": 4,
            "deletions": 10
          },
          {
            "hash": "c6c1c7f56510ed71cc31deae5ffb67dc2673fa07",
            "messageTitle": "py3k: add \"py_30_\" suffix for a lot of removed stuff",
            "messageBody": "",
            "insertions": 0,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 65,
        "deletions": 60,
        "date": "2010-11-17",
        "commitResults": [
          {
            "hash": "ab5c6ab825ba14e3fb795587480b6da05e841bc5",
            "messageTitle": "merge two yield tests",
            "messageBody": "",
            "insertions": 9,
            "deletions": 9
          },
          {
            "hash": "6a40652e761c932bbc627133170808070de25f2f",
            "messageTitle": "tests: refactor possibility to have two messages or two inputs",
            "messageBody": "",
            "insertions": 36,
            "deletions": 22
          },
          {
            "hash": "469b4426fb9f01c707b996c7470c6983de2b3aea",
            "messageTitle": "tests: merge two keyword tests",
            "messageBody": "",
            "insertions": 0,
            "deletions": 11
          },
          {
            "hash": "dabe7b1b00814ec358412e36684ccfc86c0c3358",
            "messageTitle": "py3k: update more tests",
            "messageBody": "",
            "insertions": 12,
            "deletions": 15
          },
          {
            "hash": "7e6c7802dddbca30c7c30d588d356d4d0f68a394",
            "messageTitle": "test: forgot missing py3k message",
            "messageBody": "",
            "insertions": 4,
            "deletions": 0
          },
          {
            "hash": "623a8844cbf2ce639e312eb9752b446ce13f4244",
            "messageTitle": "py25 tests: need \u0027from __future__ import with_statement\u0027",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "08817e788329b98afd20f32407f9b09da5b56a10",
            "messageTitle": "py3k test fix : remove \"toto\" since 2to3 would make a call func",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "e046fa33cd15592ccbd3948a1ce2fd32cc94fc0a",
            "messageTitle": "py3k: remove nested args",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 61,
        "deletions": 170,
        "date": "2010-11-22",
        "commitResults": [
          {
            "hash": "5164d45df2523843a00410a08a351bbeee69e8ce",
            "messageTitle": "FAQ : fix link",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "4192e79a8388f92e1227cb87b3109e8e8643628e",
            "messageTitle": "py3k: need to handle guess_encoding in astng",
            "messageBody": "Astng will try to find the right encoding and provide the right \"stream\"\ninterface for the Pylint checkers.\nReading a stream with the wrong encoding in py3k will generate a UnicodeError.\n\nThe introduced a \u0027F0010\u0027 failure should maybe be replaced by E0501, E0502 and\nF0002? However, can we call \u0027unexpected errors\u0027 the ASTNGBuildingExceptions\nthat we raise in logilab.astng.builder?\n",
            "insertions": 56,
            "deletions": 167
          },
          {
            "hash": "edf6b1e6e59143ce421283ed9a7c182790363ecf",
            "messageTitle": "py3k: catch SyntaxError while searching for a file",
            "messageBody": "When loading a module without the file name, Pylint uses lgc.find_module\nwhich uses imp.find_module at lgc.modutils l. 606.\nWhen doing this with \"func_unknown_encoding\" in Python 3.x,\na syntax error arises, where as in python 2.x, it friendly returns\n\"pylint/test/input/func_unknown_encoding.py\".\n\nThis is a Python bug : http://bugs.python.org/issue10588 and capturing\nSyntaxError should be removed as soon as possible\n",
            "insertions": 3,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 2,
        "date": "2010-11-23",
        "commitResults": [
          {
            "hash": "b75f6debc96c7fcfd1439264b484b4879156bd10",
            "messageTitle": "cleanup: remove KeyboardInterrupt capture: it goes through Exception in py \u003e\u003d 2.5",
            "messageBody": "KeyboardInterrupt is no more a subclass of Exception anymore\n",
            "insertions": 0,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 8,
        "date": "2010-11-24",
        "commitResults": [
          {
            "hash": "0824e1a81e2dc8f16d5eb64ebd0218d1b36948e8",
            "messageTitle": "py3k: fix W0703 warning",
            "messageBody": "",
            "insertions": 5,
            "deletions": 6
          },
          {
            "hash": "d5c4f0e75b337ea3d448e63d4539e3a2ccf9cfb3",
            "messageTitle": "typo: fixes erratic test_similar behavior",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "b3f94e1ec919caceb1939aded81eae6bc9c9004c",
            "messageTitle": "py3k: fix smoketest",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 6,
        "date": "2010-12-02",
        "commitResults": [
          {
            "hash": "534ed26d08f9c105fd9ecf8687661c93358f8aaa",
            "messageTitle": "cleanup: we don\u0027t support 2.3 anymore",
            "messageBody": "",
            "insertions": 1,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 39,
        "deletions": 52,
        "date": "2010-12-06",
        "commitResults": [
          {
            "hash": "b599003dfaa2e47ede1adc560027f06884716e86",
            "messageTitle": "py3k tests: new list of remaining messages",
            "messageBody": "- skip tests that depend on python bugs\n",
            "insertions": 23,
            "deletions": 1
          },
          {
            "hash": "858ff5c3c4a491c754cbf95baa01d112ce6cd749",
            "messageTitle": "remove code that\u0027s out commented since rev 0",
            "messageBody": "",
            "insertions": 0,
            "deletions": 25
          },
          {
            "hash": "23059d9b68e294613673f216966253840f02f715",
            "messageTitle": "cleanup: simplify add_checker",
            "messageBody": "",
            "insertions": 16,
            "deletions": 26
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2010-12-07",
        "commitResults": [
          {
            "hash": "9bde15de42adb1f65f02f1a694752699d1d4cd41",
            "messageTitle": "import of checkers: little more information on checker import failure",
            "messageBody": "remove exec mode of checkers/base.py\n",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 84,
        "deletions": 95,
        "date": "2010-12-08",
        "commitResults": [
          {
            "hash": "be454880a7685ea76fc97de87ca606b4380793b2",
            "messageTitle": "format_string: melt indentation a bit down and rename some variables",
            "messageBody": "",
            "insertions": 84,
            "deletions": 95
          }
        ]
      },
      {
        "insertions": 131,
        "deletions": 121,
        "date": "2010-12-09",
        "commitResults": [
          {
            "hash": "cb2e51b161099e5890a4e438605b38203d9fecad",
            "messageTitle": "cleanup: remove unused needs_checkers attribut and sort_checkers method what was expected to be accomplished needs_checkers will be done easier with a decorator",
            "messageBody": "",
            "insertions": 20,
            "deletions": 40
          },
          {
            "hash": "85f5e8ed50c444a311c0d79dbe4c525ad636cefe",
            "messageTitle": "performance: make sure checkers are not called because of reporters",
            "messageBody": "- disable all reporters with the \"--reports\u003dn\" option\n- fix bug in checking if the reporter is activated\n- hence also desactivating similar with \u0027-E\u0027 (which was not before)\n",
            "insertions": 7,
            "deletions": 4
          },
          {
            "hash": "76e39f215f21177860c987ee2a09c7e3e91e585b",
            "messageTitle": "messages: add \"check_messages\" decorator to store messages",
            "messageBody": "refactor PyLintASTWalker.add_checker to check the stored method\u0027s messages;\nin PyLintASTWalker.add_checker, we only disable methods\nthat has been decorated and have no activated message.\n",
            "insertions": 33,
            "deletions": 9
          },
          {
            "hash": "545ffeff2904fc9c8672b8b575dc894a29ffb8db",
            "messageTitle": "messages: decorate visit and leave methods with check_messages",
            "messageBody": "refactor checker/bases.py while adding \u0027check_messages\u0027\n",
            "insertions": 58,
            "deletions": 54
          },
          {
            "hash": "4eb09f1e6ea58f5d09fa5d267a3a992762d2b4ed",
            "messageTitle": "cleanup:  remove useless KeyboardInterrupt catch and have a print for unhandled exception",
            "messageBody": "",
            "insertions": 5,
            "deletions": 4
          },
          {
            "hash": "e0480447050d00a6d4361386412d527bd9b69508",
            "messageTitle": "fix #51228: script shortcuts on Windows",
            "messageBody": "",
            "insertions": 2,
            "deletions": 4
          },
          {
            "hash": "7ccaad365d1e2f9916b9023175a7c6de68117f02",
            "messageTitle": "fix checker disabling: use is_report_enabled to check for enabled reports",
            "messageBody": "",
            "insertions": 6,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 210,
        "deletions": 138,
        "date": "2010-12-13",
        "commitResults": [
          {
            "hash": "435cd523c00f6148e86d5214077caffcbd301c2a",
            "messageTitle": "new warning W0106: \u0027Expression \"%s\" is assigned to nothing\u0027",
            "messageBody": "",
            "insertions": 36,
            "deletions": 10
          },
          {
            "hash": "2bd7c9a51e7d43805f10bd8b734898de48618cfc",
            "messageTitle": "test format: bring some ancient tests back to live",
            "messageBody": "- remove tests referring to noexistent W0321 warning\n- add a skip message for test_no_crash waiting to know what it should do\n",
            "insertions": 53,
            "deletions": 65
          },
          {
            "hash": "e0af698a87bfba6853af930c6f947969859e595a",
            "messageTitle": "cleanup / test: rename a method and move some stuff around for easier testing",
            "messageBody": "",
            "insertions": 23,
            "deletions": 16
          },
          {
            "hash": "7a63f9b28bade89d2c46e6e763455173ab562536",
            "messageTitle": "test: fix tests, test some more message and report disabling",
            "messageBody": "",
            "insertions": 35,
            "deletions": 5
          },
          {
            "hash": "f2dc5d7fcaad2c508f8950343cb970b7354d3815",
            "messageTitle": "cleanup: refactor checker/import methods that were marked for rewriting",
            "messageBody": "",
            "insertions": 20,
            "deletions": 27
          },
          {
            "hash": "5f7bfc55810124491422af916e8a54d2c7e1ac7a",
            "messageTitle": "pylint itself: remove last pylint error message",
            "messageBody": "",
            "insertions": 4,
            "deletions": 3
          },
          {
            "hash": "4fd9cc5b749bc2df9a2b18d82ef61a14326a90ac",
            "messageTitle": "performance: use \u0027active_msgs\u0027 attribute to disable function calls or the like",
            "messageBody": "",
            "insertions": 36,
            "deletions": 9
          },
          {
            "hash": "ed1e2aac329ac808177d512c7e5fbd2d2cecc014",
            "messageTitle": "fix: test shall also pass for python2.5 were int have no \"real\" attribute",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 22,
        "deletions": 22,
        "date": "2010-12-14",
        "commitResults": [
          {
            "hash": "455beb61539a40eb35dfd637d0cd015a7cbec7a0",
            "messageTitle": "test: fix test for check_line API modification",
            "messageBody": "",
            "insertions": 22,
            "deletions": 22
          }
        ]
      },
      {
        "insertions": 152,
        "deletions": 45,
        "date": "2010-12-15",
        "commitResults": [
          {
            "hash": "594a20d33bbbbcf3ad042d8872bb11228934dbe8",
            "messageTitle": "print exceptions not handled by astng",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "6def4f2e66906633a229f00e561ab7022f263d1f",
            "messageTitle": "symilar: ignore differences due to comments at the end of a line; reflect it in tests",
            "messageBody": "",
            "insertions": 23,
            "deletions": 9
          },
          {
            "hash": "94756c3a3f4ad64e61acca049a01c6e4b6de4530",
            "messageTitle": "add manpage for symilar",
            "messageBody": "",
            "insertions": 37,
            "deletions": 0
          },
          {
            "hash": "85f4f8a3f8671bbf613b1378835140a5aa0ca49b",
            "messageTitle": "doc: add manpages, update documentation about the project",
            "messageBody": "mention and document a bit epylint, pylint-gui and symilar\ngui.py : fix line length\ndebian/control: Suggests instead of Recommends python-tk\n",
            "insertions": 90,
            "deletions": 34
          }
        ]
      },
      {
        "insertions": 33,
        "deletions": 19,
        "date": "2010-12-16",
        "commitResults": [
          {
            "hash": "a67fa6cdbe7019d0d87a03dd9c69c8d8dd3884f1",
            "messageTitle": "py3k packaging: remove removed files from P3K_FILES_TO_IGNORE",
            "messageBody": "",
            "insertions": 3,
            "deletions": 5
          },
          {
            "hash": "bde35abc2be9cc02058c08db12596aaeae9612c7",
            "messageTitle": "py3k : disable W0122 W0331 W0332 W0333 mesages for python3",
            "messageBody": "",
            "insertions": 4,
            "deletions": 0
          },
          {
            "hash": "b62165f67f8f6b7e0c98345d6d68f3b2e07da998",
            "messageTitle": "typo; fix py3k tests",
            "messageBody": "",
            "insertions": 5,
            "deletions": 7
          },
          {
            "hash": "9dd9110650b05aaecf3511db1bf83d01a9970d4e",
            "messageTitle": "py3k: fix test_import_graph.py to make it also runnable from pytest",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "80a739f8af1ba664d0faf40dc9183db02cd4c232",
            "messageTitle": "preparte version 0.23.0",
            "messageBody": "",
            "insertions": 17,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 20,
        "deletions": 0,
        "date": "2015-12-08",
        "commitResults": [
          {
            "hash": "c8c1984ff419189f6ca11888f60cca036cebc9ec",
            "messageTitle": "Give a nice error message when Graphviz is not installed. Closes issue #168.",
            "messageBody": "",
            "insertions": 20,
            "deletions": 0
          }
        ]
      }
    ],
    "Paul Cochrane": [
      {
        "insertions": 8,
        "deletions": 8,
        "date": "2013-11-28",
        "commitResults": [
          {
            "hash": "9744f157e43c4477a388f946c3116ef7a55f4368",
            "messageTitle": "[man] corrected minor typos and grammatical errors in pyreverse man page",
            "messageBody": "",
            "insertions": 8,
            "deletions": 8
          }
        ]
      }
    ],
    "Alan Evangelista": [
      {
        "insertions": 3,
        "deletions": 3,
        "date": "2016-05-05",
        "commitResults": [
          {
            "hash": "e444a2cd51c72546ceacfeab53aa20d827371994",
            "messageTitle": "Show fatal messages when disabling no-error messages (#890)",
            "messageBody": "Currently \u0027pylint -E\u0027 disables all non-error messages, but this includes fatal errors as well. This change reverts that, since fatal errors are errors after all.\r\n",
            "insertions": 3,
            "deletions": 3
          }
        ]
      }
    ],
    "Buck Golemon": [
      {
        "insertions": 0,
        "deletions": 0,
        "date": "2013-10-14",
        "commitResults": [
          {
            "hash": "38166c9873611d33127db847ba1df99be4de8aa5",
            "messageTitle": "Created new branch w0401_package",
            "messageBody": "--HG--",
            "insertions": 0,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 0,
        "date": "2013-10-15",
        "commitResults": [
          {
            "hash": "37b7624478a9056a2a3c66e9548c56eef6fd14f6",
            "messageTitle": "Created new branch fix_namedtuple",
            "messageBody": "--HG--",
            "insertions": 0,
            "deletions": 0
          }
        ]
      }
    ],
    "Adam Dangoor": [
      {
        "insertions": 18,
        "deletions": 1,
        "date": "2018-05-16",
        "commitResults": [
          {
            "hash": "50f44f3ecefb84a42d271376451511d57d036a11",
            "messageTitle": "Fix an error which occurred when using the docparams extension and documenting a NotImplementedError.",
            "messageBody": "",
            "insertions": 18,
            "deletions": 1
          }
        ]
      }
    ],
    "Dan Hemberger": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2019-03-01",
        "commitResults": [
          {
            "hash": "784dc5319bcad18e390f6cb7d44df8fda7514722",
            "messageTitle": "Fix trivial typo in 2.3.rst",
            "messageBody": "\"upports\" -\u003e \"supports\"",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 6,
        "date": "2019-03-05",
        "commitResults": [
          {
            "hash": "544e0a2133d7dcd339a94bdece11ccb8d32f0190",
            "messageTitle": "Set version to 2.4.0-dev0 (#2789)",
            "messageBody": "Make sure the master branch is tagged as a development version so that it is not mistaken for an official release. Also modify the version string logic to avoid misinterpreting development version 0 as an official release (since 0 \u003d\u003d False) by using `dev_version \u003d None` for non-development versions.",
            "insertions": 5,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2019-03-24",
        "commitResults": [
          {
            "hash": "75a047916521c5d3d23a7a63b8def59677061633",
            "messageTitle": "Fix last updated date in sphinx documentation (#2828)",
            "messageBody": "The \"last updated\" date was displaying as \"None\", which we can fix\r\nby uncommenting `html_last_updated_fmt` in the sphinx configuration.",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Jace Browning": [
      {
        "insertions": 22,
        "deletions": 14,
        "date": "2018-05-15",
        "commitResults": [
          {
            "hash": "656c17b5f30cad92a123688bde858948736ce478",
            "messageTitle": "Includes file paths in the default report format (#2088)",
            "messageBody": "The default report format in mypy, pydocstyle, and other tools includes the file path so that the user of certain terminals (e.g. iTerm) can click on each warning to open that line in their editor.\r\n\r\nFor example, here is what the default mypy output looks like:\r\n\r\n framework/views/billing.py:92: error: Incompatible return value type (got \"View\", expected \r\n \"DashboardTab\")\r\n\r\nWith this new format, pylintoutput looks like:\r\n\r\n  framework/views/dashboards.py:21:8: W0612: Unused variable \u0027x\u0027 (unused-variable)\r\n\r\nNote that some editors (e.g. Sublime Text) index columns from 1, so this will place the cursor one column to the left of the warning.\r\n",
            "insertions": 22,
            "deletions": 14
          }
        ]
      }
    ],
    "carlio": [],
    "Brian Shaginaw": [
      {
        "insertions": 22,
        "deletions": 0,
        "date": "2018-01-18",
        "commitResults": [
          {
            "hash": "3c0ceade8aa316316e5cd7c74383c4befe9c6476",
            "messageTitle": "Add test + fix for \u0027raise from function\u0027.",
            "messageBody": "",
            "insertions": 18,
            "deletions": 0
          },
          {
            "hash": "1fb0114f72a8c177ef822858dce8c1466106e8f8",
            "messageTitle": "Update contributors and changelog.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 0
          }
        ]
      }
    ],
    "Matej Marušák": [
      {
        "insertions": 32,
        "deletions": 3,
        "date": "2018-06-04",
        "commitResults": [
          {
            "hash": "20cf1abf53d5e86c30723a86b07e6e86b967193c",
            "messageTitle": "`len-as-condition` recognize more cases (#2165)",
            "messageBody": "This patch adds lints for two more cases:\r\n1) `if len(X) \u003c 1:`\r\n2) `if len(X) \u003c\u003d 0:`\r\n\r\nMeaning of the both is same as `if not X`.\r\n\r\nSigned-off-by: Matej Marusak \u003cmmarusak@redhat.com\u003e",
            "insertions": 32,
            "deletions": 3
          }
        ]
      }
    ],
    "grizzly.nyo@gmail.com": [
      {
        "insertions": 6,
        "deletions": 4,
        "date": "2013-08-31",
        "commitResults": [
          {
            "hash": "1c3a5c9713e3fb83e5d28b99972617a15f342e3e",
            "messageTitle": "Packaging fixes:",
            "messageBody": "* update version string for docs\n* doc\u0027s conf.py was missing in sdist\n",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "ff6481cdee5a016afbef95f150cabf2e1ad15437",
            "messageTitle": "ignore build products",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          }
        ]
      }
    ],
    "Julien Cristau": [
      {
        "insertions": 22,
        "deletions": 8,
        "date": "2011-07-08",
        "commitResults": [
          {
            "hash": "075261c36809a9fbe05988d4e4763d9c43ed1b3b",
            "messageTitle": "Fix false positive in reimport check (closes #60828)",
            "messageBody": "",
            "insertions": 14,
            "deletions": 1
          },
          {
            "hash": "b2ee43cdb9a3324c27188939fbf8ed7b459dac77",
            "messageTitle": "Fix --ignore option documentation to match reality (closes #22273)",
            "messageBody": "The option can only be passed once, but it takes a list of file names.\n",
            "insertions": 8,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 4,
        "date": "2012-11-07",
        "commitResults": [
          {
            "hash": "0bac0704587e62e77d64d36d1220ee9edfec4bb2",
            "messageTitle": "Fix ChangeLog for 0.26.0",
            "messageBody": "",
            "insertions": 5,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 82,
        "deletions": 24,
        "date": "2013-06-18",
        "commitResults": [
          {
            "hash": "525550e9f4321d02a16cd5900bb2e1c3b597269e",
            "messageTitle": "test/utils: use codecs.open instead of plain open for python3 compat",
            "messageBody": "We don\u0027t really care about the encoding here, just want something that\nwon\u0027t explode on non-ascii.\n",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "97f9651bd70860cd7a772af277c57203506640f1",
            "messageTitle": "test: fix LintTestNonExistentModuleTC for python 3.3",
            "messageBody": "They changed the error message format.\n",
            "insertions": 6,
            "deletions": 1
          },
          {
            "hash": "274573504118325b0b08f42230af5914b5da548d",
            "messageTitle": "similar: make display py3k-compatible",
            "messageBody": "print without newline isn\u0027t converted correctly by 2to3.\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "3dd9ed7ee2259b7b76dec15b63723651e464af86",
            "messageTitle": "test: split func_excess_escapes",
            "messageBody": "Part of it is spethial in python3 (2to3 doesn\u0027t convert byte strings to\nbyte strings)\n",
            "insertions": 22,
            "deletions": 20
          },
          {
            "hash": "58e54832359fc6bb1581217a9a10e9d25076f524",
            "messageTitle": "python3 compat for check about dangerous default arguments",
            "messageBody": "The __builtin__ module was renamed as builtins.\n",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "b57b7b5907a75d88d13a573ad4964e8a6b437f6d",
            "messageTitle": "Ignore the test about deprecated map/filter and lambda for py3k",
            "messageBody": "Make deprecated_lambda python2-specific, and ignore the lack of reports\nwith that message on python3.\n",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "b94f649d4752f4558d82f6965cccef5eb4f64472",
            "messageTitle": "test: split w0623 tests in python2 and python3 versions",
            "messageBody": "python2 uses except foo, bar\npython3 uses except foo as bar\n\nMixing those is messy, so give up and make two separate versions.\n",
            "insertions": 30,
            "deletions": 0
          },
          {
            "hash": "b88c7937eb50b3ad7abe436a910cc8be0170291d",
            "messageTitle": "test: add python3 versions for some outputs",
            "messageBody": "- rewriting print \u0027foo\u0027 into print(\u0027foo\u0027) changes line length\n- unicode/str becomes str/bytes\n- __builtin__ becomes builtins\n- 2to3 rewrites \u0027import syntax_error\u0027 into \u0027from . import syntax_error\u0027,\n  which changes pylint\u0027s output\n",
            "insertions": 15,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 70,
        "deletions": 54,
        "date": "2013-06-19",
        "commitResults": [
          {
            "hash": "49e5fb8d85e7c7d756f48d11986e373911db2fab",
            "messageTitle": "Ignore W0121 for python3",
            "messageBody": "The old raise syntax doesn\u0027t exist anymore, so we can\u0027t warn about it.\n",
            "insertions": 5,
            "deletions": 1
          },
          {
            "hash": "0934446898f106994ce1af13bfc05b85da8eb19d",
            "messageTitle": "Adjust expected output on python3 for func_import_syntax_error",
            "messageBody": "The message was changed in e409e6012770.\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "41f3f4489723eea22eeeb38b6317cb5e3521a0dc",
            "messageTitle": "test: python3-specific output for func_newstyle_exceptions",
            "messageBody": "There\u0027s no \"raise Exception, args\" syntax anymore.\n",
            "insertions": 5,
            "deletions": 0
          },
          {
            "hash": "fdd8a05368733c01b5c6b17ffcd1b43f17c1c0d9",
            "messageTitle": "python3: deal with astroid\u0027s module.file_stream returning bytes",
            "messageBody": "Use tokenize.tokenize() which wants a byte stream.  Everywhere else,\ndecode as necessary.\n",
            "insertions": 22,
            "deletions": 13
          },
          {
            "hash": "c6ba5d0384a36961a8c9b59ab706d76f3c148263",
            "messageTitle": "[pkg] install tests and run 2to3 on them",
            "messageBody": "Don\u0027t run 2to3 on a file with syntax errors in it.\n",
            "insertions": 14,
            "deletions": 15
          },
          {
            "hash": "ebbfe151d5e3d39a70e07ecd31af3e69265c4c05",
            "messageTitle": "testutils: fix a comment to match the code and try to make things clearer",
            "messageBody": "test/messages/\u003cname\u003e_pyxy.txt is used for python x.y and later, not\nearlier versions.\n",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "9e189f10c417b01860d35c15c0bb2ab3247a8f5a",
            "messageTitle": "Use maxversion on a few messages",
            "messageBody": "- duplicate keyword arguments are a syntax error starting with 2.6\n- the builtin map and filter functions changed in 3.0\n- exec is no longer a statement in 3.0\n",
            "insertions": 7,
            "deletions": 13
          },
          {
            "hash": "73d2123dc3d085c58dedfcaab4b558ae2d02749e",
            "messageTitle": "similar: ignore UnicodeDecodeError",
            "messageBody": "If a file declares an encoding but isn\u0027t correctly encoded, we\u0027d crash.\nRegression from 3e896acee4df.\n",
            "insertions": 8,
            "deletions": 5
          },
          {
            "hash": "6482fd0b6d6bea4f3e91538393dfa822b33430cc",
            "messageTitle": "Mark unpacking-in-except as python2-specific",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "b6da6929b5fd7fdf158b2188f2e3181a1e5d5d2c",
            "messageTitle": "Ignore invalid-encoded-data on python3",
            "messageBody": "It became a syntax error.\n",
            "insertions": 2,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 8,
        "deletions": 6,
        "date": "2013-06-20",
        "commitResults": [
          {
            "hash": "59e370384002d90d38a1245f8bb1725600127311",
            "messageTitle": "test: make errors from test_errors_only more understandable",
            "messageBody": "\"True is not False\" considered unhelpful.\n",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "784ddd5828cc98aebdbaf797964ede6ad91cffe8",
            "messageTitle": "Handle new astroid With nodes",
            "messageBody": "\u0027expr\u0027 and \u0027vars\u0027 have been replaced by an \u0027items\u0027 list.\n",
            "insertions": 4,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 30,
        "deletions": 11,
        "date": "2013-07-17",
        "commitResults": [
          {
            "hash": "acffb398544bbe29c13d59f259e3a737f9ade426",
            "messageTitle": "Fix checking open() modes on python3",
            "messageBody": "open.__module__ is io, not __builtins__.\n",
            "insertions": 11,
            "deletions": 4
          },
          {
            "hash": "e732339766fbe0bb779ec951be881c8cf2982e3b",
            "messageTitle": "utils: allow specifying min and max relevant python versions for a message",
            "messageBody": "Some messages don\u0027t make sense for all python versions.  Allow that\ninformation to be recorded in the message declaration.\n",
            "insertions": 19,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 43,
        "deletions": 0,
        "date": "2013-07-18",
        "commitResults": [
          {
            "hash": "a78a7c8d78f4fa3211414ed8aeebd308ed8d0ad9",
            "messageTitle": "Check py3k keyword-only arguments",
            "messageBody": "Take them into account when matching call sites versus function\ndefinitions. Closes #107788\n",
            "insertions": 43,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2013-08-02",
        "commitResults": [
          {
            "hash": "f5368dabbdc87b29699c60aaf1feab74ce094f56",
            "messageTitle": "[pyreverse] use unicode instead of non-ascii str in Dot writer",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2015-06-30",
        "commitResults": [
          {
            "hash": "2898764f5b7656cedec0ac0a3caa2c76534115af",
            "messageTitle": "Stop using logilab.common.__pkginfo__",
            "messageBody": "We only need the version, and it\u0027s available directly in logilab.common.\nCloses issue #575\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Claudiu Popa": [
      {
        "insertions": 7,
        "deletions": 2,
        "date": "2013-07-16",
        "commitResults": [
          {
            "hash": "4b232b443b8ffbb64da21e95b340f12ad024620e",
            "messageTitle": "Fix false positive E1003 on Python 3 for argument-less super().",
            "messageBody": "",
            "insertions": 7,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 17,
        "deletions": 0,
        "date": "2013-07-17",
        "commitResults": [
          {
            "hash": "fe23d5e784c11646481fce40d161bcc578a572c5",
            "messageTitle": "Update tests and changelog.",
            "messageBody": "",
            "insertions": 17,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 36,
        "deletions": 1,
        "date": "2013-07-21",
        "commitResults": [
          {
            "hash": "dec0d2358e2192ae98bd5dfaf0a0e27c0f51c7d4",
            "messageTitle": "Add support for unbalanced tuple unpacking check.",
            "messageBody": "--HG--\nbranch : unpacking2\n",
            "insertions": 35,
            "deletions": 0
          },
          {
            "hash": "a42b81d5bda0235e51cff4cd5f7fe5172a1376a6",
            "messageTitle": "Prefer the symbolic message.",
            "messageBody": "--HG--\nbranch : unpacking2\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 62,
        "deletions": 18,
        "date": "2013-07-24",
        "commitResults": [
          {
            "hash": "e37df8656172f462962d294c5f1820146837d308",
            "messageTitle": "Add missing-super-argument message for argumentless super on Python 2.X.",
            "messageBody": "",
            "insertions": 12,
            "deletions": 3
          },
          {
            "hash": "6f61606449bed91a2fd91135fe94d36ba4d690b9",
            "messageTitle": "Prefer the symbolic name.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "4445a6e7940cd31b7318536687fbf831980bba74",
            "messageTitle": "Cleanup.",
            "messageBody": "",
            "insertions": 7,
            "deletions": 8
          },
          {
            "hash": "7eed380e31005a11ea64b6b8d08557b62463e9d8",
            "messageTitle": "Change test message.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "ffb47625100f024a949784068c3532b2b8d21e38",
            "messageTitle": "Add functional test for missing super argument message.",
            "messageBody": "",
            "insertions": 11,
            "deletions": 0
          },
          {
            "hash": "08fc2c167cdb4ff63fa1fe4d37274311017aeb1a",
            "messageTitle": "Use the symbolic name for test files.",
            "messageBody": "--HG--\nbranch : unpacking2\n",
            "insertions": 0,
            "deletions": 0
          },
          {
            "hash": "64bdad292032c2467ae4d117e78277121deb382d",
            "messageTitle": "Infer the value before using it, accept astroid.List as well.",
            "messageBody": "--HG--\nbranch : unpacking2\n",
            "insertions": 8,
            "deletions": 3
          },
          {
            "hash": "a81967baa63beac65fff228a02f64a8ccd3479e7",
            "messageTitle": "Add new test cases for unpacking in assignments.",
            "messageBody": "--HG--\nbranch : unpacking2\n",
            "insertions": 20,
            "deletions": 1
          },
          {
            "hash": "b6dfd8891ddca080f45522576067d5870fdad826",
            "messageTitle": "Prefer the symbolic name.",
            "messageBody": "--HG--\nbranch : unpacking2\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 27,
        "deletions": 11,
        "date": "2013-07-25",
        "commitResults": [
          {
            "hash": "3ce112b1558dff6b31d22ab21180f68744f8b686",
            "messageTitle": "Use super() instead of \u0027super class\u0027.",
            "messageBody": "",
            "insertions": 7,
            "deletions": 8
          },
          {
            "hash": "fcbbc7526dcb635d54f5f91c72e631708f7b22b3",
            "messageTitle": "Update changelog.",
            "messageBody": "--HG--\nbranch : unpacking2\n",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "4ae3e238d0d6c5b0b03999a0361e157066d20d82",
            "messageTitle": "Add test cases for good cases, check the targets before the inference.",
            "messageBody": "--HG--\nbranch : unpacking2\n",
            "insertions": 19,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 27,
        "deletions": 2,
        "date": "2013-07-27",
        "commitResults": [
          {
            "hash": "2e522292c303aaead2dde67389e7463ca6e33722",
            "messageTitle": "Check for builtin exec function for Python 3.",
            "messageBody": "--HG--\nbranch : exec\n",
            "insertions": 25,
            "deletions": 2
          },
          {
            "hash": "f6b404e2bc07d2c135feec5606b9a7cc281dbe8f",
            "messageTitle": "Update changelog.",
            "messageBody": "--HG--\nbranch : exec\n",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 76,
        "deletions": 24,
        "date": "2013-08-01",
        "commitResults": [
          {
            "hash": "bde549b9ddac6db4f2e2bef24da0ac04fb444670",
            "messageTitle": "Combine exec-function with exec-statement, rename test files.",
            "messageBody": "--HG--\nbranch : exec\n",
            "insertions": 15,
            "deletions": 21
          },
          {
            "hash": "dd59eb08ef22f4c8d3146530d5c8e86e44c0baae",
            "messageTitle": "Check for non-exception classes inside except clauses.",
            "messageBody": "--HG--\nbranch : catch\n",
            "insertions": 61,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 9,
        "deletions": 3,
        "date": "2013-08-02",
        "commitResults": [
          {
            "hash": "428de3cafee2a2874cccdbce50cca81a4220f67c",
            "messageTitle": "Update changelog and description message.",
            "messageBody": "--HG--\nbranch : exec\n",
            "insertions": 5,
            "deletions": 1
          },
          {
            "hash": "7bcdd99724814387318bf72d36cffef2eaf8e2fa",
            "messageTitle": "Proper conflict fix.",
            "messageBody": "--HG--\nbranch : exec\n",
            "insertions": 4,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 95,
        "deletions": 1,
        "date": "2013-08-08",
        "commitResults": [
          {
            "hash": "092c2c7caa25623d8140ca92d39f3c43b7aea2d5",
            "messageTitle": "Add check for non-iterator returned by __iter__.",
            "messageBody": "--HG--\nbranch : iter\n",
            "insertions": 92,
            "deletions": 1
          },
          {
            "hash": "17c1034fdaba32d3da67b782c401b683f3402f2d",
            "messageTitle": "Update changelog.",
            "messageBody": "--HG--\nbranch : iter\n",
            "insertions": 3,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 81,
        "deletions": 13,
        "date": "2013-08-25",
        "commitResults": [
          {
            "hash": "b1961a01f0d7eafdf9ec0ae0e7175274a600f8e0",
            "messageTitle": "Add new warning for unpacking non-sequences in assignment.",
            "messageBody": "--HG--\nbranch : non_unpackable\n",
            "insertions": 81,
            "deletions": 13
          }
        ]
      },
      {
        "insertions": 45,
        "deletions": 15,
        "date": "2013-08-28",
        "commitResults": [
          {
            "hash": "31869d16ec029563f62fda0ac215c523b95e6b5e",
            "messageTitle": "Make unpacking detection smarter by handling unpacking function calls.",
            "messageBody": "--HG--\nbranch : non_unpackable\n",
            "insertions": 45,
            "deletions": 15
          }
        ]
      },
      {
        "insertions": 65,
        "deletions": 43,
        "date": "2013-08-30",
        "commitResults": [
          {
            "hash": "a20ceed9479f3f14d0fe58f62aa9e2ce1ab84b07",
            "messageTitle": "Check only for next method.",
            "messageBody": "--HG--\nbranch : iter\n",
            "insertions": 6,
            "deletions": 7
          },
          {
            "hash": "3a9fb4659549830bde71788021c3867ee26e4905",
            "messageTitle": "Show the offending line for unpacking non sequences.",
            "messageBody": "--HG--\nbranch : non_unpackable\n",
            "insertions": 8,
            "deletions": 7
          },
          {
            "hash": "adf408990e5f96746b0e25617110a31dd227c8ce",
            "messageTitle": "Check all the infered nodes for both unbalanced-tuple-unpacking and unpacking-non-sequence.",
            "messageBody": "--HG--\nbranch : non_unpackable\n",
            "insertions": 43,
            "deletions": 23
          },
          {
            "hash": "38ecd54a5cc5ed90ef20c991781c9703e813c81c",
            "messageTitle": "Add more context informations regarding the unpacked sequence location.",
            "messageBody": "--HG--\nbranch : non_unpackable\n",
            "insertions": 8,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 27,
        "deletions": 23,
        "date": "2013-09-02",
        "commitResults": [
          {
            "hash": "df91f5749846cc312ec8582ef66e1bdd4a96f9e5",
            "messageTitle": "Use NEXT_METHOD globally.",
            "messageBody": "--HG--\nbranch : iter\n",
            "insertions": 5,
            "deletions": 6
          },
          {
            "hash": "13cd5c5e7527345ba9ce5bc0741c9f6a85eb3f78",
            "messageTitle": "Update Changelog.",
            "messageBody": "--HG--\nbranch : catch\n",
            "insertions": 3,
            "deletions": 2
          },
          {
            "hash": "8bfe36c3fc4dbd4f187148e0c40f785562d53a3d",
            "messageTitle": "Update non-iterator-returned message.",
            "messageBody": "--HG--\nbranch : iter\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "9fd967e5d42451b7a48f28499a747d728a182446",
            "messageTitle": "Update message.",
            "messageBody": "--HG--\nbranch : non_unpackable\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "21341cdfd8b65e3fa9dc81b1f301b30a2a08b1c3",
            "messageTitle": "Show the module information for unbalanced-tuple-unpacking and unpacking-non-sequence messages.",
            "messageBody": "--HG--\nbranch : non_unpackable\n",
            "insertions": 17,
            "deletions": 13
          }
        ]
      },
      {
        "insertions": 178,
        "deletions": 87,
        "date": "2013-09-03",
        "commitResults": [
          {
            "hash": "8cb9b3b0092329d4b43f30e0aafc055ade8f8fcf",
            "messageTitle": "Don\u0027t show the module if it is the same module.",
            "messageBody": "--HG--\nbranch : non_unpackable\n",
            "insertions": 25,
            "deletions": 15
          },
          {
            "hash": "cc5640b3b9e587dc03750bbb2ed59312d6588af1",
            "messageTitle": "Update tests for showing the module name for both unpacking-non-sequence and unbalanced-tuple-unpacking.",
            "messageBody": "--HG--\nbranch : non_unpackable\n",
            "insertions": 33,
            "deletions": 10
          },
          {
            "hash": "a75e274e6bb219d545dda582a5dd1574cbc8cbcf",
            "messageTitle": "Don\u0027t show the original lineno if the infered node has no lineno.",
            "messageBody": "--HG--\nbranch : non_unpackable\n",
            "insertions": 12,
            "deletions": 9
          },
          {
            "hash": "55c52a8bda8e98a90a9e6f8e76b5c51f2b3817c2",
            "messageTitle": "Add specific tests for Python 2 and 3.",
            "messageBody": "--HG--\nbranch : iter\n",
            "insertions": 56,
            "deletions": 1
          },
          {
            "hash": "034538cbd041778cf6db3c392de9d7a4cdeb8433",
            "messageTitle": "Fix eol.",
            "messageBody": "--HG--\nbranch : iter\n",
            "insertions": 52,
            "deletions": 52
          }
        ]
      },
      {
        "insertions": 43,
        "deletions": 33,
        "date": "2013-09-05",
        "commitResults": [
          {
            "hash": "ca66de9c52fcfbfab8b59da992354cb4cbeee57c",
            "messageTitle": "Fixing various tests for other platforms (Windows).",
            "messageBody": "--HG--\nbranch : tests\n",
            "insertions": 41,
            "deletions": 30
          },
          {
            "hash": "f2b700c0cb7a0845aaef2c4acf67fde9d5b2e16e",
            "messageTitle": "Write to the same fd.",
            "messageBody": "--HG--\nbranch : tests\n",
            "insertions": 2,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 0,
        "date": "2013-09-06",
        "commitResults": [
          {
            "hash": "a61de5957a074f632ad3476c0c719cfb32ae4f8f",
            "messageTitle": "Add comment regarding NamedTemporaryFile.",
            "messageBody": "--HG--\nbranch : tests\n",
            "insertions": 3,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 121,
        "deletions": 13,
        "date": "2013-09-22",
        "commitResults": [
          {
            "hash": "3fe1167e4891673c567c1f91133bb5ec280ab90d",
            "messageTitle": "Add basic checks for Python 3 format strings.",
            "messageBody": "--HG--\nbranch : format\n",
            "insertions": 118,
            "deletions": 12
          },
          {
            "hash": "9c39f4c9614e7d65d13df83845884f7e9d14d909",
            "messageTitle": "Update Changelog.",
            "messageBody": "--HG--\nbranch : format\n",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "f4298f58f7c15d862ab4faf3ca349e9b7e8982d7",
            "messageTitle": "Bug fix.",
            "messageBody": "--HG--\nbranch : format\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 29,
        "deletions": 0,
        "date": "2013-09-23",
        "commitResults": [
          {
            "hash": "1f77376a7ce59f287776fbe21e8442f4bb9eaf2a",
            "messageTitle": "Add tests for Python 3 string format checker.",
            "messageBody": "--HG--\nbranch : format\n",
            "insertions": 29,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 67,
        "deletions": 21,
        "date": "2013-09-25",
        "commitResults": [
          {
            "hash": "5ae31e97f712262d81af9c687dd989274e05d6f1",
            "messageTitle": "Proper merge.",
            "messageBody": "--HG--\nbranch : tests\n",
            "insertions": 35,
            "deletions": 17
          },
          {
            "hash": "2fa2745eba672e824e98e15b3de5925111b45d90",
            "messageTitle": "Add new string format checks.",
            "messageBody": "--HG--\nbranch : format\n",
            "insertions": 26,
            "deletions": 0
          },
          {
            "hash": "81201611aefa362e151bd66a9f18691f925e25c2",
            "messageTitle": "Proper handling of manual field specifiers.",
            "messageBody": "--HG--\nbranch : format\n",
            "insertions": 6,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 84,
        "deletions": 1,
        "date": "2013-09-26",
        "commitResults": [
          {
            "hash": "ad659add7fe07fd1d7e636bcc6f3ecef7652d5b8",
            "messageTitle": "Add bad-context-manager check for __exit__ special method.",
            "messageBody": "--HG--\nbranch : exit_context\n",
            "insertions": 70,
            "deletions": 0
          },
          {
            "hash": "235cf9fc6a780c9bcc4503d0e2327cffedf58153",
            "messageTitle": "Fix argument check for variable arguments.",
            "messageBody": "--HG--\nbranch : exit_context\n",
            "insertions": 13,
            "deletions": 1
          },
          {
            "hash": "24f71d83e25cae998bfe2f9e353186efd54f5b9e",
            "messageTitle": "Forgot message.",
            "messageBody": "--HG--\nbranch : exit_context\n",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 91,
        "deletions": 81,
        "date": "2013-10-03",
        "commitResults": [
          {
            "hash": "5887f1af50fc728bed36499642038190546860e0",
            "messageTitle": "Various changes to format checker.",
            "messageBody": "--HG--\nbranch : format\n",
            "insertions": 47,
            "deletions": 42
          },
          {
            "hash": "af98f6f80ce35b210b0d2d2c7b552b398a17e73e",
            "messageTitle": "Refactoring to allow the catching of InferenceErrors.",
            "messageBody": "--HG--\nbranch : non_unpackable\n",
            "insertions": 44,
            "deletions": 39
          }
        ]
      },
      {
        "insertions": 43,
        "deletions": 4,
        "date": "2013-10-08",
        "commitResults": [
          {
            "hash": "11d0df0f0142e4ef577ab63a2a325186ee3e6293",
            "messageTitle": "Allow get_argument_from_call to retrieve the first positional argument.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 3
          },
          {
            "hash": "d92464fe9d2631b43df521a7e86c1f5874d6eccd",
            "messageTitle": "Check that the argument passed to reversed() is a proper sequence.",
            "messageBody": "--HG--\nbranch : reversed\n",
            "insertions": 38,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 114,
        "deletions": 21,
        "date": "2013-10-10",
        "commitResults": [
          {
            "hash": "75d384187ff1bda6eb58d67e632ec6f061c9f142",
            "messageTitle": "Mappings aren\u0027t accepted by reversed().",
            "messageBody": "--HG--\nbranch : reversed\n",
            "insertions": 82,
            "deletions": 11
          },
          {
            "hash": "aa39ccf4b06765410d77e4bff31d8320b377efe3",
            "messageTitle": "Add ChangeLog entry.",
            "messageBody": "--HG--\nbranch : reversed\n",
            "insertions": 5,
            "deletions": 0
          },
          {
            "hash": "9178d03fa455460b3fdba1494f703cb1a716323f",
            "messageTitle": "Update message.",
            "messageBody": "--HG--\nbranch : reversed\n",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "cb0a3b535b22690cb03e43d844d9a196363b5221",
            "messageTitle": "Ignore deques (can\u0027t retrieve special methods).",
            "messageBody": "--HG--\nbranch : reversed\n",
            "insertions": 16,
            "deletions": 8
          },
          {
            "hash": "a9995264838ce795ade6138ca35118bb85674ce5",
            "messageTitle": "Handle iter builtin.",
            "messageBody": "--HG--\nbranch : reversed\n",
            "insertions": 9,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2013-12-19",
        "commitResults": [
          {
            "hash": "59d26bb55ef2e4a5be4968f5df1d6e34eec0542b",
            "messageTitle": "Partial merge with default.",
            "messageBody": "--HG--\nbranch : format\n",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "9fab3ae05bcfcfc5045b70b94bcceb009612c036",
            "messageTitle": "Hopefully merge fix.",
            "messageBody": "--HG--\nbranch : format\n",
            "insertions": 0,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 23,
        "deletions": 8,
        "date": "2013-12-23",
        "commitResults": [
          {
            "hash": "0fe5903cb1417c4bf6198b54ccde958077b4c842",
            "messageTitle": "Fix various issues with linesep for Windows",
            "messageBody": "--HG--\nbranch : fixes\n",
            "insertions": 23,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2013-12-26",
        "commitResults": [
          {
            "hash": "1c0da072956891302ce1cca51fb43bbc1486b55c",
            "messageTitle": "Fix typos in description messages",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 58,
        "deletions": 0,
        "date": "2013-12-27",
        "commitResults": [
          {
            "hash": "69b64e8a507803ad7d8aec211382cd3834a1e0f6",
            "messageTitle": "Enhance used-before-assignment check to look for nonlocal uses.",
            "messageBody": "--HG--\nbranch : nonlocal\n",
            "insertions": 58,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 49,
        "deletions": 2,
        "date": "2013-12-28",
        "commitResults": [
          {
            "hash": "2c3bbfa9da050e9b8bfd4cbaa97e16abde174637",
            "messageTitle": "Add bad-exception-context warning for checking that `raise ... from ...` sets a proper exception context.",
            "messageBody": "--HG--\nbranch : exception_context\n",
            "insertions": 49,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2013-12-30",
        "commitResults": [
          {
            "hash": "83bf32eb3d6ad2b186a0bef76fe36b7937b3fe42",
            "messageTitle": "Fix code-quality mail list links.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 47,
        "deletions": 8,
        "date": "2014-01-01",
        "commitResults": [
          {
            "hash": "70cbb6960e6d931bbe82d46a1148ab72b4856d02",
            "messageTitle": "Fix false positive for catching-non-exception, for C based exceptions.",
            "messageBody": "",
            "insertions": 45,
            "deletions": 6
          },
          {
            "hash": "490b9738ebb78ff42430cbe16ee63f1ef327adf6",
            "messageTitle": "Use `all` for a clearer intent",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 75,
        "deletions": 12,
        "date": "2014-01-03",
        "commitResults": [
          {
            "hash": "019ed5b19de2e0ad5712da26b0f384e0e0ee1e81",
            "messageTitle": "Add new test case for false positive prevention.",
            "messageBody": "--HG--\nbranch : exception_context\n",
            "insertions": 5,
            "deletions": 3
          },
          {
            "hash": "ae1a100f3c595bf8ddb403b7187191d24435e98c",
            "messageTitle": "Fix bitbucket #126, don\u0027t crash when encountering an AssAttr node in is_defined_before.",
            "messageBody": "",
            "insertions": 23,
            "deletions": 2
          },
          {
            "hash": "076f37198e42f5b97163fa24f0a92b073fa823ce",
            "messageTitle": "Add missing-submodule check for fixing issue #126.",
            "messageBody": "--HG--\nbranch : all_false_positive\n",
            "insertions": 47,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 26,
        "deletions": 17,
        "date": "2014-01-09",
        "commitResults": [
          {
            "hash": "5ea78f4408572c265d5d309c071a396cd9ec8081",
            "messageTitle": "Various fixes for #128",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "a84f20671f788e85152b1aca5e00e62dd1ad395f",
            "messageTitle": "Don\u0027t use deprecated pragma",
            "messageBody": "--HG--\nbranch : reversed\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "34c371d4090ce79fef5d230fe92500e8e3ce0935",
            "messageTitle": "Move ChangeLog entry upper.",
            "messageBody": "--HG--\nbranch : reversed\n",
            "insertions": 6,
            "deletions": 6
          },
          {
            "hash": "b39eaecfdfd4bbc7d131b5650089562d209ce9cf",
            "messageTitle": "Fix builtin module name for Python 3.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "d30328eb29b7ad4394400d015151a6c643ca83d9",
            "messageTitle": "Remove incomplete-protocol warning.",
            "messageBody": "--HG--\nbranch : reversed\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "0ecd23586b077b5fe7f6d0ec1ecce8c32828e5cd",
            "messageTitle": "Ignore non-inferable nodes, add test case for non-inferable nodes.",
            "messageBody": "--HG--\nbranch : reversed\n",
            "insertions": 16,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 16,
        "deletions": 15,
        "date": "2014-01-10",
        "commitResults": [
          {
            "hash": "c4d170fff2a7373c21fef5ffe77f0c0f27ecc847",
            "messageTitle": "Fix failed merge.",
            "messageBody": "--HG--\nbranch : exception_context\n",
            "insertions": 0,
            "deletions": 2
          },
          {
            "hash": "0ff37c708a22e1c4efcc5660b1a1673ac84feed7",
            "messageTitle": "Remove line.",
            "messageBody": "--HG--\nbranch : exception_context\n",
            "insertions": 0,
            "deletions": 1
          },
          {
            "hash": "8f54bfb6117d9d5dd21f038f0d819188ab9017f8",
            "messageTitle": "Improve tests by adding new test cases.",
            "messageBody": "--HG--\nbranch : exception_context\n",
            "insertions": 6,
            "deletions": 1
          },
          {
            "hash": "a06cb32f72146adfde342232f8c1d3a260685803",
            "messageTitle": "Refactor checks by infering first the cause of the exception.",
            "messageBody": "--HG--\nbranch : exception_context\n",
            "insertions": 10,
            "deletions": 11
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 0,
        "date": "2014-01-11",
        "commitResults": [
          {
            "hash": "ff1747dfbd65f35cbbed53928108f5f281249a01",
            "messageTitle": "Mark `file` as a bad function when using python 2, closes #8.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 9,
        "deletions": 34,
        "date": "2014-01-14",
        "commitResults": [
          {
            "hash": "83018d5bc4945c5e70c6eade771301082fd87e74",
            "messageTitle": "Simplify the lookup for nonlocals.",
            "messageBody": "--HG--\nbranch : nonlocal\n",
            "insertions": 8,
            "deletions": 32
          },
          {
            "hash": "e9034ef3e85a5b2c795b1a3ddaeedd29633ceed4",
            "messageTitle": "Remove obsolete test case (syntax error when using nonlocal without external binding).",
            "messageBody": "--HG--\nbranch : nonlocal\n",
            "insertions": 1,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 19,
        "deletions": 19,
        "date": "2014-01-18",
        "commitResults": [
          {
            "hash": "48814a564e51dae045fa100cd0ab1a5ca4d99f84",
            "messageTitle": "Remove missing-submodule, move test fixture inside test.",
            "messageBody": "--HG--\nbranch : all_false_positive\n",
            "insertions": 14,
            "deletions": 16
          },
          {
            "hash": "b6480921abd4b4763586d5bd3b324cb11c66046d",
            "messageTitle": "Use symbolic name.",
            "messageBody": "--HG--\nbranch : all_false_positive\n",
            "insertions": 5,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 24,
        "deletions": 13,
        "date": "2014-01-22",
        "commitResults": [
          {
            "hash": "f93257e84cfade2c3762f88766d2df0eb2b75b31",
            "messageTitle": "Fix tests for handling the fact that all style are newstyle classes in Python 3.",
            "messageBody": "",
            "insertions": 10,
            "deletions": 6
          },
          {
            "hash": "39a8e2b541d224dad3842ddc3bf5b672fab493e4",
            "messageTitle": "Simplify check and enhance tests.",
            "messageBody": "--HG--\nbranch : nonlocal\n",
            "insertions": 14,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2014-01-30",
        "commitResults": [
          {
            "hash": "f9c7c1d7e70abf62a8d457baf93f5e058f346849",
            "messageTitle": "Use file_from_modpath instead of load_module_from_name.",
            "messageBody": "--HG--\nbranch : all_false_positive\n",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 0,
        "date": "2014-02-04",
        "commitResults": [
          {
            "hash": "339368673346fc698bc2e2c45b3ea1e6702e391c",
            "messageTitle": "Add ChangeLog entry for issue #126.",
            "messageBody": "--HG--\nbranch : all_false_positive\n",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 89,
        "deletions": 1,
        "date": "2014-02-09",
        "commitResults": [
          {
            "hash": "f074f5682bbb6989bb0d026da816e57570d33033",
            "messageTitle": "Add abstract-class-instantiated warning.",
            "messageBody": "--HG--\nbranch : abc\n",
            "insertions": 89,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 82,
        "deletions": 3,
        "date": "2014-02-13",
        "commitResults": [
          {
            "hash": "f5fc6dd1ade3638e39cdd99b6289d720ca7e1f37",
            "messageTitle": "Use .next.",
            "messageBody": "--HG--\nbranch : abc\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "2ebaa97c29b67af6a46c112c84f18e71a82ffeac",
            "messageTitle": "Add ChangeLog entry.",
            "messageBody": "--HG--\nbranch : abc\n",
            "insertions": 4,
            "deletions": 0
          },
          {
            "hash": "34f1385718ff574a5e01e03c9987d2cd597d5faf",
            "messageTitle": "Add support for abc.ABC from Python 3.4.",
            "messageBody": "--HG--\nbranch : abc\n",
            "insertions": 77,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 11,
        "date": "2014-02-14",
        "commitResults": [
          {
            "hash": "9e1d73395ebf042d13e31140db6d74180051d177",
            "messageTitle": "Use qname(), remove useless check and add packaging info.",
            "messageBody": "--HG--\nbranch : abc\n",
            "insertions": 4,
            "deletions": 10
          },
          {
            "hash": "e0e128a3c305d00270ea00d27851fc0053f446a9",
            "messageTitle": "Update dependency.",
            "messageBody": "--HG--\nbranch : abc\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 19,
        "deletions": 14,
        "date": "2014-02-22",
        "commitResults": [
          {
            "hash": "b59fa8793736fcc01bd0c7a2526142a584a36570",
            "messageTitle": "Do not warn about returning values in generator for Python 3, it is valid syntax.",
            "messageBody": "",
            "insertions": 13,
            "deletions": 8
          },
          {
            "hash": "31a4fd4ff0965fd1b7590f6cdf6f7f3a03a5314e",
            "messageTitle": "Syntax only valid for Python 3.3+.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "450a8320034e725a682f1f6a4cec76421a85793c",
            "messageTitle": "Wrong maxversion used.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 75,
        "deletions": 2,
        "date": "2014-03-25",
        "commitResults": [
          {
            "hash": "ea845348504d77ef19872d6a2992ba968ccd7362",
            "messageTitle": "Add new warning \u0027eval-used\u0027.",
            "messageBody": "--HG--\nbranch : eval\n",
            "insertions": 29,
            "deletions": 1
          },
          {
            "hash": "f03a380c96c99df7e3699693e5674944c3474d67",
            "messageTitle": "Do not warn about \u0027abstract-method\u0027 when the abstract method is implemented through assignment. Closes #155.",
            "messageBody": "--HG--\nbranch : issue155\n",
            "insertions": 46,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 105,
        "deletions": 2,
        "date": "2014-03-31",
        "commitResults": [
          {
            "hash": "5151c2464c77539b7494df7a48c9c23a5fc2d456",
            "messageTitle": "Add new checks for proper class slots.",
            "messageBody": "--HG--\nbranch : slots\n",
            "insertions": 105,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 21,
        "deletions": 12,
        "date": "2014-04-01",
        "commitResults": [
          {
            "hash": "24f0fd96d4b73edc7ea373e1762c3fcc931eaa2e",
            "messageTitle": "Use the name of the class when issuing an E11003 warning and the class doesn\u0027t have a name, not the actual class.",
            "messageBody": "",
            "insertions": 21,
            "deletions": 12
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 6,
        "date": "2014-04-07",
        "commitResults": [
          {
            "hash": "fb35dbcf49e73f3a84e7534d139468894d298386",
            "messageTitle": "Remove the reference to ast.literal_eval from the error message.",
            "messageBody": "--HG--\nbranch : eval\n",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "04d26a60ed54277afcd9c4250e72863e7e611158",
            "messageTitle": "Remove the reference to ast.literal_eval from the error message.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 57,
        "deletions": 43,
        "date": "2014-04-09",
        "commitResults": [
          {
            "hash": "0a629717123ddb9c29ee78b89b5a2bfac09ac9bb",
            "messageTitle": "Verify all the infered slots, skip YES nodes from the values and other fixes.",
            "messageBody": "--HG--\nbranch : slots\n",
            "insertions": 53,
            "deletions": 40
          },
          {
            "hash": "7b62919ed7ceb1e8354b65d47dc2436b7a91f35f",
            "messageTitle": "Remove empty-slots-object, define tuple with methods at the global level.",
            "messageBody": "--HG--\nbranch : slots\n",
            "insertions": 3,
            "deletions": 2
          },
          {
            "hash": "af20a30e9547be41e728cdf4f68e3083120661be",
            "messageTitle": "Fix typo.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 31,
        "deletions": 18,
        "date": "2014-04-12",
        "commitResults": [
          {
            "hash": "1fb5f4424d4dba73ddf74d953e941ad803bee3d6",
            "messageTitle": "Use the infered name when accessing __all__ elements. Closes 188.",
            "messageBody": "",
            "insertions": 7,
            "deletions": 6
          },
          {
            "hash": "8bfd9edf77fe44f69126264104796b10a63872c4",
            "messageTitle": "Infer slots elements before attempting to validate them.",
            "messageBody": "",
            "insertions": 24,
            "deletions": 12
          }
        ]
      },
      {
        "insertions": 153,
        "deletions": 5,
        "date": "2014-04-14",
        "commitResults": [
          {
            "hash": "05bd8782da63e87c812a49ab8e90fb17e188bd75",
            "messageTitle": "Fix Python \u003c 2.7 compatibility.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "bd68cfbb868a32410745ae4617c4df97a42180a2",
            "messageTitle": "Fix tests for \u003c Python 2.7.",
            "messageBody": "",
            "insertions": 151,
            "deletions": 3
          },
          {
            "hash": "7b9ac998cfd52add3a9cc968d0c98606ceec9a08",
            "messageTitle": "Fix test for Python \u003c 2.7.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 106,
        "deletions": 13,
        "date": "2014-04-22",
        "commitResults": [
          {
            "hash": "27cd5dcc47492b660e4ae4ab476f46aab7714cdb",
            "messageTitle": "Fix a potential crash with super inference.",
            "messageBody": "",
            "insertions": 25,
            "deletions": 3
          },
          {
            "hash": "eceab4b1bad26bb25bbc95dfbaa0a3555e4c3d44",
            "messageTitle": "Extend the checking for unbalanced-tuple-unpacking and unpacking-non-sequence to instance attribute unpacking as well.",
            "messageBody": "",
            "insertions": 39,
            "deletions": 6
          },
          {
            "hash": "699e0be2223b1d949443cba3e448206cb0478405",
            "messageTitle": "Add \u0027indexing-exception\u0027 warning, which detects that indexing an exception occurs in Python 2 (behaviour removed in Python 3)",
            "messageBody": "--HG--\nbranch : indexing_exc\n",
            "insertions": 39,
            "deletions": 0
          },
          {
            "hash": "96567c0477c7e4e08b4bf98f88b763a756f61981",
            "messageTitle": "Fix name.",
            "messageBody": "--HG--\nbranch : indexing_exc\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "42d2dd86c0fc8033dabb5ce1a6b6e79d2ead5698",
            "messageTitle": "Fix the test file.",
            "messageBody": "--HG--\nbranch : indexing_exc\n",
            "insertions": 2,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 6,
        "date": "2014-04-25",
        "commitResults": [
          {
            "hash": "4df82fef95d6597746c235448b0e82fafe640152",
            "messageTitle": "Fix a potential AttributeError when checking for `reversed` arguments.",
            "messageBody": "",
            "insertions": 10,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 117,
        "deletions": 9,
        "date": "2014-05-02",
        "commitResults": [
          {
            "hash": "e8544f7766fdd137f39351f81814748822babe20",
            "messageTitle": "Fix unused-import false positive with Python 3 metaclasses. Closes issue #143.",
            "messageBody": "",
            "insertions": 45,
            "deletions": 0
          },
          {
            "hash": "e6077ffb4e8becd2cf33515a83cee01f482a7e3f",
            "messageTitle": "Emit \u0027undefined-variable\u0027 for undefined names used as metaclasses with Python 3 `metaclass\u003d` syntax.",
            "messageBody": "--HG--\nbranch : metaclass_undefined\n",
            "insertions": 72,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 30,
        "deletions": 22,
        "date": "2014-05-03",
        "commitResults": [
          {
            "hash": "633f5de1355b4a89665e483722d746b0b2b0bf35",
            "messageTitle": "Fix a false positive with classes without explictly defined metaclasses (inherited from ancestors).",
            "messageBody": "--HG--\nbranch : metaclass_undefined\n",
            "insertions": 30,
            "deletions": 22
          }
        ]
      },
      {
        "insertions": 20,
        "deletions": 5,
        "date": "2014-05-05",
        "commitResults": [
          {
            "hash": "189f6e02a2b6f723ed8daf73a05dd7fdd7441837",
            "messageTitle": "If the metaclass was infered properly, skip the undefined-variable check.",
            "messageBody": "--HG--\nbranch : metaclass_undefined\n",
            "insertions": 2,
            "deletions": 4
          },
          {
            "hash": "4a9d12d7a77472679a57a48cdfbc8bebc63a5099",
            "messageTitle": "Fix a potential AttributeError when checking for constructor arguments.",
            "messageBody": "--HG--\nbranch : issue234\n",
            "insertions": 18,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 3,
        "date": "2014-05-20",
        "commitResults": [
          {
            "hash": "7b28b71d231782f804605992c03aab20c832ae79",
            "messageTitle": "Document the fact that Pylint does not import modules. Closes issue #249.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 2,
        "date": "2014-05-27",
        "commitResults": [
          {
            "hash": "1d1855920f095debe1b8298a291d2bbcca27a3ca",
            "messageTitle": "Don\u0027t crash when sorting visible objects other than function nodes. Closes issue #252.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 33,
        "deletions": 32,
        "date": "2014-06-07",
        "commitResults": [
          {
            "hash": "0ae02d716b560383d8577b11b62f9f91c6f755a4",
            "messageTitle": "Drop Python 2.6 support, other minor fixes.",
            "messageBody": "--HG--\nbranch : format\n",
            "insertions": 33,
            "deletions": 32
          }
        ]
      },
      {
        "insertions": 275,
        "deletions": 110,
        "date": "2014-06-08",
        "commitResults": [
          {
            "hash": "cdbc98839f0d46742250e10ebec52bc3671d4ae7",
            "messageTitle": "Add support for checking attribute and key lookups in string formatting. Improve the string formatting tests.",
            "messageBody": "--HG--\nbranch : format\n",
            "insertions": 198,
            "deletions": 45
          },
          {
            "hash": "b2521b54c9cbd70e831e055bbcfafb281258cf2a",
            "messageTitle": "Make sure that split_format_field_names always returns ints instead of longs for Python 2.",
            "messageBody": "--HG--\nbranch : format\n",
            "insertions": 11,
            "deletions": 1
          },
          {
            "hash": "a36e968415c2ab1b27f9c1d1a0e7247ae10a9a73",
            "messageTitle": "Small fixes.",
            "messageBody": "--HG--\nbranch : format\n",
            "insertions": 41,
            "deletions": 46
          },
          {
            "hash": "7b4443f0d4c8aa3e0f4ee67cb68c8684ef8358d4",
            "messageTitle": "Add changelog entry and improve the tests.",
            "messageBody": "--HG--\nbranch : format\n",
            "insertions": 8,
            "deletions": 1
          },
          {
            "hash": "61f8e70620e9cd541d1cee3601af9baebbf91288",
            "messageTitle": "Change message ids.",
            "messageBody": "--HG--\nbranch : format\n",
            "insertions": 6,
            "deletions": 6
          },
          {
            "hash": "b50eac44264c94c712ddc75042dceced3f29f60b",
            "messageTitle": "Fix expected output.",
            "messageBody": "--HG--\nbranch : format\n",
            "insertions": 11,
            "deletions": 11
          }
        ]
      },
      {
        "insertions": 31,
        "deletions": 22,
        "date": "2014-06-13",
        "commitResults": [
          {
            "hash": "ecce9f09635fee748f8cde03881bd8a94387a380",
            "messageTitle": "Skip YES arguments, add a few test cases.",
            "messageBody": "--HG--\nbranch : format\n",
            "insertions": 31,
            "deletions": 22
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 2,
        "date": "2014-06-14",
        "commitResults": [
          {
            "hash": "ce59ae3d38a125b2d1effccff2bc29dbd1b0c96e",
            "messageTitle": "Move the filtering of YES nodes at the beginning of while block.",
            "messageBody": "--HG--\nbranch : format\n",
            "insertions": 3,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 38,
        "deletions": 28,
        "date": "2014-06-15",
        "commitResults": [
          {
            "hash": "03f650337bceb4567f7cc75657711f13367c1f74",
            "messageTitle": "Skip uninferable nodes when looking for bad exception contexts",
            "messageBody": "",
            "insertions": 5,
            "deletions": 2
          },
          {
            "hash": "96b91a84ce72057078b336de3aba3bcf7fadad7b",
            "messageTitle": "Filter YES arguments.",
            "messageBody": "--HG--\nbranch : format\n",
            "insertions": 26,
            "deletions": 24
          },
          {
            "hash": "d1ca86f23973c024ec0f464a1eaacc8c731cfe37",
            "messageTitle": "Fix a potential crash for accessors like \"{0.missing}\".",
            "messageBody": "--HG--\nbranch : format\n",
            "insertions": 4,
            "deletions": 2
          },
          {
            "hash": "38c5e245100bfb4c330debdb97eb507d347f3970",
            "messageTitle": "Filter out non-const nodes.",
            "messageBody": "--HG--\nbranch : format\n",
            "insertions": 3,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 33,
        "deletions": 4,
        "date": "2014-06-16",
        "commitResults": [
          {
            "hash": "25342c93d1912c5b2176218ca30b9d0f3895f675",
            "messageTitle": "Skip nodes with starargs or kwargs for now.",
            "messageBody": "--HG--\nbranch : format\n",
            "insertions": 8,
            "deletions": 1
          },
          {
            "hash": "ab2e95b3d0fafbeaccb4fa9f4ab74f12ca0f0f97",
            "messageTitle": "Don\u0027t warn with \u0027bad-format-character\u0027 when encountering the \u0027a\u0027 format on Python 3.",
            "messageBody": "",
            "insertions": 25,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 8,
        "date": "2014-06-23",
        "commitResults": [
          {
            "hash": "203c382047eca8088e79cf381aa02b1a7d3d9250",
            "messageTitle": "No need for a deque here.",
            "messageBody": "--HG--\nbranch : format\n",
            "insertions": 3,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 83,
        "deletions": 74,
        "date": "2014-06-26",
        "commitResults": [
          {
            "hash": "dc17a9fa35fa24bd3599daf2c03c8c184742fae5",
            "messageTitle": "Separate the good cases from the bad cases, improve the messages.",
            "messageBody": "--HG--\nbranch : format\n",
            "insertions": 75,
            "deletions": 65
          },
          {
            "hash": "3f0420a91055786253cdf9fd3e37465ed12da444",
            "messageTitle": "Reorder a check for better coherence, fix a couple of docstrings.",
            "messageBody": "--HG--\nbranch : format\n",
            "insertions": 8,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 23,
        "deletions": 9,
        "date": "2014-06-27",
        "commitResults": [
          {
            "hash": "20e9c849770aa0ad1e88e9fcb2a56aca234853da",
            "messageTitle": "Issue broad-except and bare-except even if the number of except handlers is different than 1. Closes issue #113.",
            "messageBody": "--HG--\nbranch : bare_except\n",
            "insertions": 21,
            "deletions": 7
          },
          {
            "hash": "2b54fa5a2ecf8b0951cc51f910ea7669ed722211",
            "messageTitle": "Fix test failures on Python 2.",
            "messageBody": "--HG--\nbranch : bare_except\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "d2430658733778df4c5a9d6841ea06b615d9193c",
            "messageTitle": "Disable another warning.",
            "messageBody": "--HG--\nbranch : bare_except\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 37,
        "deletions": 22,
        "date": "2014-07-01",
        "commitResults": [
          {
            "hash": "9a111804bb95fb92d7c00c529e97325b999c81e5",
            "messageTitle": "Emit attribute-defined-outside-init for all cases, not just for the last assignment. Closes issue #262.",
            "messageBody": "",
            "insertions": 36,
            "deletions": 21
          },
          {
            "hash": "afc3ddde20416b0ad7278ff8e18a9aea785e4951",
            "messageTitle": "Remove trailing whitespace.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 134,
        "deletions": 25,
        "date": "2014-07-02",
        "commitResults": [
          {
            "hash": "979538efc98dff78304fcabe7f4c9d3eb8667660",
            "messageTitle": "Emit \u0027not-callable\u0027 when calling properties. Closes issue #268.",
            "messageBody": "",
            "insertions": 112,
            "deletions": 3
          },
          {
            "hash": "fa9edaeccc6d156b7a80fa685da3704524e78073",
            "messageTitle": "Fix test issues.",
            "messageBody": "",
            "insertions": 22,
            "deletions": 22
          }
        ]
      },
      {
        "insertions": 26,
        "deletions": 5,
        "date": "2014-07-08",
        "commitResults": [
          {
            "hash": "d0a90947d390f327b3af40bf4c16a059d3e72cba",
            "messageTitle": "Fix a false positive with unbalanced iterable unpacking, when encountering starred nodes. Closes issue #273.",
            "messageBody": "",
            "insertions": 22,
            "deletions": 4
          },
          {
            "hash": "ae998e73b43075dac6e27fffbde78d1460bfd206",
            "messageTitle": "Give credit to recent contributor. Also, fix the news entry from the ChangeLog.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 96,
        "deletions": 2,
        "date": "2014-07-10",
        "commitResults": [
          {
            "hash": "3999499aa16882b33bdc1241edda1eb804065e73",
            "messageTitle": "Add \u0027assigning-non-slot\u0027 warning, which detects assignments to attributes not defined in slots.",
            "messageBody": "",
            "insertions": 95,
            "deletions": 1
          },
          {
            "hash": "254ef6ad7b945ce4433093cedc5d9d78b948cbb4",
            "messageTitle": "Fix test for Python 2.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 47,
        "deletions": 2,
        "date": "2014-07-12",
        "commitResults": [
          {
            "hash": "d721022c01ecffe50c56e44ade4b61824a501af0",
            "messageTitle": "Don\u0027t emit \u0027no-name-in-module\u0027 for ignored modules. Closes issue #223.",
            "messageBody": "",
            "insertions": 47,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 67,
        "deletions": 4,
        "date": "2014-07-17",
        "commitResults": [
          {
            "hash": "c86bb1242589d2c3c7c09ab1f195b5076078fdb3",
            "messageTitle": "Fix an \u0027unused-variable\u0027 false positive, where the variable is assigned through an import. Closes issue #196.",
            "messageBody": "",
            "insertions": 67,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 134,
        "deletions": 4,
        "date": "2014-07-21",
        "commitResults": [
          {
            "hash": "a1e2da92f89281253ffb253dd99de902886fba71",
            "messageTitle": "Definition order is considered for classes, function arguments and annotations. Closes issue #257.",
            "messageBody": "",
            "insertions": 134,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 27,
        "deletions": 5,
        "date": "2014-07-23",
        "commitResults": [
          {
            "hash": "346eec6916d01324a9a4aa2d0083c0412b01d9d1",
            "messageTitle": "Don\u0027t use set comprehension.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "6c6a8364384049586ea9fd0820c59f48dde19193",
            "messageTitle": "Remove check_messages,  so that leave_module can be called if \u0027undefined-variable\u0027 is disabled.",
            "messageBody": "--HG--\nbranch : metaclass_undefined\n",
            "insertions": 0,
            "deletions": 1
          },
          {
            "hash": "a9708d154fca8260a33c8e70112505907723a117",
            "messageTitle": "Don\u0027t emit \u0027unused-variable\u0027 when assigning to a nonlocal. Closes issue #275.",
            "messageBody": "",
            "insertions": 23,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 70,
        "deletions": 15,
        "date": "2014-07-24",
        "commitResults": [
          {
            "hash": "d2e3b8acc1d28395d1646f1ff426da50949e8a0e",
            "messageTitle": "Restore compatibility with Python 2.6.",
            "messageBody": "",
            "insertions": 12,
            "deletions": 6
          },
          {
            "hash": "04419e9e82511d2a90bf7dbb782a4d253fc302ed",
            "messageTitle": "Don\u0027t emit \u0027pointless-string-statement\u0027 for attribute docstrings. Closes issue #193.",
            "messageBody": "",
            "insertions": 49,
            "deletions": 4
          },
          {
            "hash": "1a9e5cc3a8528d9871127025f5b9b24865689009",
            "messageTitle": "Update test message.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "e255485961b340957dd6959573fb0e0e8b259942",
            "messageTitle": "Use the proper mode for pickle when opening and writing the stats file. Closes issue #148.",
            "messageBody": "",
            "insertions": 7,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 201,
        "deletions": 153,
        "date": "2014-07-25",
        "commitResults": [
          {
            "hash": "6bf4fbfef81daa10dc7ade3a60b4f7bab898c892",
            "messageTitle": "Fix a couple of issues in typecheck.py.",
            "messageBody": "",
            "insertions": 21,
            "deletions": 15
          },
          {
            "hash": "850f30d98db0e085545480fcf8dc30f2afb6be04",
            "messageTitle": "Don\u0027t emit \u0027unnecessary-lambda\u0027 if the body of the lambda call contains call chaining. Closes issue #243.",
            "messageBody": "",
            "insertions": 69,
            "deletions": 52
          },
          {
            "hash": "aa2d6c8df5591b7572b7c346c7cbd931ce8ef9f0",
            "messageTitle": "W0108 was ported.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "7a132f0e8056f8743e5b91445a190f9c1774cacc",
            "messageTitle": "Don\u0027t emit \u0027missing-docstring\u0027 when the actual docstring uses `.format`. Closes issue #281.",
            "messageBody": "",
            "insertions": 106,
            "deletions": 81
          },
          {
            "hash": "1d2b8844068074adf8588b93bb4e48066ed11e77",
            "messageTitle": "empty-docstring is now on the new test framework.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "596cf49755ea7a39c635f3fc0ba37a5523e405ba",
            "messageTitle": "Restore Python 2 compat.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 3,
        "date": "2014-07-26",
        "commitResults": [
          {
            "hash": "4a2b946dc2e93536edb8f3c60d48918c81389cde",
            "messageTitle": "Bump version.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "60c04ccceb83e81969bbabfad1c77667269942f1",
            "messageTitle": "Added tag pylint-1.3 for changeset c4108f2d1643",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 110,
        "deletions": 38,
        "date": "2014-07-29",
        "commitResults": [
          {
            "hash": "78ed1eb83bb75ea1582d69b0b3bb0ba9cadfdbe3",
            "messageTitle": "Fix a false positive with string formatting checker, when encountering a string which uses only position-based arguments. Closes issue #285.",
            "messageBody": "",
            "insertions": 22,
            "deletions": 10
          },
          {
            "hash": "562911b3f771acda675c123524c0d8840999c3dc",
            "messageTitle": "Fix a false positive with string formatting checker, when using keyword argument packing. Closes issue #288.",
            "messageBody": "",
            "insertions": 22,
            "deletions": 5
          },
          {
            "hash": "4fb9c4a7e4ca3821f442dfa863bc545d269c42a5",
            "messageTitle": "Fix dependencies on astroid.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "05b526d58a9b210a54ea2755eaf5104f74039e5b",
            "messageTitle": "Proper handle class level scope for lambdas.",
            "messageBody": "",
            "insertions": 64,
            "deletions": 21
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 2,
        "date": "2014-07-30",
        "commitResults": [
          {
            "hash": "6153e9fdb1d0fcf9464955636aecb3fa46403ce0",
            "messageTitle": "Remove extraneous print. The import exception is already handled by another checker.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 2
          },
          {
            "hash": "a56b2ad6f5ec3e2d943d4ca247b8a8c3f16b9347",
            "messageTitle": "Give credit to new contributor.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 165,
        "deletions": 116,
        "date": "2014-07-31",
        "commitResults": [
          {
            "hash": "a840d303c61e4e48eeac29ad00b7ef88f9bd781a",
            "messageTitle": "Handle \u0027too-few-format-args\u0027 or \u0027too-many-format-args\u0027 for format strings with both named and positional fields. Closes issue #286.",
            "messageBody": "",
            "insertions": 145,
            "deletions": 116
          },
          {
            "hash": "fef230b80e8ab0c5d27eb9e99752af5143b81fff",
            "messageTitle": "Analyze only strings by the string format checker. Closes issue #287.",
            "messageBody": "",
            "insertions": 20,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 0,
        "date": "2014-08-03",
        "commitResults": [
          {
            "hash": "524d5201b56f0ca2ef09e75d3619f29582454d71",
            "messageTitle": "Give credit to new contributor.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 120,
        "deletions": 22,
        "date": "2014-08-04",
        "commitResults": [
          {
            "hash": "4c1e41f4c9e65e12ceacb2fd2312e346312695ae",
            "messageTitle": "Properly handle nested format string fields. Closes issue #294.",
            "messageBody": "",
            "insertions": 51,
            "deletions": 21
          },
          {
            "hash": "2dc422206527bbf1f0eedce00f5a0b18a5fdc8e5",
            "messageTitle": "Don\u0027t emit \u0027attribute-defined-outside-init\u0027 if the attribute was set by a function call in a defining method. Closes issue #192.",
            "messageBody": "",
            "insertions": 69,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 61,
        "deletions": 15,
        "date": "2014-08-05",
        "commitResults": [
          {
            "hash": "0fa190d6e6087c11e3c70920037726761bb4a5e2",
            "messageTitle": "Minor cleanup.",
            "messageBody": "",
            "insertions": 8,
            "deletions": 9
          },
          {
            "hash": "69a88422c2f483dd4396efcf12c7bb3c63ab59a0",
            "messageTitle": "Properly handle unicode format strings for Python 2. Closes issue #296.",
            "messageBody": "",
            "insertions": 53,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 156,
        "deletions": 83,
        "date": "2014-08-08",
        "commitResults": [
          {
            "hash": "4babad536adf5e7579d8954c97c3ca2260387e2a",
            "messageTitle": "Move inherit_from_std_ex to checkers/utils.py, so that it can be used in other checkers as well.",
            "messageBody": "",
            "insertions": 20,
            "deletions": 18
          },
          {
            "hash": "96331ee58038689b8c0f967e27bd82036a5d7961",
            "messageTitle": "Cleanup.",
            "messageBody": "",
            "insertions": 14,
            "deletions": 11
          },
          {
            "hash": "97a109e3933fd6ad93c4687b8efe2aa163a9ac2f",
            "messageTitle": "Cleanup.",
            "messageBody": "",
            "insertions": 50,
            "deletions": 32
          },
          {
            "hash": "53a4acefc2b69352e44f648878a3bfdea58be234",
            "messageTitle": "Cleanup.",
            "messageBody": "",
            "insertions": 14,
            "deletions": 9
          },
          {
            "hash": "91b1ceb27e85c34605ce0fac629856551dad816f",
            "messageTitle": "Revert change.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "bda48ef920d6c481aaaedcdefc8e617afb22d0bb",
            "messageTitle": "Don\u0027t emit \u0027import-error\u0027 if an import was protected by a try-except, which excepted ImportError.",
            "messageBody": "",
            "insertions": 55,
            "deletions": 8
          },
          {
            "hash": "18f67ca80f257c5d9edf8fc181934a3d9ed7476b",
            "messageTitle": "Check only if the infered node is a class.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 108,
        "deletions": 30,
        "date": "2014-08-09",
        "commitResults": [
          {
            "hash": "3d35ce6874ff5c44e347ee7c69d75fb456fa4c04",
            "messageTitle": "Fix an \u0027unused-import\u0027 false positive, when the error was emitted for all the members imported with \u0027from import\u0027 form. Closes issue #304.",
            "messageBody": "",
            "insertions": 19,
            "deletions": 7
          },
          {
            "hash": "88f8decb89cc829a38f7533cdba958f7406f253b",
            "messageTitle": "Don\u0027t emit \u0027invalid-name\u0027 when assigning a name in an ImportError handler. Closes issue #302.",
            "messageBody": "",
            "insertions": 89,
            "deletions": 23
          }
        ]
      },
      {
        "insertions": 131,
        "deletions": 28,
        "date": "2014-08-11",
        "commitResults": [
          {
            "hash": "6b40825fab6606b0a7e5073c0c042cc303664a23",
            "messageTitle": "Don\u0027t count branches from nested functions.",
            "messageBody": "",
            "insertions": 84,
            "deletions": 16
          },
          {
            "hash": "e6b31b9bfa8caaaf39e0b45a8c148aa012ccc56c",
            "messageTitle": "Fix a false positive with \u0027too-few-format-args\u0027, when the format strings contains duplicate manual position arguments. Closes issue #310.",
            "messageBody": "",
            "insertions": 13,
            "deletions": 3
          },
          {
            "hash": "d3753607dd6be1073feda038e3f2f3e99feb7f39",
            "messageTitle": "fixme regex handles comments without spaces after the hash. Closes issue #311.",
            "messageBody": "",
            "insertions": 7,
            "deletions": 2
          },
          {
            "hash": "383df7317eb572747867e10ecff6371954fee1c0",
            "messageTitle": "Don\u0027t emit \u0027unused-import\u0027 when a special object is imported (__all__, __doc__ etc.). Closes issue #309.",
            "messageBody": "",
            "insertions": 27,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 156,
        "deletions": 37,
        "date": "2014-08-14",
        "commitResults": [
          {
            "hash": "b34088212c587e5084f19afbe03df603d1d793c8",
            "messageTitle": "Look in the metaclass, if defined, for members not found in the current class. Closes issue #306.",
            "messageBody": "",
            "insertions": 74,
            "deletions": 36
          },
          {
            "hash": "3e9d297e5a37f5f6a70d38d66b2a451d879dadae",
            "messageTitle": "Split class_members test for both Python versions.",
            "messageBody": "",
            "insertions": 60,
            "deletions": 0
          },
          {
            "hash": "5d1e6a905be0a10a3fc6a3da4543760881a17773",
            "messageTitle": "Don\u0027t emit \u0027protected-access\u0027 if the attribute is accessed using a property defined at the class level.",
            "messageBody": "",
            "insertions": 22,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 29,
        "deletions": 0,
        "date": "2014-08-16",
        "commitResults": [
          {
            "hash": "c128caf82bb0b64d8bfaa16ff287eb7af5119c45",
            "messageTitle": "Detect calls of the parent\u0027s __init__, through a binded super() call.",
            "messageBody": "",
            "insertions": 29,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 35,
        "deletions": 10,
        "date": "2014-08-17",
        "commitResults": [
          {
            "hash": "0abb4247217ebb87681c50094a01bd8bf1e22d41",
            "messageTitle": "Check that a class has an explicitly defined metaclass before emitting \u0027old-style-class\u0027 for Python 2.",
            "messageBody": "This can catch metaclasses defined at module level, using `__metaclass__ \u003d ...` syntax, which transforms all old style classes to newstyle.\nAlso, look for the .newstyle attribute instead of bases.\n",
            "insertions": 30,
            "deletions": 6
          },
          {
            "hash": "ddc992fe5b9c24ed67b94e0b33b0468746eccee2",
            "messageTitle": "Fix test failures.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 119,
        "deletions": 24,
        "date": "2014-08-18",
        "commitResults": [
          {
            "hash": "851877c14f8f2ac7ffee835f967481cab62aa599",
            "messageTitle": "Revert change from 3b748b4: emit old-style-classes only for classes without bases and without explicitly defined metaclasses.",
            "messageBody": "",
            "insertions": 10,
            "deletions": 10
          },
          {
            "hash": "7ec2a5b3f00c6eec03ea25f9e8f2c08d2f705e2a",
            "messageTitle": "Emit \u0027catching-non-exception\u0027 for non-class nodes. Closes issue #303.",
            "messageBody": "",
            "insertions": 80,
            "deletions": 6
          },
          {
            "hash": "1e843582045ac130e22d2d92a33f109465b7bd63",
            "messageTitle": "Add debug code for drone.io.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "419ac5f511d96f4a21f68d372e619b1a36550201",
            "messageTitle": "Add debug code for drone.io.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "3778804f763ce2858cb531d2e0efc60bdc3d0735",
            "messageTitle": "Uh, drone.io.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "71114dac1a72f8ec1a568c54b2db2a2894871beb",
            "messageTitle": "Debug.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "2ea2bd1c0ede817487f4ae63bd01779435ede37f",
            "messageTitle": "Backed out changeset ff26eefc7e0c",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "b7c60071c096e514c205ac768002f0b997d5472b",
            "messageTitle": "Backout changeset.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "c5e53814053cb7495fb3fdf005b34d44575ad724",
            "messageTitle": "Backout changeset.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          },
          {
            "hash": "ec6f95da424cbcb38e2ca76bec010050f9f4f697",
            "messageTitle": "Unproxy the infered instances.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "15c0bda823c8179cc77955a6072d20141238c7b9",
            "messageTitle": "Check if the instance inherits from a standard exception before unproxying.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "4464df0723ce8eac57ca8ac7be42ec832445dec9",
            "messageTitle": "Order of reporting is consistent.",
            "messageBody": "",
            "insertions": 18,
            "deletions": 1
          },
          {
            "hash": "d7e8af6708e3936dbb7a9ac16b55a11f5ccf2fed",
            "messageTitle": "Add the current reporter only if it was removed.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 100,
        "deletions": 19,
        "date": "2014-08-19",
        "commitResults": [
          {
            "hash": "7024980e61e663d882ca440880d8adc2f101f0a1",
            "messageTitle": "Cleanup the API, by providing a new report_order method to ReportsHandlerMixIn, which is overriden by PyLinter for consistent output.",
            "messageBody": "",
            "insertions": 19,
            "deletions": 17
          },
          {
            "hash": "d8a963c3a783ab6117147b9e5d6832639533884b",
            "messageTitle": "Add a new warning, \u0027boolean-datetime\u0027, emitted when an instance of \u0027datetime.time\u0027 is used in a boolean context. Closes issue #239.",
            "messageBody": "",
            "insertions": 78,
            "deletions": 0
          },
          {
            "hash": "c3529bb59c41c7a9a9992e03a6b6db1b53a64c65",
            "messageTitle": "Ignore superfluous-parens.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "13fa29e012876b99816ba2b3de44032445ba25e8",
            "messageTitle": "Set the maxversion to 3.5 for boolean-datetime.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 25,
        "deletions": 3,
        "date": "2014-08-23",
        "commitResults": [
          {
            "hash": "0828e544877cb3b3670a67162476ed45e6fac066",
            "messageTitle": "Fix a crash which ocurred while checking for \u0027method-hidden\u0027, when the parent frame was something different than a function.",
            "messageBody": "",
            "insertions": 23,
            "deletions": 1
          },
          {
            "hash": "79d7c24b0a89911a72772140945e77f13f70b2f4",
            "messageTitle": "Avoid old-style-class for Python 2.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "a4e01c5786310c914bfa2b560280094eea253cb8",
            "messageTitle": "Rename test files.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 33,
        "deletions": 30,
        "date": "2014-08-24",
        "commitResults": [
          {
            "hash": "a063dbca4ca5822e068f7876c7f81b4fb12b4224",
            "messageTitle": "Move fix code into a separate private function, _fix_dot_import.",
            "messageBody": "",
            "insertions": 33,
            "deletions": 30
          }
        ]
      },
      {
        "insertions": 17,
        "deletions": 1,
        "date": "2014-08-25",
        "commitResults": [
          {
            "hash": "50cb882d9b81dbca61a00e019bfda1c04a5bcc4f",
            "messageTitle": "Generate html output for missing files. Closes issue #320.",
            "messageBody": "",
            "insertions": 17,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 16,
        "deletions": 8,
        "date": "2014-08-27",
        "commitResults": [
          {
            "hash": "41bd5fd5d79925b41e72add687ede9a065f6de10",
            "messageTitle": "Fix a false positive with \u0027too-many-format-args\u0027, when the format string contains mixed attribute access arguments and manual fields. Closes issue #322.",
            "messageBody": "",
            "insertions": 16,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 91,
        "deletions": 5,
        "date": "2014-09-03",
        "commitResults": [
          {
            "hash": "6037ef699f802301d0c36ac04a06f1fc5f59849f",
            "messageTitle": "Extend the cases where \u0027undefined-variable\u0027 and \u0027used-before-assignment\u0027 can be detected. Closes issue #291.",
            "messageBody": "",
            "insertions": 89,
            "deletions": 5
          },
          {
            "hash": "e260dbeb43a7a086c987a915cb86ff9a898df373",
            "messageTitle": "Disable test for Python 2.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 60,
        "deletions": 4,
        "date": "2014-09-10",
        "commitResults": [
          {
            "hash": "070b430bc16ef183158548ff4237444112dc1fed",
            "messageTitle": "Allow the customisation of callback identifiers. Closes issue #326.",
            "messageBody": "",
            "insertions": 56,
            "deletions": 3
          },
          {
            "hash": "f06bc4471171eac5698e478f1839557fb616a63d",
            "messageTitle": "Improve the ChangeLog entry for the new \u0027--callbacks\u0027 command line option.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "8b20ef84809556a19e32314efdd53a5f31754ed5",
            "messageTitle": "Give credit to new contributor.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 17,
        "deletions": 0,
        "date": "2014-09-11",
        "commitResults": [
          {
            "hash": "0f35d10d1c629a6bc029bcfb31f903c6c9beafbe",
            "messageTitle": "Don\u0027t emit \u0027unbalanced-tuple-unpacking\u0027 when the rhs of the assignment is a variable length argument. Closes issue #329.",
            "messageBody": "",
            "insertions": 17,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 112,
        "deletions": 15,
        "date": "2014-09-12",
        "commitResults": [
          {
            "hash": "d28d06dd0c265f761e15446f9d92b5bb86e62d1e",
            "messageTitle": "Shorten a long line.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "d3f11d51f150ea7f305b39473c746f6ad05cbab8",
            "messageTitle": "Use safe_infer in has_known_bases.",
            "messageBody": "Using safe_infer simplifies the code, by removing the need for\ncatching InferenceError and at the same time, increases the level\nof confidence, because ``next(base.infer())`` does not take in account\nthe fact that a base can be infered to multiple results.\n",
            "insertions": 8,
            "deletions": 12
          },
          {
            "hash": "4d6d6598a16969931767d241eb867d19bc3e667e",
            "messageTitle": "Set maxDiff to None for LintModuleTest.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "0298d31f8c7f962b6e9d9817c23078d2634d63ca",
            "messageTitle": "Add a new warning, \u0027inherit-non-class\u0027, emitted when a class inherits from something which is not a class. Closes issue #331",
            "messageBody": "",
            "insertions": 97,
            "deletions": 2
          },
          {
            "hash": "d5132918742c75732f027d79bbab140d098202c3",
            "messageTitle": "Add Brett Cannon to CONTRIBUTORS.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 103,
        "deletions": 54,
        "date": "2014-09-16",
        "commitResults": [
          {
            "hash": "55815119ab0fb84d295f2d7852c2fbee7b6d3d89",
            "messageTitle": "Add test for issue #338.",
            "messageBody": "The problem was fixed in astroid, with changeset 2359964.\n",
            "insertions": 16,
            "deletions": 0
          },
          {
            "hash": "32ef7ac41aa42951f801e5fa101d038a9a687e54",
            "messageTitle": "Add some style fixes.",
            "messageBody": "Shorten a couple of long lines and keep a consistency regarding the comments.\nComments can now be read as plain english, they start with capital letter\nand the sentence is finished with a dot.\n",
            "insertions": 67,
            "deletions": 40
          },
          {
            "hash": "0e573fd05f909a210a249fcc4b5e7ed644909be8",
            "messageTitle": "Remove unused imports and variables.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 6
          },
          {
            "hash": "7fb3e51e5d277a2c3f82eaac7806f60db741d6d5",
            "messageTitle": "Shorten some long lines.",
            "messageBody": "",
            "insertions": 17,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 32,
        "deletions": 34,
        "date": "2014-09-17",
        "commitResults": [
          {
            "hash": "d2a4bc87b53c62a9d6ab50b6d9af3215ca6e4b38",
            "messageTitle": "Update the words expected from enchant spelling checker in the test.",
            "messageBody": "",
            "insertions": 8,
            "deletions": 8
          },
          {
            "hash": "e79743f0ddf7348f782a0a312f0e7395738a8000",
            "messageTitle": "Port new tests to the new test framework.",
            "messageBody": "",
            "insertions": 24,
            "deletions": 26
          }
        ]
      },
      {
        "insertions": 48,
        "deletions": 3,
        "date": "2014-09-18",
        "commitResults": [
          {
            "hash": "8df20c7a059f8641509e3db4afe6c66ff7e06070",
            "messageTitle": "Fix another false positives with \u0027undefined-variable\u0027, where the variable can be found as a class assignment and used in a function annotation. Closes issue #342.",
            "messageBody": "",
            "insertions": 48,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2014-09-22",
        "commitResults": [
          {
            "hash": "5e318e26c96bde8064f11f969d052b48f76c8dab",
            "messageTitle": "Add the missing hash sign.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 81,
        "deletions": 26,
        "date": "2014-09-30",
        "commitResults": [
          {
            "hash": "db05c1d4f32c844341a9e2dfdc82022fa4aac11b",
            "messageTitle": "Add a short document outlining the release process.",
            "messageBody": "",
            "insertions": 23,
            "deletions": 0
          },
          {
            "hash": "3fe28dac13d5398dcc2ab05b4423df904121beed",
            "messageTitle": "Move the string parsing inside the try body.",
            "messageBody": "It seems that _formatter_parser raises ValueError on PyPy,\nwhile on CPython it raises the error only when iterating\nthe result.\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "fda9fdaeda9b701b514a4cf8850eb87757597409",
            "messageTitle": "Use a with statement to prevent failures on PyPy.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "29fe4a7c7a42a8269293ac99ea6c52a3e6a8929d",
            "messageTitle": "Disable too-many-ancestors for invalid exception test.",
            "messageBody": "In PyPy, the number of ancestors is a little higher than the number\nfor the same class in CPython.\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "aa81d02db882abf5fc5bd32333808c15e65d8544",
            "messageTitle": "Ignore .pyc files for the old functional test framework.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "80e0e10c7f0dbf645eaf802b690f271694fb2454",
            "messageTitle": "Add a disable message for redefined builtins in a test.",
            "messageBody": "For PyPy, __metaclass__ is considered a builtin.\n",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "47b4a8176aa33207ccfc67104392459ee788ee4f",
            "messageTitle": "Remove flaky test, especially for PyPy.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 2
          },
          {
            "hash": "6d7cd0683a64aabceec42b4c34292ae718795a09",
            "messageTitle": "Use ignore parameter for shutil.copytree in setup.py.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 8
          },
          {
            "hash": "9e004d505738203f04d5c52e81375b782eba26a8",
            "messageTitle": "Add support in functional test framework for excepting certain implementations from testing.",
            "messageBody": "",
            "insertions": 13,
            "deletions": 1
          },
          {
            "hash": "47935bff708ca4582dc7968eef2efce2f8c0c46a",
            "messageTitle": "Use three different files for unknown-encoding for major Python implementations.",
            "messageBody": "Python 2.7, 3.X and PyPy have different output when an\nunknown encoding is detected. This patch uses the new\n\u0027except_implementations\u0027 option from the functional test framework.\n",
            "insertions": 32,
            "deletions": 7
          },
          {
            "hash": "2a585d5de2dd01dcd7c3c311443ccccac78a60d2",
            "messageTitle": "Update the list of exclusions from 2to3.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 3
          },
          {
            "hash": "1aba91f5c1bffc7c7bb2bd43a0f98050c0fc47d8",
            "messageTitle": "Use with statement to prevent resource warnings.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 0,
        "date": "2014-10-01",
        "commitResults": [
          {
            "hash": "0021c0a6727430e9736c88b26d32e10ef72b69ed",
            "messageTitle": "Support wheel packaging format for PyPi. Closes issue #334.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 18,
        "deletions": 19,
        "date": "2014-10-02",
        "commitResults": [
          {
            "hash": "851f6c007abbd8ff880ebb856fc28a40640b2a87",
            "messageTitle": "Simplify the import lookup for frames in which a global appears.",
            "messageBody": "",
            "insertions": 18,
            "deletions": 19
          }
        ]
      },
      {
        "insertions": 50,
        "deletions": 48,
        "date": "2014-10-06",
        "commitResults": [
          {
            "hash": "9e502c9ff00717d47b30739f892d37ba1c424306",
            "messageTitle": "Port more tests to the new test framework.",
            "messageBody": "",
            "insertions": 50,
            "deletions": 48
          }
        ]
      },
      {
        "insertions": 350,
        "deletions": 56,
        "date": "2014-10-15",
        "commitResults": [
          {
            "hash": "889859a8ac53919ff1c1e85eb0871f6254d96753",
            "messageTitle": "Add decorated_with_property function to utils.",
            "messageBody": "This is extracted from typechecker, from the property calling\ndetection code.\n",
            "insertions": 27,
            "deletions": 31
          },
          {
            "hash": "4ea910d67ccc0c96593a89a539791f97c5043284",
            "messageTitle": "Don\u0027t emit \u0027assigning-non-slot\u0027 when the assignment is for a property.  Closes issue #359.",
            "messageBody": "",
            "insertions": 71,
            "deletions": 2
          },
          {
            "hash": "c03fefdefba97e187f5458288227f4224ee53cc0",
            "messageTitle": "Add new \u0027-j\u0027 option for running checks in sub-processes.",
            "messageBody": "Patch by Michal Nowikowski.\n",
            "insertions": 252,
            "deletions": 23
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2014-10-16",
        "commitResults": [
          {
            "hash": "1c7670891400fee007f1d11dcee4176fda8a22d0",
            "messageTitle": "Forgot to add an import.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 158,
        "deletions": 70,
        "date": "2014-10-19",
        "commitResults": [
          {
            "hash": "85c6d00a79f3cca15436dc05fd14337367cf0637",
            "messageTitle": "Allow linting multiple directories at once.",
            "messageBody": "Patch by Buck Evan.\n",
            "insertions": 158,
            "deletions": 70
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 5,
        "date": "2014-10-20",
        "commitResults": [
          {
            "hash": "9d54ae6588a3bd436ab2b259ad388d8b6ec90fe3",
            "messageTitle": "Use *with* statement to make PyPy happy.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 3
          },
          {
            "hash": "56292f342cc33b4a063f506eb1564de860cd4e7d",
            "messageTitle": "Report the percentage of all messages, not just for errors and warnings.",
            "messageBody": "Closes issue #319.\n",
            "insertions": 3,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 23,
        "deletions": 14,
        "date": "2014-10-21",
        "commitResults": [
          {
            "hash": "7f598beffbec7a26afcad9fc1a7b575e64f696f1",
            "messageTitle": "Don\u0027t report clean modules when showing the message percentage by module.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 0
          },
          {
            "hash": "37f1e955343d17ddb906ddb36c7284b15e9732ca",
            "messageTitle": "Add __version__ attribute to comply with PEP 396. Closes issue #103.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "3f708ebec811a87bbbc0d8646b29fea30bff7ef4",
            "messageTitle": "Drop dead code.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 3
          },
          {
            "hash": "1e2133a5a587b7f590f8c80b6da186a64bafa232",
            "messageTitle": "Use the symbolic name of R0903.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "32c08e647a7adb4f6203ebf82904d91709c7f85e",
            "messageTitle": "\u0027too-many-public-methods\u0027 is reported only for methods defined in a class.",
            "messageBody": "Closes issue #248.\n",
            "insertions": 17,
            "deletions": 7
          },
          {
            "hash": "9dfe752a8debb5a4cadb647d18f215807546db0f",
            "messageTitle": "Drop old and useless code.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 1037,
        "deletions": 2,
        "date": "2014-10-23",
        "commitResults": [
          {
            "hash": "e14e84e92c838593d39249577d5a2077658e57bc",
            "messageTitle": "\u0027too-many-lines\u0027 disable pragma can be located on any line, not only the first.",
            "messageBody": "Closes issue #321.\n",
            "insertions": 1037,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 29,
        "deletions": 25,
        "date": "2014-10-25",
        "commitResults": [
          {
            "hash": "1486f9dad2c9cd2527ecc113b5cb593547d37fdc",
            "messageTitle": "Use a defaultdict where it makes sense.",
            "messageBody": "",
            "insertions": 29,
            "deletions": 25
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 6,
        "date": "2014-10-26",
        "commitResults": [
          {
            "hash": "f51c0928c8c10b23e26ad51669bf5201b1626b04",
            "messageTitle": "Use a with statement in setup.py",
            "messageBody": "",
            "insertions": 2,
            "deletions": 3
          },
          {
            "hash": "893f7d717749d969712090ac04c90a3117c10581",
            "messageTitle": "Drop support for \u003c 2.6 in __pkginfo__.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 43,
        "deletions": 29,
        "date": "2014-10-28",
        "commitResults": [
          {
            "hash": "0766420cee6c10d9af8e48052d1a95b334b6c451",
            "messageTitle": "Add a new option, \u0027exclude-protected\u0027.",
            "messageBody": "This option can be used for excluding members from the\nprotected-access warning. Closes issue #48.\n",
            "insertions": 42,
            "deletions": 5
          },
          {
            "hash": "0db8b4afd4a54f3925066c8a401f9d27ec831216",
            "messageTitle": "Simplify the code, by using has_known_bases.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 24
          }
        ]
      },
      {
        "insertions": 28,
        "deletions": 26,
        "date": "2014-10-31",
        "commitResults": [
          {
            "hash": "73b8b103751a5759118206f0ebca75e64b2d7b7c",
            "messageTitle": "Refactor code out into a _check_dict_node function.",
            "messageBody": "",
            "insertions": 12,
            "deletions": 12
          },
          {
            "hash": "298d5b96550740a8810883fcfb6099043cd5626a",
            "messageTitle": "Exit early from the visit_callfunc.",
            "messageBody": "",
            "insertions": 14,
            "deletions": 12
          },
          {
            "hash": "064f5e3888f1986d9151250195a6f306ee80d8e8",
            "messageTitle": "Small style fixes.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 1,
        "date": "2014-11-04",
        "commitResults": [
          {
            "hash": "70cd779c322ffd4bb4422e5b004aea29404b944c",
            "messageTitle": "Prefer an isinstance check instead of a hasattr.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 25,
        "deletions": 6,
        "date": "2014-11-11",
        "commitResults": [
          {
            "hash": "763227ac92379c4f574fbd359b5ab7eed2eb51df",
            "messageTitle": "Don\u0027t try to analyze string formatting with objects coming from function arguments. Closes issue #373.",
            "messageBody": "",
            "insertions": 25,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 42,
        "deletions": 55,
        "date": "2014-11-12",
        "commitResults": [
          {
            "hash": "4c69e9c5c5b801e7f574c53fcc7d91d745ffc4b1",
            "messageTitle": "Remove psyco section from documentation, it\u0027s not a relevant project anymore.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 24
          },
          {
            "hash": "ad83c5d56a58c9f07a713844ecbc5704090a8faa",
            "messageTitle": "Make pylint-gui work again on Python 3.",
            "messageBody": "",
            "insertions": 14,
            "deletions": 8
          },
          {
            "hash": "5c727bd136e89b0366cf0335ef8a61440378707f",
            "messageTitle": "Cleanup through documentation.",
            "messageBody": "",
            "insertions": 28,
            "deletions": 23
          }
        ]
      },
      {
        "insertions": 55,
        "deletions": 50,
        "date": "2014-11-14",
        "commitResults": [
          {
            "hash": "976bd966ba8e4330fedd1b01141e62e4125fabb8",
            "messageTitle": "README edited online with Bitbucket",
            "messageBody": "",
            "insertions": 55,
            "deletions": 50
          }
        ]
      },
      {
        "insertions": 327,
        "deletions": 214,
        "date": "2014-11-15",
        "commitResults": [
          {
            "hash": "aab70931865129cc8c2116802c8e9178d8fd8459",
            "messageTitle": "Pass the vertices explicitly to get_cycles.",
            "messageBody": "This patch circumvents the bug of get_cycles from logilab.common 0.63,\nwhere get_cycles receives a defaultdict instead, which will trigger\na RuntimeError \"dictionary changed size during iteration\".\n",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "c11e283477b340d6b54343bbc3891be21fcdb86c",
            "messageTitle": "Refactor a couple of things in lint.py.",
            "messageBody": "",
            "insertions": 16,
            "deletions": 24
          },
          {
            "hash": "f5da8703cd2af6177bc43b037afc14e8d74e41b5",
            "messageTitle": "Move indexing-exception to the python3 porting checker.",
            "messageBody": "",
            "insertions": 18,
            "deletions": 17
          },
          {
            "hash": "8707116939eb98f9623cb95fede5a32ca69f99a2",
            "messageTitle": "Add a check_messages for visit_callfunc in python3 porting checker.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 0
          },
          {
            "hash": "57015d523be0d46beceb72bbf0aa730c266baf1e",
            "messageTitle": "Add a new TODO entry.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "4bf0c7fd63fc878bfdb79d837103a4f5b0220378",
            "messageTitle": "Move unpacking-in-except to the python3 porting checker.",
            "messageBody": "",
            "insertions": 14,
            "deletions": 12
          },
          {
            "hash": "eb523f502920a0f18ae22dd87abdce7787bd8723",
            "messageTitle": "abstract-class-instantiated is also emitted for Python 2.",
            "messageBody": "",
            "insertions": 76,
            "deletions": 2
          },
          {
            "hash": "34ed3d46935cd252a63208ce3315ccdc1e19f3f7",
            "messageTitle": "Emit abstract-class-instantiated for classes with ancestors that have an ABCMeta metaclass.",
            "messageBody": "",
            "insertions": 6,
            "deletions": 6
          },
          {
            "hash": "dbef309d00a9da0906a94ca6754d0c9b49dfad6c",
            "messageTitle": "Port abstract-class-instantiated tests to the new test framework.",
            "messageBody": "",
            "insertions": 48,
            "deletions": 74
          },
          {
            "hash": "ba633cef5fce1caa1f3360041e8c43004bf7db29",
            "messageTitle": "Shorten a long line.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 2
          },
          {
            "hash": "3dfa5677310243e0e77f1f5c9e5681d483ff444a",
            "messageTitle": "Move raising-string to the python3 porting checker.",
            "messageBody": "",
            "insertions": 34,
            "deletions": 10
          },
          {
            "hash": "5975c431907d9f47ed4765546b2b9ec91bb01188",
            "messageTitle": "Amend the message for raising-bad-type, by not specifying strings.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "31e9fb27ba204e521fcb7931665dd535890fa481",
            "messageTitle": "Update the test message for raising-bad-type.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "7997dad2a80ee8a779a01cb76b1f2d73b09e380b",
            "messageTitle": "Move old-raise-syntax to the python3 porting checker.",
            "messageBody": "",
            "insertions": 19,
            "deletions": 14
          },
          {
            "hash": "99ac3a90889b1cac74a80fa76141b9301eb8e90b",
            "messageTitle": "Move tokenize_str from tests to testutils.",
            "messageBody": "",
            "insertions": 12,
            "deletions": 15
          },
          {
            "hash": "542126d42404a8bd5b8ca1c9e734fc65419180f5",
            "messageTitle": "Add \u0027long-suffix\u0027 error, emitted when encountering the long suffix  on numbers.",
            "messageBody": "This is sligthly different than lowercase-l-suffix, so it\u0027s a new\nerror instead of overwriting that one.\n",
            "insertions": 40,
            "deletions": 2
          },
          {
            "hash": "8fac11c3e580de96e44790b88657357ed342f6a6",
            "messageTitle": "Move backtick warning in python3 porting checker.",
            "messageBody": "",
            "insertions": 13,
            "deletions": 10
          },
          {
            "hash": "6cbaa17830f6de087623f39c47dbdf27943d9ba6",
            "messageTitle": "Change the message ids, for consistency.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "052955e6b48af4ac80448fbb87ca2e6702f9a8e4",
            "messageTitle": "Move old-ne-operator to the python3 porting checker.",
            "messageBody": "",
            "insertions": 10,
            "deletions": 13
          },
          {
            "hash": "1f3c5a6fce77079643154df8eac7936fb04958db",
            "messageTitle": "Rename OpenModeChecker to StdlibChecker.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "bee85c946dc7a4adf4e1dca6300e768f25f86047",
            "messageTitle": "may_be_disabled is not used anymore.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 119,
        "deletions": 76,
        "date": "2014-11-16",
        "commitResults": [
          {
            "hash": "29ea85ac65d3fcd4ba730d2138b216ce8e9ab66c",
            "messageTitle": "Simplify a little the code for parallel checking.",
            "messageBody": "",
            "insertions": 33,
            "deletions": 31
          },
          {
            "hash": "f0284d790e200bbd4b1ef4dfeed6b3b31d18e3d1",
            "messageTitle": "Simplify the chaining of stats in _parallel_check.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 3
          },
          {
            "hash": "90a2dee5ae60e6fce2521302027d9f6e95d84d45",
            "messageTitle": "Add support for using both --jobs and -m switch on Windows and Python 2.",
            "messageBody": "",
            "insertions": 13,
            "deletions": 4
          },
          {
            "hash": "637718a2f73787fc02b8a769a763049bb0f241eb",
            "messageTitle": "Add support for disabling a checker.",
            "messageBody": "A checker can be disabled (all of its messages will\nnot be emitted) by specifying an \u0027enabled\u0027\n attribute on the\nchecker class. Currently, this is used to disable\nthe Python3 porting checker, which will be enabled by the\n\u0027--py3k\u0027 flag.\n",
            "insertions": 21,
            "deletions": 1
          },
          {
            "hash": "e2ad67904f2e3a8fabf15630f00a72586b3168b1",
            "messageTitle": "Move create_file_backed_module to testutils.",
            "messageBody": "",
            "insertions": 28,
            "deletions": 27
          },
          {
            "hash": "609bafff654d45f8beb812860146730dee34721a",
            "messageTitle": "Add create_tempfile function to testutils and use it in create_file_backed_module.",
            "messageBody": "",
            "insertions": 22,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 259,
        "deletions": 156,
        "date": "2014-11-17",
        "commitResults": [
          {
            "hash": "d9813098159ac5118effd8277c55bfc365627130",
            "messageTitle": "Add a new CLI option, \u0027--py3k\u0027.",
            "messageBody": "This option will enable the Python 3 porting\n mode. This mode will emit\nwarnings and errors for constructs\n invalid or removed in Python 3,\nhelping the users of Pylint\n to port their projects.\n",
            "insertions": 85,
            "deletions": 43
          },
          {
            "hash": "2c4a1f57791226fabc93cfdffac6e0e07bcb3e55",
            "messageTitle": "Warn when encountering the reload builtin.",
            "messageBody": "",
            "insertions": 12,
            "deletions": 1
          },
          {
            "hash": "0d04a845ccfbc73049ef855f2bd52c96a90244d3",
            "messageTitle": "Add \u0027old-octal-literal\u0027 to Python 3 porting checker.",
            "messageBody": "This warning is emitted when\n encountering octals with the old syntax, in the form \u00270number\u0027.\n",
            "insertions": 29,
            "deletions": 3
          },
          {
            "hash": "6afcc16c43da39a1117ad102640929d5343f8488",
            "messageTitle": "Amend the ChangeLog entry for the --py3k flag, to make it clear what it does.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 4
          },
          {
            "hash": "6de6cc69397080bfce959e8715effc684d615c8a",
            "messageTitle": "Simplify token-based tests in unittest_checker_python3.",
            "messageBody": "",
            "insertions": 9,
            "deletions": 12
          },
          {
            "hash": "fec9bc99e53448acc1f356a53992722c1c7c5521",
            "messageTitle": "Use python2_only as a class decorator.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 3
          },
          {
            "hash": "1a738deaaa99812c7ba0992c469d9a674b5fb216",
            "messageTitle": "Simplify the bad builtin test.",
            "messageBody": "",
            "insertions": 18,
            "deletions": 50
          },
          {
            "hash": "6a53526d8563578da0ab80484b8c7834f0315067",
            "messageTitle": "Simplify special methods test.",
            "messageBody": "",
            "insertions": 10,
            "deletions": 26
          },
          {
            "hash": "99794fee75f9c9ba3ddf894824e73cafeec42ee0",
            "messageTitle": "Add hex, oct, nonzero and cmp to the list of methods removed in Python 3.",
            "messageBody": "",
            "insertions": 38,
            "deletions": 1
          },
          {
            "hash": "d7f31a26bddca79be09463dffc83430f7c59f238",
            "messageTitle": "Remove get_init_args from the Message class and move it as private function in lint.py.",
            "messageBody": "",
            "insertions": 17,
            "deletions": 11
          },
          {
            "hash": "77bfac0edecad08c9cc433d83e22fed7d56b1067",
            "messageTitle": "Add \u0027implicit-map-evaluation\u0027 to Python 3 porting checker.",
            "messageBody": "This warning is emitted\n when encountering the use of map builtin, without explicit evaluation,\nas in \"map(func, args)\" on a single line. This behaviour is removed in Python 3, where\nmap is a generator and must be explicitly evaluated.\n",
            "insertions": 29,
            "deletions": 0
          },
          {
            "hash": "7ef2876ff653e1d3453a80637f074a336371dde6",
            "messageTitle": "Make sure to look only for calls to the map function.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "e6ca1997bca58f3962a1991870e58f61d44cbeff",
            "messageTitle": "It\u0027s actually a Name node..",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "fd9acc81a549e352243fbdf55eee270f98b07dfa",
            "messageTitle": "Fix the flawed check of old octal syntax.",
            "messageBody": "",
            "insertions": 6,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 10,
        "date": "2014-11-18",
        "commitResults": [
          {
            "hash": "056803c3a93ea3050a05fd243494fc2f87fedc3e",
            "messageTitle": "Fix more false positives for old-octal-literal.",
            "messageBody": "",
            "insertions": 6,
            "deletions": 5
          },
          {
            "hash": "b271c416890b6e6cf02a314abb70eb634302e103",
            "messageTitle": ".infer can fail with InferenceError.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "26003f0df1e3243fc9ea44b0a4d1b9df5451e3c9",
            "messageTitle": "Improve the octal regex.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 35,
        "deletions": 15,
        "date": "2014-11-22",
        "commitResults": [
          {
            "hash": "8514aec828c8d827cbbe0af6a87660abd346d378",
            "messageTitle": "Fix false positives with the old-octal-literal.",
            "messageBody": "",
            "insertions": 10,
            "deletions": 3
          },
          {
            "hash": "b6881862109d009cb8a43e5fb73501feb2a01772",
            "messageTitle": "Close the file_stream of the ast node after analysing it.",
            "messageBody": "This ensures that we don\u0027t leak open fds and that we are well-behavioured\nfor PyPy (previously, the file were closed due to gc).\n",
            "insertions": 14,
            "deletions": 0
          },
          {
            "hash": "b5754158fe4b48a86b25a0f14f720ba4e54062a2",
            "messageTitle": "_is_subtype_of needs a context.",
            "messageBody": "Probably, we should make context optional for _is_subtype_of.\n",
            "insertions": 7,
            "deletions": 2
          },
          {
            "hash": "8fdf6a5512332567c9a57a26594b6ad15f40ec46",
            "messageTitle": "Fix tests to work with the new astroid release.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 9
          },
          {
            "hash": "dfa4909d4e9f8c7496d78f731fb95d86cb9f4cdf",
            "messageTitle": "Fix the order of the commands for the release.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 22,
        "deletions": 22,
        "date": "2014-11-23",
        "commitResults": [
          {
            "hash": "ae72d1c9bae9a954308470834809b4d51f647ac9",
            "messageTitle": "Simplify the passing of config to sublinters.",
            "messageBody": "This implementation is still suboptimal for most of the cases, but at least it passes the configuration\nobtain through pylintrc correctly. Thus, enabled and disabled messages in pylintrc should reach sublinters as well.\n",
            "insertions": 17,
            "deletions": 19
          },
          {
            "hash": "de172c523fa0dcd2bb5582699a8495a6abeb31d9",
            "messageTitle": "Prepare the 1.4.0 release.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 3
          },
          {
            "hash": "6104c57aab6244a3b84129df69f9d3bba159cd1c",
            "messageTitle": "Added tag pylint-1.4 for changeset 6224a61f7491",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 8,
        "date": "2014-11-25",
        "commitResults": [
          {
            "hash": "012068611bc2f70b09facdd02bd34991d0a5488c",
            "messageTitle": "Use the new Module.close to close the file streams.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 1,
        "date": "2014-11-28",
        "commitResults": [
          {
            "hash": "8a6e324ffc3f21dcd7cbbb6d7cccbee1d228e251",
            "messageTitle": "Make dangerous-default-argument check resilient to inferred builtin calls for list/tuple/set.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 70,
        "deletions": 14,
        "date": "2014-12-03",
        "commitResults": [
          {
            "hash": "75a6527ccc0302b6d60b80b82965c4fdd16f5781",
            "messageTitle": "Look only in the current function\u0027s scope for bad-super-call. Closes issue #403.",
            "messageBody": "",
            "insertions": 29,
            "deletions": 1
          },
          {
            "hash": "f6d461fc1931d439ffe23958649e01ea50760e1e",
            "messageTitle": "Improve the reporting for dangerous-default-value.",
            "messageBody": "The new version takes in consideration the fact that a couple of builtins,\ndict, tuple, set and list can be inferred to their AST syntax node, which messed up\nthe reporting for dangerous-default-value until now.\n",
            "insertions": 41,
            "deletions": 13
          }
        ]
      },
      {
        "insertions": 28,
        "deletions": 30,
        "date": "2014-12-04",
        "commitResults": [
          {
            "hash": "09a766b776e2b2478302ad4c9f601a5981b9f7c2",
            "messageTitle": "Make some methods private.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "71337fca676b775d9b1adf6eeca121b9c87557ad",
            "messageTitle": "Simplify the code by using safe_infer.",
            "messageBody": "",
            "insertions": 10,
            "deletions": 14
          },
          {
            "hash": "0ad98b256909e45270c4c171892af354c2e7bbb3",
            "messageTitle": "Simplify _annotated_unpack_infer.",
            "messageBody": "With this fix, _annotated_unpack_infer doesn\u0027t try to unpack everything, doing only a linear\ninference and unpacking. This also removes the false positives where a part of the\nexcept handler is a builtin call for list/tuple/set.\n",
            "insertions": 14,
            "deletions": 12
          }
        ]
      },
      {
        "insertions": 61,
        "deletions": 5,
        "date": "2014-12-05",
        "commitResults": [
          {
            "hash": "da5fe0d419cea817af97b04e167e00892089d821",
            "messageTitle": "Check the return of properties when checking for not-callable.",
            "messageBody": "Closes issue #406.\n",
            "insertions": 59,
            "deletions": 5
          },
          {
            "hash": "c0f09544e532c3f61c07c9ddd57cb9ade3088ae8",
            "messageTitle": "Check the return value of slots, it can be None.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 11,
        "deletions": 9,
        "date": "2014-12-06",
        "commitResults": [
          {
            "hash": "a8f764450c9a79570d1e08ab576b8be73625c7e1",
            "messageTitle": "Minimize the except block, by catching only what will raise NoSuchArgumentError.",
            "messageBody": "",
            "insertions": 11,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 16,
        "deletions": 4,
        "date": "2014-12-15",
        "commitResults": [
          {
            "hash": "a1d7c772bc7641861e37ce7df74a27ebe682c3e0",
            "messageTitle": "Fix typos in error messages.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "50653fc8e056c7de6197376229c3b406ed2f10c7",
            "messageTitle": "Add a note regarding the support of \u003c\u003dPython 2.6.",
            "messageBody": "Closes issue #390.\n",
            "insertions": 14,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 88,
        "deletions": 5,
        "date": "2014-12-16",
        "commitResults": [
          {
            "hash": "09e65803288d6da605173309a4597d1181f7b511",
            "messageTitle": "Proper abstract method lookup while checking for abstract-class-instantiated.",
            "messageBody": "This depends on the new Class.mro method, which will be added in astroid 1.3.3.\nCloses issue #401.\n",
            "insertions": 88,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 0,
        "date": "2014-12-20",
        "commitResults": [
          {
            "hash": "761a97131033df3e5e3d53c0dcec805e4b82a034",
            "messageTitle": "Close branch hotfix/py26-compat",
            "messageBody": "--HG--",
            "insertions": 0,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 299,
        "deletions": 93,
        "date": "2014-12-21",
        "commitResults": [
          {
            "hash": "c7ac191d9e45d693afc173c29bc3ea1b735d6c3e",
            "messageTitle": "Use a mro traversal for finding abstract methods. Closes issue #415.",
            "messageBody": "This patch adds a new unimplemented_abstract_methods in pylint.checkers.utils,\nwhich is used to obtain all the abstract methods which weren\u0027t implemented\nanywhere in the mro of a class. The code works now by traversing the mro, gathering\nall abstract methods encountered at each step and resolving the implemented ones\nthrough either definition or assignment. This disables a couple of false\npositives on classes with complex hierarchies.\n",
            "insertions": 299,
            "deletions": 93
          }
        ]
      },
      {
        "insertions": 69,
        "deletions": 27,
        "date": "2014-12-29",
        "commitResults": [
          {
            "hash": "6c0ab249be0dc0c9876cb5365d0db922b1c95563",
            "messageTitle": "Fix a false positive with catching-non-exception and tuples of  exceptions.",
            "messageBody": "",
            "insertions": 69,
            "deletions": 27
          }
        ]
      },
      {
        "insertions": 322,
        "deletions": 169,
        "date": "2015-01-02",
        "commitResults": [
          {
            "hash": "ca93807563e35d36255535bba62cf6c592a70bab",
            "messageTitle": "Small refactoring to exceptions checker.",
            "messageBody": "",
            "insertions": 24,
            "deletions": 13
          },
          {
            "hash": "ac3076c1bbe028249da3dda0aae306bc1e8eaf11",
            "messageTitle": "The comment is not true anymore.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 5
          },
          {
            "hash": "4554f4f54a74babe71f28054be218d72189e4643",
            "messageTitle": "Small cleanup to exceptions checker",
            "messageBody": "",
            "insertions": 3,
            "deletions": 4
          },
          {
            "hash": "1885ad1f7298bba4923d7a4c203d90bf45bdc8db",
            "messageTitle": "Add the name of the abstract class in abstract-class-instantiated message.",
            "messageBody": "",
            "insertions": 16,
            "deletions": 12
          },
          {
            "hash": "8b658cb1d77123df3da7d547a6832b32e6fe231b",
            "messageTitle": "Fix a false negative with raising-non-exception.",
            "messageBody": "When the raise used\n an uninferrable exception context, as in the following\nexample, raising-non-exception wouldn\u0027t have been emitted, due to a misplaced return.\n\nThe example is:\n   from missing_import import something\n   raise SomeClass from something\n",
            "insertions": 38,
            "deletions": 11
          },
          {
            "hash": "bab61456aafb30f9e782b176e1b8b138f33dbb74",
            "messageTitle": "Don\u0027t filter out builtins when checking for raising-non-exception.",
            "messageBody": "There is no reason anymore to exclude builtins for nonstandard-exception\nand raising-non-exception.\n",
            "insertions": 40,
            "deletions": 12
          },
          {
            "hash": "45c4d98ffc42d40ec4a9f92f852dc083bb672df9",
            "messageTitle": "Cleanup lint.py.",
            "messageBody": "Import modules, instead of objects from them, used only once. Trim a couple\nof long lines, remove a couple of unused variables and so on.\n",
            "insertions": 115,
            "deletions": 109
          },
          {
            "hash": "ebd9d5a29c238e77481f33f4f4305346c5fe7080",
            "messageTitle": "Fix a false positive on Python 2 for raising-bad-type and tuples.",
            "messageBody": "Raising tuples in the form \u0027raise (ZeroDivisionError, None)\u0027 is not\nan error on Python 2, but it is an error on Python 3.\n",
            "insertions": 86,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 63,
        "deletions": 38,
        "date": "2015-01-03",
        "commitResults": [
          {
            "hash": "f47058b35554a36e733084c3417a3267cb7a1211",
            "messageTitle": "Use the new Module.stream, since Module.file_stream is deprecated.",
            "messageBody": "",
            "insertions": 24,
            "deletions": 32
          },
          {
            "hash": "7dc9c4500b0f35484d856bc82de03bbff5ee2a63",
            "messageTitle": "Close the streams in similar checker.",
            "messageBody": "",
            "insertions": 6,
            "deletions": 2
          },
          {
            "hash": "56dd0f3b9b5c07300c190328fa741bc595502641",
            "messageTitle": "Update the examples to the new message format.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "88ca291bcc6ebf1021699551a6a449700d70a017",
            "messageTitle": "Use a DeprecationWarning for ParseableTextReporter.",
            "messageBody": "",
            "insertions": 14,
            "deletions": 2
          },
          {
            "hash": "b23ba67c3567206beb02e6eef5337f52cf716849",
            "messageTitle": "Fix a false positive with invalid-slots-objects and unicode strings. Closes issue #421.",
            "messageBody": "",
            "insertions": 16,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 44,
        "deletions": 19,
        "date": "2015-01-04",
        "commitResults": [
          {
            "hash": "f43d8bdd7c2f9fdc4836f0451ef9f578b54e72f4",
            "messageTitle": "Improve a couple of things for redundant-unittest-assert.",
            "messageBody": "Include the bad assert method in the message and improve the test\ncoverage. Also, annotate the test class with a skip decorator,\nsince unittest discovery will believe it\u0027s an actual unittest file.\n",
            "insertions": 21,
            "deletions": 7
          },
          {
            "hash": "c356c34ed285ab5d3d02d9d2e4c9363a8f423fc9",
            "messageTitle": "Add ChangeLog entry for the JSON report and fix the test.",
            "messageBody": "",
            "insertions": 21,
            "deletions": 12
          },
          {
            "hash": "4aa5a95bb889ce296efd493bd496fe16f64886cc",
            "messageTitle": "Add Vlad Temian to contributors.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 13,
        "deletions": 6,
        "date": "2015-01-11",
        "commitResults": [
          {
            "hash": "a5e1d80e7551549c9e93da8cd29c8f9c054ba130",
            "messageTitle": "Add the method names for the \u0027signature-differs\u0027 and \u0027argument-differs\u0027  warnings.",
            "messageBody": "Closes issue #433.\n",
            "insertions": 13,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 228,
        "deletions": 8,
        "date": "2015-01-12",
        "commitResults": [
          {
            "hash": "77d36161891ef4f814fdb71f04bbbb8aa73c755e",
            "messageTitle": "Don\u0027t compile test files when installing.",
            "messageBody": "",
            "insertions": 25,
            "deletions": 4
          },
          {
            "hash": "a2854ec66e8f92917a8b279552f1d4bc8b67a81f",
            "messageTitle": "Check for easy_install_lib instead of easy_install, the latter might not exist.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "c4e33851523d13a7359681f754c8cf63fbf44b6f",
            "messageTitle": "Check the number of arguments before attempting to obtain the first one.",
            "messageBody": "",
            "insertions": 9,
            "deletions": 1
          },
          {
            "hash": "4cb32a8e8ce34931fe8757a97bd06bf006dfd513",
            "messageTitle": "Fix the documentation for the --ignore option. Closes issue #405.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 2
          },
          {
            "hash": "22f80d23cd938aec398328b126977b932fb975af",
            "messageTitle": "Add a Windows .bat file for building the documentation on Windows.",
            "messageBody": "",
            "insertions": 190,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 0,
        "date": "2015-01-15",
        "commitResults": [
          {
            "hash": "b0a570c13dccc8e53aa2aa2f6e60b1cb8e410b69",
            "messageTitle": "Suppress ResolveErrors from Class.mro in unimplemented_abstract_methods.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 14,
        "deletions": 7,
        "date": "2015-01-16",
        "commitResults": [
          {
            "hash": "bd07a33000efcfaa3a2a35c65b183c419e9c4d0e",
            "messageTitle": "Fix a crash which occurred when using multiple jobs and the files  given as argument didn\u0027t exist at all.",
            "messageBody": "",
            "insertions": 8,
            "deletions": 3
          },
          {
            "hash": "c82eb1a6108849d6abf42c02e9c33482d2898e77",
            "messageTitle": "Prepare the release.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 4
          },
          {
            "hash": "cba42de5bd774177ffeaac6bcc8292c182ffbce5",
            "messageTitle": "Added tag pylint-1.4.1 for changeset 2b8634af6ac9",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 15,
        "deletions": 2,
        "date": "2015-01-24",
        "commitResults": [
          {
            "hash": "3444a944099da60254121ce7715eceb322acd99f",
            "messageTitle": "Don\u0027t require a docstring for empty modules. Closes issue #261.",
            "messageBody": "",
            "insertions": 15,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 1,
        "date": "2015-01-25",
        "commitResults": [
          {
            "hash": "c54b93fa0679e1e457451ef6baa048d7878b537b",
            "messageTitle": "Drop a misleading line from documentation. Closes issue #337.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 17,
        "deletions": 1,
        "date": "2015-01-30",
        "commitResults": [
          {
            "hash": "dbbe62360ea221f814e19da94e21936a29bad88b",
            "messageTitle": "Fix a false positive with `too-few-format-args` warning.",
            "messageBody": "The warning was emitted when the string format contained a normal positional\n\nargument (\u0027{0}\u0027), mixed with a positional argument which did\n an attribute access\n(\u0027{0.__class__}\u0027).\n Closes issue #463.\n",
            "insertions": 17,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 43,
        "deletions": 14,
        "date": "2015-02-05",
        "commitResults": [
          {
            "hash": "e9cec2f163d3325007c74c0249567fe5e5d5c1c6",
            "messageTitle": "Look all the methods from ancestors for too-few-public-methods.",
            "messageBody": "This patch uses two counters for too-few-public-methods and too-many-public-methods.\nIn order to avoid false positives, too-many-public-methods check is looking\nonly for methods defined in the current class. On the other hand, too-few-public-methods\nshould look in ancestors as well, since most of the time this check is useful only\nfor simple classes, without many public methods.\nCloses issue #471.\n",
            "insertions": 40,
            "deletions": 14
          },
          {
            "hash": "615d22f63098c6b7499ecdc70fc39a4edbe8ffd4",
            "messageTitle": "Add ChangeLog entry for commit 2f9df0f2155a",
            "messageBody": "",
            "insertions": 3,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 56,
        "deletions": 20,
        "date": "2015-02-09",
        "commitResults": [
          {
            "hash": "21484711ed52ca8055bc111025a851b37b1278a0",
            "messageTitle": "Add test for issue #308. Closes issue #308.",
            "messageBody": "",
            "insertions": 16,
            "deletions": 0
          },
          {
            "hash": "fb3bd4b99c74d345ad11eb8fc495b9ca6deffaaf",
            "messageTitle": "Use all the inferred statements for the super-init-not-called check.",
            "messageBody": "For the super-init-not-called check, ``next(expr.infer())`` was used, which\nreturned as the first statement an YES node, which resulted in the node\nbeing skipped for processing. Inferring all the objects would have returned\nthe actual classes for which the parent was indeed called. This patch\nchanges that to a infer-all strategy, which should yield better results.\nCloses issue #389.\n",
            "insertions": 40,
            "deletions": 20
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 0,
        "date": "2015-02-16",
        "commitResults": [
          {
            "hash": "5d69bba183e72de008d915119d0f428020a6b1d1",
            "messageTitle": "Add ChangeLog entries for the latest changes.",
            "messageBody": "",
            "insertions": 8,
            "deletions": 0
          },
          {
            "hash": "14fa580fde41a9ca5705da385f83551fc611c136",
            "messageTitle": "Add two new contributors.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 0,
        "date": "2015-02-17",
        "commitResults": [
          {
            "hash": "ee1b4f440bc858ebe8debee7468d3b663d02c01c",
            "messageTitle": "Add note about new contributor.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 32,
        "deletions": 23,
        "date": "2015-02-21",
        "commitResults": [
          {
            "hash": "69f9ad34d6033309d4c7622dce053443a7864385",
            "messageTitle": "Remove visit_discard for map-builtin-not-iterating, since it is already caught by visit_callfunc.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 19
          },
          {
            "hash": "641ba82bb77df450381709ca42ff8ee1e3a7155d",
            "messageTitle": "Fix a false positive with dict and not-iterating warnings.",
            "messageBody": "dict accepts iterators, as much as set and list does.\nThis patch fixes this and adds tests for the other callables\nfor which we shouldn\u0027t emit.\n",
            "insertions": 8,
            "deletions": 4
          },
          {
            "hash": "eff0ea0000355bc1bcc2f19f725c6fe25e54fdc7",
            "messageTitle": "Don\u0027t emit not-iterating warnings when the builtin is used in an unpacking.",
            "messageBody": "",
            "insertions": 24,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 18,
        "deletions": 16,
        "date": "2015-02-22",
        "commitResults": [
          {
            "hash": "6646a647cb7ef0f707da50bfbd738e3c80d6bfa2",
            "messageTitle": "Add new contributor.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "a9595f264adbe627440e1f162568697e462a2b39",
            "messageTitle": "Refactoring.",
            "messageBody": "",
            "insertions": 16,
            "deletions": 16
          }
        ]
      },
      {
        "insertions": 48,
        "deletions": 14,
        "date": "2015-02-24",
        "commitResults": [
          {
            "hash": "0e2a1c82813bbdc9c74bb73b07e0bf1f95093e60",
            "messageTitle": "Move the patching of sys.modules in a context manager.",
            "messageBody": "",
            "insertions": 21,
            "deletions": 12
          },
          {
            "hash": "3d22862aa4e550f2a0a0cc3c10e0a37390e9745e",
            "messageTitle": "Support for combining the Python 3 checker mode with the --jobs flag.",
            "messageBody": "This patch makes sure that --py3k and --jobs flags can be combined together.\nIt introduces a new method in lint.PyLinter, called set_python3_porting_mode,\nwhich will setup a new flag inside the linter, passed down to child linters\nwhen they are created. Closes issue #467.\n",
            "insertions": 27,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 0,
        "date": "2015-02-27",
        "commitResults": [
          {
            "hash": "d69656429d7373692607cd8188772b1a73db58ed",
            "messageTitle": "Backed out changeset c1f2f0c187b0",
            "messageBody": "This is actually used by the test, which aren\u0027t calling visit_module.\n",
            "insertions": 5,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 144,
        "deletions": 2,
        "date": "2015-02-28",
        "commitResults": [
          {
            "hash": "f9f9efa32bd9bca116cea8163409a2d5f44818b5",
            "messageTitle": "Add a new warning for the Python 3 porting checker, \u0027using-cmp-argument\u0027.",
            "messageBody": "This warning is emitted when the `cmp` argument for the `list.sort` or `sorted builtin`\nis encountered, since it was removed in Python 3. This is part of the issue #376.\n",
            "insertions": 57,
            "deletions": 1
          },
          {
            "hash": "37e6b5c9c2dba47d2845d5f69557fabaee2e9e55",
            "messageTitle": "Make the --py3k flag commutative with the -E flag.",
            "messageBody": "Also, this patch fixes the leaks of error messages from the Python 3\nchecker when the errors mode was activated. Closes issue #437.\n",
            "insertions": 87,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 53,
        "deletions": 53,
        "date": "2015-03-02",
        "commitResults": [
          {
            "hash": "7fe1eb848f1991b311b433b3b7ce0186b2f1ee50",
            "messageTitle": "Fix a couple of doc warnings, use string continuation.",
            "messageBody": "",
            "insertions": 53,
            "deletions": 53
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2015-03-06",
        "commitResults": [
          {
            "hash": "060c5d3f16b98b68d4df382829950d265d69041d",
            "messageTitle": "Run pylint testenv with tox.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 76,
        "deletions": 191,
        "date": "2015-03-11",
        "commitResults": [
          {
            "hash": "95d4de589871d0419eea2fa151eb84846eafc60b",
            "messageTitle": "Prepare 1.4.2 release",
            "messageBody": "",
            "insertions": 5,
            "deletions": 4
          },
          {
            "hash": "b6d9becbc49684054d064d2948e10e2dfed6b4dc",
            "messageTitle": "Added tag pylint-1.4.2 for changeset 6f4aefa175c0",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "8cc7a067135eed17cd85a7683b70d80de2f2ae48",
            "messageTitle": "Remove the star-args error.",
            "messageBody": "This warning is removed because it doesn\u0027t add any real value and\nit\u0027s not a problem if someone uses unpacking in their code.\n",
            "insertions": 10,
            "deletions": 53
          },
          {
            "hash": "4fb159bc60c3fb4d45c5495423e7134788a5ebf9",
            "messageTitle": "Remove abstract-class-little-used warning, since it doesn\u0027t add any real value.",
            "messageBody": "",
            "insertions": 9,
            "deletions": 39
          },
          {
            "hash": "66cc4feff79b1619e02b83ed32c2ee319ca94031",
            "messageTitle": "Remove abstract-class-not-used, for the same reasons as star-args and abstract-class-little-referenced.",
            "messageBody": "",
            "insertions": 45,
            "deletions": 95
          },
          {
            "hash": "bc36ddce414a924234514200fff4f12ea956e856",
            "messageTitle": "Add ChangeLog entries for the removal of three warnings",
            "messageBody": "",
            "insertions": 6,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 5,
        "date": "2015-03-12",
        "commitResults": [
          {
            "hash": "7a0d9ae1e501a2bd8428ca59219d44d9a6ca283c",
            "messageTitle": "Use the license from __pkginfo__, not the builtin function.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "ae6fec54792ce2644064aa854136f3f15480e485",
            "messageTitle": "Document what include-ids and --symbols did in the past and point to msg-template instead. Closes issue #215.",
            "messageBody": "",
            "insertions": 9,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 47,
        "deletions": 7,
        "date": "2015-03-14",
        "commitResults": [
          {
            "hash": "a99a53b84e05f77271c7359272bbd769371defea",
            "messageTitle": "Use only one job for linting pylint.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "cda434ac70e1ac2c7a73394307c8ad2fdf83b5b3",
            "messageTitle": "Added a new option for controlling the peephole optimizer in astroid.",
            "messageBody": "The option ``--optimize-ast`` will control the peephole optimizer,\nwhich is used to optimize a couple of AST subtrees. The current problem\nsolved by the peephole optimizer is when multiple joined strings,\nwith the addition operator, are encountered. If the numbers of such\nstrings is high enough, Pylint will then fail with a maximum recursion\ndepth exceeded error, due to its visitor architecture. The peephole\njust transforms such calls, if it can, into the final resulting string\nand this exhibit a problem, because the visit_binop method stops being\ncalled (in the optimized AST it will be a Const node).\n",
            "insertions": 41,
            "deletions": 2
          },
          {
            "hash": "c819abbc3120f6a4ee26ada8d2974a903c67b95d",
            "messageTitle": "Prepare 1.4.3 release.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "caf8d37dd8729b0acfa67b7809bb27710ec29cce",
            "messageTitle": "Added tag pylint-1.4.3 for changeset b8ff6bf98468",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 16,
        "deletions": 4,
        "date": "2015-03-18",
        "commitResults": [
          {
            "hash": "bbeae4d3cf9dff207cecc3838840e74193234e7b",
            "messageTitle": "Handle the case where SyntaxError is reraised as AstroidBuildingException.",
            "messageBody": "",
            "insertions": 8,
            "deletions": 4
          },
          {
            "hash": "75a5d079d3180e7e25e2aea1f8c2ccb24180d51d",
            "messageTitle": "Add ChangeLog entry and new contributor.",
            "messageBody": "",
            "insertions": 8,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 27,
        "deletions": 20,
        "date": "2015-03-20",
        "commitResults": [
          {
            "hash": "5c23103c9b92a51ae4f9f298c563223d51ecae65",
            "messageTitle": "Revert unwanted change.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "9299f7a6b8db4706fe2ee72ffa7c499ba6b1eef4",
            "messageTitle": "Promote a couple of warnings to errors.",
            "messageBody": "These warnings were promoted since they could uncover\npotential bugs in the code and since most people are using `pylint -E` anyway,\nit\u0027s good to have them as errors. These warnings are: assignment-from-none,\nunbalanced-tuple-unpacking, unpacking-non-sequence, non-iterator-returned.\nCloses issue #388.\n",
            "insertions": 26,
            "deletions": 19
          }
        ]
      },
      {
        "insertions": 23,
        "deletions": 21,
        "date": "2015-03-23",
        "commitResults": [
          {
            "hash": "8781e101f49715f33c70e595ba88adb4f59713fe",
            "messageTitle": "Add new contributor.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 3
          },
          {
            "hash": "b8f8c4a9cc582fa1e9998fd2171630de67baa8b1",
            "messageTitle": "Allow ending a pragma control with a semicolon.",
            "messageBody": "In this way, users can continue a pragma control with a reason for why it is used,\nas in `# pylint: disable\u003dold-style-class;reason\u003d...`.\nCloses issue #449.\n",
            "insertions": 10,
            "deletions": 1
          },
          {
            "hash": "a548cbcb6643dacdc516dc4e03624b0407685a28",
            "messageTitle": "Remove decorated_with_abc in the favour of decorated_with, which supports multiple decorator names to query.",
            "messageBody": "",
            "insertions": 8,
            "deletions": 17
          }
        ]
      },
      {
        "insertions": 17,
        "deletions": 9,
        "date": "2015-03-24",
        "commitResults": [
          {
            "hash": "0cf4153a638be20dff421bc9b890ffa30aeb40d3",
            "messageTitle": "--jobs can be used with --load-plugins now. Closes issue #456.",
            "messageBody": "",
            "insertions": 6,
            "deletions": 1
          },
          {
            "hash": "77b43a1aa55821abcec04ac8acf87d30a39663df",
            "messageTitle": "Improve the performance of --jobs when dealing only with a package name.",
            "messageBody": "The performance is improved by obtaining the files which should be analyzed\nfrom the list of given modules, using PyLinter.expand_modules. This is already\nwhat PyLinter._do_check does, but the behaviour was missing from PyLinter._parallel_check.\nCloses issue #479.\n",
            "insertions": 11,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 487,
        "deletions": 439,
        "date": "2015-03-26",
        "commitResults": [
          {
            "hash": "190462bacba2d6b9582a86109d09ff885cb57cce",
            "messageTitle": "Try to make the tests compatible with both Python 2 and Python 3.",
            "messageBody": "",
            "insertions": 406,
            "deletions": 403
          },
          {
            "hash": "2a5dbf9cc4d905e849a0b8885e1da857e261bf70",
            "messageTitle": "Don\u0027t emit an unused-wildcard-import for imported __future__ names from other modules.",
            "messageBody": "",
            "insertions": 26,
            "deletions": 2
          },
          {
            "hash": "8907b6c18b4c902d2e782fa7944cdc2d462e3171",
            "messageTitle": "Finish converting tests to work both on Python 2 and 3. Also, drop 2to3 for tests.",
            "messageBody": "",
            "insertions": 50,
            "deletions": 26
          },
          {
            "hash": "fafeec25d7eaaebaa4e0df6c061285e1eca190de",
            "messageTitle": "Fix some tests for the drone.io.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 8
          },
          {
            "hash": "b6a288a2b3d0d318a491c20877dd957672832b3d",
            "messageTitle": "For Python 3.3 we get a different error, use the default test for it.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 0
          },
          {
            "hash": "91cfdc154bc6537abba86b01e0e8c27bbb69504b",
            "messageTitle": "boolean-datetime is disabled for Python 3.5+",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 20,
        "deletions": 2,
        "date": "2015-03-27",
        "commitResults": [
          {
            "hash": "f46ca652c867c55f3874a68901dd637c51bdbec6",
            "messageTitle": "The colorized reporter now works on Windows. Closes issue #96.",
            "messageBody": "",
            "insertions": 20,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 390,
        "deletions": 382,
        "date": "2015-03-28",
        "commitResults": [
          {
            "hash": "929b815499e1bc498f9b501d4b3ffb7d6a8ee5b6",
            "messageTitle": "Port more tests from the old test style to the new test style.",
            "messageBody": "",
            "insertions": 378,
            "deletions": 375
          },
          {
            "hash": "24339efceb4ac7719d4c96f54395163ab47d52ac",
            "messageTitle": "Fix failing test.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "e6f04114cadfcd0bb3e45e4b7a955e3f73374aec",
            "messageTitle": "Start with 0 statements in PylintASTWalker.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "8d11716f34dea6e8d1ae6f9d37b9b8af1861a51d",
            "messageTitle": "Improve the message report for --jobs. Closes issue #501.",
            "messageBody": "",
            "insertions": 7,
            "deletions": 2
          },
          {
            "hash": "64d031239e164c777a6953e4da46a4d23b88ccbe",
            "messageTitle": "Remove trailing whitespace.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 23,
        "date": "2015-03-31",
        "commitResults": [
          {
            "hash": "8947326970ab5bfa8480fab4d153c48b044e9b99",
            "messageTitle": "Add Changelog entry and cleanup after changeset 2307df9",
            "messageBody": "",
            "insertions": 3,
            "deletions": 23
          }
        ]
      },
      {
        "insertions": 74,
        "deletions": 4,
        "date": "2015-04-01",
        "commitResults": [
          {
            "hash": "5f896a5797c96834bd60970072b0a0c7cea059a2",
            "messageTitle": "The lineno attribute of a SyntaxError can be None when the problem isn\u0027t related to a particular line.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "d8d7a2321632fd9c777efc8200bc44d44f10a324",
            "messageTitle": "Don\u0027t fail in the string checker when encountering a bytes string on Python 3 with a .format method called.",
            "messageBody": "",
            "insertions": 48,
            "deletions": 0
          },
          {
            "hash": "971033456bfdcd9d0cde91d3ed9ef9c6db2df7c9",
            "messageTitle": "Handle the case for not-context-manager when the context node is a Name.",
            "messageBody": "This fixes a crash.\n",
            "insertions": 25,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 17,
        "deletions": 2,
        "date": "2015-04-06",
        "commitResults": [
          {
            "hash": "ee60b21503c110f40f4bcdad683a91ddfb0e40bb",
            "messageTitle": "Don\u0027t warn about no-self-use for builtin properties.",
            "messageBody": "",
            "insertions": 17,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 25,
        "deletions": 5,
        "date": "2015-04-07",
        "commitResults": [
          {
            "hash": "206e5bb103c697df33181eef23c1bc46b42bc071",
            "messageTitle": "Fix a bad-reversed-sequence false positive.",
            "messageBody": "This patch looks for a __reversed__ method for subclasses\nof dict (this is especially present in OrderedDict implementations).\n",
            "insertions": 25,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 33,
        "deletions": 0,
        "date": "2015-04-08",
        "commitResults": [
          {
            "hash": "f1ec6037ace176e34cbfc8764af7c2c94839df34",
            "messageTitle": "Don\u0027t emit missing-docstring for private functions.",
            "messageBody": "",
            "insertions": 33,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 17,
        "deletions": 1,
        "date": "2015-04-13",
        "commitResults": [
          {
            "hash": "6f2af37f86b179d6a7f5cc074a533becfecec8a6",
            "messageTitle": "Provide a context file for get_module_part. This prevents a crash with various packages.",
            "messageBody": "",
            "insertions": 17,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 62,
        "deletions": 18,
        "date": "2015-04-16",
        "commitResults": [
          {
            "hash": "98e19e28fa711ed61fd84d39b6c698283643c8e9",
            "messageTitle": "Don\u0027t emit redefined-outer-name for __future__ directives.",
            "messageBody": "Closes issue #520.\n",
            "insertions": 23,
            "deletions": 6
          },
          {
            "hash": "e672010d367728194e1fe89172a79cc2bf0753ae",
            "messageTitle": "Replace some strings with a global variable, for clarity.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "3717cf4cf48543c4389ec20324f50c797fdd3517",
            "messageTitle": "Remove trailing whitespace.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "a6dcbca9e6b0cdff9e700bdfbad66d7ca7c2cb57",
            "messageTitle": "Simplify the not-context-manager check, by doing a simple parent lookup on a Generator.",
            "messageBody": "",
            "insertions": 36,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 45,
        "deletions": 22,
        "date": "2015-04-18",
        "commitResults": [
          {
            "hash": "12193a03d7b253170c6f58cf0f5168312d1656e9",
            "messageTitle": "Provide some hints for the bad-builtin message. Closes issue #522.",
            "messageBody": "",
            "insertions": 20,
            "deletions": 5
          },
          {
            "hash": "f6a57eaf5c2e6f97c7d1923ec60149cd23c11b61",
            "messageTitle": "Add logic for retrieving the HOME for Jython.",
            "messageBody": "",
            "insertions": 9,
            "deletions": 3
          },
          {
            "hash": "5a95d6693548aed8392f12eb9f1de1e1a5c6c8cf",
            "messageTitle": "Do a lookup in the locals when looking for __reversed__.",
            "messageBody": "This patch uses a .locals lookup instead of a .getattr lookup,\nbecause we are interested only in the __reversed__ special methods\n defined in dict subclasses, without looking in ancestors.\n",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "d97cd96bc43eeaa59d3d1a3a34e91ff91f813e44",
            "messageTitle": "Remove an unused function.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 7
          },
          {
            "hash": "ad2178b019b5b1cd8f34850f5b1f1e9ba1b4892b",
            "messageTitle": "Update the list of known special methods.",
            "messageBody": "",
            "insertions": 13,
            "deletions": 4
          },
          {
            "hash": "f2ea23723fe5f20ef3c4a421a3e9cccee414026a",
            "messageTitle": "Remove trailing whitespace.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 33,
        "deletions": 5,
        "date": "2015-04-19",
        "commitResults": [
          {
            "hash": "35156c0c4434db14d80d6f71871d82db1a28de40",
            "messageTitle": "Look for __init__ instead of __new__ in _determine_callable_obj if __new__ comes from builtins.",
            "messageBody": "Since the __new__ comes from builtins, it will not have attached any\ninformation regarding what parameters it expects, so the check\nwill be useless. Retrieving __init__ in that case will at least\ndetect a couple of false negatives. Closes issue #429.\n",
            "insertions": 24,
            "deletions": 3
          },
          {
            "hash": "fd9fff50e64b59926db7cc2c76f551f745e6a557",
            "messageTitle": "Remove trailing whitespace.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "6609ee8b12c600d2a8d4b69358c6ffe8c541a440",
            "messageTitle": "Add temporary fix for the builtins check in _determine_callable_obj.",
            "messageBody": "",
            "insertions": 8,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 124,
        "deletions": 54,
        "date": "2015-04-24",
        "commitResults": [
          {
            "hash": "9ddef58bf915f148ff64c9bf5903c3f7d9450bd4",
            "messageTitle": "Refactor common code for ignoring no-member for a owner in a particular function.",
            "messageBody": "",
            "insertions": 39,
            "deletions": 22
          },
          {
            "hash": "7a4828df6f39c5fddfb143d62f770b381cb68e6a",
            "messageTitle": "Move the mixin check inside _emit_no_member.",
            "messageBody": "",
            "insertions": 8,
            "deletions": 9
          },
          {
            "hash": "97f244839da2d6beae0644dbaca6241184a077ab",
            "messageTitle": "Move more no-member filters inside _emit_no_member. Add more tests.",
            "messageBody": "",
            "insertions": 44,
            "deletions": 15
          },
          {
            "hash": "5b297c875722afc05645b13538ea28de0d85e581",
            "messageTitle": "Document why _emit_no_member can\u0027t be used before the actual .getattr call.",
            "messageBody": "",
            "insertions": 7,
            "deletions": 0
          },
          {
            "hash": "d5f6bebbd8bc2b28eb725c29a64007463637356a",
            "messageTitle": "Don\u0027t emit no-member for classes with unknown bases.",
            "messageBody": "Since we don\u0027t know what those bases might add, we simply ignore\nthe error in this case.\n",
            "insertions": 26,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 26,
        "deletions": 4,
        "date": "2015-04-25",
        "commitResults": [
          {
            "hash": "94649f53e120cd702866ddd4cff71c42c272cc87",
            "messageTitle": "Lookup in the implicit metaclass when checking for no-member.",
            "messageBody": "If the class in question has an implicit metaclass, which is\nTrue for new style classes, then we can look into in when we are doing\na dot access on it. Closes issue #438.\n",
            "insertions": 25,
            "deletions": 3
          },
          {
            "hash": "8f53b166004a3325018f44c20ee94e84d36a402d",
            "messageTitle": "Remove trailing whitespace.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 5,
        "date": "2015-05-02",
        "commitResults": [
          {
            "hash": "792fe2e85a458c476040bf06c1da65082190ff8c",
            "messageTitle": "Fix some typos, rename _module_hierarchy to _qualified_names.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 53,
        "deletions": 8,
        "date": "2015-05-03",
        "commitResults": [
          {
            "hash": "835c84ba6ec8a46875f447a7c701e5c356a6266d",
            "messageTitle": "Add two new warnings, duplicate-bases and inconsistent-mro.",
            "messageBody": "duplicate-bases is emitted when a class has the same bases\nlisted more than once in its bases definition, while inconsistent-mro\nis emitted when no sane mro hierarchy can be determined. Closes issue #526.\n",
            "insertions": 27,
            "deletions": 1
          },
          {
            "hash": "7356b4e995781e5a68e6e7322c9c5bb3cf317dd7",
            "messageTitle": "Remove obsolete function, it was never used.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 7
          },
          {
            "hash": "498fcffa81404c897d2f1a8919885e0c458d5ba7",
            "messageTitle": "Forgot to add tests for the new warnings.",
            "messageBody": "",
            "insertions": 26,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 43,
        "deletions": 310,
        "date": "2015-05-05",
        "commitResults": [
          {
            "hash": "9b8cdb2c1589a60726af693de921c68753bafd55",
            "messageTitle": "Remove interface-not-implemented warning. Closes issue #532.",
            "messageBody": "",
            "insertions": 7,
            "deletions": 67
          },
          {
            "hash": "f5101591d9cb3be898671aa3ee2999c99e581bbb",
            "messageTitle": "Remove the rest of interface checks.",
            "messageBody": "The removed checks are interface-is-not-class,\nmissing-interface-method, unresolved-interface. The reason is that\nits better to start recommending ABCs instead of the old Zope era\nof interfaces.\n",
            "insertions": 9,
            "deletions": 215
          },
          {
            "hash": "12ac8b34ee74f87935df1c4e41977d3dc5646343",
            "messageTitle": "Make ignore-iface-methods a noop option, mark it as deprecated.",
            "messageBody": "",
            "insertions": 26,
            "deletions": 26
          },
          {
            "hash": "5a4e9a64d9b390e5b8a3189aab1d157737e2dfbd",
            "messageTitle": "Fix the wrong hanging indentation.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 15,
        "date": "2015-05-06",
        "commitResults": [
          {
            "hash": "a455fa902b3e8a1887afb76c7df3469b10b21498",
            "messageTitle": "Remove entries regarding interfaces from the documentation.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 15
          }
        ]
      },
      {
        "insertions": 64,
        "deletions": 25,
        "date": "2015-05-07",
        "commitResults": [
          {
            "hash": "42a2b2f0a1d5825399037b4ec98bbb1c13e3311f",
            "messageTitle": "Remove trailing whitespace.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "e288996ab6a0214343a59091a6597377a30c398f",
            "messageTitle": "Remove unused imports.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 3
          },
          {
            "hash": "740643ed7223e3ea45123a0fb006631e731d3633",
            "messageTitle": "Remove unused variables.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "6d4b900d59f617fc6cd669dc5e663c571c3835dd",
            "messageTitle": "Fix unidiomatic-typecheck.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "059ee04d555a25812e7d0234ba737fa1065c5461",
            "messageTitle": "Fix a couple of other pylint warnings over pylint codebase.",
            "messageBody": "",
            "insertions": 13,
            "deletions": 13
          },
          {
            "hash": "3bb1129f219a4a3f297f454a95faea6b01c205a8",
            "messageTitle": "Disable in pylintrc only the actual problems from the codebase.",
            "messageBody": "",
            "insertions": 10,
            "deletions": 1
          },
          {
            "hash": "c390798034758c5c62717cf49358659164e99b6b",
            "messageTitle": "Emit a proper deprecation warning for reporters.BaseReporter.add_message.",
            "messageBody": "The alternative way is to use handle_message. add_message will be removed in\nPylint 1.6.\n",
            "insertions": 28,
            "deletions": 2
          },
          {
            "hash": "e573339ebe984b0100bd47fe862edf750fba8140",
            "messageTitle": "Don\u0027t emit warnings in the deprecated method.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "d957ae5764aff1eb6f7e021b0f75846bf7d2654a",
            "messageTitle": "Get rid of abstract-method warnings emitted over pylint\u0027s codebase.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 51,
        "deletions": 73,
        "date": "2015-05-08",
        "commitResults": [
          {
            "hash": "1d4ff5ae6a411b94c7cb71f76d5e7c4726df5782",
            "messageTitle": "Fix other pylint warnings over pylint\u0027s codebase.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "393fd32e2ace7bd46c844696cafc001f4accc553",
            "messageTitle": "Fix the implementation of except_implementations, it was busted due to the fact that methods were compared to strings.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "826343e5e26bc3b76c6082e0c7d66dcbdbbdcef8",
            "messageTitle": "Fix the functional tests for unnown-encoding.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "4dd927cef6e91bce968e0cccec68f1f7c24d482e",
            "messageTitle": "Remove the tests for unknown-encoding for Python 3 because they can\u0027t be tested reliably, due to absolute paths.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 11
          },
          {
            "hash": "b41cadf0b4d9622ec6b9c56fe721aa6584bee448",
            "messageTitle": "Change the way how __new__ or __init__ is chosed for _determine_callable_obj.",
            "messageBody": "Previously, we looked for __init__ only if the __new__ was belonging\nto the object class or if it was from builtins module. The last check\nwas changed to see if __new__ comes from a built-in module. Since\nwe can\u0027t determine the signature of built-in modules, we simply\ngo and look for __init__ then (this handles a couple of false\npositives on other implementations, such as PyPy, where Exception.__new__\ncomes from exceptions, which is builtin, but on Python 2,\nException.__new__ comes from the builtins module).\n",
            "insertions": 3,
            "deletions": 8
          },
          {
            "hash": "48e576fa1acd1038421fa18695a8a1e2304656b8",
            "messageTitle": "Add specific test for unknown-encoding for Jython.",
            "messageBody": "",
            "insertions": 11,
            "deletions": 1
          },
          {
            "hash": "1c97fceb3af4955bb3206744dd6f114b9428b938",
            "messageTitle": "Remove the keyword repeated check (not reliable on other implementations, syntax error already handled by other tests)",
            "messageBody": "",
            "insertions": 0,
            "deletions": 12
          },
          {
            "hash": "5e4f9a306e829942a875efebbf7be2227f85e363",
            "messageTitle": "Use the new style tests for deprecated-modules. Remove stringprep from the list of deprecated modules for Python 3.",
            "messageBody": "",
            "insertions": 20,
            "deletions": 29
          },
          {
            "hash": "1d9b948ae3149c04b56ebbf2bf17d9351225aff6",
            "messageTitle": "Port syntax-error test to the new test framework, add test for Jython.",
            "messageBody": "",
            "insertions": 8,
            "deletions": 4
          },
          {
            "hash": "badb3f8c922709f089ac35902b4edcbe71b05056",
            "messageTitle": "Ignore Jython compiled files when gathering old style tests.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "52e8f521a8e117bf09a23cc3e9fc91bf2bf869c2",
            "messageTitle": "Ignore invalid-encoded-data for Jython.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 8,
        "date": "2015-05-09",
        "commitResults": [
          {
            "hash": "6f84af30d679e59dc43cf283d5b762a368c4bd52",
            "messageTitle": "Remove the import_syntax_error test.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 58,
        "deletions": 28,
        "date": "2015-05-10",
        "commitResults": [
          {
            "hash": "5531578d95d7d2c8ae975b8e53162ed82fcdf615",
            "messageTitle": "Move non-iterator-returned to a new checker, SpecialMethodsChecker, which has checks for structural checking of special methods.",
            "messageBody": "",
            "insertions": 46,
            "deletions": 26
          },
          {
            "hash": "3796cc803166dbf638bde9a69b6e7d233fb14025",
            "messageTitle": "Update the list of known special methods.",
            "messageBody": "",
            "insertions": 9,
            "deletions": 1
          },
          {
            "hash": "77fe964fd08cac3f30f5d7860d132d3fc98fcba4",
            "messageTitle": "Add new contributor.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "f407dd751d1a48f97fafc6ceb633da7acba203fa",
            "messageTitle": "Move extensions/test to pylint.test, so they could be tested along with the rest of the tests.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 0
          },
          {
            "hash": "ea27a8349b2882b33cda2a30e237b66483c2951d",
            "messageTitle": "Change the name of the parameter checker, so that it can be chosen easily at command line.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 123,
        "deletions": 137,
        "date": "2015-05-11",
        "commitResults": [
          {
            "hash": "bbc61a1b92a3f5fd4fcc60f000ebde1cc6958123",
            "messageTitle": "Cleanup.",
            "messageBody": "",
            "insertions": 33,
            "deletions": 41
          },
          {
            "hash": "74bf44805cd2efcb294060b3d71ecc2b886fba37",
            "messageTitle": "Forgot to add James Morgensen",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "ea731cbc897c61db3d294ddcab30f22b825095d8",
            "messageTitle": "Test drone.io misbehaviour.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "4f7b75e02c79e8832b274eb5e00f3e949bba68f8",
            "messageTitle": "Revert drone.io test change, add test.extensions.__init__.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          },
          {
            "hash": "d8ab79832099cb0556facb9e7bb575f832b5c5d9",
            "messageTitle": "Improve detection of undefined variables.",
            "messageBody": "Detect undefined variable cases, where the \"definition\" of an undefined\nvariable was in del statement, e.g:\nx \u003d y\ndel y\n\nInstead of emitting used-before-assignment, which is totally misleading,\nit now emits undefined-variable. Closes issue #528.\n",
            "insertions": 20,
            "deletions": 6
          },
          {
            "hash": "82bb8ae3d6f2cd60fc9ea5a1754b10e3aad4c2f8",
            "messageTitle": "Port access-member-before-definition test to the new test style.",
            "messageBody": "",
            "insertions": 11,
            "deletions": 13
          },
          {
            "hash": "67dd07bb7269c93b8b9385e3edf2ba5bc3ed95d3",
            "messageTitle": "Port attribute-defined-outside-init to the new test style format.",
            "messageBody": "",
            "insertions": 56,
            "deletions": 76
          }
        ]
      },
      {
        "insertions": 249,
        "deletions": 129,
        "date": "2015-05-12",
        "commitResults": [
          {
            "hash": "0747d6387becc555e22ec6b8fcff3797ab1ee557",
            "messageTitle": "Don\u0027t emit attribute-defined-outside-init and access-member-before-definition for mixin classes.",
            "messageBody": "Actual errors can occur in mixin classes, but this is controlled by the ignore-mixin-members option,\nso if something is a legitimate error, then the user can pass --ignore-mixin-members\u003dno\nin order to check these in mixin classes as well. Closes issue #412.\n",
            "insertions": 30,
            "deletions": 1
          },
          {
            "hash": "61da98ee74941dc42535540f4f1047b817220f00",
            "messageTitle": "Detect undefined-variables in function default arguments.",
            "messageBody": "This patch improves the detection of undefined variables and variables used before\nassignment for variables used as default arguments to function,\nwhere the variable was first defined in the class scope.\nCloses issue #342.\n",
            "insertions": 46,
            "deletions": 10
          },
          {
            "hash": "b8cfb499bb2377043fffb40e5891deef4ed62011",
            "messageTitle": "Remove trailing whitespace.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "3c0a77a67d9e651885fc4f60266f2e8ec0511f41",
            "messageTitle": "Rewrite is_builtin to be cleaner.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 6
          },
          {
            "hash": "3a3b58c1ab6afe382888dc908b03f863a9078f71",
            "messageTitle": "Use the base_scope_type instead of looking in self._to_consume directly.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "5193b7d7fd63b5ddc4077cb5f37c3cd55a9d6561",
            "messageTitle": "Improve the detection of undefined variables in function arguments",
            "messageBody": "This patch involves a lot of subtle changes:\n\n* is_defined_before takes in consideration the fact that its argument\n  node is a default value for a Lambda / Function.\n  If it is a default value, then the search is left to the parent of\n  the lambda. Basically for x in the following, the result of is_defined_before\n  will be determined by foo:\n\n  def foo():\n      x \u003d 42\n      func \u003d lambda x\u003dx: x * x\n      return func\n\n* there\u0027s another special rule for undefined-variable which verifies that\n  a node is used in Arguments.defaults and if the actual definition\n  is happening before the Arguments statement, basically trying\n  to understand the following:\n\n  class A:\n     x \u003d 42\n     foo \u003d lambda x\u003dx: x * x\n\n* undefined variable is emitted if both scope types, for the node\n  analyzed and for its actual definition, is they are both lambda\n  scopes.\n\nCloses issue #404.\n",
            "insertions": 37,
            "deletions": 3
          },
          {
            "hash": "b76e31d092c793b4f74c09a1ae2b412478dd4f32",
            "messageTitle": "Refactoring of visit_name from variables.py, which is a horrendous function with 200 lines of Python code.",
            "messageBody": "The whole thing needs to be rewritten though, because there are a *lot* of heuristic\nrules to determine if a variable is undefined or if it is used before the\nactual assignment.\n",
            "insertions": 130,
            "deletions": 105
          }
        ]
      },
      {
        "insertions": 247,
        "deletions": 133,
        "date": "2015-05-14",
        "commitResults": [
          {
            "hash": "62f40c65ee8c1f5283b343ca23a6efb76b283633",
            "messageTitle": "Add a new warning \u0027unexpected-special-method-signature\u0027.",
            "messageBody": "This is emitted when a special method (dunder method) doesn\u0027t have the expected signature,\nwhich can lead to actual errors in the application code. Closes issue #253.\n",
            "insertions": 194,
            "deletions": 45
          },
          {
            "hash": "57ff20b24c208a201002ea6ec790fb36bbf766d5",
            "messageTitle": "Remove \u0027bad-context-manager\u0027 due to the inclusion of \u0027unexpected-special-method-signature\u0027.",
            "messageBody": "",
            "insertions": 48,
            "deletions": 83
          },
          {
            "hash": "5ffe76bad98a971bcb80621b8b8744f316ae61ea",
            "messageTitle": "Remove trailing whitespaces.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 133,
        "deletions": 72,
        "date": "2015-05-16",
        "commitResults": [
          {
            "hash": "31951144ae477aef9877b1acefcfc81143d18cae",
            "messageTitle": "Don\u0027t emit no-name-in-module if the import is guarded by an ImportError handler.",
            "messageBody": "",
            "insertions": 49,
            "deletions": 16
          },
          {
            "hash": "4abd20f19f4d27d980a9d460be726fd052bfb177",
            "messageTitle": "Disable bad-builtin for using a map.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "7d72dfb9add82de5b982491a64e24e94aaef5f7d",
            "messageTitle": "Use the map version from six.moves.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "f67d43227ebab39b21bb0528901934966bc6b20f",
            "messageTitle": "Fix some pylint warnings over pylint\u0027s codebase.",
            "messageBody": "",
            "insertions": 32,
            "deletions": 30
          },
          {
            "hash": "cd2c4adeb2cb01344781e6e0782f0167495d97a5",
            "messageTitle": "Add a new function, error_of_type, which verifies that an exception handler is catching a particular exception.",
            "messageBody": "Due to this new function, is_import_error is deprecated and scheduled\nfor removal in Pylint 1.6.\n",
            "insertions": 45,
            "deletions": 7
          },
          {
            "hash": "18a2b05120772aec3f71a2735fd5266728b15afe",
            "messageTitle": "BaseReporter.add_message is scheduled for removal for Pylint 1.6, not 1.7.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "feda7a74672be2faefeedce145c74fba1bc2fb44",
            "messageTitle": "Fix some pylint issues.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 5
          },
          {
            "hash": "732be105e70410c21b08c8802016bb7feef96315",
            "messageTitle": "Remove redundant test.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 11
          }
        ]
      },
      {
        "insertions": 169,
        "deletions": 30,
        "date": "2015-05-17",
        "commitResults": [
          {
            "hash": "97a572463f3bf15fcda61659e4f63ee8fc437da8",
            "messageTitle": "error_of_type can support multiple exceptions for the error_type parameter.",
            "messageBody": "",
            "insertions": 24,
            "deletions": 3
          },
          {
            "hash": "92faee5fe7b8bc13dfcf0be4a68ddc3db7786ed2",
            "messageTitle": "Don\u0027t emit no-member for nodes protected by AttributeError, Exception or bare except handlers.",
            "messageBody": "",
            "insertions": 46,
            "deletions": 4
          },
          {
            "hash": "8b46b80716295d36ebaecaa25f9a9d1f9ee65f04",
            "messageTitle": "Ignore bad-builtin.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "2b635616bbf31feae9a6306bcb7b513d183bdccb",
            "messageTitle": "Refactor exception catching blocks into a new function, node_ignores_exception, used to verify if a node is protected by an exception handler of specific type.",
            "messageBody": "",
            "insertions": 24,
            "deletions": 13
          },
          {
            "hash": "1e0fce173bd7526f7751ec18aae582ad5c45115f",
            "messageTitle": "Don\u0027t emit import-error for nodes protected by an except clause which handles ImportError, Exception or bare except.",
            "messageBody": "",
            "insertions": 13,
            "deletions": 3
          },
          {
            "hash": "e653ba16cba155a9ad9839b99ff9dec3ea54cccc",
            "messageTitle": "Don\u0027t emit no-name-in-module for nodes protected by an except clause which handles ImportError, Exception or bare except.",
            "messageBody": "",
            "insertions": 14,
            "deletions": 4
          },
          {
            "hash": "b8b0bba4e795e9f10b1be998b70cb5a8416c881d",
            "messageTitle": "Add ChangeLog entry for changesets beca5817 and 140c2a5cfdc6.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 1
          },
          {
            "hash": "69b6a923648e665937661867adce963f303ddc24",
            "messageTitle": "Add tests for node_ignores_exception.",
            "messageBody": "",
            "insertions": 24,
            "deletions": 0
          },
          {
            "hash": "811b9a12f4b58b5e6c8fd917716c1d6682bed2b7",
            "messageTitle": "Add new tests for testing node_ignores_exception.",
            "messageBody": "",
            "insertions": 18,
            "deletions": 0
          },
          {
            "hash": "437986d7888708ff24fc2962a1cc873b65a92272",
            "messageTitle": "Remove unused import.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 3,
        "date": "2015-05-18",
        "commitResults": [
          {
            "hash": "81fa61787f489ce33459dfa89687cdb129f2f737",
            "messageTitle": "Remove zope specific members from generated-members.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "46885354f82f71bd6bc7dc45898144d9ab888dcc",
            "messageTitle": "Fix some typos.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 32,
        "deletions": 11,
        "date": "2015-05-19",
        "commitResults": [
          {
            "hash": "8bb6ef864a0fc3eedf99bd38cf69d5a1f4353a75",
            "messageTitle": "Don\u0027t redirect users to pylint-messages.wikidot.com. Closes issue #539.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 7
          },
          {
            "hash": "a38b4d9d7574af844767e8668483ffe506e931de",
            "messageTitle": "Don\u0027t emit undefined-variable if the node is guarded by a NameError, Exception or bare except clause.",
            "messageBody": "",
            "insertions": 32,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 202,
        "deletions": 19,
        "date": "2015-05-23",
        "commitResults": [
          {
            "hash": "26b75fb11969a4d56c0161fd0a6e6cbd4cf54c80",
            "messageTitle": "Remove invalid test marker, Data can be found inside this test.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "d3996d3758f73b789eaa70263f0c03b29f029f7f",
            "messageTitle": "Add a new warning, \u0027using-constant-test\u0027.",
            "messageBody": "This new warning is emitted when a conditional statement (If, IfExp) uses a test\nwhich is always constant, such as numbers, classes, functions etc.\nThis is most likely an error from the user\u0027s part. Closes issue #524.\n",
            "insertions": 201,
            "deletions": 18
          }
        ]
      },
      {
        "insertions": 36,
        "deletions": 9,
        "date": "2015-05-24",
        "commitResults": [
          {
            "hash": "23f9ff743c401be9bb37d887ae9382c871bfcc61",
            "messageTitle": "Handle format-combined-specification explicitly on Jython, where parsing such a string fails with ValueError, contrary to CPython, where the failure is in the intepreter.",
            "messageBody": "",
            "insertions": 12,
            "deletions": 3
          },
          {
            "hash": "4f5b05b7e26d43fa801020a25ab14fb2d70f0e51",
            "messageTitle": "Disable test on Jython.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "b4f954f376e9ffd18648c843bdb6749bfe1111a2",
            "messageTitle": "Fix the encoding marker which is unrecognised on Jython.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "92dfbd00c3d46bd8420a32238a804a1c2a9fd020",
            "messageTitle": "Make test_no_context_file test compatible with Jython.",
            "messageBody": "",
            "insertions": 7,
            "deletions": 3
          },
          {
            "hash": "829b0088eb9d382ddfd42bf1c458dc2f00220ece",
            "messageTitle": "Add functional test for the func_tokenize_error, handling Jython as well.",
            "messageBody": "",
            "insertions": 13,
            "deletions": 1
          },
          {
            "hash": "2a3e3b1d5e819ae3e2348dff49a7906181e09ab5",
            "messageTitle": "Remove trailing whitespace.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 13,
        "deletions": 11,
        "date": "2015-05-25",
        "commitResults": [
          {
            "hash": "47768e1ea36e28915be163fa9a3e8aae2887349b",
            "messageTitle": "Pass the invalid __all__ element in a tuple to add_message method, in order to have it correctly interpolated for empty strings.",
            "messageBody": "",
            "insertions": 8,
            "deletions": 6
          },
          {
            "hash": "cc017cb17f664822df32eb1947c79656f6570eae",
            "messageTitle": "`but` from logging-format-interpolation is changed to `and`",
            "messageBody": "`but` introduces an independent clause, which makes the sentence a little hard to\nbe understood.\n",
            "insertions": 5,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 18,
        "deletions": 11,
        "date": "2015-05-27",
        "commitResults": [
          {
            "hash": "edd81b5aa28639b9af874b9d5f727e4a4a1c8485",
            "messageTitle": "Don\u0027t emit \u0027raising-non-exception\u0027 when the exception has unknown bases.",
            "messageBody": "We don\u0027t know what those bases actually are and it\u0027s better\nto assume that the user knows what he is doing rather than emitting\na message which can be considered a false positive.\n",
            "insertions": 18,
            "deletions": 11
          }
        ]
      },
      {
        "insertions": 9,
        "deletions": 4,
        "date": "2015-05-28",
        "commitResults": [
          {
            "hash": "611f817a1d8d1ab12554e8f0197a2bd7fd5603c4",
            "messageTitle": "Pylint understand super calls.",
            "messageBody": "",
            "insertions": 8,
            "deletions": 3
          },
          {
            "hash": "02c3d6e732bf920e4461302fe45714a0b0c2f3f6",
            "messageTitle": "Remove unused imports.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 28,
        "deletions": 7,
        "date": "2015-05-29",
        "commitResults": [
          {
            "hash": "9632b58fec7661bad6d55abb06ebf361383aabd8",
            "messageTitle": "Don\u0027t emit no-member on supers with unknown bases in the MRO.",
            "messageBody": "",
            "insertions": 28,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 58,
        "deletions": 5,
        "date": "2015-06-01",
        "commitResults": [
          {
            "hash": "005e9bcc44e3d664ac860265cb3cb316ba039b40",
            "messageTitle": "Don\u0027t fail with a traceback when checking if a member exists in a super call for a class with an invalid MRO.",
            "messageBody": "",
            "insertions": 14,
            "deletions": 3
          },
          {
            "hash": "daef10781af4eae6724a05107ee2a6e1f15b73a5",
            "messageTitle": "Add tests for checking the new understanding of super calls.",
            "messageBody": "",
            "insertions": 36,
            "deletions": 1
          },
          {
            "hash": "64ff9b5b0d1c3c7c8d3acc66ae1c5489bdbe33ed",
            "messageTitle": "Add ChangeLog entry, new test and documentation for searching .pylintrc in the current folder.",
            "messageBody": "",
            "insertions": 8,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 33,
        "deletions": 2,
        "date": "2015-06-08",
        "commitResults": [
          {
            "hash": "91fd8e732f751fea3e8e3af269a4e8bfc4aac365",
            "messageTitle": "Support using-constant-test for comprehensions.",
            "messageBody": "",
            "insertions": 33,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2015-06-10",
        "commitResults": [
          {
            "hash": "a180100f548c150397dcfbdf4fda524304fe0fdc",
            "messageTitle": "Remove trailing whitespace.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 84,
        "deletions": 0,
        "date": "2015-06-13",
        "commitResults": [
          {
            "hash": "e9da70583436688d84e0440c428cbaf3ba37a2be",
            "messageTitle": "Add a new error, \u0027invalid-unary-type-operand\u0027.",
            "messageBody": "This new error is emitted when an unary operand is used on\nsomething which doesn\u0027t support that operation (for instance,\nusing the unary bitwise inversion operator on an instance which\ndoesn\u0027t implement __invert__).\n",
            "insertions": 19,
            "deletions": 0
          },
          {
            "hash": "435ab6db5ab8e68a007a53f58854bdc819527ca6",
            "messageTitle": "Add tests for the previous changeset.",
            "messageBody": "",
            "insertions": 65,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 174,
        "deletions": 47,
        "date": "2015-06-14",
        "commitResults": [
          {
            "hash": "4dd5462399e760f7d1a183d67420f74f80a295a7",
            "messageTitle": "arguments-differ understand differences between various type of functions.",
            "messageBody": "This patch improves the way how arguments-differ understands the differences\nbetween classmethods, staticmethods and properties. Closes issue #548.\n",
            "insertions": 171,
            "deletions": 44
          },
          {
            "hash": "3d5e0cefd6adff3ba3bc0aa5459520c165eb9664",
            "messageTitle": "Remove trailing whitespace.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 31,
        "deletions": 11,
        "date": "2015-06-15",
        "commitResults": [
          {
            "hash": "5a30e9eeec248f5e7b486af0b2e62f8754e9a022",
            "messageTitle": "Fix a false positive regarding staticmethods: they don\u0027t have an implicit argument when \u0027bounded\u0027.",
            "messageBody": "",
            "insertions": 30,
            "deletions": 4
          },
          {
            "hash": "da006a6eb6c526b74e3f1e9a3b14b413b8cdda80",
            "messageTitle": "Revert partially the previous commit: let astroid return functions, not BoundMethods for staticmethods.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 475,
        "deletions": 22,
        "date": "2015-06-17",
        "commitResults": [
          {
            "hash": "d9c9c3461b523ea212b8c9734eb4db148af3aa9a",
            "messageTitle": "Emit no-member checks for nodes found in an ExceptHandler branch, without exception guarding.",
            "messageBody": "",
            "insertions": 25,
            "deletions": 1
          },
          {
            "hash": "dc124624f30b120add56794fe31e631815ec6a03",
            "messageTitle": "Import astroid inspector to pyreverse.inspector.",
            "messageBody": "",
            "insertions": 354,
            "deletions": 4
          },
          {
            "hash": "e71a0355a4881a3276703581699317c8fd3be898",
            "messageTitle": "Replace the license with what is already used in the project.",
            "messageBody": "",
            "insertions": 13,
            "deletions": 14
          },
          {
            "hash": "ea964e5656e6e63c0b60cca6fca7f8b0c1dbc760",
            "messageTitle": "astroid.utils.LocalsVisitor was moved to pylint.pyreverse.LocalsVisitor.",
            "messageBody": "",
            "insertions": 83,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 107,
        "deletions": 93,
        "date": "2015-06-20",
        "commitResults": [
          {
            "hash": "081558dd54edb64c64f6c05bec6450a4024aad53",
            "messageTitle": "Improve the readability of a function by using a defaultdict(set) instead of manually checking if a node was already inferred.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 10
          },
          {
            "hash": "8e8b918ff32a52183446abcabb4a3064c263c916",
            "messageTitle": "Make sure that every frame used by pyreverse.inspect has a locals_type attribute",
            "messageBody": "This patch calls visit_\u003cnode_type\u003e whenever a frame doesn\u0027t have a `locals_type`\nattribute, most likely because it wasn\u0027t yet visited. Closes issue #543.\n",
            "insertions": 18,
            "deletions": 15
          },
          {
            "hash": "85be149e66bd6010da4065601b4aca9cfa6e13a5",
            "messageTitle": "Fix the broken tests, since locals_types and instance_attr_types were expected to be lists.",
            "messageBody": "",
            "insertions": 8,
            "deletions": 6
          },
          {
            "hash": "2a1ce41ecdabf99b85ccdeebc5f59fc86c918afd",
            "messageTitle": "pylint.checkers.utils.excepts_import_error was removed.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 11
          },
          {
            "hash": "7372ad0aa105b59af2a3c6c66350e09312ba0d68",
            "messageTitle": "Don\u0027t emit not-context-manager for instances with unknown bases.",
            "messageBody": "",
            "insertions": 13,
            "deletions": 1
          },
          {
            "hash": "487baa866e4ca5e2bd4ed20684eb0265309f0c67",
            "messageTitle": "Don\u0027t emit undefined-all-variable for nodes which can\u0027t be inferred (which returns YES from inference).",
            "messageBody": "",
            "insertions": 14,
            "deletions": 10
          },
          {
            "hash": "2a38dcc9b758fcc063bc6562940549c928342f8d",
            "messageTitle": "Move the code which checks undefined-all-variable into a new private function.",
            "messageBody": "",
            "insertions": 47,
            "deletions": 40
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 1,
        "date": "2015-06-21",
        "commitResults": [
          {
            "hash": "382bc5154e7b95d0b6d7743d188dd767277732ae",
            "messageTitle": "Add the new __matmul__ and __rmatmul__ dunder methods to the list of known special methods.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2015-06-23",
        "commitResults": [
          {
            "hash": "57306a0493a4674f177d311835970a2ef6c83944",
            "messageTitle": "Disable not-callable because NotImplemented is inferred correctly now (and we call it in the test).",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 8,
        "deletions": 2,
        "date": "2015-06-24",
        "commitResults": [
          {
            "hash": "684c7085da0513700c8974c0e0d612714567117f",
            "messageTitle": "Add tests for checking the ability to understand one-argument type builtin.",
            "messageBody": "",
            "insertions": 8,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 118,
        "deletions": 6,
        "date": "2015-06-25",
        "commitResults": [
          {
            "hash": "904f95d231624925201a5821fe26f57a8961e1be",
            "messageTitle": "yield-outside-func is also emitted for `yield from`.",
            "messageBody": "",
            "insertions": 18,
            "deletions": 2
          },
          {
            "hash": "0073a8af7dc017ae8b4fd6a0036d519ef1d1eb38",
            "messageTitle": "Add a new error, \u0027too-many-star-expressions\u0027.",
            "messageBody": "The error is emitted when there are more than one starred expression (*x) in an assignment.\nThe warning is emitted only on Python 3.\n",
            "insertions": 22,
            "deletions": 0
          },
          {
            "hash": "662d019fa1125ef570be6d64c281e7d5d0f2fb25",
            "messageTitle": "Add a new error, \u0027invalid-star-assignment-target\u0027.",
            "messageBody": "This error is emitted when a starred expression (*x) is used as the lhs\nside of an assignment, as in `*x \u003d [1, 2]`. This is not a SyntaxError on Python 3 though.\n",
            "insertions": 22,
            "deletions": 1
          },
          {
            "hash": "e8023fa85434fe2bb1989f658cfba6f3f30c3a95",
            "messageTitle": "Detect a couple of objects which can\u0027t be base classes (bool, slice, range and memoryview, which weren\u0027t detected until now).",
            "messageBody": "",
            "insertions": 32,
            "deletions": 2
          },
          {
            "hash": "70cc7e6b325fbfc15bb88e311bb5705f1303b24c",
            "messageTitle": "Add a new error for the Python 3 porting checker, `import-star-module-level`.",
            "messageBody": "This error is used when a star import is detected in another scope than the\nmodule level, which is an error on Python 3. Using this will emit a\nSyntaxWarning on Python 2.\n",
            "insertions": 24,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 98,
        "deletions": 20,
        "date": "2015-06-26",
        "commitResults": [
          {
            "hash": "331efd58f123f355355ad3381ba1692a0ea4aefc",
            "messageTitle": "Add a new error, \u0027star-needs-assignment-target\u0027.",
            "messageBody": "This error is emitted on Python 3 when a Starred expression (*x) is\nnot used in an assignment target. This is not caught when parsing the\nAST on Python 3, so it needs to be a separate check.\n",
            "insertions": 28,
            "deletions": 2
          },
          {
            "hash": "fc610dd4244fe505c5677abfb89753de6c549970",
            "messageTitle": "Verify explicitly that a class is not a known exception class.",
            "messageBody": "This catches a couple of builtins which weren\u0027t previously detected\nwhen checking for catching-non-exception, because all builtins were exempted\nfrom this check.\n",
            "insertions": 34,
            "deletions": 3
          },
          {
            "hash": "bcc4f13589c49cf2a09ae53436b666481b20800c",
            "messageTitle": "Remove deque specialized code, since it is already handled by astroid.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 5
          },
          {
            "hash": "759954e2bc1b5bb139358288b2bc1ac1c1683edc",
            "messageTitle": "Add tests for checking that calling constructors from class methods with invalid signatures are detected properly.",
            "messageBody": "",
            "insertions": 24,
            "deletions": 0
          },
          {
            "hash": "ccd0c9f9a9c9512e3923e6dbfaa86d1fe3cd5d1c",
            "messageTitle": "Move the property into a private function and call it in Checker.open.",
            "messageBody": "",
            "insertions": 12,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 19,
        "deletions": 1,
        "date": "2015-06-27",
        "commitResults": [
          {
            "hash": "e261365844666e96bf059ec689c3e7f2d2b19d29",
            "messageTitle": "Add tests for understanding constructors after a type() call.",
            "messageBody": "",
            "insertions": 19,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 132,
        "deletions": 13,
        "date": "2015-06-30",
        "commitResults": [
          {
            "hash": "859656c97fbf98dca4466f6b62246638d5bb6cf2",
            "messageTitle": "Add a new error, \u0027unsupported-binary-operation\u0027.",
            "messageBody": "This error is emitted when two a binary arithmetic operation is\nexecuted between two objects which don\u0027t support it\n(a number plus a string for instance).\n",
            "insertions": 116,
            "deletions": 12
          },
          {
            "hash": "c037b614d27bc027f045ac75786e24ad761fefac",
            "messageTitle": "Add test for issue #523, which was solved in astroid. Closes issue #523.",
            "messageBody": "",
            "insertions": 16,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 18,
        "date": "2015-07-02",
        "commitResults": [
          {
            "hash": "459585cd65597cf94bdb12e219ec104866f40d25",
            "messageTitle": "Disable for unsupported-binary-operation",
            "messageBody": "Unfortunately, this warning exhibits currently way too many false\npositives, practically rendering this error useless. I can\u0027t fix\nall of them until I release Pylint 1.5, so the most reasonable\nchoice for now is to disable it and reenable it as soon as we fix\nthose problems.\n",
            "insertions": 6,
            "deletions": 2
          },
          {
            "hash": "a7483fb763c3e19f6f3d5a28743b720c11da1873",
            "messageTitle": "Remove a couple of faulty tests",
            "messageBody": "logilab.common 1.0+ is now a namespace package, which has the side\neffect that it is considered builtin, which makes the no-member\ncheck to not emit a message in certain situations.\n",
            "insertions": 6,
            "deletions": 16
          }
        ]
      },
      {
        "insertions": 232,
        "deletions": 38,
        "date": "2015-07-03",
        "commitResults": [
          {
            "hash": "ada4ef88555020acbafe772975f7bb0aa01d7e14",
            "messageTitle": "New imported features from astroid into pyreverse.",
            "messageBody": "We moved pyreverse.inspector.Project, pyreverse.inspector.project_from_files\nand pyreverse.inspector.interfaces. These were moved since they didn\u0027t belong in astroid\nand they can be better maintained inside pyreverse itself.\n",
            "insertions": 199,
            "deletions": 21
          },
          {
            "hash": "35914721da510ae9465720df31afbad7fccce3c7",
            "messageTitle": "Fix bad whitespace.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "d67554aa3a7d1bdb7352a8834acdcd623d2b4d15",
            "messageTitle": "Fix failing test, due to how tox (or drone.io) works: there are multiple copies of pylint installed in different places.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 10
          },
          {
            "hash": "4df3ca75bd04bf1054fdb4888148d25f532d226e",
            "messageTitle": "Ignore mixin classes when emitting not-context-manager, to avoid false positives.",
            "messageBody": "",
            "insertions": 17,
            "deletions": 0
          },
          {
            "hash": "34311c9ac1c346231a527939fd7bde38224b9ae5",
            "messageTitle": "Enable misplaced-future for Python 3. Closes issue #580.",
            "messageBody": "",
            "insertions": 13,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 18,
        "date": "2015-07-05",
        "commitResults": [
          {
            "hash": "7f8871bd3ea273d2ed96f55f87eb56d8b8a584a6",
            "messageTitle": "Simplify error_of_type by using ExceptHandler.catch.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 18
          }
        ]
      },
      {
        "insertions": 165,
        "deletions": 95,
        "date": "2015-07-06",
        "commitResults": [
          {
            "hash": "43945fd78e0bea4c00a5ddea43e50a0f49df5317",
            "messageTitle": "Add a new error, \u0027nonlocal-and-global\u0027.",
            "messageBody": "This error is emitted when a name is found to be both nonlocal and global in the same scope.\nThis is a SyntaxError in Python 2, but Python 3\u0027s ast happily parses it, so it needs\nto be a separate error. Closes issue #581.\n",
            "insertions": 40,
            "deletions": 1
          },
          {
            "hash": "6ab79eebb2921208ee68bbfa4143d44ed6cd3592",
            "messageTitle": "We understand namedtuple._replace properly (in a static analysis sense of course), so remove wrong assumption.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 2
          },
          {
            "hash": "47b1c773606824c22e9ae27707b9429badbc121d",
            "messageTitle": "Use safe_infer and has_known_bases from astroid.helpers. Closes issue #593.",
            "messageBody": "",
            "insertions": 61,
            "deletions": 86
          },
          {
            "hash": "5092eabff9222a1022de7e853eb492afafd07cae",
            "messageTitle": "Fix a not-context-manager false positive.",
            "messageBody": "If the parent of the generator is not the context manager itself,\nthat means that it could have been returned from another\nfunction which was the real context manager.\nThe approach we took is more of a hack rather than a real\nsolution: use an inference context when inferring the context manager\nvalue in order to store all the inferred statements. Walk all the\ninferred statements for the given *ctx_mgr* and if we find one\nfunction scope which is decorated, consider it to be the real\nmanager and give up, otherwise emit not-context-manager.\nThe problem is that we can\u0027t say for sure what the context\nmanager actually is, because the inference will just return\nthe final result (which in the case of using contextlib.contextmanager,\nit can be a generator). See the test file for not_context_manager for a couple\nof self explaining tests. Closes issue #577.\n",
            "insertions": 62,
            "deletions": 5
          },
          {
            "hash": "6beba11e82d2c8548f3592d4bcedceeea5ebfad5",
            "messageTitle": "Remove trailing whitespace.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 71,
        "deletions": 10,
        "date": "2015-07-07",
        "commitResults": [
          {
            "hash": "2ecfa1fc655976cf57efe50beeb9ebf7347b0160",
            "messageTitle": "ignored-classes option can work with qualified names, as well as with Unix patterns.",
            "messageBody": "Closes issues #244 and #297.\n",
            "insertions": 71,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 62,
        "deletions": 37,
        "date": "2015-07-08",
        "commitResults": [
          {
            "hash": "19709366ac41c5ce7a1bf9c7f48b1aaca6c8e9bf",
            "messageTitle": "Fix the previous commit, only ignored-modules should use patterns, not ignored-classes.",
            "messageBody": "Thanks to The-Compiler for noticing the discrepancy.\n",
            "insertions": 62,
            "deletions": 37
          }
        ]
      },
      {
        "insertions": 64,
        "deletions": 38,
        "date": "2015-07-13",
        "commitResults": [
          {
            "hash": "981829d451abe9b1cdc78cc8d76a8ab3bf8397d1",
            "messageTitle": "Update pylint to use the new astroid.parse, not testutils.build_module.",
            "messageBody": "",
            "insertions": 29,
            "deletions": 22
          },
          {
            "hash": "25f2ab6fb612261fcc5804ac617e650354ffd7cd",
            "messageTitle": "Cleanup some tests.",
            "messageBody": "",
            "insertions": 35,
            "deletions": 16
          }
        ]
      },
      {
        "insertions": 45,
        "deletions": 19,
        "date": "2015-07-14",
        "commitResults": [
          {
            "hash": "f0ece3e9352b29d22da60c39cad48cf4ef500c93",
            "messageTitle": "Make a test less stricter by checking that only one message line is expected.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 7
          },
          {
            "hash": "122ba11d3bdb86bf9cd5a4c09f176c6899d8199d",
            "messageTitle": "Get the ignored modules only once and save the result in the imports checker.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 3
          },
          {
            "hash": "2f8d3b71c16ab50c4cd909331509877bada122bb",
            "messageTitle": "Improve detection of relative imports in non-packages, as well as importing missing modules with a relative import from a package.",
            "messageBody": "The change improves how relative imports are shown when they are missing,\nwith the absolute name, instead of the relative one.\n",
            "insertions": 39,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 2,
        "date": "2015-07-16",
        "commitResults": [
          {
            "hash": "b98fced0c4553b9699713378608c35ff6a7a0d28",
            "messageTitle": "Fix a typo.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "1f29c5b82292bd3c281cc454c1197124d2774987",
            "messageTitle": "Remove unused variable.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 3,
        "date": "2015-07-22",
        "commitResults": [
          {
            "hash": "67a771316cebe75152d83d657b9b68820537c2d3",
            "messageTitle": "Don\u0027t emit no-init if not all the bases from a class are known.",
            "messageBody": "Closes issue #604.\n",
            "insertions": 10,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 16,
        "date": "2015-07-26",
        "commitResults": [
          {
            "hash": "0e4f37d498d0ad71609998d0eaf6b61221884881",
            "messageTitle": "Remove metaclass specific logic in _emit_no_member, which is already handled properly on astroid\u0027s side.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 14
          },
          {
            "hash": "01b1a1002f0fd097267b906e4d69d7cc42989e68",
            "messageTitle": "Remove unused argument.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 35,
        "deletions": 38,
        "date": "2015-07-30",
        "commitResults": [
          {
            "hash": "875c58bf289c0665572e0611b7be62071c5543d7",
            "messageTitle": "Add ChangeLog entry for a3918e708197. Closes issue #541.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          },
          {
            "hash": "337669aa10a4abd0c6de4c9d0e2b1c0d1ffb0b07",
            "messageTitle": "Remove the -i option for pyreverse from the man page, since it\u0027s actually --ignore.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "ac539ed13da495e0775f7f0b1f02e13657cac8fd",
            "messageTitle": "Use the context manager version of assertRaises in order to simplify a test.",
            "messageBody": "",
            "insertions": 12,
            "deletions": 13
          },
          {
            "hash": "0612b04aa481376b002fc39a67ca1fc4fd93a473",
            "messageTitle": "Add a helper test function, _run_pylint, for simplifying the manipulation of the resulting output.",
            "messageBody": "",
            "insertions": 18,
            "deletions": 23
          }
        ]
      },
      {
        "insertions": 36,
        "deletions": 3,
        "date": "2015-07-31",
        "commitResults": [
          {
            "hash": "882b3ab1ffc574727227e842dd6c8c32d935df3c",
            "messageTitle": "--generate-rcfile generates by default human readable symbols for the --disable option. Closes issue #608.",
            "messageBody": "",
            "insertions": 35,
            "deletions": 2
          },
          {
            "hash": "12b008702ea2ed83fd2a129bb8456a57c8728ca6",
            "messageTitle": "Remove trailing whitespace.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 123,
        "deletions": 33,
        "date": "2015-08-02",
        "commitResults": [
          {
            "hash": "37e267596131c936d1de6498011a47915be0150b",
            "messageTitle": "Improved the not-in-loop checker to properly detect more cases.",
            "messageBody": "",
            "insertions": 77,
            "deletions": 18
          },
          {
            "hash": "ec1596278b5bd4a778e581f60cd0705ae044a19d",
            "messageTitle": "Add a new error, \u0027continue-in-finally\u0027.",
            "messageBody": "The error is emitted when the `continue` keyword is found\ninside a `finally` clause, which is a SyntaxError.\n",
            "insertions": 45,
            "deletions": 14
          },
          {
            "hash": "277230098606861f7070e9c84d6e2d6200f5f3a3",
            "messageTitle": "Remove trailing whitespace.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 30,
        "deletions": 39,
        "date": "2015-08-08",
        "commitResults": [
          {
            "hash": "d8bd67823e0ad9e309669059718113929b4cae72",
            "messageTitle": "Use the new CallFunc.keywords instead of filtering out Keyword from CallFunc.args.",
            "messageBody": "",
            "insertions": 30,
            "deletions": 39
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 2,
        "date": "2015-08-09",
        "commitResults": [
          {
            "hash": "443543d5bf1ee076f4e8aba5e5b368380e8167d9",
            "messageTitle": "Handle additional keyword arguments when checking for unnecessary-lambdas.",
            "messageBody": "",
            "insertions": 10,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 52,
        "deletions": 10,
        "date": "2015-08-11",
        "commitResults": [
          {
            "hash": "29f2aa84f2a1400cc12034cdc58368962d3e3bd2",
            "messageTitle": "Use astroid.YES instead of using it from astroid.bases (it was moved anyway)",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "59d73c408d8cd43bf565a0fc20bc67fdc26cf441",
            "messageTitle": "The --zope flag is deprecated and it is slated for removal in Pylint 1.6.",
            "messageBody": "The reason behind this removal is the fact that it\u0027s a specialized\nflag and there are solutions for the original problem:\nuse --generated-members with the members that causes problems\nwhen using Zope or add AST transforms tailored to the zope\nproject. Closes issue #570.\n",
            "insertions": 50,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 1,
        "date": "2015-08-12",
        "commitResults": [
          {
            "hash": "01d38edbafc236d4ff2b4752a2fa713fa242a03a",
            "messageTitle": "Import the context from astroid.context, not astroid.bases",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 30,
        "deletions": 35,
        "date": "2015-08-18",
        "commitResults": [
          {
            "hash": "7307bed1f99ef00bb76f7c0cce90aad57570c9b1",
            "messageTitle": "Fix pylint warnings for the code imported from logilab-common.",
            "messageBody": "",
            "insertions": 30,
            "deletions": 35
          }
        ]
      },
      {
        "insertions": 45,
        "deletions": 134,
        "date": "2015-08-20",
        "commitResults": [
          {
            "hash": "1b1359a9606d52c4c2d76a6977d3e68f6a5f4a9c",
            "messageTitle": "missing-module-attribute was removed and the corresponding CLI option, required-attributes, is slated for removal in Pylint 1.6.",
            "messageBody": "",
            "insertions": 22,
            "deletions": 29
          },
          {
            "hash": "d1398db74bd194dcda9b57d0292c0012bd21cb83",
            "messageTitle": "Remove deprecated options from the configuration file.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 17
          },
          {
            "hash": "7f2868170c32b067543dc65d38e8e8d3dfdbe308",
            "messageTitle": "missing-reversed-argument was removed.",
            "messageBody": "The reason behind this is that this kind of errors should be\ndetected by the type checker for *all* the builtins and not\nas a special case for the reversed builtin. This will happen\nshortly in the future.\n",
            "insertions": 10,
            "deletions": 8
          },
          {
            "hash": "74600068a6b407c711ba4fbaafa07e844fa33676",
            "messageTitle": "Remove ignored-builtin-module since it\u0027s not useful.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 15
          },
          {
            "hash": "949a52f41356571f7972b72a1162124051923e7e",
            "messageTitle": "Update the deprecation message to reflect the fact that the options are *obsoleted*.",
            "messageBody": "",
            "insertions": 8,
            "deletions": 8
          },
          {
            "hash": "728271b602d5ca0ba4e2412faae40d3dbb40ad94",
            "messageTitle": "--comment flag was obsoleted and it will be removed in Pylint 1.6.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 56
          },
          {
            "hash": "5d7d1c5ad3edf9ea2e8b1756219e300cfd40c8c2",
            "messageTitle": "Mention that the option is obsoleted.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 262,
        "deletions": 233,
        "date": "2015-08-25",
        "commitResults": [
          {
            "hash": "7378c72503e7dd7c878e3170bafea15293dda99a",
            "messageTitle": "Update pylint to use the new astroid AST names and methods",
            "messageBody": "Also improve a couple of imports and added support for the\nold visit_ names. Priority will have the old visit_ names, such\nas visit_discard over visit_expr, visit_callfunc over visit_call\netc.\n",
            "insertions": 252,
            "deletions": 223
          },
          {
            "hash": "1746fce4e595f4b20982892dc6e6a0bd13556597",
            "messageTitle": "Remove trailing whitespaces and other pylint related issues.",
            "messageBody": "",
            "insertions": 10,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 183,
        "deletions": 142,
        "date": "2015-08-26",
        "commitResults": [
          {
            "hash": "a1b3c9623afe3c5993d183ec9e6d1baceb7cc3ae",
            "messageTitle": "Use the new node names for the visit and leave methods",
            "messageBody": "Also, emit a PendingDeprecationWarning if the old names are still\nused, this support being removed in pylint 2.0.\n",
            "insertions": 182,
            "deletions": 141
          },
          {
            "hash": "34a33954d7845311fc99354ef282cbfdacda0245",
            "messageTitle": "Update the version to reflect what will be released. Some users are using the repo\u0027s version and it\u0027s misleading to have the same version for the released code.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 826,
        "deletions": 63,
        "date": "2015-09-01",
        "commitResults": [
          {
            "hash": "3deb961d3583075e48fbdcb23cc2680fecf4329d",
            "messageTitle": "Bring parts of logilab.common.configuration and logilab.common.optik_ext into pylint.config",
            "messageBody": "The reason behind this is that we can better control the behaviour\nof the underlying configuration modules, such as the case for undefined\noptions or for quickly fixing other bugs. Another side effect of this\nchange is that it gets us closer to the moment where we will not\nbe dependent on logilab.common anymore, which will definitely\nmake our pytest users happy.\n\nSome parts were copied almost verbatim from logilab.common.configuration\nand logilab.common.optik_ext and pylint.config will definitely need\na refactoring and reengineering for abstracting the configuration,\nso that we won\u0027t use optparse anymore, but that\u0027s subject for another\npatch.\n",
            "insertions": 826,
            "deletions": 63
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 16,
        "date": "2015-09-02",
        "commitResults": [
          {
            "hash": "de84bd3d01dd5581e877c9e9d58f32308e67a847",
            "messageTitle": "Make the --profile flag obsolete. Will be removed in Pylint 1.6.",
            "messageBody": "",
            "insertions": 10,
            "deletions": 16
          }
        ]
      },
      {
        "insertions": 141,
        "deletions": 22,
        "date": "2015-09-04",
        "commitResults": [
          {
            "hash": "0696e67a99419d2bfba82c091d8e9140741cfe7c",
            "messageTitle": "Add a new error, \u0027misplaced-bare-raise\u0027.",
            "messageBody": "The error is used when a bare raise is not used inside a try suite.\nThis can generate a RuntimeError in Python, if there are no active exceptions\nto be reraised. While it works in Python 2 due to the fact that the exception\nleaks outside of the except block, it\u0027s nevertheless a behaviour that\nan user shouldn\u0027t depend upon, since it\u0027s not obvious to the reader of the code\nwhat exception will be raised and it will not be compatible with Python 3 anyhow.\nCloses issue #633.\n",
            "insertions": 43,
            "deletions": 4
          },
          {
            "hash": "138d0f610ddb5c3e85dcea3fa997c178e1ed0d3e",
            "messageTitle": "Add missing tests.",
            "messageBody": "",
            "insertions": 80,
            "deletions": 0
          },
          {
            "hash": "a3808b1936850399a5ff33c08e8a7ed304b84857",
            "messageTitle": "Allow a bare raise only inside an except clause.",
            "messageBody": "",
            "insertions": 18,
            "deletions": 18
          }
        ]
      },
      {
        "insertions": 845,
        "deletions": 45,
        "date": "2015-09-05",
        "commitResults": [
          {
            "hash": "fea4afb67abdf18130bdc82abd3aed4fb69fb73d",
            "messageTitle": "Fix the name of the attribute, it\u0027s six.string_types.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "3feb461aad2b5473bfc6ac245c2053d05b865ccd",
            "messageTitle": "Bring logilab-common\u0027s ureports into pylint.reporters.",
            "messageBody": "With this change, we moved away from depending on logilab-common,\nhaving in Pylint all the components that were used from logilab-common.\nThe API should be considered an implementation detail and can change at\nsome point in the future.\nCloses issue #621.\n",
            "insertions": 842,
            "deletions": 30
          },
          {
            "hash": "66f9ed658fe437882c155c919e0c346dcf19bd0b",
            "messageTitle": "Fix false positives with unnecessary-lambda. Closes issue #630.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 14
          }
        ]
      },
      {
        "insertions": 87,
        "deletions": 30,
        "date": "2015-09-18",
        "commitResults": [
          {
            "hash": "222be7b46c50fbee92ce99da63f8642a23d17576",
            "messageTitle": "Make pylint work with Python 3.5 changes in astroid.",
            "messageBody": "",
            "insertions": 67,
            "deletions": 26
          },
          {
            "hash": "1e665acd8d3e81af683b7cf3df712a8280f566ec",
            "messageTitle": "Exempt str.format from redundant-keyword-arg when self is passed as a keyword",
            "messageBody": "It\u0027s perfectly valid to pass self as a keyword to str.format when accessing\nattributes using format\u0027s dot syntax, as in the following example:\n\n   def __str__(self):\n        return \"{self.value}{self.other_value}...\".format(self\u003dself)\n\nWe\u0027re exempting only str.format with this commit, because for any other\nfunction or method it\u0027s either impossible to do so or it\u0027s weird and\na potential sign of misdesign. Closes issue #642.\n",
            "insertions": 18,
            "deletions": 2
          },
          {
            "hash": "e8e25933dc0bdd2078eb00ca1cb018d2822b1649",
            "messageTitle": "Remove trailing whitespace.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "c79413de026d27f3ef57e5b3b8587ed584d4a0ab",
            "messageTitle": "Get the sections sorted in options_by_section. This means the generated rcfile always has a consistent order. Closes issue #602.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 38,
        "deletions": 13,
        "date": "2015-09-19",
        "commitResults": [
          {
            "hash": "0b73be0c27d0147e0b45c11913efb30c48b7b85c",
            "messageTitle": "Use a counter instead of manually peeking at the next items.",
            "messageBody": "",
            "insertions": 8,
            "deletions": 5
          },
          {
            "hash": "5fa3d4fe9f458d6a469e065bb9f1350e9881ef2b",
            "messageTitle": "Move the block after the check_reimport block.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "fb5bcc9ee4628f234baf34ec46b786485b566aaa",
            "messageTitle": "Add ChangeLog entry for commit 0ec6615cc2009b27be0c29a493dd865261d518a2",
            "messageBody": "Closes issue #639.\n",
            "insertions": 4,
            "deletions": 0
          },
          {
            "hash": "bac55de16831f0edae98f07cb3aab07def2b7367",
            "messageTitle": "Fix indentation problem.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "9eb22ab00cf45ac433d393782b1115e397e1a925",
            "messageTitle": "Abbreviations of command line options are not supported anymore.",
            "messageBody": "Using abbreviations for CLI options was never considered to be\na feature of pylint, this fact being only a side effect of using optparse.\nAs this was the case, using --load-plugin or other abbreviation\nfor --load-plugins never actually worked, while it also didn\u0027t raise\nan error. Closes issue #424.\n",
            "insertions": 19,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 97,
        "deletions": 41,
        "date": "2015-09-21",
        "commitResults": [
          {
            "hash": "d0308352cf461236f770413662fff841524fa8c1",
            "messageTitle": "Fix tests and use all the inference results when checking for bad-open-mode and deprecated-method",
            "messageBody": "",
            "insertions": 18,
            "deletions": 16
          },
          {
            "hash": "097d6bbd10f2ee1410c218db5d9f3a8525d3617c",
            "messageTitle": "Improve the test suite for deprecated-method",
            "messageBody": "",
            "insertions": 35,
            "deletions": 12
          },
          {
            "hash": "4c18296bd882e3dfa2207c77b5576af33e9cd8ac",
            "messageTitle": "Add a comment regarding the nodes we\u0027re not interested into.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "f1940a6ea19b31c54bbec3d658400492ca6392d1",
            "messageTitle": "Add changelog entry for 014f596 and a couple of other fixes.",
            "messageBody": "",
            "insertions": 13,
            "deletions": 4
          },
          {
            "hash": "6e0e2e1b6354d2a81b0aed6c6d65fd902bbe7884",
            "messageTitle": "Disable deprecated-method for using cgi.escape.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 2
          },
          {
            "hash": "98b6cb824956cae0281d78ed4285fa562dbcb814",
            "messageTitle": "Show what nonlocal was found without a binding.",
            "messageBody": "",
            "insertions": 17,
            "deletions": 4
          },
          {
            "hash": "a841085997a29d7c3f3c80a2e09815e236b237b1",
            "messageTitle": "Retrieve the qualified name only after filtering the proper needs.",
            "messageBody": "",
            "insertions": 9,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 8,
        "deletions": 8,
        "date": "2015-09-23",
        "commitResults": [
          {
            "hash": "60ade2be6fccf3b96a83831ccce85da149d609f5",
            "messageTitle": "Grammar fix.",
            "messageBody": "",
            "insertions": 8,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 0,
        "date": "2015-09-27",
        "commitResults": [
          {
            "hash": "00f5ce1f7d8cc7b5b0e235ebae728965e0476aa4",
            "messageTitle": "Add ChangeLog entry for the deprecated-module change.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 34,
        "deletions": 78,
        "date": "2015-09-29",
        "commitResults": [
          {
            "hash": "fec08e004741b9f6c2f4673a4dc2ad3d8b7b12c3",
            "messageTitle": "Port some old style tests to new style tests.",
            "messageBody": "",
            "insertions": 30,
            "deletions": 74
          },
          {
            "hash": "5d592a9bdaf2f3a9ee0b9c302f7cb86a23fe30aa",
            "messageTitle": "Fix the tests.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 90,
        "deletions": 100,
        "date": "2015-09-30",
        "commitResults": [
          {
            "hash": "0096a3270246ee654f2eac18d677c4ea1e320b68",
            "messageTitle": "Port more tests to the new test format.",
            "messageBody": "",
            "insertions": 35,
            "deletions": 86
          },
          {
            "hash": "3d4337d57e8276f40e41643752d9aeb631455467",
            "messageTitle": "Don\u0027t consider a class abstract if its members can\u0027t be properly inferred.",
            "messageBody": "This fixes a false positive related to abstract-class-instantiated.\nCloses issue #648.\n",
            "insertions": 55,
            "deletions": 14
          }
        ]
      },
      {
        "insertions": 309,
        "deletions": 149,
        "date": "2015-10-01",
        "commitResults": [
          {
            "hash": "615a18275c67cab64410e4a9bf2b7ea197a9c60c",
            "messageTitle": "Port more old style tests to new style tests.",
            "messageBody": "",
            "insertions": 98,
            "deletions": 144
          },
          {
            "hash": "24e9d35a670332be2575a93013bb5f65585b6f29",
            "messageTitle": "Start adding a protocol checker for the async features added in PEP 492:",
            "messageBody": "   * this patch adds the basis of a new checker, \u0027async\u0027, which deals\n     with problems that can occur when working with async features added\n     in Python with PEP 492.\n\n   * We\u0027re also adding a new error, \u0027yield-inside-async-function\u0027, emitted on\n     Python 3.5 and upwards when the `yield` statement is found inside\n     a new coroutine function (PEP 492).\n\n   * Another new error is added, \u0027not-async-context-manager\u0027, emitted when\n     an async context manager block is used with an object which doesn\u0027t\n     support this protocol (PEP 492).\n",
            "insertions": 188,
            "deletions": 0
          },
          {
            "hash": "7fdc34f95763a9af770b9ac373da029364ec205b",
            "messageTitle": "Remove line from the license header, which was inadvertently copied from base.py",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          },
          {
            "hash": "b015859b2f530aef6f077d5c3d9d3c51d203bae0",
            "messageTitle": "Update the list of special methods with the methods added in PEP 492.",
            "messageBody": "",
            "insertions": 23,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 1,
        "date": "2015-10-02",
        "commitResults": [
          {
            "hash": "28bd68d906cad8e3c306932e0ed87dca9612c492",
            "messageTitle": "Fix multiple-imports error in epylint.py",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 74,
        "deletions": 205,
        "date": "2015-10-03",
        "commitResults": [
          {
            "hash": "b0b6b93df0a87c7bc68ffd2406255d899d4ce42d",
            "messageTitle": "Port more old tests to the new style tests and remove obsolete tests.",
            "messageBody": "",
            "insertions": 74,
            "deletions": 205
          }
        ]
      },
      {
        "insertions": 74,
        "deletions": 11,
        "date": "2015-10-04",
        "commitResults": [
          {
            "hash": "50266feb5c9ad0261d95ee6771dd152356e0b773",
            "messageTitle": "Add ChangeLog entry for changeset ec1d42a12",
            "messageBody": "",
            "insertions": 3,
            "deletions": 0
          },
          {
            "hash": "f71cf96994638d0b0e04b64ec334887b17edde8e",
            "messageTitle": "Rename the name of the singleton-comparison test files.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 0
          },
          {
            "hash": "ea301625bec8af01fc0f9b9efe3fb76ed631fbae",
            "messageTitle": "Remove unused parameter.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "b0c3ed8db811a0df28b9c9a2105694f0bed72b5a",
            "messageTitle": "Simplify the check.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 4
          },
          {
            "hash": "76e97cdc9e8146e1258b20f923164a74ac225d92",
            "messageTitle": "Don\u0027t emit \u0027assigning-non-slot\u0027 for descriptors. Closes issue #652.",
            "messageBody": "",
            "insertions": 62,
            "deletions": 3
          },
          {
            "hash": "856b9386a21c6729d5535ac9e4a6e7805959657f",
            "messageTitle": "Fix the line number of the expected message.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 17,
        "date": "2015-10-07",
        "commitResults": [
          {
            "hash": "79b9ca212bb70b805dc1100417bb3d96923d2b9e",
            "messageTitle": "Remove the starargs verification code, since it is obsolete after the AST changes related to Starred nodes in the call args",
            "messageBody": "",
            "insertions": 1,
            "deletions": 17
          }
        ]
      },
      {
        "insertions": 89,
        "deletions": 10,
        "date": "2015-10-09",
        "commitResults": [
          {
            "hash": "0614931796a4d9c48a69eb9b4558131b8aec74ed",
            "messageTitle": "Add a new error, \u0027repeated-keyword\u0027, when a keyword argument is passed multiple times into a function call.",
            "messageBody": "This is similar with redundant-keyword-arg, but it\u0027s mildly different\nthat it needs to be a separate error. This change also uses a CallSite for\nunderstanding the arguments that were passed into a function call, since\nwith this we can make sense about multiple starred arguments passed into\n(PEP 448).\n",
            "insertions": 88,
            "deletions": 6
          },
          {
            "hash": "d3aee0cf52c95bea6cdd9b434e6cef5f501d6c66",
            "messageTitle": "Remove deprecated option.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 3
          },
          {
            "hash": "1bbe4731b233df79a4bab57385211c6789f28d3f",
            "messageTitle": "Use the any builtin, instead of evaluating the entire list of instance attributes.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 36,
        "deletions": 2,
        "date": "2015-10-10",
        "commitResults": [
          {
            "hash": "8556a5c3c6210789a13d979e61ba0bbbfe2d8d2d",
            "messageTitle": "Don\u0027t warn about Starred nodes used properly in unpacking contexts",
            "messageBody": "Closes issue #653\n",
            "insertions": 12,
            "deletions": 0
          },
          {
            "hash": "a84b767a32768c74ced919367228f5acc34e9943",
            "messageTitle": "--enable\u003dall can now be used. Closes issue #142.",
            "messageBody": "",
            "insertions": 22,
            "deletions": 0
          },
          {
            "hash": "9ccb48f0ffb102155ad64815c8cb93f907cb6193",
            "messageTitle": "Rename the variable to fix an undefined-loop-variable false positive.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 85,
        "deletions": 100,
        "date": "2015-10-12",
        "commitResults": [
          {
            "hash": "768c06ded38c2fdd4f1893f6f0cec73fbded5e1e",
            "messageTitle": "Update to use the new location of NodeNG.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "1fd9d5a24428e3112cdf3cefdf4baba2e1c23fd0",
            "messageTitle": "Port more old tests to the new style tests and remove obsolete tests.",
            "messageBody": "",
            "insertions": 83,
            "deletions": 98
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 73,
        "date": "2015-10-15",
        "commitResults": [
          {
            "hash": "7fafa3a64be7f3726d1323d0f741088ca511ee91",
            "messageTitle": "Remove unused nodes and corresponding visit methods.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 64
          },
          {
            "hash": "5b9d4b628a6f75df956ec1f0ba74b9844ca33943",
            "messageTitle": "Rewrite the operation with a ternary if in order to be clearer.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "ba50642148c55bb5c49dbc03792987b6fee795af",
            "messageTitle": "Use enumerate instead of range.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 2
          },
          {
            "hash": "ad456523e2ab1bd560bad06a09685ce6f84037d1",
            "messageTitle": "Use the u\u0027\u0027 prefix throught text writer.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "58496b326ae881d96ed8c10309775051a9439db2",
            "messageTitle": "Simplify the code a little bit by using enumerate instead of a range and len combination.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 90,
        "deletions": 343,
        "date": "2015-10-16",
        "commitResults": [
          {
            "hash": "2adf87ad3c7064a0cc564615174eed3d1859ca19",
            "messageTitle": "Remove unused APIs from VNode class, which got merged with Node class.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 182
          },
          {
            "hash": "d63283e1657dee36bf8fde58ac61c20921a59388",
            "messageTitle": "Move VNode into ureports.nodes.",
            "messageBody": "",
            "insertions": 40,
            "deletions": 58
          },
          {
            "hash": "f0f7b0546d52c86e9d549021a0d888462a8480b8",
            "messageTitle": "Use unicode string.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "d87a6cd3eaca036df91e30d543a7d7d22e425d06",
            "messageTitle": "Remove BaseComponent and additional attributes and methods",
            "messageBody": "The BaseComponent\u0027s arguments weren\u0027t actually used and by removing\nthem, a bunch of other methods were removed as well.\n",
            "insertions": 7,
            "deletions": 44
          },
          {
            "hash": "d0971d761f4175ac225b0a7428494368b5cd879f",
            "messageTitle": "Remove handling of pending_urls, which is unused by pylint.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 6
          },
          {
            "hash": "f3b4b3de41bada51564960f5c478a088d0033e57",
            "messageTitle": "Make encode a proper method of the BaseReporter, which removes the need of patching it all the time.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 7
          },
          {
            "hash": "38c27c3e34a274fa7cb227a79e92ea5e484473b8",
            "messageTitle": "Remove commented out code.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 2
          },
          {
            "hash": "1ecff836b2ae46137f91f427946f2896cf11c6af",
            "messageTitle": "Update the docstrings to be more intuitive.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 4
          },
          {
            "hash": "7abadf172986b846c5566c522095d2d00bd1d138",
            "messageTitle": "Simplify compute_content, by removing the custom implementations of write and writeln.",
            "messageBody": "",
            "insertions": 11,
            "deletions": 26
          },
          {
            "hash": "1eb566980745ba2d8083f91cac345e1e9e30d866",
            "messageTitle": "Decode the docstring before attempting to parse it with the spelling checker",
            "messageBody": "Also, the patch changes calls to str() in the list of html reporter\u0027s messages\nonly for the objects which aren\u0027t already unicode or byte strings.\n",
            "insertions": 21,
            "deletions": 13
          }
        ]
      },
      {
        "insertions": 14,
        "deletions": 5,
        "date": "2015-10-18",
        "commitResults": [
          {
            "hash": "23994b0026cbdaa2fc0b1ca62732ec609e9b66cd",
            "messageTitle": "Forgot to add test file.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 0
          },
          {
            "hash": "301fab380d1e8a1485e604518910d1552ba24450",
            "messageTitle": "Update the contribution stats for Dmitry.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "5ac76505b30bfbc363ea528415d3149decc9bb00",
            "messageTitle": "Change the numeric ids of the new checkers.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 2
          },
          {
            "hash": "fed364845033b111db1653da39538e1fc85ed56b",
            "messageTitle": "Disable not-iterable-context for a couple of false positives.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "444a387eee68244ecfe5b34a5449e8897f85ca18",
            "messageTitle": "Correct the name of the messages.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 91,
        "deletions": 22,
        "date": "2015-10-20",
        "commitResults": [
          {
            "hash": "6881c2bdb3163d8114fc99765d5cb6bc803fc234",
            "messageTitle": "non-iterator-returned can detect classes with iterator-metaclasses.",
            "messageBody": "Closes issue #679.\n",
            "insertions": 74,
            "deletions": 18
          },
          {
            "hash": "56fb4fd5e6915dd610c1eb1f7cf2d8f12707c070",
            "messageTitle": "Obsolete options are not present by default in the generated configuration file.",
            "messageBody": "Closes issue #632.\n",
            "insertions": 16,
            "deletions": 3
          },
          {
            "hash": "b57074960972edac15bfffb4aab7c56940e124e4",
            "messageTitle": "Remove trailing whitespace.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 34,
        "deletions": 0,
        "date": "2015-10-21",
        "commitResults": [
          {
            "hash": "04c24902d4b4b110b6cd665a6d99b7bb93164b93",
            "messageTitle": "Don\u0027t warn about abstract classes instantiated in their own body. Closes issue #627.",
            "messageBody": "",
            "insertions": 34,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2015-10-22",
        "commitResults": [
          {
            "hash": "b1988092c733bb5a0af58e78826593841bcaa5d8",
            "messageTitle": "Remove trailing whitespace.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 0,
        "date": "2015-10-24",
        "commitResults": [
          {
            "hash": "79cdfadc2dcc3c31e5cabd1fc5cf7207f0a1ff8d",
            "messageTitle": "Add test case for issue #559. Closes issue #559.",
            "messageBody": "",
            "insertions": 7,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 108,
        "deletions": 91,
        "date": "2015-10-26",
        "commitResults": [
          {
            "hash": "5e8949ecb8ab28517e1cf4211c8ab01b48fcd0f5",
            "messageTitle": "Cleanup _parallel_task by moving the creation of the config into its own function.",
            "messageBody": "",
            "insertions": 7,
            "deletions": 3
          },
          {
            "hash": "2c8c8de6caf6748d1b56ba9b9ec1fe3962e6b927",
            "messageTitle": "Use a generator comprehension instead of creating a list.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "df8babd0dd1827b2435800dc66956ccb2d449c4a",
            "messageTitle": "Remove the list parantheses for a sum call.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "3cfd48166e31d1d23744ca4ce67f1b0dad520b74",
            "messageTitle": "Add test for verifying that __name__ can\u0027t be accessed from an instance.",
            "messageBody": "",
            "insertions": 7,
            "deletions": 0
          },
          {
            "hash": "fa28ff647b37f47427903995aa99b3d132902232",
            "messageTitle": "Make misplaced-comparison-constant a convention, rather than a warning.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "943287e31ecdf955297e893b95e0ef26dc74eb6b",
            "messageTitle": "Add an extra space between classes.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "82392d0145054e8a2e308a5b1f15b9b27f034e58",
            "messageTitle": "Update the docstring a little bit.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 2
          },
          {
            "hash": "410f4901410c9683532e030c34f12ee2019dd416",
            "messageTitle": "Make check_singleton_comparison a private function.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "358e516a0184699d310449d0c70d5587a6031ba3",
            "messageTitle": "Use a lower message id for misplaced-comparison-constant.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "718814fe82c2026292cc0726125191b51efd2b72",
            "messageTitle": "Don\u0027t emit misplaced-comparison-constant for constant tests, such as true \u003d\u003d true, which should be handled by other checks.",
            "messageBody": "",
            "insertions": 6,
            "deletions": 15
          },
          {
            "hash": "0480f262e5963eaf6e78f7df1ba7268ffa5195f6",
            "messageTitle": "Simplify _check_misplaced_constant.",
            "messageBody": "",
            "insertions": 7,
            "deletions": 8
          },
          {
            "hash": "82de513bc027d6d2bd77f431c83d4d2e21c9109d",
            "messageTitle": "Add a Changelog entry for misplaced-comparison-constant.",
            "messageBody": "",
            "insertions": 7,
            "deletions": 0
          },
          {
            "hash": "347dcf7d18cf228e08d96361b28e97792503eff7",
            "messageTitle": "Use the representation of the context when building the message for misplaced-comparison-constant.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 2
          },
          {
            "hash": "ea20a1660959b130278006e190259dc51699408a",
            "messageTitle": "Simplify visit_compare, by moving the verifications for misplaced constants into their own if statement.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "dc79ab734fc8003c7fe6ea63ee3d873859220c9a",
            "messageTitle": "Move unidiomatic-typecheck into the comparison checker from base.py, since it makes more sense for it to be there.",
            "messageBody": "",
            "insertions": 51,
            "deletions": 46
          }
        ]
      },
      {
        "insertions": 121,
        "deletions": 4,
        "date": "2015-10-27",
        "commitResults": [
          {
            "hash": "e633549f27658f682d70665411b21692590168a7",
            "messageTitle": "Add a new convention message, \u0027consider-using-enumerate\u0027",
            "messageBody": "The message is emitted when code that uses `range` and `len` for iterating is\nencountered, which can be easily simplified by using `enumerate` instead.\nThis makes the code a bit faster and cleaner. Closes issue #684.\n",
            "insertions": 117,
            "deletions": 0
          },
          {
            "hash": "7fca0ed58b17415fecdf06e4f81ab4020c9e11a0",
            "messageTitle": "Fix pylint warnings.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 3,
        "date": "2015-10-28",
        "commitResults": [
          {
            "hash": "43132df5d70960d16f4f96f83a70d63c57ecf5b1",
            "messageTitle": "Use the new master bookmark when installing astroid.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 17,
        "deletions": 8,
        "date": "2015-10-30",
        "commitResults": [
          {
            "hash": "afc374d5afbc82412ecaf2f99eaa85e38391a6c2",
            "messageTitle": "Add ChangeLog entry for issue #675.",
            "messageBody": "",
            "insertions": 6,
            "deletions": 0
          },
          {
            "hash": "65d8c8675eb3993ca7714aa8c164358a354348b7",
            "messageTitle": "Fix the tests to work on both Python versions.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "b8860494a3f399c5c1561fd76dc08bc6bc356614",
            "messageTitle": "Prefer any instead of for.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 4
          },
          {
            "hash": "f98e173986064f389ac160a4aaccdaa3c053491e",
            "messageTitle": "Separe the conditions to improve the readability of the code.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 0
          },
          {
            "hash": "f68c0ac6d7bb9f79b713cd9a92470f62c3f79000",
            "messageTitle": "Remove unused import.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "65110d98c848ca5cc7a03ddd6db484d25e1d2e07",
            "messageTitle": "Fix an occurrence of no-classmethod-decorator.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 114,
        "deletions": 107,
        "date": "2015-11-04",
        "commitResults": [
          {
            "hash": "ead6051dd138e4c71a2012de14df9fabe879cc9b",
            "messageTitle": "Add ChangeLog entry for too-many-nested-blocks and fix the errors in pylint.",
            "messageBody": "",
            "insertions": 113,
            "deletions": 106
          },
          {
            "hash": "62943f673191ccf4c69d10e662033456c6e452b5",
            "messageTitle": "Fix the test to work on both Python versions.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 115,
        "deletions": 81,
        "date": "2015-11-20",
        "commitResults": [
          {
            "hash": "538c30ef91f51df514c5cf08e718f00284779293",
            "messageTitle": "Import has_known_bases and safe_infer back into pylint from astroid, until the latter stabilizes its API.",
            "messageBody": "Currently astroid goes into a total revamp, having a couple of development branches with partially\nincompatible APIs, which means that pylint can\u0027t rely on the exact location of has_known_bases\nand safe_infer until astroid reaches a new major release. With this in mind, these two\nfunctions are backported in pylint again.\n",
            "insertions": 106,
            "deletions": 74
          },
          {
            "hash": "abdf0d9d5d717b19b1eb04fbfab8a514139ca325",
            "messageTitle": "Simplify the unflatten algorithm in order to not use NodeNG anymore.",
            "messageBody": "",
            "insertions": 7,
            "deletions": 5
          },
          {
            "hash": "57125f5490387a314c5a45e88cb8c92c9b16b77f",
            "messageTitle": "Use the correct module.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 233,
        "deletions": 40,
        "date": "2015-11-21",
        "commitResults": [
          {
            "hash": "08b57ecc0fae483e794a0f6f944b0ead00025f51",
            "messageTitle": "Added a new refactoring warning, \u0027simplifiable-if-statement\u0027",
            "messageBody": "This is used when an if statement could be reduced to a boolean evaluation\nof its test, as seen in this example:\n\n   if some_cond:\n      return True\n   else:\n      return False\n\n   could be reduced to `return bool(some_cond)`\n\nCloses issue #698.\n",
            "insertions": 211,
            "deletions": 1
          },
          {
            "hash": "4fe6bc4dcd3060dd769bb8459a525106d4c44e76",
            "messageTitle": "Cleanup pylint issues",
            "messageBody": "This changeset also brings a couple of changes:\n\n   * rrheaders and rcheaders are dropped from html_writer.Table\u0027s constructor.\n     They weren\u0027t used at all and it was dead code. This simplified some\n     if statements.\n\n   * _is_attribute_property is used to look for a property assignment\n     instead on relying on a different implementation.\n",
            "insertions": 22,
            "deletions": 39
          }
        ]
      },
      {
        "insertions": 9,
        "deletions": 4,
        "date": "2015-11-22",
        "commitResults": [
          {
            "hash": "a7ac732f2ddd5c7dfd36e56b4e369110ff6f95e2",
            "messageTitle": "Improve the install section of the README, by specifying pip and how to use the master development head.",
            "messageBody": "",
            "insertions": 9,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 94,
        "deletions": 72,
        "date": "2015-11-25",
        "commitResults": [
          {
            "hash": "31705ac6bc30a70352fa61581f7b0d9007c267d6",
            "messageTitle": "Fix instances of unneeded-not in pylint\u0027s codebase.",
            "messageBody": "",
            "insertions": 8,
            "deletions": 9
          },
          {
            "hash": "80201cfd7c84940720181c7830d5314362e4f067",
            "messageTitle": "Add ChangeLog entry for issue #670.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 0
          },
          {
            "hash": "e87abe90f2327319a4b5b551a1b87a5906485dc1",
            "messageTitle": "Fix new import related errors in pylint\u0027s codebase.",
            "messageBody": "",
            "insertions": 51,
            "deletions": 45
          },
          {
            "hash": "5b352e2055ebde02d1d22070e2eb8f7c4c862499",
            "messageTitle": "Add ChangeLog entry for issue #692.",
            "messageBody": "",
            "insertions": 11,
            "deletions": 1
          },
          {
            "hash": "b63da304d501a956dbceec34760f940257d77169",
            "messageTitle": "Fix some docstrings and the Python 3 tests",
            "messageBody": "",
            "insertions": 10,
            "deletions": 8
          },
          {
            "hash": "c0c80ec8dd1e625b2bba11d86634183990ad4bea",
            "messageTitle": "Change the variable name to something more suggestive",
            "messageBody": "",
            "insertions": 7,
            "deletions": 6
          },
          {
            "hash": "cd5988edb90703f2c459a97160f30a78e6d2dc05",
            "messageTitle": "Make some imports external instead of considering them local",
            "messageBody": "The assumption that a module which can\u0027t be imported is local\nrather than external isn\u0027t always correct, since the implementation\nof the astroid\u0027s import system should always find a module\nwhich is local in the current package, while it isn\u0027t necessary\ntrue that it can find always external modules, which just might\nbe missing.\n",
            "insertions": 3,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 328,
        "deletions": 71,
        "date": "2015-11-26",
        "commitResults": [
          {
            "hash": "c0c174a3e683451a086f545a13c4cfe8d68736e1",
            "messageTitle": "Simplify the protocol methods, by using a common function.",
            "messageBody": "",
            "insertions": 12,
            "deletions": 41
          },
          {
            "hash": "f293f28e26cf833635de3304bda86f223e7c5ccd",
            "messageTitle": "Added a new warning, \u0027unsupported-assignment-operation\u0027",
            "messageBody": "This is emitted when item assignment is tried on an object which doesn\u0027t\nhave this ability. Closes issue #591.\n",
            "insertions": 162,
            "deletions": 9
          },
          {
            "hash": "613358b8518550839d8ec27104545fc7ac0735e4",
            "messageTitle": "Added a new warning, \u0027unsupported-delete-operation\u0027",
            "messageBody": "It is emitted when item deletion is tried on an object which doesn\u0027t\nhave this ability. Closes issue #592.\n",
            "insertions": 154,
            "deletions": 21
          }
        ]
      },
      {
        "insertions": 8,
        "deletions": 11,
        "date": "2015-11-29",
        "commitResults": [
          {
            "hash": "671d80bddb1bd82eb421b4d5d90d64c10b3c61b7",
            "messageTitle": "Don\u0027t use .iteritems, it doesn\u0027t exist on Python 3. Change some variable names and the name of the builtins module.",
            "messageBody": "",
            "insertions": 8,
            "deletions": 11
          }
        ]
      },
      {
        "insertions": 104,
        "deletions": 11,
        "date": "2015-11-30",
        "commitResults": [
          {
            "hash": "ef1fdce33cd98e54aecf51d52e2422dbf006c465",
            "messageTitle": "Add wrong-import-position to check_messages\u0027s decorator arguments for ImportChecker.leave_module",
            "messageBody": "This fixes an esoteric bug which occurs when ungrouped-imports and wrong-import-order\nare disabled and pylint is executed on multiple files. What happens is that without\nwrong-import-position in check_messages, leave_module will never be called, which means\nthat the first non-import node from other files might leak into the current file,\nleading to wrong-import-position being emitted by pylint.\n",
            "insertions": 38,
            "deletions": 2
          },
          {
            "hash": "144f68d0a8fcedfef698a16a073ab1e513f1f471",
            "messageTitle": "Don\u0027t emit unsubscriptable-object if the node is found inside an abstract class. Closes #685.",
            "messageBody": "",
            "insertions": 28,
            "deletions": 0
          },
          {
            "hash": "a60a5bca5deda068c45ca2f1377026d160a09040",
            "messageTitle": "Fix a crash which occurred when old visit methods are encountered  in plugin modules.",
            "messageBody": "If a plugin uses an old visit method (visit_class for instance), this can lead\nto a crash in pylint\u0027s base checkers, because the logic in the PylintASTWalker\nassumes that all checkers have a visit_class / leave_class method. The\npatch fixes this by looking for both names.\nCloses issue #711.\n",
            "insertions": 29,
            "deletions": 9
          },
          {
            "hash": "f0710b9d83b3ef62ec64f660310536cf6d5d9d57",
            "messageTitle": "Add changelog entry for 0c2ba76",
            "messageBody": "",
            "insertions": 9,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 133,
        "deletions": 72,
        "date": "2015-12-01",
        "commitResults": [
          {
            "hash": "ec47a296e4d10bbda11c37c25a1c6169850c90b0",
            "messageTitle": "Refactor things through the imports checker",
            "messageBody": "This patch transforms some public functions / methods to private\nand moves some blocks of code into their own functions. Through\nthe latter, a couple of new messages are now emitted even though\nthe module couldn\u0027t be imported, such as reimported, which doesn\u0027t\nmake sense to not emit in this case.\n",
            "insertions": 92,
            "deletions": 67
          },
          {
            "hash": "bcf801f5e7fadb449c363c7acc14390286dceb7c",
            "messageTitle": "Don\u0027t emit import-self and cyclic-import for relative imports of modules with the same name as the package itself.",
            "messageBody": "The problem was partially the fault of astroid.modutils.get_module_part,\nin combination with a given context file.\nThe function returned \u0027dummy\u0027 as the module part for the string\n`dummy.dummy.Dummy`, which is in fact true, since the first dummy\nis the package and the second dummy is the module from where Dummy\ngets loaded. But get_module_part has no way to know this semantic\ninference, that the second dummy is a relative import inside the\nfirst one. As such, it\u0027s better to just skip the check if the\ncondition of being relative inside a __init__.py file is found,\nsince there\u0027s no way to load itself in that case.\n\nCloses issues #708 and #706.\n",
            "insertions": 40,
            "deletions": 4
          },
          {
            "hash": "c69550689e4e5eeeb3c230d5d82d47f21cd29751",
            "messageTitle": "Remove import which was imported twice.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 4,
        "date": "2015-12-02",
        "commitResults": [
          {
            "hash": "9ce8bfe1d7bc316fb8342939207d86a633a65044",
            "messageTitle": "Try to register the else-if checker explicitly instead on relying on path assumptions.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 4
          },
          {
            "hash": "7fff4ae40db8b1f770906c0e97084f0d53d90363",
            "messageTitle": "Disable persistence for test_self.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 83,
        "deletions": 3,
        "date": "2015-12-03",
        "commitResults": [
          {
            "hash": "3228e199af2285436abd216a45eb8fe534c565ad",
            "messageTitle": "Accept only functions and methods for the deprecated-method checker.",
            "messageBody": "This prevents a crash which can occur when an object doesn\u0027t have\n .qname() method after the inference.\n",
            "insertions": 83,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 99,
        "deletions": 56,
        "date": "2015-12-06",
        "commitResults": [
          {
            "hash": "6cf07b3483ec0d921296aefa8a28a8491f13786e",
            "messageTitle": "Don\u0027t emit super-on-old-class on classes with unknown bases.",
            "messageBody": "The change also removes the confidence handling for super-on-old-class,\nwhich isn\u0027t used enough to merit its existence.\nCloses issue #721.\n",
            "insertions": 23,
            "deletions": 23
          },
          {
            "hash": "74a2776fa3396fcd9c6df5a27b71688ec118a612",
            "messageTitle": "Make pylint work with new astroid exceptions, AstroidImportError and AstroidSyntaxError.",
            "messageBody": "",
            "insertions": 19,
            "deletions": 23
          },
          {
            "hash": "f72db0feb4815665d22cb8aafd44fd043d00f08f",
            "messageTitle": "Added a new error, \u0027relative-beyond-top-level\u0027.",
            "messageBody": "This is emitted when a relative import was attempted beyond the top level package.\nFor instance, if a package has X levels, trying to climb X + n levels with a relative\nimport, as in `from ..stuff import Stuff`, will result in an error.\nCloses issue #588.\n",
            "insertions": 57,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 10,
        "date": "2015-12-07",
        "commitResults": [
          {
            "hash": "36f367ba5922b41191ecc99c6a1cd679c9c9ccaa",
            "messageTitle": "Move the construction of generated_members into open.",
            "messageBody": "",
            "insertions": 10,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 26,
        "date": "2015-12-08",
        "commitResults": [
          {
            "hash": "7c993565013f65aa0ea35d3e03b155eb31c1079d",
            "messageTitle": "Use the new .ctx attribute for subscripts for detecting in which context the node was used. Closes issue #705.",
            "messageBody": "",
            "insertions": 9,
            "deletions": 25
          },
          {
            "hash": "b7c95a5a88555314ed6c1a94263f85b0b0e27f24",
            "messageTitle": "Change the attribute check for using hasattr instead of looking explicitly into __dict__.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 33,
        "date": "2015-12-10",
        "commitResults": [
          {
            "hash": "dc855ef69f3d6e7441b349b74915454df61a7fed",
            "messageTitle": "Change the extension of the README, so it will get rendered by GitHub",
            "messageBody": "Also, removes README.python3, which doesn\u0027t provide any extra information\nthat\u0027s not already found in the README.\n",
            "insertions": 0,
            "deletions": 33
          }
        ]
      },
      {
        "insertions": 83,
        "deletions": 54,
        "date": "2015-12-16",
        "commitResults": [
          {
            "hash": "60b5ced178bb7cf1ea1ebacd81f9bdc37c29d707",
            "messageTitle": "Basic travis support.",
            "messageBody": "Some of the pylint errors were also removed.\n",
            "insertions": 54,
            "deletions": 19
          },
          {
            "hash": "49e1eb38035798d2873fca7db68a1e1ee39ed8e2",
            "messageTitle": "Add Travis badge.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 4
          },
          {
            "hash": "227bf4cbe891c60b9fa1dad5c63e1d2a38e105bf",
            "messageTitle": "Configure appveyor with the same configuration that astroid has.",
            "messageBody": "",
            "insertions": 24,
            "deletions": 29
          },
          {
            "hash": "77af7133b2ad75292cfafdc6b58c89c5c81e4b83",
            "messageTitle": "Add the correct badge.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "45780992de1fe5b55c756a2f279052ba8d36ad5f",
            "messageTitle": "master pylint is now 1.6.0",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 13,
        "deletions": 90,
        "date": "2015-12-17",
        "commitResults": [
          {
            "hash": "dc071966398d26159773ec627c954cf651d3036e",
            "messageTitle": "Remove features in 1.6.0 which were scheduled for removal.",
            "messageBody": "",
            "insertions": 13,
            "deletions": 89
          },
          {
            "hash": "10280b507be8bdda580874ec4d87073200b3e76b",
            "messageTitle": "Remove unused import.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 31,
        "deletions": 27,
        "date": "2015-12-20",
        "commitResults": [
          {
            "hash": "c9701a3ece6aa2e7f485ec78d426d1d018fc85ae",
            "messageTitle": "Revert change from ead6051d",
            "messageBody": "The refactoring introduced a subtle semantic change, which resulted\nin imports being skipped in functions where no global names were\npreviously defined. Closes issue #737.\n",
            "insertions": 17,
            "deletions": 13
          },
          {
            "hash": "66ea05ea370cdd0419a4fb7e4e228c6f312ad141",
            "messageTitle": "Make the block of code a function, which will simplify a bit the visit method.",
            "messageBody": "",
            "insertions": 14,
            "deletions": 14
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2015-12-24",
        "commitResults": [
          {
            "hash": "ac33f42c858d492f723b4b78d64515424597a260",
            "messageTitle": "Pin astroid to the current in-dev version.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 17,
        "deletions": 7,
        "date": "2015-12-28",
        "commitResults": [
          {
            "hash": "fe8f7dce2eb5fe9bc55ca269482ed7dd81258409",
            "messageTitle": "Disable the information category messages by default.",
            "messageBody": "This is a step towards making pylint more sane, as per the discussion from issue #746.\n",
            "insertions": 16,
            "deletions": 3
          },
          {
            "hash": "d562129f20ecf17b812444866f99ed163b999cd2",
            "messageTitle": "Remove unused variables.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 67,
        "deletions": 25,
        "date": "2015-12-29",
        "commitResults": [
          {
            "hash": "24a5a67ff5c300a7086f5a56721855e11fa6773b",
            "messageTitle": "Disable reports by default and show the evaluation score by default",
            "messageBody": "As per discussion from issue #746, the reports were disabled by\ndefault in order to simplify the interaction between the\ntool and the users. The score is still shown by default,\nas a way of closely measuring when it increases or decreases\ndue to changes brought to the code.\nThe patch introduces a new command line flag, \"--score\" or its\nshorthand version, \"-s\", which controls if the score is shown or not.\nBy default, it\u0027s set to true.\n",
            "insertions": 65,
            "deletions": 23
          },
          {
            "hash": "37701201387f0193f6494ccc194df2e520013869",
            "messageTitle": "Add note about the json output format.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 27,
        "deletions": 11,
        "date": "2016-01-03",
        "commitResults": [
          {
            "hash": "839f865f564e958799aa90c2e56519c57eab1f45",
            "messageTitle": "Include the make bat file from the documentation for Windows platforms.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "21308032cb2a22cd3fbf06be584e73617c57e447",
            "messageTitle": "Remove the inclusion of Contributors, it\u0027s not that important to be in the documentation. Close #762.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 4
          },
          {
            "hash": "47842f309165062c3c972e7fbc737b70121cad1f",
            "messageTitle": "Escape the tab, so it can be rendered properly. Close #764",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "0511e0dee82e78a30d870cdbc07b6f8b32fa89f7",
            "messageTitle": "Empty indent strings are rejected, since they make no sense. Close #764",
            "messageBody": "",
            "insertions": 22,
            "deletions": 4
          },
          {
            "hash": "5416db5a9201e3930068efda335e7040273d95fc",
            "messageTitle": "Unquote the string before saving it.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 313,
        "deletions": 30,
        "date": "2016-01-09",
        "commitResults": [
          {
            "hash": "d2a7144d29a6576f79c0f8fba4ff4707447c3f79",
            "messageTitle": "Take in account kwonlyargs when verifying that arguments are defined",
            "messageBody": "Closes #745\n",
            "insertions": 28,
            "deletions": 1
          },
          {
            "hash": "e00abd9214f9ea3e49262bc09626784e2cd3ea4a",
            "messageTitle": "Treat AsyncFunctionDef just like FunctionDef nodes",
            "messageBody": "When support for Python 3.5 was added, AsyncFunctionDef\nwasn\u0027t handled properly in terms of FunctionDef, which meant\nthat most of the checks which involved a function were never\ncalled for AsyncFunctionDef. This led to spurious false positives\nwhich occurred when AsyncFunctionDef were analyzed.\nCloses #767\n",
            "insertions": 109,
            "deletions": 3
          },
          {
            "hash": "8996b81d4e8c9d8b1b89d5cec68150fe0bf8e1ea",
            "messageTitle": "Remove trailing whitespace.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "271f48aabee1b985a008bb90c3a76ee6869b83a1",
            "messageTitle": "Ignore function calls with variadic arguments without a context.",
            "messageBody": "Inferring variadic positional arguments and keyword arguments\nwill result into empty Tuples and Dicts, which can lead in\nsome cases to false positives with regard to no-value-for-parameter.\nIn order to avoid this, until we\u0027ll have support for call context\npropagation, we\u0027re ignoring such cases if detected.\nClose #722\n",
            "insertions": 51,
            "deletions": 3
          },
          {
            "hash": "dba8e6e23ea338a8db685f33418dc80ed8aeff10",
            "messageTitle": "Use safe_infer when inferring a Starred node\u0027s value.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "81b66e0a695e22bb816aaff8e354ef4dc28532d4",
            "messageTitle": "Rename display_results to display_reports, the old name being deprecated.",
            "messageBody": "",
            "insertions": 34,
            "deletions": 10
          },
          {
            "hash": "77fcfcb71ce814d380a90166e79659dcf4b2ad2c",
            "messageTitle": "Decouple the displaying of reports from the displaying of messages",
            "messageBody": "Some reporters are aggregating the messages instead of displaying\nthem when they are available. The actual displaying was conflatted\nin the generate_reports. Unfortunately this behaviour was flaky\nand in the case of the JSON reporter, the messages weren\u0027t shown\nat all if a file had syntax errors or if it was missing.\nIn order to fix this, the aggregated messages can now be\ndisplayed with Reporter.display_message, while the reports are\ndisplayed with display_reports.\n\nClose #766 and #765\n",
            "insertions": 86,
            "deletions": 11
          },
          {
            "hash": "97bb5a65d50dccea4d1199a5fc5a261f568c1b3f",
            "messageTitle": "Implement a dummy _display to satisfy API constraint.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 50,
        "deletions": 16,
        "date": "2016-01-10",
        "commitResults": [
          {
            "hash": "6e7037479b79b28ed8db4c74df7bff193f4574c4",
            "messageTitle": "More sane handling of site-packages detection",
            "messageBody": "Previously there were some issues with the computation of\nsite-packages, since it was considering any module that started\nwith sys.prefix or sys.real_prefix as a module that could have\nbeen installed in site-packages. The patch properly builds\nthe paths, by calling get_python_lib with each prefix.\nWe\u0027re also handling Debian\u0027s derivatives, which installs third-party\nlibraries into /usr/local/lib/python/dist-packages.\n",
            "insertions": 28,
            "deletions": 9
          },
          {
            "hash": "5c5b5a365a6333a616bf9587badba2b49f0abe39",
            "messageTitle": "Make pylint green.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "94bc414c5394a6fc60fc1dbb700c585371a5c373",
            "messageTitle": "Handle the import fallback idiom with regard to wrong-import-order.",
            "messageBody": "Close #750\n",
            "insertions": 20,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 17,
        "deletions": 1,
        "date": "2016-01-12",
        "commitResults": [
          {
            "hash": "ca7927fdf752129a0d62aa7d339f6fe5568dadab",
            "messageTitle": "Add test case for #773.",
            "messageBody": "",
            "insertions": 17,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 15,
        "deletions": 13,
        "date": "2016-01-13",
        "commitResults": [
          {
            "hash": "46f51312cefb2dec8b7b7f50e4cc5fb0f6e7e9ca",
            "messageTitle": "Merge StringMethodChecker with StringFormatChecker.",
            "messageBody": "This fixes a bug where disabling all the messages and enabling only a\nhandful of messages from the StringFormatChecker would have resulted in no\nmessages at all.\n",
            "insertions": 15,
            "deletions": 13
          }
        ]
      },
      {
        "insertions": 8,
        "deletions": 5,
        "date": "2016-01-15",
        "commitResults": [
          {
            "hash": "f1c341255c812b30591c48be261b5808bc7f4b10",
            "messageTitle": "Mark missing messages with check_messages.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 4
          },
          {
            "hash": "b0f6c33ca8f69fb866297ff40eda565fc46447b2",
            "messageTitle": "Add new missing messages from check_messages decorator.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 28,
        "deletions": 11,
        "date": "2016-01-18",
        "commitResults": [
          {
            "hash": "319c79d9b4e15e6600dd055370b6ad6e6392592f",
            "messageTitle": "Catch more cases as not proper iterables for __slots__",
            "messageBody": "Close issue #775\n",
            "insertions": 28,
            "deletions": 11
          }
        ]
      },
      {
        "insertions": 171,
        "deletions": 98,
        "date": "2016-02-16",
        "commitResults": [
          {
            "hash": "adeeb296082f4543fb2958577ced2459403bf364",
            "messageTitle": "Add test for issue #226",
            "messageBody": "",
            "insertions": 8,
            "deletions": 0
          },
          {
            "hash": "3815851f09431ae5730195addab7ebab01b88ec0",
            "messageTitle": "Remove unused import.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          },
          {
            "hash": "40a9d665dd2a87f7eb4d104d1524f5f22e6108fe",
            "messageTitle": "Move redefined-variable-type into an extension",
            "messageBody": "We got a lot of complaints about redefined-variable-type having multiple false positives\nand not being reliable enough for a core checker. The fact that it doesn\u0027t take into account\nduck typing makes it way to noisy when dealing with large code bases. Since it would take\nsome time until these concerns will be fixed, the checker becomes an extension and\ncan be later upgraded to a core one.\n",
            "insertions": 163,
            "deletions": 97
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 0,
        "date": "2016-02-19",
        "commitResults": [
          {
            "hash": "5d0e45d47758ed133e176a4b9a99f256ea9e3584",
            "messageTitle": "Don\u0027t emit unsupported-binary-operation if one of the objects involved has unknown base classes.",
            "messageBody": "",
            "insertions": 10,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 22,
        "deletions": 13,
        "date": "2016-02-20",
        "commitResults": [
          {
            "hash": "b3f6242886a82f5723f584e6743f3c3e188e0c32",
            "messageTitle": "Pass the proper objects to the validation functions from config.py",
            "messageBody": "The problem was that the same validation functions were used both manually,\nwith a custom option dictionary, as well as used for optparse.TYPE_CHECKER\nconfiguration, where they were expected to receive an optparse.Option object\ninstead. A common function was created instead, which expects already the choices.\n\nClose #821\n",
            "insertions": 22,
            "deletions": 13
          }
        ]
      },
      {
        "insertions": 35,
        "deletions": 48,
        "date": "2016-02-26",
        "commitResults": [
          {
            "hash": "e425926d3ec721785a8e86af5445c69575d3caca",
            "messageTitle": " Don\u0027t consider bare and broad except handlers as ignoring NameError, AttributeError and similar exceptions, in the context of checkers for these issues.",
            "messageBody": "Closes #826\n",
            "insertions": 35,
            "deletions": 48
          }
        ]
      },
      {
        "insertions": 18,
        "deletions": 4,
        "date": "2016-03-05",
        "commitResults": [
          {
            "hash": "1d6eddf8cf02807f0bd64f086a69148d0a465dc6",
            "messageTitle": "Use an OrderedDict for storing the configuration elements",
            "messageBody": "This fixes an issue related to impredictible order of the disable / enable\nelements from a config file. In certain cases, the disable was coming before\nthe enable which resulted in classes of errors to be enabled, even though the intention\nwas to disable them. The best example for this was in the context of running multiple\nprocesses, each one of it having different enables / disables that affected the output.\n\nClose #815\n",
            "insertions": 18,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 1,
        "date": "2016-03-06",
        "commitResults": [
          {
            "hash": "5d58b6d5cc5ca08f94f9b5a5f95c2bb3b05e5bfa",
            "messageTitle": "Document that enable can appear only once in the configuration file",
            "messageBody": "Close #486\n",
            "insertions": 3,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 0,
        "date": "2016-03-11",
        "commitResults": [
          {
            "hash": "9e7bee05d62e682c8199f64c9ae3d787fd5c0072",
            "messageTitle": "Ignore __all__ elements that don\u0027t have a parent",
            "messageBody": "There used to be a bug which involved astroid and extension modules,\nwhere the elements of the __all__ declaration didn\u0027t have a parent set.\nThis problem was fixed though in astroid 2.0 and we can infer properly\nthese declarations with the parent being set. Unfortunately, we can\u0027t\nrely on astroid 2.0 right now, so the solution for not having crashes\nis to skip these elements in the undefined-all-variable pattern.\n\nClose #846\n",
            "insertions": 10,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 15,
        "deletions": 6,
        "date": "2016-03-16",
        "commitResults": [
          {
            "hash": "318bf253195e489ad21c3bf9df236ac49a3d293c",
            "messageTitle": "Filter non Const nodes instead of checking for AttributeError.",
            "messageBody": "",
            "insertions": 8,
            "deletions": 6
          },
          {
            "hash": "b76e4c507d75d8c8c972566d17de1b2b8714cc1c",
            "messageTitle": "Add ChangeLog entry and new contributor.",
            "messageBody": "",
            "insertions": 7,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 34,
        "deletions": 6,
        "date": "2016-03-18",
        "commitResults": [
          {
            "hash": "16cfdf767931e28c96ffc4817bd9c463f072a18c",
            "messageTitle": "Let visit_importfrom from Python 3 porting checker be called when everything is disabled",
            "messageBody": "Because the visit method was filtering the patterns it was expecting to be activated,\nit didn\u0027t run when everything but one pattern was disabled, leading to spurious false\npositives\n\nClose #852\n",
            "insertions": 21,
            "deletions": 4
          },
          {
            "hash": "bf4c65dedbfd2ad4752a49d6f31cbedbe402a5bb",
            "messageTitle": "Use the configparser backport for Python 2",
            "messageBody": "This fixes a problem we were having with comments inside values, which is fixed\nin Python 3\u0027s configparser.\nClose #828\n",
            "insertions": 13,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 97,
        "deletions": 26,
        "date": "2016-03-21",
        "commitResults": [
          {
            "hash": "9ea0cd4bae28ee2fc6b75c555885f59d13bca85e",
            "messageTitle": "No need to mention hg anymore in README",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          },
          {
            "hash": "60cec2c4dd303dce22d1d10b2e442bc06a5df132",
            "messageTitle": "Restructure Changelog entries so it\u0027s more obvious where some changes occurred.",
            "messageBody": "",
            "insertions": 32,
            "deletions": 23
          },
          {
            "hash": "6d4f8f7eef6f7df3b3991d55fe3e010c213fb01c",
            "messageTitle": "Add a new recommendation checker, \u0027consider-iterating-dictionary\u0027",
            "messageBody": "This error is emitted when a dictionary is iterated through .keys(), instead\nof iterating the dictionary directly, as in \u0027for key in dictionary:\u0027.\n\nClose #699\n",
            "insertions": 64,
            "deletions": 1
          },
          {
            "hash": "932ad153f30d319fa52ebff221b80281ae26782b",
            "messageTitle": "Iterate over the dictionary itself.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 105,
        "deletions": 34,
        "date": "2016-03-25",
        "commitResults": [
          {
            "hash": "b268f7324ce7044ab14e62a9edfa1c9835ec48d5",
            "messageTitle": "\u0027reimported\u0027 is emitted when the same name is imported from different module.",
            "messageBody": "Close #162.\n",
            "insertions": 16,
            "deletions": 5
          },
          {
            "hash": "c08d02d2e9cf28a048bb12067375a2ddddb0793b",
            "messageTitle": "Ignore reimports when an alias is used.",
            "messageBody": "",
            "insertions": 19,
            "deletions": 9
          },
          {
            "hash": "ca073e11bb2e336d2936b25cf8d7a5987852e727",
            "messageTitle": "pyreverse\u0027s --ignore can\u0027t be passed multiple times. Close #564.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 2
          },
          {
            "hash": "171f9103c38bc98bef875e5509aa0baf01d24084",
            "messageTitle": "Fix indentation",
            "messageBody": "",
            "insertions": 6,
            "deletions": 6
          },
          {
            "hash": "88dc5155919543b50d0692206bdc6218122a2633",
            "messageTitle": "Don\u0027t use line continuation for strings.",
            "messageBody": "",
            "insertions": 7,
            "deletions": 6
          },
          {
            "hash": "62a15879d84651490e00a0dfe97d20c2d9818e50",
            "messageTitle": "Simplify the code by removing an indentation level.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 3
          },
          {
            "hash": "ad7c2cd38f7213edd1ff37aaead86d5ae8390df4",
            "messageTitle": "Add a new option, \u0027redefining-builtins-modules\u0027.",
            "messageBody": "The option can be used for controlling the modules\nwhich can redefine builtins, such as six.moves and future.builtins.\n\nClose #464.\n",
            "insertions": 55,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 12617,
        "deletions": 2,
        "date": "2016-03-28",
        "commitResults": [
          {
            "hash": "1cdb8bc0b74deea7c3590eea289824db185392b3",
            "messageTitle": "epylint.py_run does not crash on big files, using .communicate() instead of .wait()",
            "messageBody": "Close #599\n",
            "insertions": 12617,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 22,
        "deletions": 1,
        "date": "2016-04-03",
        "commitResults": [
          {
            "hash": "fcad2fb22d49c31ed697ad32a09bb1bd98d0bed3",
            "messageTitle": "config files with BOM markers can now be read.",
            "messageBody": "Close #864.\n",
            "insertions": 21,
            "deletions": 1
          },
          {
            "hash": "65afb6b276bb4643374dd175562b7eeff9cb608f",
            "messageTitle": "Don\u0027t warn about deprecated-method.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 2,
        "date": "2016-04-25",
        "commitResults": [
          {
            "hash": "707646ffb868294857191380a5f1f901217ad903",
            "messageTitle": "Add test for emitting no-member when __slots__ are prohibiting delayed assignment inference.",
            "messageBody": "",
            "insertions": 10,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 3,
        "date": "2016-04-26",
        "commitResults": [
          {
            "hash": "c91eb88dcc41002a59355b678c5d47586427f57a",
            "messageTitle": "Use \u0027method\u0027 for lambda methods.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 14,
        "deletions": 0,
        "date": "2016-04-30",
        "commitResults": [
          {
            "hash": "9fffdb6243491116c8ca85c6ff3fe45ac7ec5607",
            "messageTitle": "Add missing changelog entries and new contributor.",
            "messageBody": "",
            "insertions": 14,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 36,
        "deletions": 28,
        "date": "2016-05-09",
        "commitResults": [
          {
            "hash": "38a56db2c4931feae2e6ca7141b9a143b3354114",
            "messageTitle": "Add support for namespace packages",
            "messageBody": "Close #842\n",
            "insertions": 36,
            "deletions": 28
          }
        ]
      },
      {
        "insertions": 174,
        "deletions": 67,
        "date": "2016-05-10",
        "commitResults": [
          {
            "hash": "6ffaba08ee5720df9e93e4026d190ecaca300f26",
            "messageTitle": "Don\u0027t import the objects from modutils, import the module itself.",
            "messageBody": "",
            "insertions": 10,
            "deletions": 11
          },
          {
            "hash": "002cdf2311d6d5e481a70cc7e5ba3f800e753877",
            "messageTitle": "Look for namespace packages explicitly using modpath_from_file_with_callback.",
            "messageBody": "",
            "insertions": 10,
            "deletions": 1
          },
          {
            "hash": "46130dcb46cb447b54b80ec4ebcf726cfa42ac88",
            "messageTitle": "Fix lint warning.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "37d5ddbb79b0119bf9f9df5f9d933045c4787077",
            "messageTitle": "Add the current directory as well into sys.path. This will fix some issues with local namespace packages, such as no-name-in-module.",
            "messageBody": "",
            "insertions": 6,
            "deletions": 6
          },
          {
            "hash": "713987822bf6e9ebd90d15597789876206c48d0e",
            "messageTitle": "Don\u0027t warn about invalid-sequence-index if the indexed object has unknown base classes",
            "messageBody": "Closes #867\n",
            "insertions": 17,
            "deletions": 2
          },
          {
            "hash": "fa455f0051942ea785ba6f18dbf66d4cfb11fae1",
            "messageTitle": "Don\u0027t crash when checking, for super-init-not-called, a method defined in an if block.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          },
          {
            "hash": "a51597920bdb316019809f8e31ec196faa77a3a6",
            "messageTitle": "Removed the bad-builtin check",
            "messageBody": "Using some of the builtins is just fine, we don\u0027t have to warn\nabout using filter or map, since it imposes a split opinion,\nthat can\u0027t be easily be agreed with in certain cases, leading to\nthe disabling of the check. As such, is far more suited to remove\nthe check.\n",
            "insertions": 7,
            "deletions": 36
          },
          {
            "hash": "4e2aafdf1f0ffcf0ece5ae606aad481a6a7dde4c",
            "messageTitle": "Make bad-builtin an extension, which is not enabled by default.",
            "messageBody": "",
            "insertions": 119,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 3,
        "date": "2016-05-11",
        "commitResults": [
          {
            "hash": "e2e0d77a362974725db9297176823bdd2adb493f",
            "messageTitle": "Fix lint errors.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 15,
        "deletions": 2,
        "date": "2016-05-15",
        "commitResults": [
          {
            "hash": "9f3077b3a0a2a5602df7850adc4f2d326d87e68f",
            "messageTitle": "generated-members support qualified name through regular expressions.",
            "messageBody": "For instance, one can specify a regular expression as --generated-members\u003dastroid.node_classes.*\nfor ignoring every no-member error that is accessed as in `astroid.node_classes.missing.object`.\nClose #723.\n",
            "insertions": 15,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 60,
        "deletions": 8,
        "date": "2016-05-17",
        "commitResults": [
          {
            "hash": "4d8336b527bded620c8c24d3ed442539d9256f04",
            "messageTitle": "Fix some false positives with unknown sized variadics.",
            "messageBody": "Close #878\n",
            "insertions": 60,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 0,
        "date": "2016-05-24",
        "commitResults": [
          {
            "hash": "0308807237412fc06552e126a6a1b04d0ad5dce5",
            "messageTitle": "Remove empty file",
            "messageBody": "",
            "insertions": 0,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 98,
        "deletions": 12,
        "date": "2016-05-31",
        "commitResults": [
          {
            "hash": "5fcfe83ef72429e23785ac8671b364e6aa934932",
            "messageTitle": "Do not emit import-error or no-name-in-module for fallback import blocks by default.",
            "messageBody": "Until now, we warned with these errors when a fallback import block (a TryExcept block\nthat contained imports for Python 2 and 3) was found, but this gets cumbersome when\ntrying to write compatible code. As such, we don\u0027t check these blocks by default,\nbut the analysis can be enforced by using the new ``--analyse-fallback-block`` flag.\n\nClose #769.\n",
            "insertions": 97,
            "deletions": 11
          },
          {
            "hash": "41ea44fb8a6bd68d490e92d78f8216356656787f",
            "messageTitle": "Forgot to update the flag name.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 281,
        "deletions": 932,
        "date": "2016-06-01",
        "commitResults": [
          {
            "hash": "1ab47902b75882b21d501c78f2e55566c24e71f7",
            "messageTitle": "Add the new and old missing committers.",
            "messageBody": "",
            "insertions": 8,
            "deletions": 5
          },
          {
            "hash": "8322781baae85391b04ae80c3de18be2efe7dc4b",
            "messageTitle": "Add the new shorter license header, including to missing files. Close #894.",
            "messageBody": "",
            "insertions": 273,
            "deletions": 927
          }
        ]
      },
      {
        "insertions": 15,
        "deletions": 0,
        "date": "2016-06-03",
        "commitResults": [
          {
            "hash": "0d17b6b4bc11c2cd7b33784a67e7a75ea31fe6af",
            "messageTitle": "Add regression test for issue 925. Close #925",
            "messageBody": "",
            "insertions": 15,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 11,
        "deletions": 15,
        "date": "2016-06-05",
        "commitResults": [
          {
            "hash": "724175b46ad78c9c98d33db3ad317ce71ba24670",
            "messageTitle": "Make pylint work with the astroid\u0027s master branch, including the special model changes",
            "messageBody": "One change was to check for BaseInstance instead of Instance when looking if an instance\nsupports a given protocol. The latter is used for class instances, while the first one\ncan be used for builtins as well.\nAlso the global-variable-not-assigned code was simplified.\n",
            "insertions": 11,
            "deletions": 15
          }
        ]
      },
      {
        "insertions": 90,
        "deletions": 61,
        "date": "2016-06-14",
        "commitResults": [
          {
            "hash": "27c20d49a974792df78e947b57c25cc6aaee2719",
            "messageTitle": "Simplify the function that looks for undefined variables by moving most of it into another smaller function",
            "messageBody": "",
            "insertions": 61,
            "deletions": 54
          },
          {
            "hash": "4652128d01f8dfb5a85d04b032ae5e85e40eb4b1",
            "messageTitle": "Capitalize some comments.",
            "messageBody": "",
            "insertions": 7,
            "deletions": 6
          },
          {
            "hash": "02f6823e546d9040f573a2e19d42db9517bc2034",
            "messageTitle": "Install the backport of lru_cache and use it for overriden_method (the same behaviour before changing it to a function per stmt).",
            "messageBody": "",
            "insertions": 6,
            "deletions": 0
          },
          {
            "hash": "ade7862b40f8c63480285969b66f7ee8e7a7345c",
            "messageTitle": "Fix a bug where the top name of a qualified import was detected as unused variable.",
            "messageBody": "The problem originates from the fact that we do not have fully qualified name\nof the imports in scope locals, but only the top most one. As such, we retrieve\nthe full name from the node itself or the alias if there is any.\nThere could be a possibility of this change to emit the message about a wrong\nvariable when multiple imports from the same package are on the same line,\nbut this isn\u0027t a concern, since according to best practices, the imports\nshould be on different lines (so accessing the first item of the node\nis by design)\n\nClose #923.\n",
            "insertions": 16,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 151,
        "deletions": 95,
        "date": "2016-06-15",
        "commitResults": [
          {
            "hash": "d95eb088442fad414772b85873c08ac94587ad9a",
            "messageTitle": "Fix a false positive for keyword variadics with regard to keyword only arguments.",
            "messageBody": "If a keyword only argument was necessary for a function, but that function was called\nwith keyword variadics (**kwargs), then we were emitting a missing-kwoa false positive,\nwhich is now fixed. The context variadics function was also rewritten, so we should take\nin account only positional or only keyword arguments at each stage of checking the parameters.\n\nClose #934.\n",
            "insertions": 86,
            "deletions": 32
          },
          {
            "hash": "071718d6eac074e715fbf0f46eaf35faf7817bff",
            "messageTitle": "Move the context variadic functions into private functions.",
            "messageBody": "",
            "insertions": 65,
            "deletions": 63
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 0,
        "date": "2016-06-16",
        "commitResults": [
          {
            "hash": "c57cfaeb62a2035785e79ac932c7fdf62026ece4",
            "messageTitle": "Add regression test for wrong-import-position in `if __name__ \u003d\u003d __main__` guard",
            "messageBody": "This was probably fixed a while ago. Close #739\n",
            "insertions": 12,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 25,
        "deletions": 3,
        "date": "2016-06-17",
        "commitResults": [
          {
            "hash": "554c8c7ec3083c7ed3a8d2fc8908872e5e14b75e",
            "messageTitle": "Fix the release process notes and add some short notes about the new release management process.",
            "messageBody": "",
            "insertions": 25,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 14,
        "deletions": 3,
        "date": "2016-06-20",
        "commitResults": [
          {
            "hash": "56b9e31a4293d4f8ca78096f1ffb9c0c710ca4d9",
            "messageTitle": "Enable the docs and mccabe extensions for our CI.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "74681709f0d50c44ad152649a29a045b1cbe6d95",
            "messageTitle": "Use a released version of 3.5",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "da2691e4b709e84abc35b49571905dfb9174b1b6",
            "messageTitle": "Use 3.5-dev again, since the fix for duplicate-key is not available in this Travis version.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "ab5dcdac16695f3dacff38601ea8fa554512dc00",
            "messageTitle": "Check proxies when verifying if an object supports a protocol",
            "messageBody": "This patch adds support for understanding proxies of instances when checking\nif an object, the proxy in question, supports a protocol or not. The problem\nwas with the isinstance call, since the proxy we have does not forward the\n__instancecheck__ to its underlying wrapped object. Changing astroid for supporting\nthis use case requires a plethora of changes, which will lead to churn for a\nsmall benefit.\n\nClose #928\n",
            "insertions": 11,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 22,
        "deletions": 18,
        "date": "2016-06-23",
        "commitResults": [
          {
            "hash": "1cf8d3e8295be285167efc52af2dc3df115537d2",
            "messageTitle": "Add some tests for duplicate-key",
            "messageBody": "",
            "insertions": 6,
            "deletions": 1
          },
          {
            "hash": "9aa5aa543b3f031f904415783eb3d0290653684d",
            "messageTitle": "Run pylint from epylint using -c.",
            "messageBody": "This gets rid of a potential issue which can occur if epylint was calling pylint\nwith lint.py instead. When this was happening, the first entry of sys.path would\nhave been the directory of pylint which contains lint.py. At the same time, if\nsomeone analyzes, with epylint, a file that contains an import of a module,\nand that module has the same name as one of the modules that are coming along\nwith pylint\u0027s lint.py, then instead of importing the module from site-packages,\nthe pylint\u0027s module would have been imported instead.\n\nClose #920\n",
            "insertions": 2,
            "deletions": 3
          },
          {
            "hash": "ede507509b4631614f67c1bf2dc2c64f9880169f",
            "messageTitle": "Document some missing types and improve the indentation.",
            "messageBody": "",
            "insertions": 14,
            "deletions": 14
          }
        ]
      },
      {
        "insertions": 21,
        "deletions": 11,
        "date": "2016-06-24",
        "commitResults": [
          {
            "hash": "ce8b7b27a53080c0206a0058ddf0fa40b000a5e8",
            "messageTitle": "Variables prepended with underscores are now marked as unused through the updated dummy-variables-rgx. Close #899",
            "messageBody": "",
            "insertions": 13,
            "deletions": 3
          },
          {
            "hash": "b4b6fd1181377b3c99e78ace2dad51d5ed08667b",
            "messageTitle": "Remove additional star.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "2dd30a0787296838cf704bd85619a983846817b7",
            "messageTitle": "Move a staticmethod into a function.",
            "messageBody": "",
            "insertions": 7,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 75,
        "deletions": 20,
        "date": "2016-06-27",
        "commitResults": [
          {
            "hash": "575c90d19d7b39392fdb92cb401a2995882c0ff0",
            "messageTitle": "ignored-argument-names is now used for ignoring arguments for unused-variable check.",
            "messageBody": "This option was used for ignoring arguments when computing the correct number of arguments\na function should have, but for handling the arguments with regard\nto unused-variable check, dummy-variables-rgx was used instead. Now, ignored-argument-names\nis used for its original purpose and also for ignoring the matched arguments for\nthe unused-variable check. This offers a better control of what should be ignored\nand how.\nAlso, the same option was moved from the design checker to the variables checker,\nwhich means that the option now appears under the ``[VARIABLES]`` section inside\nthe configuration file.\nClose #862.\n",
            "insertions": 49,
            "deletions": 15
          },
          {
            "hash": "e7152f9d54c379b55baa279fc8f252356bf8c327",
            "messageTitle": "iterparse is not actually deprecated, only its parameter. Close #947.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "af63289220565ccb6848e36c9bc3b88ff227c31d",
            "messageTitle": "Add regression test for #165. Close #165",
            "messageBody": "",
            "insertions": 21,
            "deletions": 1
          },
          {
            "hash": "64fd4508006b7ceeeb4fc7eac139abfc97a2e116",
            "messageTitle": "Add more up-to-date package information.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 254,
        "deletions": 265,
        "date": "2016-06-29",
        "commitResults": [
          {
            "hash": "16fc64edd5de24577161181e15daa485da0e6e0a",
            "messageTitle": "Use astroid.extract_node instead of test_utils.extract_node",
            "messageBody": "",
            "insertions": 214,
            "deletions": 224
          },
          {
            "hash": "fc0ed972b474e63c0d500d7f2d865beebdb12d51",
            "messageTitle": "Import test from astroid and remove old regression tests for libraries we do not have installed (they were pretty much useless)",
            "messageBody": "",
            "insertions": 17,
            "deletions": 21
          },
          {
            "hash": "e5cf088a3cedc29b0f7f6acfdd2c11ad457a33d3",
            "messageTitle": "Remove references to bitbucket from the documentation.",
            "messageBody": "",
            "insertions": 11,
            "deletions": 14
          },
          {
            "hash": "8501a3f07b0693061b2365c6061b568220c0a2d3",
            "messageTitle": "Remove note about logilab.common (test ReadTheDocs as well)",
            "messageBody": "",
            "insertions": 3,
            "deletions": 5
          },
          {
            "hash": "7a9b26b401752845b03b84aee479c370d4cbf951",
            "messageTitle": "Make sure that astroid\u0027s master is installed, instead of relying on a unpublished version.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 1
          },
          {
            "hash": "4a3bd3e53df5ebec07b2edbf072e08b444b74b46",
            "messageTitle": "Add readthedocs badge.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 36,
        "deletions": 38,
        "date": "2016-06-30",
        "commitResults": [
          {
            "hash": "dc3ec3de72d293c24206b2342f53076accd12f34",
            "messageTitle": "Rename check_docstring to docstyle.",
            "messageBody": "",
            "insertions": 14,
            "deletions": 14
          },
          {
            "hash": "f5bb53437ebda666cecdc306f895d06e42c2b060",
            "messageTitle": "Rename the docstring parameter checker to something that suggest more clearly what it does.",
            "messageBody": "",
            "insertions": 10,
            "deletions": 10
          },
          {
            "hash": "4ca94bbada6bead678bba87357b345e0d95dc135",
            "messageTitle": "Move the docstring param checker to docparams.py.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "1c4b355af36bcfd64d455d528fca6b2db1bd746f",
            "messageTitle": "Rename check_docs to docparams in tox.ini",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "5d40a07684be7ed6dbaa54e49c3d436005a533bf",
            "messageTitle": "Remove useless supressions from some test files.",
            "messageBody": "",
            "insertions": 7,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 534,
        "deletions": 896,
        "date": "2016-07-03",
        "commitResults": [
          {
            "hash": "1dab2b9cecb28cb65da6bca0b9d5e0683b0c407b",
            "messageTitle": "Add a whatsnew section to pylint\u0027s docs",
            "messageBody": "This also changes the way how changelog is represented, in order\nto make it more cleaner when it is represented under HTML form.\n",
            "insertions": 333,
            "deletions": 76
          },
          {
            "hash": "6636bc9bd0c793ad7c6f341daa150773bc88f683",
            "messageTitle": "Switch to nature theme.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "e80778ae9c59efdd2e3421afba06df9cf4aa4cf4",
            "messageTitle": "Rework documentation",
            "messageBody": "Changed the documentation in couple of places, merged sections together,\ndescribed testing procedures and added more up-to-date information\nin general.\n",
            "insertions": 185,
            "deletions": 233
          },
          {
            "hash": "c70b281c62deef9f0b7dad10efbd614ccf02d637",
            "messageTitle": "Remove pylint-gui",
            "messageBody": "pylint-gui was removed, because it was deemed unfit for being included\nin *pylint*. It had a couple of bugs and misfeatures, its usability was subpar\nand since its development was neglected, we decided it is best to move on without it.\n\nPart of #975\n",
            "insertions": 15,
            "deletions": 586
          }
        ]
      },
      {
        "insertions": 16,
        "deletions": 290,
        "date": "2016-07-05",
        "commitResults": [
          {
            "hash": "7d58de1c44181849638d0216f0f4f709502e3e2f",
            "messageTitle": "Remove the support for html reporting",
            "messageBody": "The html reporter was lately a second class citizen in Pylint,\nbeing underdeveloped and mostly neglected. It has a couple of bugs,\nbut the more important reason why this is removed is that we now have\na much better json reporter, which can be used as a basis for more\nprettier html Pylint outputs.\n\nPart of #975\n",
            "insertions": 16,
            "deletions": 290
          }
        ]
      },
      {
        "insertions": 210,
        "deletions": 202,
        "date": "2016-07-06",
        "commitResults": [
          {
            "hash": "36ed45346ab4d26814a3cffd9a2736f1fff2a40d",
            "messageTitle": "Removed --files-output option. Part of #975.",
            "messageBody": "",
            "insertions": 6,
            "deletions": 33
          },
          {
            "hash": "7a0f4159e1421eaf63e795ccccc5b8216016b0b7",
            "messageTitle": "Remove features which were scheduled for removal.",
            "messageBody": "",
            "insertions": 8,
            "deletions": 41
          },
          {
            "hash": "c280a1ef191146c8f5a73e4a090b90b7a7807bda",
            "messageTitle": "Remove the deprecation message from inside the closure and pass it as an argument instead.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 4
          },
          {
            "hash": "ae26a0cb0bc57178e61b518d5f71bb5c320abdc3",
            "messageTitle": "Removed --optimized-ast. Part of #975.",
            "messageBody": "",
            "insertions": 13,
            "deletions": 15
          },
          {
            "hash": "81a0c24f4e6cc3ec0c6ecfd72d0fe3f7e709194d",
            "messageTitle": "Update the Changelog so that it contains missing bugfix releases.",
            "messageBody": "",
            "insertions": 144,
            "deletions": 103
          },
          {
            "hash": "35019b87f2f12e3684870040810fa87bc2991a10",
            "messageTitle": "Add a Sphinx hook for generating the features file of Pylint\u0027s documentation",
            "messageBody": "Currently we can generate this locally using the makefiles, but, unfortunately,\non ReadThedocs we are running only sphinx-build, which means that we have no\npre-generated features.rst file before actually building the documentation.\nThis commit just adds one, which does the same thing as the makefiles.\n",
            "insertions": 31,
            "deletions": 2
          },
          {
            "hash": "14522468182f0b87e8bb83faa26b11e042516e78",
            "messageTitle": "Add the header for the features document.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "3b168dbeed984f831716bc4ea312376514a13741",
            "messageTitle": "Write bytes, instead of strings.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "ff67b3f81b10a344ab8c80b49b91c60310df5072",
            "messageTitle": "Fix bad indentation.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 327,
        "deletions": 32,
        "date": "2016-07-07",
        "commitResults": [
          {
            "hash": "e301356ca522e40e2e573b1859373610035886aa",
            "messageTitle": "Fix a typo, it was 0.26, not 1.26",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "0144af3fa37166592831fea86d6cbde678999c7e",
            "messageTitle": "Move check_bad_builtin extension to bad_builtin.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "f1d7f4f5edf537cda6437be03db76f4d8c847454",
            "messageTitle": "Document the bad-builtin extension.",
            "messageBody": "",
            "insertions": 14,
            "deletions": 0
          },
          {
            "hash": "affe718be1bcb2f218ee360fcd667cef6cbd1eea",
            "messageTitle": "Move check_redefined extension to redefined_variable_type.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "dc9ee9f8c9bd5fd77ce39423df6c4d8c3b965289",
            "messageTitle": "Move check_mccabe extension to mccabe.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "739338fcba72040ed9604a60ed7c622f62e8ef4e",
            "messageTitle": "Document the mccabe extension.",
            "messageBody": "",
            "insertions": 45,
            "deletions": 0
          },
          {
            "hash": "d7891acf15778bd5d0609c004e4477c4e8b38be1",
            "messageTitle": "Rename the extension in tox.ini as well.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "1dd66a7c6dbb03ad2790c9764ea9d75d028c097f",
            "messageTitle": "Show only the titles for the What\u0027s New entries.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "9423e31126fa2e951d17d1d57d59c1b14bbbd404",
            "messageTitle": "Add a check_docs file, that registers into docparams, for maintaining backward compatibility.",
            "messageBody": "",
            "insertions": 18,
            "deletions": 0
          },
          {
            "hash": "cb27a0683fcc0a213a5244bc6afa150bc86faded",
            "messageTitle": "Improve the documentation",
            "messageBody": "Add cross links where it makes sense, separate the `Other changes`\nsection into `Deprecated features` and `Removed features` and better\ndescribe some of the changes.\n",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "340f62bd99754af6133a01fa7e4e4b6911903069",
            "messageTitle": "Remove trailing line.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          },
          {
            "hash": "0e40e00e4cbfcafea8e3a2b7b2ff82f3503e3f39",
            "messageTitle": "Add some notes about the new release process and development we are using.",
            "messageBody": "",
            "insertions": 22,
            "deletions": 2
          },
          {
            "hash": "0811fe26fbd8a5c80f4bcb68d6717dcd482a14a9",
            "messageTitle": "Remove section about optimize-ast, it was removed.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 14
          },
          {
            "hash": "6a261ba54e47179e9f6f2949405076990924436d",
            "messageTitle": "Add the 1.6 What\u0027s New into the current one.",
            "messageBody": "",
            "insertions": 201,
            "deletions": 0
          },
          {
            "hash": "1598026b6f54bdf80896eb2306f359e366e5a26b",
            "messageTitle": "Do not use |release| for old releases.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "8aaf6e04f9add9c3449d306148252ed7445ed332",
            "messageTitle": "Use environment markers for conditional requirements.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "c7fadb05abd79372d3cf4d42bf26a90fb814dd6b",
            "messageTitle": "Remove unused import.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          },
          {
            "hash": "c490afb7574b306d9c610c91eace3b2a74ce401a",
            "messageTitle": "Add the entry for 1.6.1",
            "messageBody": "",
            "insertions": 7,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 16,
        "deletions": 2,
        "date": "2016-07-08",
        "commitResults": [
          {
            "hash": "271a27e7bb5a8e4f791f025cb49d92cc3a47a814",
            "messageTitle": "Do not crash when printing the help of options with default regular expressions",
            "messageBody": "Close #990\n",
            "insertions": 16,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 21,
        "deletions": 14,
        "date": "2016-07-09",
        "commitResults": [
          {
            "hash": "a8dc1ca8f34ed5e9c50b8b0f61fd92c6fd1658f0",
            "messageTitle": "Improve the description of the redundant-returns-doc fix.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 2
          },
          {
            "hash": "7a9cb0cdcc8be45039cb46721baaae8f735b2771",
            "messageTitle": "More granular versions for deprecated modules.",
            "messageBody": "Close #991\n",
            "insertions": 17,
            "deletions": 12
          }
        ]
      },
      {
        "insertions": 220,
        "deletions": 74,
        "date": "2016-07-10",
        "commitResults": [
          {
            "hash": "37889449a00cefa40c23b2254a3ffcdc5898c635",
            "messageTitle": "Check the names of the parameters when checking for overridden methods with different parameters",
            "messageBody": "",
            "insertions": 52,
            "deletions": 31
          },
          {
            "hash": "4d82484d610c3db3257c1cd133d92e9abf1d9b8b",
            "messageTitle": "Do not complain about arguments-differ if the overridden method has variadic positional arguments.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 0
          },
          {
            "hash": "d6cf1f0581c20f958dfad88ca6ee379f611be69e",
            "messageTitle": "arguments-differ takes in consideration kwonlyargs and variadics",
            "messageBody": "The check was rewritten to be more strict about overridding a method:\n\n  - now it complains if the parent method had variadics in the signature,\n    but the overridden method does not have. For instance, having *args in\n    the parent method means that it can accept anything, but restricting this\n    to (a, b) in the overridden method leads to inconsistencies in their\n    behavior and can potentially introduce new bugs.\n\n  - it complains if the number of keyword only parameters are not the\n    same in the overridden method\n\n  - it complains about the names of the parameters. For instance, having\n    (a, b) in the parent method and changing this to (c, d) in the overridden\n    method means that the latter one cannot be accessed in the same way\n    as the parent method, when using keyword arguments.\n\nClose #983\n",
            "insertions": 163,
            "deletions": 35
          },
          {
            "hash": "d70f66698efe888d5d4e4127f67eeb493459739f",
            "messageTitle": "Remove obsolete comment.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 102,
        "deletions": 3,
        "date": "2016-07-11",
        "commitResults": [
          {
            "hash": "0f240589a39d145f207d7e9cadeb088eb59e365d",
            "messageTitle": "Added a new refactoring message, \u0027literal-comparison\u0027.",
            "messageBody": "This is used whenever we can detect a comparison to a literal,\nusing the `is` or `is not` operators. This is usually not what we\nwant to do, even though it might seem to work, this can happen\nusually due to interpreter\u0027s interning of small strings or numbers.\n\nClose #786\n",
            "insertions": 102,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 65,
        "deletions": 56,
        "date": "2016-07-12",
        "commitResults": [
          {
            "hash": "7303fd6948f38867c32b32f9584d1fd768b3b6d6",
            "messageTitle": "Cleanup the code, to make it more understandable, correct documentation and changelog entry.",
            "messageBody": "",
            "insertions": 65,
            "deletions": 56
          }
        ]
      },
      {
        "insertions": 212,
        "deletions": 5,
        "date": "2016-07-14",
        "commitResults": [
          {
            "hash": "8ef3bd9e46af6b79588c3337a206107cb08326db",
            "messageTitle": "Added a new error, \u0027invalid-metaclass\u0027.",
            "messageBody": "This is raised when pylint can detect a class which uses, as a metaclass,\nsome object which might not be valid to be used as a metaclass, leading\nto potential surprises or runtime errors.\n\nClose #579\n",
            "insertions": 209,
            "deletions": 2
          },
          {
            "hash": "321ae131cad33f9b800d6c5af19a7de8f586c19c",
            "messageTitle": "Fix lint error.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 332,
        "deletions": 18,
        "date": "2016-07-15",
        "commitResults": [
          {
            "hash": "c48d948c06d31fa8bfa68badda04f081be7fcf4a",
            "messageTitle": "Add a new warning, \u0027useless-super-delegation\u0027",
            "messageBody": "This is used whenever pylint can detect than an overridden method is\nuseless, relying on super() delegation to implement the same thing as\nanother method from MRO. In this case, it is enough to not implement\nthe given method and let it be propagated to the another implementation\nfrom the MRO.\n\nClose #839\n",
            "insertions": 312,
            "deletions": 5
          },
          {
            "hash": "d13c17873809d388d76649ec795a31acfb9288b5",
            "messageTitle": "Split the tests into 3.5+ tests and \u003c3.5 tests for useless-super-delegation.",
            "messageBody": "",
            "insertions": 19,
            "deletions": 12
          },
          {
            "hash": "1e2340637a80ac8fb5444ee81025a8fd77a0ae87",
            "messageTitle": "Restrict a test to +3.5 only.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 18,
        "deletions": 21,
        "date": "2016-07-16",
        "commitResults": [
          {
            "hash": "2943e249f96a38073432f1e9411b7c92773a0509",
            "messageTitle": "Uninferable now has a false default value, so don\u0027t check it explicitly.",
            "messageBody": "",
            "insertions": 18,
            "deletions": 21
          }
        ]
      },
      {
        "insertions": 92,
        "deletions": 6,
        "date": "2016-07-18",
        "commitResults": [
          {
            "hash": "d422f976d80ca5505527b231014e3ee4091b9052",
            "messageTitle": "Make sure that only exception instances or classes are processed.",
            "messageBody": "",
            "insertions": 40,
            "deletions": 2
          },
          {
            "hash": "5f048faf002f2af8de11ae50e3567ce872569f1a",
            "messageTitle": "Do not crash when calling unpack_infer. Close #998",
            "messageBody": "",
            "insertions": 42,
            "deletions": 4
          },
          {
            "hash": "9a3dd9448f1987928791a9df25b7f57462720ad2",
            "messageTitle": "Bring 1.6.3 release into master",
            "messageBody": "",
            "insertions": 10,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 228,
        "deletions": 32,
        "date": "2016-07-19",
        "commitResults": [
          {
            "hash": "79c71de0211f7740378c5a27d78a4d98c1317198",
            "messageTitle": "Recurse into all the ancestors when checking if an object is an exception",
            "messageBody": "Since we were going only into the first level, we weren\u0027t inferring\nwhen a class used a metaclass which defined a base Exception class\nfor the aforementioned class.\n",
            "insertions": 17,
            "deletions": 3
          },
          {
            "hash": "bcd687e13de0c9ea484c9da00e2ff520abf82dac",
            "messageTitle": "Use the current interpreter\u0027s epylint.lint",
            "messageBody": "epylint.py_run was calling *epylint* script in order to\ndo the computation. But this was prone to failures,\nin the case where we have multiple installations of Pylint,\nfor different Python versions, which actually led to crashes\nwhen a Python 2\u0027s py_run call was calling epylint\u0027s belonging\nto Python 3. Instead of calling epylint script directly,\nwe are calling Python with our known epylint code.\nIn order to do this, we also had to switch the shell argument\nto False.\n\nCloses #441\n",
            "insertions": 20,
            "deletions": 6
          },
          {
            "hash": "211d81f84f6f9ad7325386145a546c09420d12aa",
            "messageTitle": "Keep a consistent copyright notice across the board.",
            "messageBody": "This was changed automatically in #894, but apparently\nwe need to have the copyright notice somewhere.\n",
            "insertions": 191,
            "deletions": 23
          }
        ]
      },
      {
        "insertions": 49,
        "deletions": 5,
        "date": "2016-07-20",
        "commitResults": [
          {
            "hash": "9397a52833a1d74d2aaca49db32b5aed0a36767a",
            "messageTitle": "Support inline comments for comma separated values in the config file",
            "messageBody": "Closes #1024\n",
            "insertions": 49,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 462,
        "deletions": 202,
        "date": "2016-07-23",
        "commitResults": [
          {
            "hash": "ec09cc75786e794d9f15654da5e1ed2d6c120fcd",
            "messageTitle": "Even more granular copyrights (thanks to copyrite)",
            "messageBody": "",
            "insertions": 374,
            "deletions": 186
          },
          {
            "hash": "4c7dcefe5bddbf9c5db3d1967492e73cf398b3c8",
            "messageTitle": "Do not emit useless-super-delegation when having extraneous arguments in the call site. Close #1043",
            "messageBody": "",
            "insertions": 49,
            "deletions": 10
          },
          {
            "hash": "919129388ab018eff484ac707cd455f6170590c5",
            "messageTitle": "Add test case for #1045, which was fixed by an astroid change. Close #1045",
            "messageBody": "",
            "insertions": 15,
            "deletions": 0
          },
          {
            "hash": "f214ab1299948f3e021d6bce9b78dff807945775",
            "messageTitle": "Exempt special methods from arguments-differ. Close #1042",
            "messageBody": "",
            "insertions": 19,
            "deletions": 1
          },
          {
            "hash": "6ece3046d3fe08f357796f869a830b976e5cc5cc",
            "messageTitle": "Grammar fix",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 185,
        "deletions": 471,
        "date": "2016-07-24",
        "commitResults": [
          {
            "hash": "67be95a25da3c720e449864ea61db4cb1dd91a81",
            "messageTitle": "Move more tests to the new format.",
            "messageBody": "",
            "insertions": 185,
            "deletions": 471
          }
        ]
      },
      {
        "insertions": 665,
        "deletions": 696,
        "date": "2016-07-27",
        "commitResults": [
          {
            "hash": "b1a018df108c2d79d68563f6273637e415aebd26",
            "messageTitle": "Move unneeded-not into refactoring, where it belongs.",
            "messageBody": "",
            "insertions": 99,
            "deletions": 94
          },
          {
            "hash": "336b0d09aff1126257ef47235ce4761735ea940d",
            "messageTitle": "Use attributes from modules instead of cluttering the namespace.",
            "messageBody": "",
            "insertions": 105,
            "deletions": 122
          },
          {
            "hash": "803a2cc6c7a2c786e715f7a364d4ee195b0c5757",
            "messageTitle": "Move the recommendation checkers into refactoring, since it belongs there.",
            "messageBody": "",
            "insertions": 97,
            "deletions": 94
          },
          {
            "hash": "42d67181bbc45766f512b1f39be73fbf142e35f5",
            "messageTitle": "Use attributes from modules instead of cluttering the namespace.",
            "messageBody": "",
            "insertions": 13,
            "deletions": 16
          },
          {
            "hash": "41541afd0ce2789128f9e6a64d7c57309b82ab6d",
            "messageTitle": "Move ElifChecker into refactoring.py, since it belongs there.",
            "messageBody": "",
            "insertions": 198,
            "deletions": 197
          },
          {
            "hash": "16e1e2cb275db7b9af2e061fb5ba597e77a24749",
            "messageTitle": "Merge RefactoringChecker with ElifChecker.",
            "messageBody": "",
            "insertions": 83,
            "deletions": 96
          },
          {
            "hash": "f635abc2d4d7be32f19fd5536215ccd6a0b90bdd",
            "messageTitle": "Move _for_loop_assign_names into utils.assign_name so it can be reused.",
            "messageBody": "",
            "insertions": 25,
            "deletions": 25
          },
          {
            "hash": "dccc605d24331b578fddc35c0a08f408b3fd0b23",
            "messageTitle": "Use attributes from modules instead of cluttering the namespace.",
            "messageBody": "",
            "insertions": 45,
            "deletions": 52
          }
        ]
      },
      {
        "insertions": 168,
        "deletions": 46,
        "date": "2016-07-28",
        "commitResults": [
          {
            "hash": "bd0c1ef52719d908f335bd445988a620a28c0298",
            "messageTitle": "assign_names return only AssignName nodes now, instead of strings.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "024000aa4f622fac0fb016f3031c7dcd48c05b32",
            "messageTitle": "Kill assign_names, it is just nodes_of_class after all.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 23
          },
          {
            "hash": "1f25a9e61ffbb63522edfe03a9da16ac869b4c4e",
            "messageTitle": "Add a new warning, \u0027redefined-argument-from-local\u0027",
            "messageBody": "Closes #649\n",
            "insertions": 142,
            "deletions": 1
          },
          {
            "hash": "8919f45a7aaaf2231095ff42a9dbcf4e125d90cd",
            "messageTitle": "Fix the problems found by redefined-argument-from-local",
            "messageBody": "",
            "insertions": 12,
            "deletions": 12
          },
          {
            "hash": "de3e99ab917751aed4ef583177f91c995966d0ec",
            "messageTitle": "Fix bad-indentations",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "3327d745a85e0d810cb36094904fe1f5bbae01cb",
            "messageTitle": "Fix redefined-argument-from-local error.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 43,
        "deletions": 53,
        "date": "2016-08-01",
        "commitResults": [
          {
            "hash": "bbd42396362e5b7332d6b8867065b364da489a98",
            "messageTitle": "The default package is none for pyreverse. Close #567",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "3638e89f06ecb9e5a65c1fcdf6beae95d1270398",
            "messageTitle": "Refactor some things around exceptions checker.",
            "messageBody": "",
            "insertions": 42,
            "deletions": 52
          }
        ]
      },
      {
        "insertions": 102,
        "deletions": 63,
        "date": "2016-08-02",
        "commitResults": [
          {
            "hash": "44593d4ea422d8c262ec7dc94cde058cf0ed8442",
            "messageTitle": "Switch to a visitor-style analysis for the exception checker, to simplify the convoluted logic.",
            "messageBody": "",
            "insertions": 92,
            "deletions": 62
          },
          {
            "hash": "fe6b0290ba2a17cd5ee727f7e54ffc188678fe92",
            "messageTitle": "Skip the test on older versions of PyPy, due to https://bitbucket.org/pypy/pypy/commits/19e305e27e67",
            "messageBody": "",
            "insertions": 9,
            "deletions": 0
          },
          {
            "hash": "237aac95affa51ffd2b4c25d23e2b796158642af",
            "messageTitle": "Fix pylint warning.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 283,
        "deletions": 326,
        "date": "2016-08-14",
        "commitResults": [
          {
            "hash": "df1b1f3bcfebeb1de50223f350d93dedef823abd",
            "messageTitle": "Remove useless file.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 2
          },
          {
            "hash": "84588c902a618f44e49ed0194e551bd461589b0f",
            "messageTitle": "Remove obsolete history section.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 57
          },
          {
            "hash": "b8227635372b934e016fc668dd68adecaf59cc36",
            "messageTitle": "Add missing contributors.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "4c2689a7ee7d6ba8a92503f2f4be703de74857bc",
            "messageTitle": "Reorganise a bit the structure of the documents.",
            "messageBody": "",
            "insertions": 48,
            "deletions": 24
          },
          {
            "hash": "96f7128d113c77dc0e18d1c2197cea33b9854406",
            "messageTitle": "Add missing quotes.",
            "messageBody": "",
            "insertions": 23,
            "deletions": 24
          },
          {
            "hash": "98ba2eab2681f9aca6867d92bd20fdaab5a9c4ce",
            "messageTitle": "Remove Windows installation section, obsoleted by `python -m pylint`.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 46
          },
          {
            "hash": "ecf0281b37e90f450571456ff04473d9843f7c3a",
            "messageTitle": "Stop leaving in the past, pychecker is dead.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 27
          },
          {
            "hash": "e830dc2df2e5391eed9c31456a855777186d69ce",
            "messageTitle": "Add a message in the example checker, since the message is needed.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 1
          },
          {
            "hash": "246d49f9e618d2391365de9e54e18d4a25034676",
            "messageTitle": "Refactor the plugins section in order to explain the transform functions and the custom checkers.",
            "messageBody": "",
            "insertions": 188,
            "deletions": 130
          },
          {
            "hash": "31096db040b0050deb9602b8eb839b782edcfd86",
            "messageTitle": "Move parts of the documentation into their own folder section.",
            "messageBody": "",
            "insertions": 15,
            "deletions": 14
          }
        ]
      },
      {
        "insertions": 225,
        "deletions": 10,
        "date": "2016-08-18",
        "commitResults": [
          {
            "hash": "537b1724295dbae620839c62803ca8aab34fe1f7",
            "messageTitle": "Add attribute hints for missing members",
            "messageBody": "Pylint can now provide similar names when not finding a particular name. This is\nbased on the edit distance and it can be tailored to the needs of the user,\nby specifying the distance metric, the number of name choices and deactivating\nor activating the feature.\n\nCloses #1035\n",
            "insertions": 225,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 9,
        "deletions": 7,
        "date": "2016-08-20",
        "commitResults": [
          {
            "hash": "214f1de8170d3f3060f9f368d15ba0b5f6fc96d2",
            "messageTitle": "Use a more recent version of setuptools.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "2356d95759d13cc3e4043418723c7df9a53daceb",
            "messageTitle": "Fix pylint warnings.",
            "messageBody": "",
            "insertions": 8,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 55,
        "deletions": 3,
        "date": "2016-08-22",
        "commitResults": [
          {
            "hash": "7cf531c69dc495419ea5e5d3353c43fbc5b7b188",
            "messageTitle": "Add regression tests for issue #1004. Close #1004",
            "messageBody": "",
            "insertions": 11,
            "deletions": 0
          },
          {
            "hash": "61d208c806f37dae74c71191bbff25a1042e6eac",
            "messageTitle": "Use 3.5 for the sys.std* streams regression test, since there is a discrepancy between Python versions regarding the inference confidence.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "a1d5c2c80a9ca5266dc10e96d37dae48fda531bb",
            "messageTitle": "Improve the ChangeLog and the documentation entries.",
            "messageBody": "",
            "insertions": 43,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 89,
        "deletions": 16,
        "date": "2016-08-23",
        "commitResults": [
          {
            "hash": "50c90e5cfa54087b571fa4d3365ac659791715b3",
            "messageTitle": "Don\u0027t warn about used-before-assignment if the variable is in an exclusive except branch with NameError as a handler",
            "messageBody": "Until now, we weren\u0027t emitting a warning in the case of a variable being\nreferenced before actual definition, with the variable access being placed\ninside a TryExcept, with an except handler that caught NameError, Exception and BaseException.\nWhile for NameError it makes sense, since it is explicit that the user is expecting\na variable to not be defined, it does not make that much sense for the rest of\nthe exceptions, even if they are supertypes of NameError anyway. This is because\nit is not explicit and we cannot infer what the user intended to do anyway.\nWe are now only handling NameError.\n\nClose #1080\n",
            "insertions": 3,
            "deletions": 4
          },
          {
            "hash": "7bc7baa8b34a5e8ccbc073a88d91ad2642a0e886",
            "messageTitle": "Remove useless test.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 9
          },
          {
            "hash": "f1109035159c78ceb1c2ff8f38f6fee53059c54f",
            "messageTitle": "PyLinter.should_analyze_file has a new optional parameter, called `is_argument`",
            "messageBody": "Close #1079\n",
            "insertions": 86,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2016-08-24",
        "commitResults": [
          {
            "hash": "052221fadda564b55321e5fd21a47819925b990f",
            "messageTitle": "Use the short helpers exposed in astroid.modutils for handling the type of a spec.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 6,
        "date": "2016-08-30",
        "commitResults": [
          {
            "hash": "537885ec90ba7d949a929ac560760d0f4199a936",
            "messageTitle": "Update the changelog and the whatsnew entry.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 43,
        "deletions": 22,
        "date": "2016-10-31",
        "commitResults": [
          {
            "hash": "65cb5a9e09a0c24f3af8ca8a0f5e627bf81eb568",
            "messageTitle": "Fix typo.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 3
          },
          {
            "hash": "6e6e3b1a20f7242c890505d00474006686af8539",
            "messageTitle": "Add What\u0027s New entry about overlapping-except.",
            "messageBody": "",
            "insertions": 18,
            "deletions": 0
          },
          {
            "hash": "52e020c0c3c06d78534903c53df371c503eed7a8",
            "messageTitle": "Fix the errors emitted by Sphinx by fixing the layout of the text.",
            "messageBody": "",
            "insertions": 19,
            "deletions": 18
          },
          {
            "hash": "d060a1b08caf76afe656db45d8644864c78a6a80",
            "messageTitle": "Handle ValueError and reraise it as IncompleteFormatString on Python 2.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 1,
        "date": "2016-11-11",
        "commitResults": [
          {
            "hash": "6ce7d1453fd1bd416eebe55a45c430a893fb1f2e",
            "messageTitle": "Support __fspath__ from Python 3.6",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 64,
        "deletions": 13,
        "date": "2016-11-20",
        "commitResults": [
          {
            "hash": "c72d1070bc1dab7d0bcb45b5fe52b8f6dd4bba5e",
            "messageTitle": "Don\u0027t try to access variables defined in a separate scope when checking for protected-access. Close #1126",
            "messageBody": "",
            "insertions": 47,
            "deletions": 8
          },
          {
            "hash": "86571d169c66e838efb4811434dfd49c43d4e9d9",
            "messageTitle": "Use the correct index for the error.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "01cc02d5e6b22a18f2af820c666ebdfcb1cac4c7",
            "messageTitle": "Treat keyword only arguments the same as positional arguments with regard to unused-argument check",
            "messageBody": "Close #1086\n",
            "insertions": 14,
            "deletions": 1
          },
          {
            "hash": "48a4f6f978cbeb3591eb3c7a63bc05331c9d1607",
            "messageTitle": "Make the protected access test to pass.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 0,
        "date": "2016-11-24",
        "commitResults": [
          {
            "hash": "1b73f45d193e1710081924b591793b81883779f7",
            "messageTitle": "Add what\u0027s new entry for single-string-used-for-slots.",
            "messageBody": "",
            "insertions": 7,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2016-12-03",
        "commitResults": [
          {
            "hash": "e5aa388e01b07718e6549d10a9fff1a957c912b4",
            "messageTitle": ".getitem expects only node, wrap the index in a Const value.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 171,
        "deletions": 96,
        "date": "2016-12-04",
        "commitResults": [
          {
            "hash": "5b6d225789b7abdbe7a9156bf7c4bf019783a271",
            "messageTitle": "Improve the tests so that we can see the feature working.",
            "messageBody": "",
            "insertions": 54,
            "deletions": 24
          },
          {
            "hash": "0b58de8f6e923a6331aa227f70867b0276a32ff0",
            "messageTitle": "Skip checking only of arguments when in a singledispatched function.",
            "messageBody": "",
            "insertions": 15,
            "deletions": 13
          },
          {
            "hash": "3fedf6c65dbae82b11b9493645dfea9b171ba85d",
            "messageTitle": "Add docstring and move up the variable at the top of function.",
            "messageBody": "",
            "insertions": 7,
            "deletions": 1
          },
          {
            "hash": "a40f4aa335f41580e217fc3eaa397aa1afaa9dbf",
            "messageTitle": "Update the committers list.",
            "messageBody": "",
            "insertions": 17,
            "deletions": 11
          },
          {
            "hash": "e6fd02ab232cc98f003755fba2537085b1148ff9",
            "messageTitle": "Modify the superfluous else check to not cache results on nodes.",
            "messageBody": "",
            "insertions": 30,
            "deletions": 22
          },
          {
            "hash": "230bebb08fe92b7d537ba2e64f8fcb045361d210",
            "messageTitle": "Rename the check to no-else-return.",
            "messageBody": "",
            "insertions": 48,
            "deletions": 25
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 3,
        "date": "2016-12-14",
        "commitResults": [
          {
            "hash": "03d328f6afd6c454806246673c67cc243286c92b",
            "messageTitle": "Add missing What\u0027s new entry.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "a520a0acbd466f7266653d60e2ff7918c9de2f0b",
            "messageTitle": "Add new contributor.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "2fa18851867e99e065f083de74be8ab8adad4b41",
            "messageTitle": "Simplify the code to not use assertion and exceptions.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 19,
        "deletions": 3,
        "date": "2016-12-16",
        "commitResults": [
          {
            "hash": "ea14cad3187aa2efdd0ae7b520b2ba44797c0863",
            "messageTitle": "Don\u0027t emit not-callable for instances with unknown base classes. Close #1213",
            "messageBody": "",
            "insertions": 19,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 138,
        "deletions": 65,
        "date": "2016-12-18",
        "commitResults": [
          {
            "hash": "c6f6f963e2c0c2b27c6b0d11e0b8d728fed2860b",
            "messageTitle": "Remove tests which depend on external libraries.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 28
          },
          {
            "hash": "d1ca5d88f36f38d5d73e050d9ef223b4623acd2b",
            "messageTitle": "Let the posargs parameter be separated from the test directory, so that we can pass flags to pytest correctly",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "cacb4566d9041f76a469c1ce4ba2f9737afbeaeb",
            "messageTitle": "Allow running tests without installing, using pytest and setuptools. Close #1062",
            "messageBody": "",
            "insertions": 20,
            "deletions": 14
          },
          {
            "hash": "4b053f5cbc8814bb5707640569272fd304b4e64c",
            "messageTitle": "Fix formatting and use any() to simplify the check",
            "messageBody": "",
            "insertions": 22,
            "deletions": 12
          },
          {
            "hash": "4a15be419cba3fdccc386d0cf85651a68ec52b24",
            "messageTitle": "Don\u0027t emit used-before-assignment in certain single statement functions",
            "messageBody": "If a single statement function has a particular variable and the statement\nis on the same line as the function definition, then we were going to emit\nused-before-assignment for that particular value. This was wrong, since\nthe variable was used after the definition.\n\nPart of #1135\n",
            "insertions": 13,
            "deletions": 1
          },
          {
            "hash": "7aee3e3b29f64c705bdf07bdc00e07cfff463583",
            "messageTitle": "Simplify the test case so it can pass on Windows.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 4
          },
          {
            "hash": "6ae2b7704beb4f6425532b606206083a40f7e668",
            "messageTitle": "\u0027trailing-comma-tuple\u0027 check was added",
            "messageBody": "This message is emitted when pylint finds an one-element tuple,\ncreated by a stray comma. This can suggest a potential problem in the\ncode and it is recommended to use parantheses in order to emphasise the\ncreation of a tuple, rather than relying on the comma itself.\n\nClose #300\n",
            "insertions": 78,
            "deletions": 3
          },
          {
            "hash": "c5c79c47db68e81dad09ccb75d63d98a36b0cd83",
            "messageTitle": "Extract the value using tuple indexing, so that it will work on Python 2.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 5,
        "date": "2016-12-19",
        "commitResults": [
          {
            "hash": "9a59ec4bb8c73ecf12e036a92a83a708fbdabac0",
            "messageTitle": "Improve the message of no-else-return",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 14,
        "deletions": 6,
        "date": "2016-12-27",
        "commitResults": [
          {
            "hash": "c74caf11dbae79c4ee86c559f7f677e6353f02ce",
            "messageTitle": "Drop _get from name and some style fixes.",
            "messageBody": "",
            "insertions": 10,
            "deletions": 6
          },
          {
            "hash": "654d64b2390be1b7e67384dce6e72c6b52a03e7f",
            "messageTitle": "Add new contributor and changelog entry",
            "messageBody": "",
            "insertions": 4,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 77,
        "deletions": 28,
        "date": "2016-12-30",
        "commitResults": [
          {
            "hash": "b89693399d15440e6f5398067b8653931fb84877",
            "messageTitle": "Use the dunder lookup to retrieve the special methods. Close #1023",
            "messageBody": "",
            "insertions": 24,
            "deletions": 3
          },
          {
            "hash": "607e2bfcb236faa527a738a84a48434a236fd08d",
            "messageTitle": "Take in consideration the dummy-rgx-variable when checking for different parameters. Close #1041",
            "messageBody": "",
            "insertions": 44,
            "deletions": 16
          },
          {
            "hash": "6712bbe45888a7f26ca5c3e54f45c3956d87cc58",
            "messageTitle": "Change the text of arguments-differ by making it more explicit",
            "messageBody": "",
            "insertions": 9,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 96,
        "deletions": 17,
        "date": "2016-12-31",
        "commitResults": [
          {
            "hash": "69f480dfe698b17756f97ca61cd7c6390e3e7f66",
            "messageTitle": "Allow more powerful regexes for generated-members. Close #1167",
            "messageBody": "",
            "insertions": 8,
            "deletions": 3
          },
          {
            "hash": "bdcdaaadde4b7ee9d5bc91f667767734ed8071eb",
            "messageTitle": "Fix the markup",
            "messageBody": "",
            "insertions": 22,
            "deletions": 14
          },
          {
            "hash": "6e6c135e3d4a35e21ecf202651afa7642a5e3edd",
            "messageTitle": "Document missing changes in 2.0",
            "messageBody": "",
            "insertions": 66,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 9,
        "deletions": 0,
        "date": "2017-01-21",
        "commitResults": [
          {
            "hash": "b94fed328d7ad2ee2d27776d1dbcac077fe1b302",
            "messageTitle": "Add regression for #488. Close #488",
            "messageBody": "",
            "insertions": 9,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 13,
        "deletions": 0,
        "date": "2017-01-22",
        "commitResults": [
          {
            "hash": "5b1b24a4b40f2a885cca2c4550d326fe40839600",
            "messageTitle": "Add test demonstrating that #940 does not crash any longer. Close #940",
            "messageBody": "",
            "insertions": 13,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 75,
        "deletions": 15,
        "date": "2017-01-26",
        "commitResults": [
          {
            "hash": "2236f185703da86df83b4ca5a9ac944d8bf6e1f1",
            "messageTitle": "Stop the string formatting inference check on InferenceError/Uninferable, but warn when the capability does not exist.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 2
          },
          {
            "hash": "de68dd8b8f9595a5a261f326c2acf9bc923d86f0",
            "messageTitle": "The protocol checks are emitting their messages when a special method is set to None.",
            "messageBody": "Close #1263\n",
            "insertions": 67,
            "deletions": 10
          },
          {
            "hash": "853ba0e396117a94fc8bac340c4539eb388d0ab6",
            "messageTitle": "Simplify condition",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "a392434b11efb031fb16835dd661476347e30adc",
            "messageTitle": "Remove the variadics from the default function",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 128,
        "deletions": 15,
        "date": "2017-01-28",
        "commitResults": [
          {
            "hash": "67917d693e08d8a1cab351156abb8771f9884b53",
            "messageTitle": "Add test case for __init_subclass__. Close #1275",
            "messageBody": "",
            "insertions": 18,
            "deletions": 0
          },
          {
            "hash": "cab2a941d702f23d82b52fdd91758545dafdf98a",
            "messageTitle": "Added a new error, \u0027used-prior-global-declaration\u0027.",
            "messageBody": "This is emitted when a name is used prior a global declaration in a function.\nThis causes a SyntaxError in Python 3.6\n\nClose #1257\n",
            "insertions": 65,
            "deletions": 1
          },
          {
            "hash": "9f090273332e8cda8484612abc67fd73eb02945e",
            "messageTitle": "Check for using before a global declaration in the same scope",
            "messageBody": "",
            "insertions": 21,
            "deletions": 3
          },
          {
            "hash": "1a29e8ae2bf07b355d33829442f54d4bd6eaf93a",
            "messageTitle": "Add *args back to mccabe\u0027s default function",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "30e092455d26664e83978fd2cb21e5814008310a",
            "messageTitle": "Change the message for wrong-import-order. Close #1300",
            "messageBody": "",
            "insertions": 6,
            "deletions": 6
          },
          {
            "hash": "b4efc669871fe181a52216e72e87b7ce224b703c",
            "messageTitle": "Exempt classes with __getattr__ from no-member. This should help #1293",
            "messageBody": "",
            "insertions": 16,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 16,
        "deletions": 16,
        "date": "2017-02-02",
        "commitResults": [
          {
            "hash": "78dd7ee9e43ae3acb31cb14ea218537c8a8f03e4",
            "messageTitle": "Fix the test selection. Close #1308",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "854bfe802145355a659e0b1ec068d31d8000988d",
            "messageTitle": "Don\u0027t recommend BaseException in the message file. Close #1302",
            "messageBody": "",
            "insertions": 14,
            "deletions": 14
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 1,
        "date": "2017-02-14",
        "commitResults": [
          {
            "hash": "62361d10f5dc5fa751038745d23e06b5a9c5bc56",
            "messageTitle": "Move the check in a variable out of the loop.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 16,
        "deletions": 6,
        "date": "2017-03-01",
        "commitResults": [
          {
            "hash": "28e04bdbd51683ab3a8df06f9f1214b1e3df1c7a",
            "messageTitle": "2.0 is now 1.7.0. We will release 2.0 a bit later, sorry for this.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "994ec3616f805ba24df73605a8e2ec7feedf4be6",
            "messageTitle": "Rename the .rst file to 1.7.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "5c8dd5b81073c467569fcd8356015eafac14b238",
            "messageTitle": "Add note for why we have some messages disabled by default. Close #1352",
            "messageBody": "",
            "insertions": 10,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 23,
        "deletions": 0,
        "date": "2017-03-11",
        "commitResults": [
          {
            "hash": "9d0bbb665704421acbd2b54c34a2e5c8eb153ed6",
            "messageTitle": "Add test for #1362",
            "messageBody": "",
            "insertions": 23,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 0,
        "date": "2017-03-12",
        "commitResults": [
          {
            "hash": "d78e0130720aba010a55e388ba16bd58debef828",
            "messageTitle": "Add regression test. Close #1326",
            "messageBody": "",
            "insertions": 12,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 39,
        "deletions": 2,
        "date": "2017-04-12",
        "commitResults": [
          {
            "hash": "df4908be72b32d37e4be9ab0d47e29f55291b407",
            "messageTitle": "Handle async block openers for bad-continuation check. Close #1415",
            "messageBody": "",
            "insertions": 19,
            "deletions": 2
          },
          {
            "hash": "30f0ff9178f75385c63ee0c445223641494a95aa",
            "messageTitle": "Handle keyword-only args annotation variables. Close #1168",
            "messageBody": "",
            "insertions": 20,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 96,
        "deletions": 51,
        "date": "2017-04-13",
        "commitResults": [
          {
            "hash": "9aeb753f066fd5594c308d28a68031898079736b",
            "messageTitle": "Move the keyword rules into a class variable",
            "messageBody": "",
            "insertions": 11,
            "deletions": 7
          },
          {
            "hash": "3ccda499db433200e783d5be76004930817efe47",
            "messageTitle": "Minor formatting issues",
            "messageBody": "",
            "insertions": 10,
            "deletions": 5
          },
          {
            "hash": "bf3e06fcb86fef4d0273ba40f8254377a050aa00",
            "messageTitle": "We don\u0027t emit by default ``no-member`` if we have opaque inference objects in the inference results",
            "messageBody": "This is controlled through the new flag ``--ignore-on-opaque-inference``, which is by\ndefault True. The inference can return  multiple potential results while\nevaluating a Python object, but some branches might not be evaluated, which\nresults in partial inference. In that case, it might be useful to still emit\nno-member and other checks for the rest of the inferred objects.\n",
            "insertions": 54,
            "deletions": 16
          },
          {
            "hash": "7320a8f8693dc34aea061ed2ecb98cf5623c81f9",
            "messageTitle": "Fix lint warnings",
            "messageBody": "",
            "insertions": 10,
            "deletions": 10
          },
          {
            "hash": "3e693a2837b263e411ab223057f5fa0f9b4ef531",
            "messageTitle": "Fix lint",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "90a4e1cc3ea323e67a8fcc23aa8549a9cfc9d422",
            "messageTitle": "Prepare 1.7.0 release",
            "messageBody": "",
            "insertions": 5,
            "deletions": 7
          },
          {
            "hash": "033201f7216512757dcda1f09ea6d4f7ba9fc2e3",
            "messageTitle": "Try with the fixed release of astroid",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "9d351aa1f27af2c6297a50b6bad0c31cff7375c3",
            "messageTitle": "Update the release date",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 52,
        "deletions": 1,
        "date": "2017-04-14",
        "commitResults": [
          {
            "hash": "2aafe531bb6e070e6cde73f31f6e5bb57528ba8e",
            "messageTitle": "master is now at 1.8",
            "messageBody": "",
            "insertions": 18,
            "deletions": 1
          },
          {
            "hash": "d5bce93616bd5c3dadb41c041eabe2c71a134252",
            "messageTitle": "Exceptions have a different type since astroid 1.5.0, use a visit_exceptioninstance method for them. Close #1419",
            "messageBody": "",
            "insertions": 12,
            "deletions": 0
          },
          {
            "hash": "fa10e72d7565fdaf85be7e6f66d8cf789f347600",
            "messageTitle": "Exceptions have a different type since astroid 1.5.0, use a visit_exceptioninstance method for them. Close #1419",
            "messageBody": "",
            "insertions": 22,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 40,
        "deletions": 6,
        "date": "2017-04-15",
        "commitResults": [
          {
            "hash": "a7e118d46f9866ce07a791e65c41b0655f22bacc",
            "messageTitle": "Add a manual implementation of the edit distance algorithm",
            "messageBody": "We were using editdistance, which is super fast, but the downside is that\nit might require a compiler on some envs in order to be installed. As such,\nit is also a hindrance not just for these kind of envs, but for PyPy as well,\nsince it is written in C. Let\u0027s use a handcraft implementation\nfor now.\nClose #1423\n",
            "insertions": 20,
            "deletions": 3
          },
          {
            "hash": "928e16431134a367a78b63540b7cbe5dd9967539",
            "messageTitle": "Add a manual implementation of the edit distance algorithm",
            "messageBody": "We were using editdistance, which is super fast, but the downside is that\nit might require a compiler on some envs in order to be installed. As such,\nit is also a hindrance not just for these kind of envs, but for PyPy as well,\nsince it is written in C. Let\u0027s use a handcraft implementation\nfor now.\nClose #1423\n",
            "insertions": 20,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 58,
        "deletions": 30,
        "date": "2017-04-17",
        "commitResults": [
          {
            "hash": "05df5abd0f89868528ca30d5e2e28745d0a09e9d",
            "messageTitle": "Handle the disallow-trailing-tuple chck more sanely by verifying non-terminating newlines. Close #1424",
            "messageBody": "",
            "insertions": 20,
            "deletions": 10
          },
          {
            "hash": "3a87727c04c73ac14542c2441a45c8c36003e605",
            "messageTitle": "Handle the disallow-trailing-tuple chck more sanely by verifying non-terminating newlines. Close #1424",
            "messageBody": "",
            "insertions": 26,
            "deletions": 10
          },
          {
            "hash": "7cb3ffddfd96f5e099ca697f6b1e30e727544627",
            "messageTitle": "Bring back the message enable check and fix the condition",
            "messageBody": "",
            "insertions": 12,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 32,
        "deletions": 1,
        "date": "2017-06-02",
        "commitResults": [
          {
            "hash": "bebcc502a5fa81099c10192828e90e0998f34d04",
            "messageTitle": "Don\u0027t emit assigning-non-slot when reassigning the class with another class that has the same layout. Close #1506",
            "messageBody": "",
            "insertions": 32,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 13,
        "deletions": 2,
        "date": "2017-06-03",
        "commitResults": [
          {
            "hash": "12c268fa15bf9387f6e88356e1b928bd61efbdf2",
            "messageTitle": "Fix line-too-long",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "126c63db8010d23afd18cf65e4a6b45f4bf79efd",
            "messageTitle": "Use unicode for the unsplit ends. Close #1426",
            "messageBody": "",
            "insertions": 11,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 184,
        "deletions": 183,
        "date": "2017-07-08",
        "commitResults": [
          {
            "hash": "2e50e9ee1806bb019c3cdc79bfe594a923fa483d",
            "messageTitle": "Remove module that wasn\u0027t actually moved. Close #1565",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "d0cd84d03e95c58828c7215ce5b8816fdf9668c0",
            "messageTitle": "Exempt exceptions with .message specifically implemented. Close #1564",
            "messageBody": "",
            "insertions": 24,
            "deletions": 2
          },
          {
            "hash": "72d6326a1f974e2dc09f3ff19c9cd32856fcb234",
            "messageTitle": "Fix the test",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "bff8204e68e5092f6538549eb6e6b8704e766483",
            "messageTitle": "Add crossreference to Installation. Close #1499",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "9968861333217d01f2d3bba300458ed80be185c9",
            "messageTitle": "Remove hard coded cross references",
            "messageBody": "",
            "insertions": 7,
            "deletions": 4
          },
          {
            "hash": "6765dee7414d5417d703656df8ece2e749a0d70b",
            "messageTitle": "Make functions and classes from testutils private. Close #1438",
            "messageBody": "",
            "insertions": 147,
            "deletions": 174
          }
        ]
      },
      {
        "insertions": 27,
        "deletions": 10,
        "date": "2017-07-19",
        "commitResults": [
          {
            "hash": "b4df06586c0a10b6eec8402a32e80aff2fb6d1c7",
            "messageTitle": "Update the correct release date",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "a213323ebea17ce2eb0c7c35523f14e45cbcf920",
            "messageTitle": "Fix an edge case with nonlocal-without-binding and inner classes in function scope. Close #1574",
            "messageBody": "",
            "insertions": 24,
            "deletions": 9
          },
          {
            "hash": "d54f3cf4b578760034b31175ffd394a86972d83f",
            "messageTitle": "Skip files or directories passed at command line when they are ignored. Close #908",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 88,
        "deletions": 6,
        "date": "2017-07-20",
        "commitResults": [
          {
            "hash": "0f988582315ba6693e3b840401d86d34f57df77f",
            "messageTitle": "Remove NO_SETUPTOOLS. Folks could just install setuptools before installing pylint. Close #1571",
            "messageBody": "",
            "insertions": 0,
            "deletions": 2
          },
          {
            "hash": "ef1ac8b286e93cd4a297289fbfdae7b5cf30c12a",
            "messageTitle": "Added a new warning, \u0027bad-thread-instantiation\u0027",
            "messageBody": "This message is emitted when the threading.Thread class does not\nreceive the target argument, but receives just one argument, which\nis by default the group parameter.\n\nClose #1327\n",
            "insertions": 46,
            "deletions": 1
          },
          {
            "hash": "ef698057b81872f80efc63c87d772121f6b73b3e",
            "messageTitle": "Update a bit the structure of the new 1.8 what\u0027s new file",
            "messageBody": "",
            "insertions": 10,
            "deletions": 2
          },
          {
            "hash": "72335896280daddd5229050d8b69929a99519a20",
            "messageTitle": "Protocol checks (not-a-mapping, not-an-iterable and co.) aren\u0027t emitted on classes with dynamic getattr. Close #1579",
            "messageBody": "",
            "insertions": 29,
            "deletions": 0
          },
          {
            "hash": "103751c6de7bb714f8e882cec4ce166270d80a71",
            "messageTitle": "Log and crash correctly a child process when an error occurs. Close #1445",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 77,
        "deletions": 0,
        "date": "2017-07-21",
        "commitResults": [
          {
            "hash": "38608a6d165dced47939fbd612419fd64eacca63",
            "messageTitle": "Ignore patterns works on top-level files as well. Close #1384",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "73bf9ba0dee713749b6c4f26a07ebc0f7eb426eb",
            "messageTitle": "Added a couple of new Python 3 checks for accessing dict methods in non-iterable context. Part of #377",
            "messageBody": "",
            "insertions": 75,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 61,
        "deletions": 20,
        "date": "2017-07-23",
        "commitResults": [
          {
            "hash": "5faadb593d474930870cf6b96c481d0d41c1cca6",
            "messageTitle": "Add test for #1036. Close #1036",
            "messageBody": "",
            "insertions": 22,
            "deletions": 2
          },
          {
            "hash": "35983f6cf30ad69522de4f6e30ce14c4c1cd7e6c",
            "messageTitle": "Added a new Python 3 check, non-ascii-bytes-literals. Close #1545",
            "messageBody": "",
            "insertions": 25,
            "deletions": 0
          },
          {
            "hash": "77f1a2a0c7922167ccf5b9a8731237164d7b99da",
            "messageTitle": "Typo",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "28de6a0c279352626d1be6c62e79d60635386c33",
            "messageTitle": "Fix the tests and some small refactoring",
            "messageBody": "",
            "insertions": 11,
            "deletions": 13
          },
          {
            "hash": "1a0d4be29c5692dc70de236be12561815cc42c99",
            "messageTitle": "Typo",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "d41e49a18817997106ed9f1df20651e1f438222b",
            "messageTitle": "Fix lint",
            "messageBody": "",
            "insertions": 0,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 19,
        "deletions": 3,
        "date": "2017-08-07",
        "commitResults": [
          {
            "hash": "1aa0874f24a37d934a590a9b5e7482bf7f629900",
            "messageTitle": "Fix a false positive with bad-python3-import on relative imports",
            "messageBody": "Close #1608\n",
            "insertions": 19,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 103,
        "deletions": 46,
        "date": "2017-08-09",
        "commitResults": [
          {
            "hash": "a820aaf6d6c25ec4ced83836ff054f33b4b394ae",
            "messageTitle": "cProfile is not deprecated in Python 3 apparently. Close #1612",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "3ddcfaef61cce2be3ad05991a8de8eb1c0ac9d77",
            "messageTitle": "Fix lint",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "5652cf7644329d0db47a37c8430f09cdea368518",
            "messageTitle": "Add ChangeLog entry",
            "messageBody": "",
            "insertions": 4,
            "deletions": 0
          },
          {
            "hash": "210a9ad8f19cd34d245a64bbc32019b1b53e742d",
            "messageTitle": "Don\u0027t mark dynamically added __class__ as unused variable. Close #1609",
            "messageBody": "",
            "insertions": 19,
            "deletions": 2
          },
          {
            "hash": "82c4a9900dbff2b41d20d8f1b29a9214aede94b1",
            "messageTitle": "Show the file for which the test failed",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "a751434fc2d5cac702c597fd7523c9754e29a2c0",
            "messageTitle": "The `invalid-name` check contains the name of the template that caused the failure",
            "messageBody": "Close #1176\n",
            "insertions": 62,
            "deletions": 32
          },
          {
            "hash": "62dc3d2f5eb57a70088a9b9959b6eb139cca227c",
            "messageTitle": "Fix the naming style test as well",
            "messageBody": "",
            "insertions": 15,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2017-08-12",
        "commitResults": [
          {
            "hash": "5cb00c2ce4b7a9f75d4e9e86601f0a9df7bf673b",
            "messageTitle": "Fix the metavar for suggestion-mode",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "4293a54004ad65e4dfc0e66ef8759ab9de369233",
            "messageTitle": "Add the __set_name__ special method. Close #1620",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 15,
        "deletions": 10,
        "date": "2017-08-15",
        "commitResults": [
          {
            "hash": "660c15d58a6cd8088d99f7db2cfddf81b91121f9",
            "messageTitle": "Fix typo. Close #1625",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "cb8ebdb02ba208a8c38bba622bd85ad37a7a2c21",
            "messageTitle": "Add a couple of Uninferable filters where we weren\u0027t using any",
            "messageBody": "",
            "insertions": 14,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 29,
        "deletions": 18,
        "date": "2017-09-15",
        "commitResults": [
          {
            "hash": "9847be801f8c5c5aebf5b073066831fe20ec62c8",
            "messageTitle": "Move the check in typecheck module",
            "messageBody": "",
            "insertions": 15,
            "deletions": 10
          },
          {
            "hash": "38daaa27f1f84d737c51dd3a1dd5fab1a2c64f21",
            "messageTitle": "Use set literals",
            "messageBody": "",
            "insertions": 4,
            "deletions": 2
          },
          {
            "hash": "0738e1d1d2b2a54ea85b40ae9811c09c0d3d143e",
            "messageTitle": "Fix some typos and some style fixes",
            "messageBody": "",
            "insertions": 10,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 0,
        "date": "2017-09-18",
        "commitResults": [
          {
            "hash": "0ecfbf3b5a196708d3c3f9058890a2ec0cf3aaea",
            "messageTitle": "Add new contributor",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 1,
        "date": "2017-09-19",
        "commitResults": [
          {
            "hash": "3543bbc658947312659fda453aed634d71c29556",
            "messageTitle": "A map enclosed by a filter call does not trigger map-builtin-not-iterating on Python 3 porting checker any longer",
            "messageBody": "",
            "insertions": 7,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 0,
        "date": "2017-09-21",
        "commitResults": [
          {
            "hash": "5a46ae8bbb08767f71b1ed3a9a6b6953c852ae1d",
            "messageTitle": "Skip raise statements without an explicit exception. This should avoid a TypeError happening",
            "messageBody": "",
            "insertions": 12,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 29,
        "deletions": 3,
        "date": "2017-09-26",
        "commitResults": [
          {
            "hash": "8dd70cb76439d72ea02ade02ae0dfa028a46619c",
            "messageTitle": "Check also for unicode.format when exempting str.format with self from redundant-keyword-arg. Close #1676",
            "messageBody": "",
            "insertions": 4,
            "deletions": 2
          },
          {
            "hash": "bd4244740e8b675d5636ea4ace9edaca8d3dc872",
            "messageTitle": "`abstract-class-instantiated` is now emitted for all inference paths.",
            "messageBody": "Close #1673\n",
            "insertions": 25,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 14,
        "deletions": 1,
        "date": "2017-09-29",
        "commitResults": [
          {
            "hash": "530276052f3c50d41bbe599af5aee8bcfed5371a",
            "messageTitle": "Skip the invalid-length-returned check when the return value is clearly an int, but with an uninferable underlying value",
            "messageBody": "",
            "insertions": 14,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 4,
        "date": "2017-09-30",
        "commitResults": [
          {
            "hash": "d70cb167c95926232c8e710adfb01fc0bd5356f8",
            "messageTitle": "Improve the release docs with cleaning of pyc files and using twine instead of setup.py upload",
            "messageBody": "",
            "insertions": 5,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 14,
        "deletions": 13,
        "date": "2017-10-12",
        "commitResults": [
          {
            "hash": "b26ad09d1aeccae53d474fe5fe30f5053fc3c9d9",
            "messageTitle": "Use any() instead of checking the value of an entire list",
            "messageBody": "",
            "insertions": 11,
            "deletions": 9
          },
          {
            "hash": "33c0bca81bfec4afa1739eecc042ed6680c74030",
            "messageTitle": "Try with an older tox version",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "dd78aedcf0f499188ad8232f2193ba62c791d33e",
            "messageTitle": "Install the most recent version of setuptools before installing tox and co",
            "messageBody": "",
            "insertions": 2,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 1,
        "date": "2017-11-02",
        "commitResults": [
          {
            "hash": "63ee49942c98939de508e3d5d47e0dba31a2291e",
            "messageTitle": "Add a couple of notes about What\u0027s New and Contributors file",
            "messageBody": "",
            "insertions": 5,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 8,
        "deletions": 2,
        "date": "2017-11-11",
        "commitResults": [
          {
            "hash": "2f9739a776205da43998f541b5f670f2976b16b5",
            "messageTitle": "Remove extraneous coding header",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          },
          {
            "hash": "9125084de6d37b91c0683501444169d497262162",
            "messageTitle": "Add What\u0027s New entry for the no-absolute-import check",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "4dfe3285734fb27c734fe513c48a4adae51783ab",
            "messageTitle": "Add ChangeLog entry for the new py3k change",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "915f16ecbd63aa0ee55da815935b9374672475af",
            "messageTitle": "Add ChangeLog entry for recent change",
            "messageBody": "",
            "insertions": 3,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 16,
        "deletions": 16,
        "date": "2017-12-11",
        "commitResults": [
          {
            "hash": "ff33b83c2adc0577917117c51ba5e16288c361c5",
            "messageTitle": "Remove pylint.gui man page. Closes #1760",
            "messageBody": "",
            "insertions": 0,
            "deletions": 15
          },
          {
            "hash": "72ad81884360a9c792ed4fae32e68806e01067b5",
            "messageTitle": "Don\u0027t emit catching-non-exception when a tuple component has unknown bases",
            "messageBody": "Close #1756\n",
            "insertions": 14,
            "deletions": 1
          },
          {
            "hash": "ac7c6d1a3a45016d4c52bc7c3e7e739ddcb41612",
            "messageTitle": "Add check_messages guard where it was missing",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 3,
        "date": "2017-12-12",
        "commitResults": [
          {
            "hash": "f4426f61f9a07fe9860050cd760264cbc59f1380",
            "messageTitle": "Remove non-ascii and non-displayable character from the file",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "44a2431745e61ff7d7ded7db5145da835b5877d1",
            "messageTitle": "past.builtins import don\u0027t trigger redefined-builtin. Close #1764",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "04928d6c2ac1b5bde30f2db7101dca67a8b2ffe9",
            "messageTitle": "Correct the name of the flag in help string",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 702,
        "deletions": 115,
        "date": "2017-12-15",
        "commitResults": [
          {
            "hash": "17ed43115509ae76c2768b61136f99de593f91e3",
            "messageTitle": "Prepare 1.8",
            "messageBody": "",
            "insertions": 6,
            "deletions": 4
          },
          {
            "hash": "27890cf973b73aa3e0689847099fe246085ccdda",
            "messageTitle": "Add missing encoding pragma to test file",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "5d8242f132368c2ab77ec10e1d8e8b2fabf3e5b0",
            "messageTitle": "For some reason this test wasn\u0027t running until now",
            "messageBody": "",
            "insertions": 5,
            "deletions": 8
          },
          {
            "hash": "9ff44de0ca6d59f21a04b86dc2d2fdc6b6abfd32",
            "messageTitle": "Regenerate copyright notices",
            "messageBody": "",
            "insertions": 615,
            "deletions": 99
          },
          {
            "hash": "df53e1eb10c72c77036ef22e59e1b81f6b96582b",
            "messageTitle": "Add copyrite aliases and mention it in the release file",
            "messageBody": "",
            "insertions": 65,
            "deletions": 1
          },
          {
            "hash": "4c481dea025850d9c53edef14670c74b1af88340",
            "messageTitle": "Bump to 1.8.1 to republish the wheel with correct version",
            "messageBody": "",
            "insertions": 8,
            "deletions": 1
          },
          {
            "hash": "b35ffe4a6e1589204acccb8d298c75484ff0499a",
            "messageTitle": "Remove *everything* when cleaning",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "ad57a3f2c7ea890e06136250e0edbb39f568c760",
            "messageTitle": "Master is now 2.0",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 67,
        "deletions": 5,
        "date": "2017-12-24",
        "commitResults": [
          {
            "hash": "fdca85da8d5bc3b9db0a2044092e44a832e83a49",
            "messageTitle": "Add document for 2.0",
            "messageBody": "",
            "insertions": 20,
            "deletions": 0
          },
          {
            "hash": "c8bfc2d2a29402ddec8df3f16bed85ba680dd4e2",
            "messageTitle": "This was supposed to be 1.8.1",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "623d6fd586b972ef4819a52e5f48c0223ee2dea9",
            "messageTitle": "Fixed a crash which occurred when `Uninferable` wasn\u0027t properly handled in `stop-iteration-return`",
            "messageBody": "Close #1779\n",
            "insertions": 21,
            "deletions": 3
          },
          {
            "hash": "11c5d8a734649c0068fe024a48a62b679692ff5d",
            "messageTitle": "Add missing changelog entry",
            "messageBody": "",
            "insertions": 5,
            "deletions": 1
          },
          {
            "hash": "97427560627562923f88d07c06593d18f096854b",
            "messageTitle": "Don\u0027t crash when encountering bare raises while checking inconsistent returns",
            "messageBody": "Close #1773\n",
            "insertions": 20,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 13,
        "date": "2018-01-03",
        "commitResults": [
          {
            "hash": "5d90cd4331b9e948aae6dfa69ce571c2c6aa6867",
            "messageTitle": "Move the Changelog entry for the col_offset change to 2.0",
            "messageBody": "",
            "insertions": 6,
            "deletions": 5
          },
          {
            "hash": "a258a3f7135bc22f43e32db1d749957f45ad6907",
            "messageTitle": "Cleanup changelog for 2.0 a bit",
            "messageBody": "",
            "insertions": 6,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 87,
        "deletions": 270,
        "date": "2018-01-25",
        "commitResults": [
          {
            "hash": "72fcb0d8d67b2f76db189519418fed38c0caa623",
            "messageTitle": "Update committers list, mark both Lukasz and Guillaume as new committers",
            "messageBody": "",
            "insertions": 11,
            "deletions": 11
          },
          {
            "hash": "1ce9be884414be2cbaffc8b6d2ac83de86017f8c",
            "messageTitle": "Stop advertising python 2 support",
            "messageBody": "",
            "insertions": 2,
            "deletions": 32
          },
          {
            "hash": "df1abe8d275970dbaefd2ccc4c22ad1c83eb381c",
            "messageTitle": "Rip some of the six imports from the codebase",
            "messageBody": "",
            "insertions": 56,
            "deletions": 103
          },
          {
            "hash": "3339fa58c120a3bdbd0845f05b511b115b9b01c0",
            "messageTitle": "Try with pypy3 to see if it passes CI",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "3ed494bf1cf7e170693cd6fda1f07da2d3e5ab84",
            "messageTitle": "Rip out some fallback imports",
            "messageBody": "",
            "insertions": 6,
            "deletions": 21
          },
          {
            "hash": "1bc6bc29ec4d4fbdaf0c8ffe40e62a545c462f38",
            "messageTitle": "Remove backports dependency",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          },
          {
            "hash": "a46d9c6c398392787450e0c57d588f75b8020dba",
            "messageTitle": "Rip some version guards from tests, we always run on Python 3",
            "messageBody": "",
            "insertions": 0,
            "deletions": 77
          },
          {
            "hash": "5360c5dc96184060bf2776d61752b99f71e175e9",
            "messageTitle": "Forgot to import the module and to return the new decoded line",
            "messageBody": "",
            "insertions": 2,
            "deletions": 3
          },
          {
            "hash": "72df0403c84b3ac6deb7cb4023912b58321c3181",
            "messageTitle": "Remove minversion for Python \u003e3.0, since we already respect that condition",
            "messageBody": "",
            "insertions": 9,
            "deletions": 18
          },
          {
            "hash": "9207263dac2225e97ddc123cce46e0d07cb3bdf0",
            "messageTitle": "Remove 2.7 from appveyor",
            "messageBody": "",
            "insertions": 0,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2018-01-31",
        "commitResults": [
          {
            "hash": "17fc68d95123712c5bab73831dad66fb8c8ba77f",
            "messageTitle": "Try to fix the coveralls badge",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 8,
        "deletions": 2,
        "date": "2018-02-01",
        "commitResults": [
          {
            "hash": "413cdbb66b2fce4a0cc02ab70fbb8b56e7b9714b",
            "messageTitle": "Except the bad-open-mode test on pypy for now",
            "messageBody": "We can\u0027t infer the open() function on PyPy right now. It is working with astroid 2.0 branch,\nbut that one is not yet merged in astroid\u0027s master.\n",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "ccd94094cdcb3e7f24dc223ae2353eadeb763e16",
            "messageTitle": "Catch ValueError and raise IncompleteFormatString when parsing a string for fetching the format fields",
            "messageBody": "This helps with PyPy 3, which fails with ValueError when a format string is invalid/incomplete\n",
            "insertions": 5,
            "deletions": 1
          },
          {
            "hash": "2a5a7525636a36a49defcf45626c7765d219de2a",
            "messageTitle": "Except the sys regression test on PyPy 3.5",
            "messageBody": "We can\u0027t infer sys.__stdout__ using PyPy 3.5, but this seems to work though using astroid 2.0\nbranch (which is not yet merged to master unfortunately, but hopefully we\u0027ll get to do this for astroid 2.0 release). In the meantime, disable this test in pylint.\n",
            "insertions": 2,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 5,
        "date": "2018-02-04",
        "commitResults": [
          {
            "hash": "5603ddaf38920889aac3a7c65574ab1f9b0c62fc",
            "messageTitle": "Use a dependency link for astroid 2.0 until release",
            "messageBody": "",
            "insertions": 5,
            "deletions": 2
          },
          {
            "hash": "73ebe76d25faddadd55038d09d315dc630b2921e",
            "messageTitle": "Use re.Pattern instead of re._pattern_type for Python 3.7",
            "messageBody": "",
            "insertions": 6,
            "deletions": 2
          },
          {
            "hash": "19c4f6714a5a8da3e19c42e324fb31a57ddc696b",
            "messageTitle": "Add astroid dependency link in tox.ini file",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 5,
        "date": "2018-02-10",
        "commitResults": [
          {
            "hash": "88d336ec29ad046f65c64f56f68637c321d744b2",
            "messageTitle": "Revert \"Use a dependency link for astroid 2.0 until release\"",
            "messageBody": "This reverts commit 5603ddaf38920889aac3a7c65574ab1f9b0c62fc.\nApparently astroid 2.0 has some changes that causes some pylint tests to fail.\n",
            "insertions": 2,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 7,
        "date": "2018-02-21",
        "commitResults": [
          {
            "hash": "04481735e10c8d4584447a6dba97df8653fc7ec5",
            "messageTitle": "Add documentation notes about the Python support",
            "messageBody": "",
            "insertions": 5,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 1,
        "date": "2018-03-01",
        "commitResults": [
          {
            "hash": "b87ff406444da36759cd28d7af306ffe43b8ce78",
            "messageTitle": "Exempt `__doc__` from triggering a `redefined-builtin`",
            "messageBody": "`__doc__` can be used to specify a docstring for a module without\npassing it as a first-statement string.\n",
            "insertions": 7,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 3,
        "date": "2018-03-10",
        "commitResults": [
          {
            "hash": "0bacf9e8c29b5fff09e7c04fb566ffe5e1777387",
            "messageTitle": "Disable smartquotes when generating the doc to get double dash processed correctly. Close #1916",
            "messageBody": "",
            "insertions": 1,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 3,
        "date": "2018-03-11",
        "commitResults": [
          {
            "hash": "f567e43d3ec883803d6a8668e19e9402287d375c",
            "messageTitle": "Make the current year dynamic",
            "messageBody": "",
            "insertions": 4,
            "deletions": 2
          },
          {
            "hash": "9dd978aaed0daf852d8caed515b9e4e13f2dfcc7",
            "messageTitle": "readthedocs does not run on Python 3.6 apparently",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 19,
        "deletions": 4,
        "date": "2018-03-16",
        "commitResults": [
          {
            "hash": "5a4f5d5fcf6699b4cb51478284bcdffdc46f06c8",
            "messageTitle": "Fix indentation",
            "messageBody": "",
            "insertions": 2,
            "deletions": 3
          },
          {
            "hash": "dc2bc6a2d149aecb38c93c1bb739a07e16ae7510",
            "messageTitle": "Don\u0027t crash on invalid strings when checking for `logging-format-interpolation`",
            "messageBody": "Close #1944\n",
            "insertions": 17,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 114,
        "deletions": 126,
        "date": "2018-03-27",
        "commitResults": [
          {
            "hash": "934a493fff6d97b17b95da4ce89b2a829b6b0296",
            "messageTitle": "Refactor the checks and add the necessary boilerplate",
            "messageBody": "Dropped the support for putenv as that should not be used directly, instead we just emit\nabout os.getenv. This check is definitely a good candidate for being replaced with typeshed\nand type annotations support, but will take a bit until we\u0027ll have that, so it\u0027s good\nto have until that point. Also added ChangeLog, added tests and What\u0027s new Entries.\n",
            "insertions": 101,
            "deletions": 121
          },
          {
            "hash": "d9b071ed83b25f92ae432ef72626dc515179324c",
            "messageTitle": "Add contributor",
            "messageBody": "",
            "insertions": 3,
            "deletions": 0
          },
          {
            "hash": "cbb89d8eaf77960bd6d8d5e645dd892ca78eb36e",
            "messageTitle": "Add dropping support for Python 2 as a summary highlight",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          },
          {
            "hash": "faf25a394d4783d440d6dfd29622f99bb80730eb",
            "messageTitle": "Make sure we check against a FunctionDef node",
            "messageBody": "",
            "insertions": 6,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 3,
        "date": "2018-03-28",
        "commitResults": [
          {
            "hash": "d20b673879a5e77e9333c6dba168025b476f84d5",
            "messageTitle": "Fix lint errors",
            "messageBody": "",
            "insertions": 4,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2018-03-29",
        "commitResults": [
          {
            "hash": "2c7a2643eddf158f50eb5e4da2dace739a01846f",
            "messageTitle": "Use magenta for warnings since blue is hard to read on a black terminal. Close #1972",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 108,
        "deletions": 14,
        "date": "2018-03-30",
        "commitResults": [
          {
            "hash": "9d92623895a849104ddd510855bcc0a665fd3d75",
            "messageTitle": "Stop early when we already detected a disable for a line too long",
            "messageBody": "Close #1974\n",
            "insertions": 11,
            "deletions": 0
          },
          {
            "hash": "49aed2ed4c7225134ea5c5c7febcad9d71bd2f0d",
            "messageTitle": "Use the containment against a set",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "a358507b6596cad3c2c41a7c10b138f21446a38c",
            "messageTitle": "`no-else-return` accounts for multiple cases",
            "messageBody": "The check was a bit overrestrictive because we were checking for\nreturn nodes in the .orelse node. At that point though the if statement\ncan be refactored to not have the orelse. This improves the detection of\nother cases, for instance it now detects TryExcept nodes that are part of\nthe .else branch.\n\nClose #1852\n",
            "insertions": 25,
            "deletions": 12
          },
          {
            "hash": "955acfec0e51c7705960693ed077c0696dd91581",
            "messageTitle": "Add a new check, `possibly-unused-variable`.",
            "messageBody": "This is similar to `unused-variable`, the only difference is that it is\nemitted when we detect a locals() call in the scope of the unused variable.\nThe `locals()` call could potentially use the said variable, by consuming\nall values that are present up to the point of the call. This new check\nallows to disable this error when the user intentionally uses `locals()`\nto consume everything.\n\nClose #1909.\n",
            "insertions": 71,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 49,
        "deletions": 50,
        "date": "2018-04-02",
        "commitResults": [
          {
            "hash": "9457f9ee8a4f197b111dad50e66778e80250683e",
            "messageTitle": "Fix lint errors caused by the new checker change",
            "messageBody": "",
            "insertions": 49,
            "deletions": 50
          }
        ]
      },
      {
        "insertions": 31,
        "deletions": 11,
        "date": "2018-04-04",
        "commitResults": [
          {
            "hash": "647b9f06ad6671972ab13aa0985981bb2656815f",
            "messageTitle": "Add missing string functions to the Python 3 porting checker",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "e77304b23bd82700e46000b3bfacd5b8778dada1",
            "messageTitle": "Only run the tests for stdlib once",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          },
          {
            "hash": "5674ff98a6cd090578910c2c3bb02e1328f8e6d2",
            "messageTitle": "builtins is allowed to redefine builtins. Close #1966",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "a4fabc1f52a7c01281f98c5c6c610c3ca4b4f98b",
            "messageTitle": "Supress linting output",
            "messageBody": "",
            "insertions": 21,
            "deletions": 8
          },
          {
            "hash": "164933412f685c407616866537fb16caecaef066",
            "messageTitle": "Filter out non AssignName nodes",
            "messageBody": "AssignName is used only for names which are in an assignment context. We only want\nthem rather than looking for complex assignments, e.g for `self.some_value`, which will\ncomplicate this check.\n",
            "insertions": 5,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 39,
        "deletions": 37,
        "date": "2018-04-05",
        "commitResults": [
          {
            "hash": "9f89f5693aa6066e61a4232aac2fe79aae5f1966",
            "messageTitle": "`logging-format-interpolation` also emits when f-strings are used instead of % syntax.",
            "messageBody": "Close #1788\n",
            "insertions": 8,
            "deletions": 0
          },
          {
            "hash": "492711aa67531af559eb69e2a35fff8dcc094230",
            "messageTitle": "Catch string.letters with the Python 3 porting checker",
            "messageBody": "Close #1935\n",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "3b5aede39ff7a6f0e009c7bbf6900b7b1cc47a37",
            "messageTitle": "Separate logging-format-interpolation check in a Python 3.6 separate file",
            "messageBody": "",
            "insertions": 7,
            "deletions": 2
          },
          {
            "hash": "6935018af008ee8ca5f9242d78cbe17ea7f0aa4e",
            "messageTitle": "Fix lint errors",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "5c2ddb9eca6c793cc59a9091a3595f84263d8d94",
            "messageTitle": "Fix the lint errors for the new test file",
            "messageBody": "",
            "insertions": 3,
            "deletions": 2
          },
          {
            "hash": "98c88e17f274ebb683860327fccfbc25237db189",
            "messageTitle": "Don\u0027t trigger misplaced-bare-raise when the raise is in a finally clause found in an except handler. Close #1924",
            "messageBody": "",
            "insertions": 15,
            "deletions": 1
          },
          {
            "hash": "23e2a3e3c495ed3a27fe5717fe44c09a55c37fa3",
            "messageTitle": "Remove novel-quality text from the release document",
            "messageBody": "",
            "insertions": 0,
            "deletions": 26
          }
        ]
      },
      {
        "insertions": 61,
        "deletions": 2,
        "date": "2018-04-12",
        "commitResults": [
          {
            "hash": "bcad9bafedd9e8a46be784293c8dc57920a0ea1e",
            "messageTitle": "io can redefine builtins. Close #2014",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "9c7ea46b0c411659383d4948a54481fbddfb8df0",
            "messageTitle": "Added a new Python 2/3 check for accessing `operator.div`, which is removed in Python 3",
            "messageBody": "Close #1936\n",
            "insertions": 22,
            "deletions": 0
          },
          {
            "hash": "b045f17b9249061e43ff18396c5eaa7896d36c54",
            "messageTitle": "Added a new Python 2/3 check for accessing removed urllib functions",
            "messageBody": "Close #1997\n",
            "insertions": 38,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 20,
        "deletions": 34,
        "date": "2018-04-17",
        "commitResults": [
          {
            "hash": "3449fbb1bc75ef115bec5a8ac1750816929405e8",
            "messageTitle": "Remove extraneous addition from the column computation",
            "messageBody": "Close #2012\n",
            "insertions": 18,
            "deletions": 6
          },
          {
            "hash": "7fea701175aeefb0ab6f8613501f739a91671b3a",
            "messageTitle": "Use a col_offset as the length of the line with trailing spaces. Close #2000",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "753463614e94dd6e4d6febed5b69839393fd7c80",
            "messageTitle": "Revert \"Proposal of a fix for bug #1950\"",
            "messageBody": "",
            "insertions": 0,
            "deletions": 27
          }
        ]
      },
      {
        "insertions": 65,
        "deletions": 19,
        "date": "2018-04-18",
        "commitResults": [
          {
            "hash": "decf303fdc18162f156e371254165bd008379498",
            "messageTitle": "defaultdict and subclasses of dict are now handled for dict-iter-* checks",
            "messageBody": "Close #2005\n",
            "insertions": 38,
            "deletions": 10
          },
          {
            "hash": "deae2ae1eb7650d6d2c37e70a488361043fcba96",
            "messageTitle": "Handle dict subclasses for dict-not-iterating checks",
            "messageBody": "",
            "insertions": 27,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 49,
        "deletions": 9,
        "date": "2018-04-24",
        "commitResults": [
          {
            "hash": "82753aa12c9e85d70367856b6eb7545533574d68",
            "messageTitle": "`singleton-comparison` accounts for negative checks",
            "messageBody": "Close #2037\n",
            "insertions": 30,
            "deletions": 4
          },
          {
            "hash": "c05f63c19b708494328fccffc02702cc084f3044",
            "messageTitle": "Don\u0027t consider function calls for consider-using-in check",
            "messageBody": "Close #2035\n",
            "insertions": 10,
            "deletions": 0
          },
          {
            "hash": "74eba315afaf7f06654b13d19bd93fcb314b2a4d",
            "messageTitle": "fixme check accounts for lowercase todos",
            "messageBody": "Close #2029\n",
            "insertions": 8,
            "deletions": 4
          },
          {
            "hash": "815b4e3c2abbb07e832bfad35444eef78f083c55",
            "messageTitle": "Allow any version of astroid for now",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 66,
        "deletions": 5,
        "date": "2018-04-25",
        "commitResults": [
          {
            "hash": "b93cdf863896556c95b064f8405d648c69953ffa",
            "messageTitle": "`undefined-loop-variable` takes in consideration non-empty iterred objects before emitting",
            "messageBody": " Close #2039\n",
            "insertions": 66,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 113,
        "deletions": 95,
        "date": "2018-05-09",
        "commitResults": [
          {
            "hash": "ac9b2abd1949468308c76efbe2332bd0bfe93592",
            "messageTitle": "Use astroid 2.0 until that gets released",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "2c43f555714d60ccfbd2212a81bba002e6721fd3",
            "messageTitle": "Move the methods counting into its own function",
            "messageBody": "",
            "insertions": 12,
            "deletions": 8
          },
          {
            "hash": "441f6e318f949443bd3c7bfe5ee8fb8744756f6e",
            "messageTitle": "`too-few-public-methods` is not emitted for dataclasses.",
            "messageBody": "Close #1793\n",
            "insertions": 51,
            "deletions": 2
          },
          {
            "hash": "1efb5c83f9f210b1ceb3a7cb842174098a8271c7",
            "messageTitle": "Replace set() calls with set literals",
            "messageBody": "",
            "insertions": 5,
            "deletions": 6
          },
          {
            "hash": "a51cbe6bc1d5d0cd7f1c81902aedcb14a9653892",
            "messageTitle": "Remove the use of collections.Sequence as this causes a no-member on Python 3.7",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "1491c973b82b6f54b7a86161aaf2b8053964f0d3",
            "messageTitle": "abstract-class-instantiated accounts for _py_abc.ABCMeta for Python 3.7",
            "messageBody": "",
            "insertions": 5,
            "deletions": 1
          },
          {
            "hash": "db547f45a1e57590e7880f91352da496df7afe4c",
            "messageTitle": "Enable Python 3.7 in CI",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "10dac9149786c6d797fe57bdeee7fa3b8f1e1364",
            "messageTitle": "Will support 3.7 as well",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "50c319979174f4e78c60e254a6f0a414d1e03382",
            "messageTitle": "Remove a couple of sys.version checks that aren\u0027t needed any longer on Python 3",
            "messageBody": "",
            "insertions": 7,
            "deletions": 49
          },
          {
            "hash": "98bd7a2bec1e5f6f022fda5c1d9a62e0a65b0bb6",
            "messageTitle": "Add some extra notes on the Python 2 support",
            "messageBody": "",
            "insertions": 13,
            "deletions": 5
          },
          {
            "hash": "0fa983bd23e49b79ac88516d4e2f2b06c2064891",
            "messageTitle": "Make sure we operate on strings",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "b001f1037f1c9836c103edeaaa6fe40efecfe099",
            "messageTitle": "Drop unused argument",
            "messageBody": "",
            "insertions": 2,
            "deletions": 3
          },
          {
            "hash": "b1bcbcbfbcf2c443dcd4454acc5df082b524c317",
            "messageTitle": "Drop the encoding parameter from the format_section function",
            "messageBody": "",
            "insertions": 2,
            "deletions": 13
          },
          {
            "hash": "5f2ee9c5f48fb4d50bbce0d4135d9571b8982732",
            "messageTitle": "Try to see if coveralls badge works again",
            "messageBody": "",
            "insertions": 3,
            "deletions": 2
          },
          {
            "hash": "68fc1fb2f793a5ade312cfea334ca45ea6894244",
            "messageTitle": "Finally we\u0027re lint clean",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "1c0356f0683901e6e3561f4caeb176ff3e20be1e",
            "messageTitle": "Check that import-error is enabled before emitting it. Close #1265",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 70,
        "deletions": 176,
        "date": "2018-05-10",
        "commitResults": [
          {
            "hash": "5426aa5029f01e0078f7ec6c30449dc893f0cf4e",
            "messageTitle": "The Python 3 porting checker can run with Python 3 as well",
            "messageBody": "",
            "insertions": 70,
            "deletions": 176
          }
        ]
      },
      {
        "insertions": 45,
        "deletions": 7,
        "date": "2018-05-11",
        "commitResults": [
          {
            "hash": "9acb65af4c1072f16bbd8f60bd92c0b05c93be6e",
            "messageTitle": "Remove the gui references from the man",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "fd697c7718d2c267e501db7d49f7af9505831558",
            "messageTitle": "Emit a warning when .xreadlines() is accessed",
            "messageBody": "",
            "insertions": 25,
            "deletions": 5
          },
          {
            "hash": "492e26e52e8a56809ad281a7bc010895a3d0e4eb",
            "messageTitle": "Emit a warning when sys.exc_clear is accessed",
            "messageBody": "",
            "insertions": 18,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 101,
        "deletions": 18,
        "date": "2018-05-13",
        "commitResults": [
          {
            "hash": "81450967d9a4ae376dd7882976109b798f863a7f",
            "messageTitle": "Added two new Python 3 porting checks, `exception-escape` and `comprehension-escape`",
            "messageBody": "These two are emitted whenever pylint detects that a variable defined in the\nsaid blocks is used outside of the given block. On Python 3 these values are deleted.\n",
            "insertions": 67,
            "deletions": 1
          },
          {
            "hash": "98c171a49b01f9667ff915bc5e6e7f3d390039ce",
            "messageTitle": "Reimplement the lookup() call by manually looking for the right nodes",
            "messageBody": "On Python 3 we can\u0027t see the assignment statement of a deleted node, such as an\nassignment from a loop or from the except handler. Instead of relying on lookup()\nitself, look through the current scope manually for the right objects.\n",
            "insertions": 28,
            "deletions": 13
          },
          {
            "hash": "36a002716e2109884431c93fe62c385bed18d029",
            "messageTitle": "Fix lint",
            "messageBody": "",
            "insertions": 6,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 5,
        "date": "2018-05-15",
        "commitResults": [
          {
            "hash": "7297c643dc6dee228885234e7bdff6186e3c6bc1",
            "messageTitle": "Filter Uninferable explicitly instead",
            "messageBody": "",
            "insertions": 3,
            "deletions": 4
          },
          {
            "hash": "e7c14d1530ffdbd7f4ef3c6fa163df73b6549228",
            "messageTitle": "Fix message name in the changelog",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 48,
        "deletions": 42,
        "date": "2018-05-16",
        "commitResults": [
          {
            "hash": "20edfaa36ef849a8d5d0ee128b049a1f75cedea3",
            "messageTitle": "Show 1.9 in the documentation",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "2f997272464c147406ae89047f18dd2cc1a211fa",
            "messageTitle": "The Changelog was messed up on master",
            "messageBody": "",
            "insertions": 40,
            "deletions": 38
          },
          {
            "hash": "167019d2cbd12b732591c6a35a786b16f5e02639",
            "messageTitle": "Add 2.0 in the documentation",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "9c73b7cedc2790f2d0393791adf1104f8d1960d7",
            "messageTitle": "old-raise-syntax can be triggered only on Python 2",
            "messageBody": "Close #2107\n",
            "insertions": 6,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 29,
        "deletions": 17,
        "date": "2018-05-17",
        "commitResults": [
          {
            "hash": "1fd4b1b34036756d0ffac50aba6931bb55c73254",
            "messageTitle": "Use partition to not get a ValueError. Close #2112",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "49c6da5e7c90f7c53162fff1d8d9a2b6474ee28a",
            "messageTitle": "Switch to using verbose instead of quiet since we want to disable this by default",
            "messageBody": "",
            "insertions": 17,
            "deletions": 14
          },
          {
            "hash": "843e4572c50a62b3882ca35db40effb753b4c0cb",
            "messageTitle": "Add a changelog entry",
            "messageBody": "",
            "insertions": 9,
            "deletions": 0
          },
          {
            "hash": "dbd45605a7333bf40b3b3ceb47a60935b2823e9c",
            "messageTitle": "We don\u0027t need any reports",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "c21c731451e09c68f29d670bd286b23638269116",
            "messageTitle": "Fix lint",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 2,
        "date": "2018-05-19",
        "commitResults": [
          {
            "hash": "e090ea0acfa54c70b78d6345be1d32a8ddd36d74",
            "messageTitle": "Put the changelog entry where it belongs",
            "messageBody": "",
            "insertions": 3,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 6,
        "date": "2018-05-21",
        "commitResults": [
          {
            "hash": "b9565b182de3ee6190057b0d42a8adb086e5f5ef",
            "messageTitle": "Prepare 2.0-dev",
            "messageBody": "",
            "insertions": 6,
            "deletions": 5
          },
          {
            "hash": "15c10e8c6bfac08aac54c8bf1e7e1872f0af95fd",
            "messageTitle": "pylint is 15  years old, this is mature enough alright",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 5,
        "date": "2018-05-22",
        "commitResults": [
          {
            "hash": "bf258d2d9a30385f62e4c77158fa0427134e7603",
            "messageTitle": "Use the absolute paths for tests and adapt the codes to the right ones. Close #2129",
            "messageBody": "",
            "insertions": 6,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 142,
        "deletions": 63,
        "date": "2018-05-23",
        "commitResults": [
          {
            "hash": "30c7ec51d560d307c7f1c0aae75c83ea3ffc655a",
            "messageTitle": "Fix the dict iterating texts by adding the parens. Thanks @asottlile",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "aae9a6b4626ac5875e3c34d0e31cc0585dbbb82f",
            "messageTitle": "Remove extraneous variables",
            "messageBody": "",
            "insertions": 0,
            "deletions": 3
          },
          {
            "hash": "901f652fcf35a5a7b7746e9780770b36518c977c",
            "messageTitle": "Rewrite the comprehension-escape and exception-escape to work only on the corresponding nodes",
            "messageBody": "These two checks were implemented in terms of visit_namne, that is, for every name in the tree,\nwe looked to see if that name leaked. This was resulting in a couple of false positives\nand also in a performance issue, since we were calling nodes_of_class() and scope() for each\nname node. Instead, this approach uses the visit methods for exception and comprehension nodes\nand looks to see from there if the current scope uses leaked names.\nThis is not the ideal situation as well, ideal would be to have access to the definition\nframe of each name, but that requires some extra engineering effort in astroid to get it right.\nClose #2106\n",
            "insertions": 73,
            "deletions": 48
          },
          {
            "hash": "ea4b5d4d7687f5308cb42a1928188abb6a17e489",
            "messageTitle": "Don\u0027t include excepthandlers that don\u0027t have a name when looking for exception-escape",
            "messageBody": "",
            "insertions": 8,
            "deletions": 0
          },
          {
            "hash": "e918f96f50e11361c272f6f99ba2dd85397cd959",
            "messageTitle": "Don\u0027t emit `unused-import` anymore for typing imports used in type comments.",
            "messageBody": "",
            "insertions": 50,
            "deletions": 2
          },
          {
            "hash": "f793ca4ce78f42cf426220d8ad4bbecf7ec90c12",
            "messageTitle": "Adapt pylint to work with the new typed_ast based astroid",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "5dcb325f6f9177a3247fea1c052106e0b96e2e7f",
            "messageTitle": "Restrict the type comments test to \u003c3.7 until typed_ast will support that version",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 107,
        "deletions": 38,
        "date": "2018-05-24",
        "commitResults": [
          {
            "hash": "40f56f0c15878722c1b5abbe1f3c58dc304eb6de",
            "messageTitle": "Make sure the value is not defined in the same comprehension when looking for comprehension-escape values. Close #2106",
            "messageBody": "",
            "insertions": 8,
            "deletions": 1
          },
          {
            "hash": "56d947cd844733dd9f9fe54dc9be28a0689c827d",
            "messageTitle": "Accept data docstrings for AnnAssign nodes. Close #2066",
            "messageBody": "",
            "insertions": 22,
            "deletions": 1
          },
          {
            "hash": "1973c8c827d069e53efaecaa1669df574714cf29",
            "messageTitle": "invalid-slice-index is not emitted when the slice is used as index for a complex object.",
            "messageBody": "We only use a handful of known objects (list, set and friends) to figure out if\nwe should emit invalid-slice-index when the slice is used to subscript an object.\n\nClose #1534\n",
            "insertions": 43,
            "deletions": 2
          },
          {
            "hash": "640ba64f5c5ea7384d6f479c070cd2f3f14f0362",
            "messageTitle": "Kill YES in favour of Uninferable",
            "messageBody": "",
            "insertions": 34,
            "deletions": 34
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 27,
        "date": "2018-05-26",
        "commitResults": [
          {
            "hash": "8175cac72584a1a9207a8f434c470e827aad2a11",
            "messageTitle": "Replace ass_type with assign_type as the former was removed in favour of the latter in astroid",
            "messageBody": "",
            "insertions": 6,
            "deletions": 12
          },
          {
            "hash": "c93b6f074e5342a0134fdc98c4186144c279e4dc",
            "messageTitle": "Don\u0027t pass the quiet flag to OptionsManagerMixin as that is now gone. Close #2132",
            "messageBody": "",
            "insertions": 1,
            "deletions": 4
          },
          {
            "hash": "7775fa56136f63f88dd57ab946794aca3b0f8fdf",
            "messageTitle": "Mention the acceptance tests in the release process",
            "messageBody": "",
            "insertions": 5,
            "deletions": 0
          },
          {
            "hash": "7a4067fa9175d0a0078ca9b0dc26e424a14e8b22",
            "messageTitle": "Remove tkinter as deprecated module in the test file since that might not be available on all platforms. Found by #2080",
            "messageBody": "",
            "insertions": 0,
            "deletions": 2
          },
          {
            "hash": "da38a0fc5875d3ba07a705f24c5e48523b411240",
            "messageTitle": "Remove unused function",
            "messageBody": "",
            "insertions": 0,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 36,
        "deletions": 2,
        "date": "2018-06-01",
        "commitResults": [
          {
            "hash": "d837f4e14a5b11d98fc8f5c092068777bba5f979",
            "messageTitle": "Don\u0027t warn about `stop-iteration-return` when using `next()` over `itertools.count`",
            "messageBody": "Close #2158\n",
            "insertions": 28,
            "deletions": 2
          },
          {
            "hash": "e6c0ec180bf14eb8845b945021308054ca4b0224",
            "messageTitle": "Check that the potential leaked names are not used in the except handler",
            "messageBody": "",
            "insertions": 8,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 133,
        "deletions": 93,
        "date": "2018-06-04",
        "commitResults": [
          {
            "hash": "e6206511612d82645ad196fa9629b7a8630535ad",
            "messageTitle": "Handle type comments for functions as well with respect to unused imports",
            "messageBody": "",
            "insertions": 23,
            "deletions": 8
          },
          {
            "hash": "4afa20008d1704c06b52228b5ace643895cbc754",
            "messageTitle": "Update the contributors to reflect the reality",
            "messageBody": "",
            "insertions": 20,
            "deletions": 16
          },
          {
            "hash": "5e960fb86879647bc0fab9cbacd89f45821d10f3",
            "messageTitle": "Update the contributing guide",
            "messageBody": "",
            "insertions": 13,
            "deletions": 28
          },
          {
            "hash": "bb066851e1ce41c4d689effa9f138ceeab69dee1",
            "messageTitle": "Some more documentation cleanup",
            "messageBody": "",
            "insertions": 28,
            "deletions": 26
          },
          {
            "hash": "46da272259041cee920091a6c688c9661afed477",
            "messageTitle": "Add CODEOWNERS file for pull requests",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "3306437d7b0dcb113bc80d2dae2aa5a36b830110",
            "messageTitle": "Add note about extension-pkg-whitelist. Close #1962",
            "messageBody": "",
            "insertions": 30,
            "deletions": 0
          },
          {
            "hash": "bd8cd3f5300042a60da0e91cfb3228d5bd0b5108",
            "messageTitle": "Build the documentation with tox",
            "messageBody": "",
            "insertions": 17,
            "deletions": 15
          }
        ]
      },
      {
        "insertions": 141,
        "deletions": 4,
        "date": "2018-06-05",
        "commitResults": [
          {
            "hash": "2a18953368ac362e02d4043faa800c7017d1018e",
            "messageTitle": "Install python-docs-theme before building the odocumentation",
            "messageBody": "",
            "insertions": 7,
            "deletions": 0
          },
          {
            "hash": "690671c74b0f3384c1630f09aba76efcbcec046b",
            "messageTitle": "Look for nonlocals when checking if self/cls is reassigned",
            "messageBody": "Close #2100\n",
            "insertions": 25,
            "deletions": 1
          },
          {
            "hash": "53c8dc5bde7425868698f17b53a4178ec074ae00",
            "messageTitle": "`simplifiable-if-statement` takes in account only when assigning to same targets",
            "messageBody": "Close #1984\n",
            "insertions": 32,
            "deletions": 0
          },
          {
            "hash": "1db3aa79113547e98c0fc25692f07b68816bd4c5",
            "messageTitle": "Added basic support for postponed evaluation of function annotations.",
            "messageBody": "Close #2069\n",
            "insertions": 76,
            "deletions": 3
          },
          {
            "hash": "6c44128c823aefdf5d8232229b1bb4468788d66b",
            "messageTitle": "Add a requirements file for readthedocs",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 126,
        "deletions": 20,
        "date": "2018-06-06",
        "commitResults": [
          {
            "hash": "8eff6b507cc87881126349b3c25b0d116c6221c7",
            "messageTitle": "Fix a bug with `missing-kwoa` and variadics parameters",
            "messageBody": "Close #1111\n",
            "insertions": 21,
            "deletions": 4
          },
          {
            "hash": "5cbdd111b805d86f9e29f0018c981b792ef280a4",
            "messageTitle": "Inferred classes at a function level no longer emit `invalid-name` when they don\u0027t respect the variable regular expression",
            "messageBody": "Close #1049\n",
            "insertions": 21,
            "deletions": 1
          },
          {
            "hash": "35ac5f6b5711f614f1ddbea9bb1f1b39b9be6a90",
            "messageTitle": "Support typing.TYPE_CHECKING for *unused-import* errors",
            "messageBody": "Close #1948\n",
            "insertions": 32,
            "deletions": 2
          },
          {
            "hash": "9a9de854741e2f3d8f97cbace3d7de444acae340",
            "messageTitle": "`assignment-from-no-return` considers methods as well.",
            "messageBody": "Close #2081\n",
            "insertions": 38,
            "deletions": 3
          },
          {
            "hash": "d311c401e0da8eee38e81ca97fd4223a06cc7b36",
            "messageTitle": "Fix lint error",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "cc57a1e7d98c657e39e06eb5448b6e8fc56f61ac",
            "messageTitle": "Fix lint",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "3d44f14083cb923b5f6e56d48110a98259e75d4e",
            "messageTitle": "`mcs` as the first parameter of metaclass\u0027s `__new__` method was replaced by `cls`",
            "messageBody": "Close #2028\n",
            "insertions": 12,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 26,
        "deletions": 5,
        "date": "2018-06-07",
        "commitResults": [
          {
            "hash": "ef004e9b4cedaddbc84edec12715c4d7be90bc0b",
            "messageTitle": "Fix a false positive related to `too-many-arguments` and bounded `__get__` methods",
            "messageBody": "Close #2172\n",
            "insertions": 26,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 31,
        "deletions": 4,
        "date": "2018-06-09",
        "commitResults": [
          {
            "hash": "ae67849b0e489fde3c66d9afdb1fb77965b2219c",
            "messageTitle": "Add `--ignore-none` flag to control if pylint should warn about `no-member` where the owner is None",
            "messageBody": "",
            "insertions": 31,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2018-06-12",
        "commitResults": [
          {
            "hash": "a9aef1321b599e2cd4110b2c72e7f62f55c084aa",
            "messageTitle": "Replace removed methods with their correct counterparts",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 25,
        "deletions": 2,
        "date": "2018-06-13",
        "commitResults": [
          {
            "hash": "e36fa7af09835580c84fac4eb79c18dab71a8734",
            "messageTitle": "Add test for our understanding of functools.partial added in astroid",
            "messageBody": "",
            "insertions": 25,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 21,
        "date": "2018-06-14",
        "commitResults": [
          {
            "hash": "5bcdf822c328c4f2878fd4e54490bfee7e1762d5",
            "messageTitle": "`in` is considered iterating context for some of the Python 3 porting checkers",
            "messageBody": "Close #2186\n",
            "insertions": 10,
            "deletions": 0
          },
          {
            "hash": "fa637644b68aacd18229c37a73516c2e1b583be0",
            "messageTitle": "Kill try-except-raise for when the same error is raised in the except handler",
            "messageBody": "We raised try-except-raise if the same exception was raised in the except\nhandler corresponding to the exception that was being handled. In practice\nthough there are cases where we\u0027d want to do this, for providing more\nhelpful error messages.\n",
            "insertions": 0,
            "deletions": 21
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 4,
        "date": "2018-06-15",
        "commitResults": [
          {
            "hash": "4d847f7fbf4c3a4644bb229f0dd12b0374f641f8",
            "messageTitle": "Adapt the test to pass with the recent astroid changes",
            "messageBody": "",
            "insertions": 10,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 20,
        "deletions": 6,
        "date": "2018-06-18",
        "commitResults": [
          {
            "hash": "2c28f5252cacf28ec2e3174088be203254eccd6f",
            "messageTitle": "`logging-not-lazy` is emitted whenever pylint infers that a string is built with addition",
            "messageBody": "Close #2193\n",
            "insertions": 19,
            "deletions": 6
          },
          {
            "hash": "4cf63242df7c0b1f78dbf8f76764713332e32863",
            "messageTitle": "Disable an insane linting error",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 61,
        "deletions": 10,
        "date": "2018-06-20",
        "commitResults": [
          {
            "hash": "4396c89da68b1034be678cd83735fe3fbc9acd99",
            "messageTitle": "Install the latest dev astroid to get typed_ast",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "cdb789c0330847b6f9898cfdf4c93583cce87f55",
            "messageTitle": "[].extend and similar builtin operations don\u0027t emit `dict-*-not-iterating` with the Python 3 porting checker",
            "messageBody": "Close #2187\n",
            "insertions": 20,
            "deletions": 0
          },
          {
            "hash": "7e859597e5b8cafd1ecfbd339f8c05cee720c7bd",
            "messageTitle": "Use the latest astroid",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "61fa3eceb32d8f176618f65d20fcd4227cce6979",
            "messageTitle": "Add a check `consider-using-set-comprehension` which is emitted if for set initialization the old style with list comprehensions is used.",
            "messageBody": "",
            "insertions": 38,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 2,
        "date": "2018-06-21",
        "commitResults": [
          {
            "hash": "2b97dfcf16c592c62ec9d4ac671efc1d6ca3134f",
            "messageTitle": "Use as_string() to get the representation of an annotation, not name, which can be missing. Close #2210",
            "messageBody": "",
            "insertions": 10,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 55,
        "deletions": 13,
        "date": "2018-06-29",
        "commitResults": [
          {
            "hash": "07aad4930fcf1f6683c0f467f20eef29966c10c5",
            "messageTitle": "Customize the issue template. Close #2230",
            "messageBody": "",
            "insertions": 55,
            "deletions": 13
          }
        ]
      },
      {
        "insertions": 14,
        "deletions": 6,
        "date": "2018-07-03",
        "commitResults": [
          {
            "hash": "7a8380fabd7d8ddbe2622a5314316bed2e9a77f3",
            "messageTitle": "`ImportFrom` nodes correctly use the full name for the import sorting checks.",
            "messageBody": "Close #2181\n",
            "insertions": 14,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 20,
        "deletions": 6,
        "date": "2018-07-04",
        "commitResults": [
          {
            "hash": "503572277269f456b8a41e8c3dfbf6bc6da3a641",
            "messageTitle": "Only accept simple for-loop bodies when looking for consider-using-join",
            "messageBody": "Also verify that the assignment targets are actually AssignName\n\nClose #2250\n",
            "insertions": 17,
            "deletions": 5
          },
          {
            "hash": "070f58010ba1605b8b9907b7cdf241734874f044",
            "messageTitle": "Fix lint",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 9,
        "deletions": 1,
        "date": "2018-07-05",
        "commitResults": [
          {
            "hash": "bcae60d89690a895c5a44ebf8644dfcc317a1737",
            "messageTitle": "Emit consider-using-get only if the target is a Name, as this is the pattern we try to detect",
            "messageBody": "Close #2254\n",
            "insertions": 8,
            "deletions": 0
          },
          {
            "hash": "acecb3d77eca71a29a1814297f0131ff5a4bd23b",
            "messageTitle": "Prepare a new dev release",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 12613,
        "date": "2018-07-06",
        "commitResults": [
          {
            "hash": "2bac1d98b82fceec29a856d307b37202a2ce98a9",
            "messageTitle": "Remove test that spends more than 60 seconds to run.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 12613
          }
        ]
      },
      {
        "insertions": 24,
        "deletions": 4,
        "date": "2018-07-08",
        "commitResults": [
          {
            "hash": "0d4aedafdd474cc503f744241e2d48a188302206",
            "messageTitle": "Do not emit consider-using-ternary when all the elements involved are a Compare node (might not be simplifiable to a ternary).",
            "messageBody": "",
            "insertions": 6,
            "deletions": 0
          },
          {
            "hash": "aa0ef8582711ab60461b4379af6bcd817bcc59ca",
            "messageTitle": "Infer the value of the truth_value before looking for consider-using-ternary and simplifiable-boolean-expression",
            "messageBody": "The reason for that is that a Name node, for instance, will not have a bool_value()\nimplementation, thus it will default to returning Uninferable. In order to avoid\nthat, just infer the object before verifying anything about it.\n\nRelated to #2058\n",
            "insertions": 18,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 16,
        "deletions": 2,
        "date": "2018-07-10",
        "commitResults": [
          {
            "hash": "08513297117e725c549d72ab8b80138e50698040",
            "messageTitle": "`trailing-comma-tuple` can be emitted for `return` statements as well.",
            "messageBody": "Close #2269\n",
            "insertions": 15,
            "deletions": 1
          },
          {
            "hash": "1c5db6280b08b1fa53e102c37ae6d5d85900852b",
            "messageTitle": "frozenset is an iterating context for dict.values() and friends",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 3,
        "date": "2018-07-11",
        "commitResults": [
          {
            "hash": "c015d867f758c3e93ab1bc186380766ee0473150",
            "messageTitle": "Fix lint error",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "4f3eae4041c5095922ae7c8e4823f8a2372fb534",
            "messageTitle": "Remove CODEOWNERS: good idea, but cannot realistically review every PR",
            "messageBody": "",
            "insertions": 0,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 3,
        "date": "2018-07-13",
        "commitResults": [
          {
            "hash": "704f165d9fd2bce4426bcf34d0eb0f92c09413bc",
            "messageTitle": "Drop the universal flag, we\u0027re only running on Python 3. Close #592",
            "messageBody": "",
            "insertions": 0,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 397,
        "deletions": 159,
        "date": "2018-07-15",
        "commitResults": [
          {
            "hash": "3abbabae16df8793423912d7a30ca2f13ac240f3",
            "messageTitle": "Control the maximum number of inference values from pylint with --limit-inference-results",
            "messageBody": "",
            "insertions": 7,
            "deletions": 0
          },
          {
            "hash": "311a573f66995c5bacd44a2411a2132355988ba5",
            "messageTitle": "Documentation fixes for the release and add Nick as a contributor",
            "messageBody": "",
            "insertions": 56,
            "deletions": 43
          },
          {
            "hash": "d2091f9255bf0bbe9d336d90a1df21065c05e8c2",
            "messageTitle": "Prepare the release",
            "messageBody": "",
            "insertions": 2,
            "deletions": 3
          },
          {
            "hash": "b3efcf6195af9086737830c14597690d31cd61c2",
            "messageTitle": "Ignore the test directory from CPython as that might have invalid files",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "e78be1690e3949fca26312a0a2e5d8f8c0ffae0b",
            "messageTitle": "Prevent an InferenceError raised when inferring a property that raises an exception",
            "messageBody": "",
            "insertions": 14,
            "deletions": 3
          },
          {
            "hash": "6f087b25b3b751ddb2c1cbd03f4b406fd82da78a",
            "messageTitle": "Validate that the next() builtin is called when looking for stop-iteration-return, and ignore attributes named the same",
            "messageBody": "",
            "insertions": 15,
            "deletions": 0
          },
          {
            "hash": "3a8635a9ef85759f96bfefd8edcd70e223fd12bb",
            "messageTitle": "Update copyright notices",
            "messageBody": "",
            "insertions": 301,
            "deletions": 102
          },
          {
            "hash": "add6e6485a3c3dc3492fd5b84a2772b2b1afdecc",
            "messageTitle": "Remove the dev prefix",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "e17b37c5cddb620b009e91a9bc37aa333502ad74",
            "messageTitle": "Remove old note",
            "messageBody": "",
            "insertions": 0,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 28,
        "deletions": 9,
        "date": "2018-07-17",
        "commitResults": [
          {
            "hash": "50a4c3b72dbce13ce215bf8358ad6e8b26f69ef6",
            "messageTitle": "Drop the parens from the sum() call as they are not needed",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "c6411805f54341d6b76343242bf563f216464b6f",
            "messageTitle": "Include the type of the next branch in `no-else-return`",
            "messageBody": "Close #2295\n",
            "insertions": 8,
            "deletions": 4
          },
          {
            "hash": "0e674626e0950d3273acb068abb65a1b915c19f1",
            "messageTitle": "Add missing changelog entry",
            "messageBody": "",
            "insertions": 4,
            "deletions": 0
          },
          {
            "hash": "53c023dc2e4796dc530ae9b48ac0de2b4e7382b0",
            "messageTitle": "Don\u0027t emit `useless-return` when we have a single statement that is the return itself",
            "messageBody": "We still want to be explicit when a function is supposed to return\nan optional value; even though `pass` could still work, it\u0027s not explicit\nenough and the function might look like it\u0027s missing an implementation.\nClose #2300\n",
            "insertions": 14,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 66,
        "deletions": 16,
        "date": "2018-07-19",
        "commitResults": [
          {
            "hash": "ba098453a2125e625f56ae59a318e9bcd874c225",
            "messageTitle": "Simplify the code a little bit",
            "messageBody": "",
            "insertions": 1,
            "deletions": 4
          },
          {
            "hash": "124b7bccea8a1aa5e3fcabc0aa8758f4070dd281",
            "messageTitle": "Don\u0027t crash when `pylint` is unable to infer the value of an argument to `next()`",
            "messageBody": "Close #2316\n",
            "insertions": 15,
            "deletions": 1
          },
          {
            "hash": "6412838dc06d41ab2107db588e3b47ce26dc70e5",
            "messageTitle": "Fix typo",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "8d7d57fe31448e463a0d8bb96ab392e87dbf49cb",
            "messageTitle": "Don\u0027t emit `not-an-iterable` when dealing with async iterators.",
            "messageBody": "But do emit it when using the usual iteration protocol against\nasync iterators.\n\nClose #2311\n",
            "insertions": 47,
            "deletions": 7
          },
          {
            "hash": "a8b5a1469964f38566f1cddf2a694ea02bce1775",
            "messageTitle": "Remove the yield from async function to make Py35 happy",
            "messageBody": "",
            "insertions": 1,
            "deletions": 2
          },
          {
            "hash": "f4b48c6d2f10e47bc8115f5e4af34be19bef8443",
            "messageTitle": "Actually async for in list comprehension wasn\u0027t added in 3.5, so move this test to 3.6 instead",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 35,
        "deletions": 3,
        "date": "2018-07-23",
        "commitResults": [
          {
            "hash": "820d3c82fc4f52645f64789e29be55bd8b57a114",
            "messageTitle": "Modules with `__getattr__` are exempted by default from `no-member`",
            "messageBody": "There\u0027s no easy way to figure out if a module has a particular member when\nthe said module uses `__getattr__`, which is a new addition to Python 3.7.\nInstead we assume the safe thing to do, in the same way we do for classes,\nand skip those modules from checking.\n\nClose #2331\n",
            "insertions": 22,
            "deletions": 1
          },
          {
            "hash": "d3b17f335d72f1801ca9cdcb4e367a8abaade5ee",
            "messageTitle": "Disable pylint error for long function",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "d13c8c693c9a17ecf8f81fbc9c684f3658d4da33",
            "messageTitle": "Add a transform for the metaclasses that should be consumed",
            "messageBody": "In Python 3.7 the abc module has a Python implementation which gets picked\nby astroid. Unfortunately this messes up our checks because that implementation\nhas a different name that what we expect, leading to spurious false positives.\n\nClose PyCQA/astroid#2288\n",
            "insertions": 11,
            "deletions": 0
          },
          {
            "hash": "2b24ec063a5355648d286633e37f084ced4f1604",
            "messageTitle": "Don\u0027t check against collections for no-member because it now has a module level __getattr__",
            "messageBody": "",
            "insertions": 1,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 67,
        "deletions": 1,
        "date": "2018-07-24",
        "commitResults": [
          {
            "hash": "d195f9ce2b8037a164f90ef6fc446a0a8bab7ae4",
            "messageTitle": "add release changelog for 2.1",
            "messageBody": "",
            "insertions": 59,
            "deletions": 0
          },
          {
            "hash": "bbe51865b19e372521cc09a8435feaaf922cd771",
            "messageTitle": "`chain.from_iterable` no longer emits `dict-{}-not-iterating` when dealing with dict values and keys",
            "messageBody": "",
            "insertions": 8,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 29,
        "deletions": 6,
        "date": "2018-07-31",
        "commitResults": [
          {
            "hash": "fceb0bc9c7ee34a42091a2a205359552b34632c8",
            "messageTitle": "Add Bryce to the team",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "0b60dc1be1e57a8d040025f1b301ad06bde0c9d7",
            "messageTitle": "Explain what property-classes is for. Close #2365",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "36dbb9e82ef4d9395362572c2e788e0cb746af07",
            "messageTitle": "Get only the arguments of the scope function for `redefined-argument-from-local`",
            "messageBody": "Close #2364\n",
            "insertions": 12,
            "deletions": 1
          },
          {
            "hash": "0102cbdca4588405ecdf9fbd82c4b606b69dc3b7",
            "messageTitle": "`trailing-comma-tuple` gets emitted for ``yield`` statements as well.",
            "messageBody": "Close #2363\n",
            "insertions": 12,
            "deletions": 1
          },
          {
            "hash": "46f5df836a3207cb99c5caf05b3fd70da429b3a0",
            "messageTitle": "Improve the help message for logging-fstring-interpolation. Close #2354",
            "messageBody": "",
            "insertions": 1,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 49,
        "deletions": 31,
        "date": "2018-08-01",
        "commitResults": [
          {
            "hash": "f7d4688fcda933be991d6482fa5ed32d68455fa9",
            "messageTitle": "Prepare 2.1",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "ea0043c35b83ebc03e07cc2dc9090a8d9ad9e5db",
            "messageTitle": "Drop the _static folder and update the release date",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "f86ce04b7065ca037b5f28cf6e519ee987f19756",
            "messageTitle": "Make node_ignores_exception consider bare except clauses as well",
            "messageBody": "Previously it was not doing this, but it should, since the exception is handled\neven in a brute force way.\n",
            "insertions": 21,
            "deletions": 19
          },
          {
            "hash": "7be00a961bbfebcdd7a9b955f974c30c5254a64e",
            "messageTitle": "Do not emit *-builtin for Python 3 builtin checks when the builtin is used inside a try-except",
            "messageBody": "Close PyCQA/pylint#2228\n",
            "insertions": 21,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 15,
        "deletions": 0,
        "date": "2018-08-03",
        "commitResults": [
          {
            "hash": "7b85fc174009181f7253106fcdeede6bf4a1d8bb",
            "messageTitle": "``simplifiable-if-statement`` not emitted when dealing with subscripts",
            "messageBody": "",
            "insertions": 15,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 23,
        "deletions": 5,
        "date": "2018-08-09",
        "commitResults": [
          {
            "hash": "01bb7b93dfdcae0c3e78425c376baf19fd684e59",
            "messageTitle": "Don\u0027t emit `assignment-from-no-return` for decorated function nodes",
            "messageBody": "Since pylint does not currently understand decorators, it doesn\u0027t comprehend\nthat some functions are actually returning something when decorated (albeit there\nmight be a possibility for the decorator to not return anything as well).\nIn this case, it\u0027s safe to assume that the function might return something and\nmove on, which should prevent a bunch of false positives to pop up.\n\nClose #2385\n",
            "insertions": 23,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 61,
        "deletions": 27,
        "date": "2018-08-10",
        "commitResults": [
          {
            "hash": "3226436cdee6de0d1e1058f431d0432316cc4d7a",
            "messageTitle": "master is now 2.2",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "15a3da06c8af3151262b1867a17c325811e1afbb",
            "messageTitle": "Drop the use of variadics when looking for duplicate argument names",
            "messageBody": "Just look at positional and keyword only arguments for now\n",
            "insertions": 18,
            "deletions": 25
          },
          {
            "hash": "4391fd294c32bf51c77c386f53f8199c09213da1",
            "messageTitle": "Add changelog entry for the new change",
            "messageBody": "",
            "insertions": 4,
            "deletions": 0
          },
          {
            "hash": "7c103cd7e7e23011fd38629cb8d99cc2d85f8abd",
            "messageTitle": "Allow double indentation levels for more distinguishable indentations",
            "messageBody": "Close #741\n",
            "insertions": 38,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 56,
        "deletions": 45,
        "date": "2018-08-15",
        "commitResults": [
          {
            "hash": "7295c95cf23a2f4c05d1cb16f3da26663aed444e",
            "messageTitle": "Extend the TYPE_CHECKING guard to TYPE_CHECKING name as well, not just the attribute",
            "messageBody": "Close #2411\n",
            "insertions": 14,
            "deletions": 3
          },
          {
            "hash": "e837bb112591dced80eb7ddbae532aec9fcd19bb",
            "messageTitle": "Rename variables to remove licentious language",
            "messageBody": "",
            "insertions": 42,
            "deletions": 42
          }
        ]
      },
      {
        "insertions": 33,
        "deletions": 104,
        "date": "2018-08-16",
        "commitResults": [
          {
            "hash": "242c4c9981a39f68fb571ea6467c993d7f087b4d",
            "messageTitle": "Remove occurrences of removed checks",
            "messageBody": "",
            "insertions": 19,
            "deletions": 103
          },
          {
            "hash": "4297cf5f1976b3ec585ed9425e4aebd7017f1b47",
            "messageTitle": "Add test for the new AsyncGenerator support. Close #2379",
            "messageBody": "",
            "insertions": 14,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 38,
        "deletions": 7,
        "date": "2018-08-21",
        "commitResults": [
          {
            "hash": "0585a43e23b5e1d758babddb71e60c15a85c22c1",
            "messageTitle": "Remove obsolete clobber command",
            "messageBody": "",
            "insertions": 1,
            "deletions": 5
          },
          {
            "hash": "892d10d15336fcd704e9f9d05ed904a38578d29d",
            "messageTitle": "Update the PR template to be more user friendly",
            "messageBody": "",
            "insertions": 37,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 135,
        "deletions": 102,
        "date": "2018-08-22",
        "commitResults": [
          {
            "hash": "cbc70dc2d86343ba4fba94a6e082abd8bbc9c2c4",
            "messageTitle": "Fix some typos",
            "messageBody": "",
            "insertions": 4,
            "deletions": 7
          },
          {
            "hash": "0ba451994767172053251c4cebcc9104d4b77fc6",
            "messageTitle": "Pick the latest value from the inferred values when looking for ``raising-non-exception``",
            "messageBody": "Close #2431\n",
            "insertions": 32,
            "deletions": 7
          },
          {
            "hash": "4e719576a2c41bfebb144cd0219990b5be218989",
            "messageTitle": "Some grammar improvements",
            "messageBody": "",
            "insertions": 6,
            "deletions": 6
          },
          {
            "hash": "79797e192e3e363ed00beecd803c0bb200faf36e",
            "messageTitle": "Update PULL_REQUEST_TEMPLATE.md",
            "messageBody": "Add missing word",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "10d688ec78b27e52f41d7a061593112cbc596a90",
            "messageTitle": "Update the README with some improvements; also fix the line endings",
            "messageBody": "",
            "insertions": 92,
            "deletions": 81
          }
        ]
      },
      {
        "insertions": 69,
        "deletions": 20,
        "date": "2018-08-23",
        "commitResults": [
          {
            "hash": "064f3788bba2ceff202a7efabb9516b52730cb03",
            "messageTitle": "Make sure to filter out None and Uninferable when gathering exceptions",
            "messageBody": "Close #2434\n",
            "insertions": 11,
            "deletions": 2
          },
          {
            "hash": "664c712baca64dd038e0b512ad9316bd439679db",
            "messageTitle": "Mark this release as a dev release. Close PyCQA/astroid#608",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          },
          {
            "hash": "8562beefdfa29cfd0f29f64f2ca1c506769b4f79",
            "messageTitle": "Update the message for assignment-from-none and assignment-from-no-return to be easier to grasp",
            "messageBody": "",
            "insertions": 7,
            "deletions": 7
          },
          {
            "hash": "33f8ac7394eb6582c9e92b1b4221fc8db27d243b",
            "messageTitle": "Infer decorated methods when looking for method-hidden",
            "messageBody": "Close #2369\n",
            "insertions": 47,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 97,
        "deletions": 22,
        "date": "2018-08-24",
        "commitResults": [
          {
            "hash": "a284b6bedfff084f6fbeacae9e5dd702568abb75",
            "messageTitle": "The ``locally-enabled`` check is gone.",
            "messageBody": "Close #2442\n",
            "insertions": 5,
            "deletions": 9
          },
          {
            "hash": "6de94ecfcdb88b28b4631ab8766bbbede4758fdd",
            "messageTitle": "Add test for async generators. Close #1907",
            "messageBody": "",
            "insertions": 17,
            "deletions": 0
          },
          {
            "hash": "c10b47ab751833307ed767d6ade00235e3e0a244",
            "messageTitle": "Squash a check and rename infered",
            "messageBody": "",
            "insertions": 4,
            "deletions": 6
          },
          {
            "hash": "5160651360fff2289332b1790a98eead905f739e",
            "messageTitle": "Remove last occurrences of locally-enabled",
            "messageBody": "",
            "insertions": 0,
            "deletions": 5
          },
          {
            "hash": "66cb32187c040f82dd067bc0d226b2f105bf6c38",
            "messageTitle": "Handle asyncio.coroutine when looking for ``not-an-iterable`` check.",
            "messageBody": "Close #996\n",
            "insertions": 71,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 32,
        "deletions": 2,
        "date": "2018-08-31",
        "commitResults": [
          {
            "hash": "8923552650d90324f2f5d89897e213609b87edb7",
            "messageTitle": "Allow ``__module__`` to be redefined at a class level. Close #2451",
            "messageBody": "",
            "insertions": 32,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 50,
        "deletions": 40,
        "date": "2018-09-04",
        "commitResults": [
          {
            "hash": "8634e29da640e605a69db7a43666418637b01d35",
            "messageTitle": "Handle ``AstroidSyntaxError`` when trying to import a module.",
            "messageBody": "Close #2313\n",
            "insertions": 12,
            "deletions": 0
          },
          {
            "hash": "a41706f13ca893ddc8d732127ab9733abe18da65",
            "messageTitle": "Switch to Unix line endings",
            "messageBody": "",
            "insertions": 29,
            "deletions": 29
          },
          {
            "hash": "6e3f371af8ce44d0f232383b3d092e39c785a7a3",
            "messageTitle": "Merge documentation with contributing docs",
            "messageBody": "",
            "insertions": 8,
            "deletions": 10
          },
          {
            "hash": "c00e464f9536dc3599f476a4fdcb23d832d7673b",
            "messageTitle": "Disable pylint error locally",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 126,
        "deletions": 97,
        "date": "2018-09-05",
        "commitResults": [
          {
            "hash": "c8c5e265afe4cd64788ac1dd910c577e165dee31",
            "messageTitle": "``consider-using-ternary`` and ``simplified-boolean-expression`` no longer emit for sequence based checks",
            "messageBody": "This was more of an heuristic than actual an useful check, so let\u0027s get rid of it.\n\nClose #2473\n",
            "insertions": 12,
            "deletions": 30
          },
          {
            "hash": "2a8ff2c8994d60377d4359470c767dea744d8259",
            "messageTitle": "``assignment-from-no-return`` is not emitted for coroutines.",
            "messageBody": "The reason for that is that the function calls actually are returning\nsomething, a future object that needs to be consumed through the event loop,\nso emitting this check for coroutines is wrong.\n\nClose #1715\n",
            "insertions": 35,
            "deletions": 1
          },
          {
            "hash": "bf16b3e37a600b232dfc35401c18fbc67b82aabd",
            "messageTitle": "Remove extraneous comment and fix the style",
            "messageBody": "",
            "insertions": 2,
            "deletions": 6
          },
          {
            "hash": "ad2ddf915d94395f20e1a9b082ef9a18022f2276",
            "messageTitle": "isinstance accept tuples of tuples so no need to join them",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "c03857ea7b2c21e11fda20efd00462b43e0209b4",
            "messageTitle": "Make sure that args_elts is defined by defaulting to an empty tuple",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "84db90ea5eb4cd6e58aace3e2af4b8d996aac8a9",
            "messageTitle": "Switch to a hasattr() call for getting the elts of an inferred value",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "4202908c63dcfe09dab8f2bc102fbe2951264f85",
            "messageTitle": "Remove vacuous version check",
            "messageBody": "",
            "insertions": 1,
            "deletions": 2
          },
          {
            "hash": "86b05f28ba38ffad8ee493ef029518194518a842",
            "messageTitle": "Switch to using CallSite to get the arguments and clear the formatting a bit",
            "messageBody": "",
            "insertions": 15,
            "deletions": 28
          },
          {
            "hash": "07c0db0cc3be8c673542d00830a19b07e343f5c0",
            "messageTitle": "Drop the .keys() call, can unpack dictionaries without it",
            "messageBody": "",
            "insertions": 7,
            "deletions": 8
          },
          {
            "hash": "0c6d58fe2bfdde184d1d24536dc0ce69c0cd49d3",
            "messageTitle": "Squash some checks and move some of the around",
            "messageBody": "",
            "insertions": 3,
            "deletions": 6
          },
          {
            "hash": "1dab9872046bb36d013d3e6008e6e70bc07988a4",
            "messageTitle": "Add a new check, ``duplicate-string-formatting-argument``",
            "messageBody": "This new check is emitted whenever a duplicate string formatting argument\nis found.\n\nClose #497\n",
            "insertions": 41,
            "deletions": 1
          },
          {
            "hash": "6be311efd316bc7abdf737a9a6ad58928f263d21",
            "messageTitle": "Remove useless minversion for Python 2.7",
            "messageBody": "",
            "insertions": 6,
            "deletions": 12
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 2,
        "date": "2018-09-06",
        "commitResults": [
          {
            "hash": "61655251f2260570c6a32df6ff44527e25c34b1a",
            "messageTitle": "The ``json`` reporter prints an empty list when no messages are emitted",
            "messageBody": "Close #2446\n",
            "insertions": 5,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 27,
        "deletions": 11,
        "date": "2018-09-15",
        "commitResults": [
          {
            "hash": "2810cca9c2f233fbb4b4c7ecba4af1b70d151ca1",
            "messageTitle": "Move is_raising to where it is used and correct its annotation",
            "messageBody": "",
            "insertions": 13,
            "deletions": 10
          },
          {
            "hash": "c8e0992d31b831b7d60b1e8582b84068d50c3afd",
            "messageTitle": "```too-few-public-methods`` is not reported for dataclasses created with options.",
            "messageBody": "Close #2488\n",
            "insertions": 14,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 12243,
        "deletions": 8352,
        "date": "2018-09-17",
        "commitResults": [
          {
            "hash": "3f2842400795ae1aaffc4ae6c35c4ef26857c239",
            "messageTitle": "Reformat the code with black",
            "messageBody": "",
            "insertions": 12199,
            "deletions": 8342
          },
          {
            "hash": "d179c1e609ac068c827039d8c6d2c2723a764a85",
            "messageTitle": "Add black badge",
            "messageBody": "",
            "insertions": 3,
            "deletions": 0
          },
          {
            "hash": "49e741aa9c27cfc8cb0c9319bf8509cbc92b2f08",
            "messageTitle": "Add tox and travis black steps",
            "messageBody": "",
            "insertions": 12,
            "deletions": 3
          },
          {
            "hash": "f9868b66c2bfca0d5c93ca2338caf9e0cbb29fac",
            "messageTitle": "Fix the tests broken by the disabling of formatting checks over pylint codebase",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "40fd5cbed3346a5281943d46e38b5446bf56f883",
            "messageTitle": "Add the precommit configuration",
            "messageBody": "",
            "insertions": 12,
            "deletions": 0
          },
          {
            "hash": "e1fdcce71d331130020a74f922728f4ca998e070",
            "messageTitle": "Add formatting documentation",
            "messageBody": "",
            "insertions": 10,
            "deletions": 0
          },
          {
            "hash": "42a667bced814d8b89ea90eee0bb6af5cd281e88",
            "messageTitle": "Fix mypy errors caused by black autoformatting the type comments",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "0ff9fb55e52fbc6f754d145fb06523d19e1bef98",
            "messageTitle": "Rely on a different file than bad_continuation for the parallel test case",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 112,
        "deletions": 93,
        "date": "2018-09-18",
        "commitResults": [
          {
            "hash": "14217e3c0460683f8538a0ebee13fa732ffb3c66",
            "messageTitle": "Partially revert commit fede47a625f40169bf839b7e8e2df643b3471635",
            "messageBody": "This used to assume that the initial part of a pragma line might have\nbeen a comment, but in practice in can be a bunch of control pragmas\nfor different linters, which in turn results in pylint\u0027s pragma control\nno longer applying when it follows those pragma controls.\n\nClose #2297\n",
            "insertions": 13,
            "deletions": 29
          },
          {
            "hash": "1326aa56c13c1a3905238ad0d4b0c963ebcee4f4",
            "messageTitle": "Exclude the relevant directories from black",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "1b756685aed259aa2cf67d33165dc656ee38fa59",
            "messageTitle": "Correct fallback when the lines out of the parse trees are in raw_module_msgs_state",
            "messageBody": "`_raw_module_msgs_state` holds a mapping of messages to lines and their status, enabled\nor disabled. As such, the correct solution is to check if any of those lines matches\nthe current line that\u0027s out of the AST, as well as to check if it\u0027s disabled or enabled,\nsince it can vary depending on the pragma that was used.\n",
            "insertions": 16,
            "deletions": 1
          },
          {
            "hash": "9a44c1e087c3e794c6cc5855c9aa4aadacd13c56",
            "messageTitle": "Move is_dataclass and is_enum_class back to where they are used",
            "messageBody": "",
            "insertions": 56,
            "deletions": 59
          },
          {
            "hash": "5ec7113b23f36b09246f0863257b51198546f53b",
            "messageTitle": "``too-few-public-methods`` is not reported for ``typing.NamedTuple``",
            "messageBody": "Close #2459\n",
            "insertions": 26,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 11,
        "deletions": 11,
        "date": "2018-09-19",
        "commitResults": [
          {
            "hash": "98b08d960f2ad420bc5f19b4132b28335449ff66",
            "messageTitle": "New tagline! Many thanks to whomever said it, it came my way through DRMacIver",
            "messageBody": "",
            "insertions": 6,
            "deletions": 0
          },
          {
            "hash": "9d224833f1052b3792df2765b52388e16cff4791",
            "messageTitle": "Check if an updated typing version fixes readthedocs",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "74a11318afe821f0d85ee1f275160d24caf42aae",
            "messageTitle": "Revert \"Check if an updated typing version fixes readthedocs\"",
            "messageBody": "This reverts commit 9d224833f1052b3792df2765b52388e16cff4791.\n",
            "insertions": 0,
            "deletions": 1
          },
          {
            "hash": "66f71dbd6411b66eac95ff8e41ccb54b8bb8d396",
            "messageTitle": "Remove problematic annotations",
            "messageBody": "Due to unforeseen circumstances, readthedocs cannot render our documentation because we\nuse a certain typing construction that errors on the Python 3.5 version that ReadTheDocs\nuses. We need to import pylint in order to construct the dynamic list of features, so the only\nchoice right now is to remove these annotations from the codebase, although it would be great\nif ReadTheDocs would use a more recent version of Python:\n\nhttps://github.com/python/typing/issues/266\n",
            "insertions": 4,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 0,
        "date": "2018-09-20",
        "commitResults": [
          {
            "hash": "83d415001cc0430fcbbcf52917d5e952e3bec9cf",
            "messageTitle": "Add pytest.ini to MANIFEST",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 27,
        "deletions": 9,
        "date": "2018-09-23",
        "commitResults": [
          {
            "hash": "0f3fb65ed680b9318d9fd83ec5e3130b8b61faf3",
            "messageTitle": "Emit ``too-many-starred-assignment`` only when the number of Starred nodes is per assignment elements",
            "messageBody": "Nested assignment tuples can each have a single starred assignment, as in the\nfollowing example:\n\n   ((a, *b), *c) \u003d ...\n\nThe check was previously unflattening the occurrences of Starred nodes,\nresulting in a total number of 2 Starred nodes for the given\nassignment tuple, while in fact there is just one starred node\nfor the first tuple, followed by a separate second starred node.\n\nClose #2513\n",
            "insertions": 18,
            "deletions": 4
          },
          {
            "hash": "1a6ddcb14b8c8de81c849718e53be9b1f35813d9",
            "messageTitle": "Simplify the code to remove the need for a linter disable",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          },
          {
            "hash": "2f634cf4087139428212f6aa4183315eb060c6d4",
            "messageTitle": "Make sure that index is defined by assigning it to None before the loop",
            "messageBody": "",
            "insertions": 5,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 22,
        "deletions": 15,
        "date": "2018-09-24",
        "commitResults": [
          {
            "hash": "4a3f47ce8793cda198414b5aea7fae4c37cb43f9",
            "messageTitle": "Handle recursively the count of Starred nodes in assignments",
            "messageBody": "",
            "insertions": 22,
            "deletions": 15
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 8,
        "date": "2018-09-25",
        "commitResults": [
          {
            "hash": "db5b7cde3df1eb874a414681753fe96d367f09bf",
            "messageTitle": "Fix the lint errors",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "20694325dde16377dd5e295ccdd82dffa68ce7aa",
            "messageTitle": "Move the type check of the target after checking for invalid star assignment targets",
            "messageBody": "",
            "insertions": 4,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 131,
        "deletions": 73,
        "date": "2018-09-29",
        "commitResults": [
          {
            "hash": "d9a115d7537c55cdff910eee97c683d4dd795634",
            "messageTitle": "Change ``unbalanced-tuple-unpacking`` back to a warning.",
            "messageBody": "It used to be a warning until a couple of years ago, after it was promoted to\nan error. But the check might be suggesting the wrong thing in some cases,\nfor instance when checking against ``sys.argv`` which cannot be known at static\nanalysis time. Given it might rely on potential unknown data, it\u0027s best to\nhave it as a warning.\n\nClose #2522\n",
            "insertions": 12,
            "deletions": 2
          },
          {
            "hash": "a83ef077d3f569ac72d25dc8afe08d8a2428e21f",
            "messageTitle": "Separate pyenchant into a separate step",
            "messageBody": "pyenchant is no longer maintained and doesn\u0027t seem to install correctly on all systems.\nBut it is installable on Travis, so instead we separated that from the main test suite in order\nto run it in its own step.\n\nClose #1900\n",
            "insertions": 15,
            "deletions": 2
          },
          {
            "hash": "b8f04a0b59aa699bd3600b815b495794096d59db",
            "messageTitle": "Add test case for logging-* errors for subclasses of logging.Logger. Close #960",
            "messageBody": "",
            "insertions": 12,
            "deletions": 1
          },
          {
            "hash": "48a45e1c68dfaa03665d47392bca4d6abec625bc",
            "messageTitle": "Add test case that deprecated method is emitted for unittest methods. Close #2226",
            "messageBody": "",
            "insertions": 15,
            "deletions": 0
          },
          {
            "hash": "fa7274a884a458619f232c38bc971c641f56fd0c",
            "messageTitle": "Don\u0027t suggest identity check against the interpreter\u0027s True or False builtin values, prefer boolyness instead",
            "messageBody": "Close #2527\n",
            "insertions": 14,
            "deletions": 29
          },
          {
            "hash": "c9f6087f910604579d6bfca70df3e812dbcdd304",
            "messageTitle": "Correct test file",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          },
          {
            "hash": "cb931bfa8430e6f5b4f51207bbd1b633f3f91e19",
            "messageTitle": "Save the first group into a variable and use that instead",
            "messageBody": "",
            "insertions": 7,
            "deletions": 5
          },
          {
            "hash": "5d066ed8c8850dcf2a814f849c8b19c1bfd603a1",
            "messageTitle": "Move func_block_disable_msg into regrtest_data, because we already have a test for it in unittest_utils",
            "messageBody": "",
            "insertions": 2,
            "deletions": 15
          },
          {
            "hash": "daef49a9f5623a324f65f5227f2e4a2f7cfeeff0",
            "messageTitle": "``pylint`` is less eager to consume the whole line for pragmas",
            "messageBody": "The regex was adapted so that we either stop at one of `;` or `#`, or at the end\nof the line. This should improve the situation a little bit when dealing with the\nflags of other linters.\n\nClose #2485\n",
            "insertions": 25,
            "deletions": 2
          },
          {
            "hash": "9ba4196c5e1083c4d058ca01c77bc0679605a1a7",
            "messageTitle": "Fix formatting errors",
            "messageBody": "",
            "insertions": 29,
            "deletions": 16
          }
        ]
      },
      {
        "insertions": 17,
        "deletions": 2,
        "date": "2018-10-01",
        "commitResults": [
          {
            "hash": "b6162e8fa1963057f6f1eb11ff2c90ea96994430",
            "messageTitle": "Obtain the correct number of CPUs for virtualized or containerized environments.",
            "messageBody": "Close #2519\n",
            "insertions": 16,
            "deletions": 1
          },
          {
            "hash": "b94f29c55685f7bce4d83f08a938a4c2a4e62806",
            "messageTitle": "using-constant-test has a false positive when using getattr(), so disable that error locally",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 71,
        "deletions": 56,
        "date": "2018-10-02",
        "commitResults": [
          {
            "hash": "50568bab26ba5d67a8d4f23c3bc11dbb24190c9d",
            "messageTitle": "Grammar",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "f9c2ffe84d235b82583c04677b7ceb370445c303",
            "messageTitle": "``deprecated-method`` can use the attribute name for identifying a deprecated method",
            "messageBody": "Previously we were using the fully qualified name, which we still do, but the fully\nqualified name for some ``unittest`` deprecated aliases leads to a generic\ndeprecation function. Instead on relying on that, we now also rely on the attribute\nname, which should solve some false positives.\n\nClose #1653\nClose #1946\n",
            "insertions": 52,
            "deletions": 23
          },
          {
            "hash": "540e26db2e05c4f4f555db54d4c046ceff0e7763",
            "messageTitle": "dict-iter-method and dict-view-method no longer determines if the operand is a dictionary",
            "messageBody": "This inhibits the capability of the check of finding occurrences of these methods. There\u0027s a low\nchance of having a false positive.\n",
            "insertions": 18,
            "deletions": 32
          }
        ]
      },
      {
        "insertions": 45,
        "deletions": 22,
        "date": "2018-10-11",
        "commitResults": [
          {
            "hash": "0a39200932a9143082255e600ff5a7e764520ce8",
            "messageTitle": "Consider ``range()`` objects for ``undefined-loop-variable`` leaking from iteration.",
            "messageBody": "Close #2533\n",
            "insertions": 45,
            "deletions": 22
          }
        ]
      },
      {
        "insertions": 8,
        "deletions": 5,
        "date": "2018-11-25",
        "commitResults": [
          {
            "hash": "ef34162576f0d86b1c5ef4f0b8ff74afe3bb44fb",
            "messageTitle": "Prepare 2.2",
            "messageBody": "",
            "insertions": 6,
            "deletions": 3
          },
          {
            "hash": "1ac83855b38a8d053ec5d0403a5c0e6e8b191fbb",
            "messageTitle": "Forgot to update the documentation as well",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 1,
        "date": "2018-11-27",
        "commitResults": [
          {
            "hash": "71f7acae1e7cdbce039171641e795463156a9034",
            "messageTitle": "Prepare 2.2.1",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "484d1720a177454ca783d526c9a55b85c3516016",
            "messageTitle": "Set _module_pkg on init as well, not just on open. Close #2613",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 82,
        "deletions": 23,
        "date": "2018-11-28",
        "commitResults": [
          {
            "hash": "754ce1dffae4c8e5a1f40decc24ebf03024ab97d",
            "messageTitle": "Change the ``logging-format-style`` to use name identifier instead of their corresponding Python identifiers",
            "messageBody": "This is to prevent users having to think about escaping the default value for\n``logging-format-style`` in the generated config file. Also our config parsing\nutilities don\u0027t quite support escaped values when it comes to ``choices`` detection,\nso this would have needed various hacks around that.\n\nClose #2614\n",
            "insertions": 36,
            "deletions": 7
          },
          {
            "hash": "7de1f56047d5939f1d5670884160301792d1d51b",
            "messageTitle": "Replace StopIterationCalls in ForwardSlashChunker with returns.",
            "messageBody": "Thanks @antonenk. Close #2579\n",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "5046b8edf653ae2b26bb6b81ef424612380f88bf",
            "messageTitle": "Revert \"Replace StopIterationCalls in ForwardSlashChunker with returns.\"",
            "messageBody": "This reverts commit 7de1f56047d5939f1d5670884160301792d1d51b.\n\npyenchant was using StopIteration explicitly so there\u0027s no need to replace that\nwith returns as it doesn\u0027t conflict with PEP 479. The original issue had a separate problem\nthat wasn\u0027t related to this checker.\n",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "5105c419f43194d7b34802f62f9b8ac51f96a2e8",
            "messageTitle": "Fix the documentation",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "55c638537ac956c463b79b16e73a0505ae544dfe",
            "messageTitle": "Prepare 2.2.2",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "55da93fe050202d70e409a2f0a99832de256b543",
            "messageTitle": "Refactor ``bad-reversed-sequence`` to account for more objects that can define ``__reversed__``",
            "messageBody": "One such object would be an enum class, for which ``__reversed__`` yields each individual enum.\nAs such, the check for ``bad-reversed-sequence`` needs to not differentiate between classes\nand instances when it comes for checking of ``__reversed__`` presence.\n\nClose #2598\n",
            "insertions": 32,
            "deletions": 2
          },
          {
            "hash": "e9111be4cc991dd3a347667927e8025f2c08dd1c",
            "messageTitle": "Master is now 2.3.0",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 65,
        "deletions": 1,
        "date": "2018-11-29",
        "commitResults": [
          {
            "hash": "0b24cb889fedec374c17b45c1a86f9ee356cc8a3",
            "messageTitle": "Added ``wrong-exception-operation``",
            "messageBody": "Used when an operation is done against an exception, but the operation\nis not valid for the exception in question. Usually emitted when having\nbinary operations between exceptions in except handlers.\n\nClose #2494\n",
            "insertions": 57,
            "deletions": 1
          },
          {
            "hash": "907ee7ad10be4efd6c65f3ade5f237c06085907a",
            "messageTitle": "Document the use of --recreate for tox. Close #2590",
            "messageBody": "",
            "insertions": 8,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2018-11-30",
        "commitResults": [
          {
            "hash": "91f7a0f07ac009240dc12e567c5f8cbc898e81d9",
            "messageTitle": "Fix error caused by the new check",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 15,
        "date": "2018-12-04",
        "commitResults": [
          {
            "hash": "95bc362f59476a41538a8d17e3232ad893e004ff",
            "messageTitle": "Remove unused imports from checkers/utils.py, including the missing typing.Type. Close #2632",
            "messageBody": "",
            "insertions": 3,
            "deletions": 15
          }
        ]
      },
      {
        "insertions": 35,
        "deletions": 9,
        "date": "2018-12-06",
        "commitResults": [
          {
            "hash": "c320b0e0d77f34972631a82a7088b368d9002dd7",
            "messageTitle": "Fix false positive with `not-async-context-manager` caused by not understanding `contextlib.asynccontextmanager`",
            "messageBody": "Close #2440\n",
            "insertions": 35,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 34,
        "deletions": 4,
        "date": "2018-12-11",
        "commitResults": [
          {
            "hash": "117ec26657e7d79b4d29e228394088453faa2527",
            "messageTitle": "``no-member`` is emitted for enums when they lack a member",
            "messageBody": "Previously we weren\u0027t doing this because we detected a\n``__getattr__`` implementation on the ``Enum`` class\n(and this check is skipped for classes with ``__getattr__``),\nbut that is fine for Enums, given that they are inferred in a customised\nway in astroid.\n\nClose #2565\n",
            "insertions": 34,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 25,
        "deletions": 11,
        "date": "2018-12-14",
        "commitResults": [
          {
            "hash": "2e2879379441514ef7a15d7e4169f545574ce00a",
            "messageTitle": "Exempt ``yield from`` from ``*-not-iterating`` Python 3 checks.",
            "messageBody": "Close #2643\n",
            "insertions": 14,
            "deletions": 0
          },
          {
            "hash": "09a86d3a224925acb99f78fb0c2955199da9ceb0",
            "messageTitle": "Fix extraneous changelog entry",
            "messageBody": "",
            "insertions": 0,
            "deletions": 2
          },
          {
            "hash": "32f566f6c06dd9637b5471ee2316ce6aaad11a70",
            "messageTitle": "Make ``compare-to-zero`` less zealous by checking against equality and identity",
            "messageBody": "Close #2645\n",
            "insertions": 11,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 13,
        "deletions": 0,
        "date": "2018-12-18",
        "commitResults": [
          {
            "hash": "7e1186ebbfb0fe96dcbb2b427b5e4b39f340c03f",
            "messageTitle": "Exempt starred unpacking from ``*-not-iterating`` Python 3 checks",
            "messageBody": "Close #2651\n",
            "insertions": 13,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 3,
        "date": "2018-12-20",
        "commitResults": [
          {
            "hash": "73e65741e36c973f6c0b44c68a5610b7173ee285",
            "messageTitle": "Adjust the docstring a bit",
            "messageBody": "",
            "insertions": 5,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 28,
        "deletions": 2,
        "date": "2019-01-13",
        "commitResults": [
          {
            "hash": "2e7266e53059c48ea1ae96195c9e751bd2cf11e5",
            "messageTitle": "Fixed a false positive for ``unused-variable`` and ``nonlocal`` assignments",
            "messageBody": "When looking for nonlocal names and assignments in upper scope, also look\nfor AnnAssign nodes.\n\nClose #2671\n",
            "insertions": 20,
            "deletions": 1
          },
          {
            "hash": "d99af7f7cdc3cdc7a437fa0351d41aaa8226fc14",
            "messageTitle": "Bring infer_name_module() from astroid right here",
            "messageBody": "There is currently no consumer of infer_name_module() other than this place in pylint.\nThis commit moves that function here as a private function.\n",
            "insertions": 8,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 9,
        "deletions": 0,
        "date": "2019-01-17",
        "commitResults": [
          {
            "hash": "206f59423bf84d0ba41dca2207569ac4a14c6ece",
            "messageTitle": "Add test that a recursion error does not happen any longer. Close #2463",
            "messageBody": "",
            "insertions": 9,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 0,
        "date": "2019-01-18",
        "commitResults": [
          {
            "hash": "017a090472896f1163b819a9403af7a27a136534",
            "messageTitle": "Add test that a recursion error does not happen. Close PyCQA/astroid#623",
            "messageBody": "",
            "insertions": 10,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 23,
        "deletions": 7,
        "date": "2019-01-20",
        "commitResults": [
          {
            "hash": "9baa95b8a19cc881c9c4d45d7b9e1a0423724534",
            "messageTitle": "Prepare a dev release",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "12dc8a92e0ec51df6ab94d8f264f3cecdf2e8565",
            "messageTitle": "Use an explicit dev prefix otherwise it will generate a  post by default",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "bf847d818995245105408153d27bbd49f7486b08",
            "messageTitle": "Make the list a generator and continue when there is an error in the fixme lookup",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "8cd2d1a16dc743aebad1ea2ed2e645253fe3629b",
            "messageTitle": "Remove extraneous comment?",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          },
          {
            "hash": "6b85128e7b817dab3e48a9a1d7665a280b2989f0",
            "messageTitle": "Add changelog entry for the fixme changes.",
            "messageBody": "Close #2321\n",
            "insertions": 4,
            "deletions": 0
          },
          {
            "hash": "bc4b56ee862ff8e8784d5fe65bc4fc1ed0271f3d",
            "messageTitle": "Add test that a recursion error does not happen any longer. Close #2683",
            "messageBody": "",
            "insertions": 13,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 9,
        "deletions": 0,
        "date": "2019-01-21",
        "commitResults": [
          {
            "hash": "13dd2a770dd2a2aa2d35a1d607d14720a339930e",
            "messageTitle": "Add test case for #2667",
            "messageBody": "",
            "insertions": 9,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 19,
        "deletions": 5,
        "date": "2019-01-23",
        "commitResults": [
          {
            "hash": "e082a2c79c5c8b998a7a2ddfb2123df849ac3902",
            "messageTitle": "Add test case for #2588",
            "messageBody": "",
            "insertions": 16,
            "deletions": 1
          },
          {
            "hash": "c2c06be7454069087193d0bd96badf6bb47dcf09",
            "messageTitle": "Disable test temporarily until we fix the context problem in astroid",
            "messageBody": "",
            "insertions": 3,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2019-01-25",
        "commitResults": [
          {
            "hash": "87e02d1e3dda74a085c0871a132610b7d06d1490",
            "messageTitle": "Prepare a new dev release",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 15,
        "deletions": 13,
        "date": "2019-01-30",
        "commitResults": [
          {
            "hash": "cee1d98c9e29c7f7cef3447cf477d1da3e0c3be2",
            "messageTitle": "Move the unused variable regression test to a Python 3.6 specific file",
            "messageBody": "",
            "insertions": 15,
            "deletions": 13
          }
        ]
      },
      {
        "insertions": 23,
        "deletions": 5,
        "date": "2019-02-04",
        "commitResults": [
          {
            "hash": "c2af5c760307edaf50cc519d189b620ba41f12db",
            "messageTitle": "Support ``Ellipsis`` as a synonym for ``pass`` statements.",
            "messageBody": "Close #2718\n",
            "insertions": 23,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 36,
        "deletions": 12,
        "date": "2019-02-05",
        "commitResults": [
          {
            "hash": "0ab897742cdd9b6c81da3be5018ee0d29e74457c",
            "messageTitle": "Still use a regular expression for the FIXME check",
            "messageBody": "We need to be able to match multiple words (e.g. fixme and todo) but we should\nnot catch strings such as `TODOIST`. The previous implementation was using a `startswith`\nbetween the notes and the string tokens but that matches Todoist as well.\n\nClose #2707\n",
            "insertions": 32,
            "deletions": 8
          },
          {
            "hash": "51e12f81e410a3459b118e9551e77ff61470d4ef",
            "messageTitle": "Fix a couple of warnings",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 40,
        "deletions": 10,
        "date": "2019-02-11",
        "commitResults": [
          {
            "hash": "e552b81c5a61c08ff846d07611c1bae33718b49a",
            "messageTitle": "Fix a crash caused by iterating over ``Uninferable`` in a string formatting check.",
            "messageBody": "Close #2727\n",
            "insertions": 10,
            "deletions": 2
          },
          {
            "hash": "7a40b0b6d3113403a266ffef13431cdc8e6a8327",
            "messageTitle": "Don\u0027t emit ``*-not-iterating`` checks for builtins consumed by ``itertools``",
            "messageBody": "Close #2731\n",
            "insertions": 30,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 299,
        "deletions": 87,
        "date": "2019-02-13",
        "commitResults": [
          {
            "hash": "ee413f18b2dc5b8b626538d1cda64d01817e8765",
            "messageTitle": "Split the test in two files for separate Python versions",
            "messageBody": "",
            "insertions": 8,
            "deletions": 2
          },
          {
            "hash": "c95f911a915ab88573bcc65217eed7f488281df6",
            "messageTitle": "Fixed a crash that occurred for ``bad-str-strip-call`` when ``strip()`` received ``None``",
            "messageBody": "Close #2743\n",
            "insertions": 5,
            "deletions": 1
          },
          {
            "hash": "612b87a3b3eaa6e862198c99d120e492cbfa19d9",
            "messageTitle": "Allow ``BaseException`` for emitting ``broad-except``, just like ``Exception``.",
            "messageBody": "Close #2741\n",
            "insertions": 13,
            "deletions": 2
          },
          {
            "hash": "11403e0a3998eae1b27176ece815aac3af6b38cb",
            "messageTitle": "Add test case for #2553",
            "messageBody": "",
            "insertions": 11,
            "deletions": 0
          },
          {
            "hash": "fa52e7da184435ed2c472a86f854e386594ae99a",
            "messageTitle": "Add the initial release log for 2.3",
            "messageBody": "",
            "insertions": 67,
            "deletions": 3
          },
          {
            "hash": "46faee298e54727abd253031cd1314bbad6c9ed9",
            "messageTitle": "Added a new command line option ``list-groups`` for listing all the check groups ``pylint`` knows about.",
            "messageBody": "",
            "insertions": 33,
            "deletions": 1
          },
          {
            "hash": "69325b4d1f2f43c66bdb0fc3591f52236cf2ce49",
            "messageTitle": "Kill some old names in favour of their corresponding check class",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "c20bcf0b83c422c0943437864d41c3c33e8f4269",
            "messageTitle": "Document how the pragma controls work. Close #2732",
            "messageBody": "",
            "insertions": 112,
            "deletions": 30
          },
          {
            "hash": "e627af0c431a38814b058f5183a18bde6ff7f548",
            "messageTitle": "Fix the doc errors",
            "messageBody": "",
            "insertions": 40,
            "deletions": 39
          },
          {
            "hash": "ad8db4c69bbe33f5d805388383e1f0954fcb4b40",
            "messageTitle": "Fix lint warnings",
            "messageBody": "",
            "insertions": 5,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 42,
        "deletions": 2,
        "date": "2019-02-19",
        "commitResults": [
          {
            "hash": "1ae9fcc6b1f83bad403da4f6cc3e69ddb94d49d4",
            "messageTitle": "Protect against `NonDeducibleTypeHierarchy` when calling semi-private `is_subtype`",
            "messageBody": "`astroid.helpers.is_subtype` raises `NonDeducibleTypeHierarchy` when it cannot infer\nthe base classes of the given types, but that makes sense in its context given that\nthe method is mostly used to inform the inference process about the hierarchy of classes.\nDoesn\u0027t make that much sense for ``pylint`` itself, which is why we\u0027re handling the\nexception here, rather than in ``astroid``\n\nClose PyCQA/astroid#644\n",
            "insertions": 42,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2019-02-20",
        "commitResults": [
          {
            "hash": "8c1116851fadf3f46f9ad2ce7fcbfb5acdf36da3",
            "messageTitle": "Do a new dev release",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 43,
        "deletions": 14,
        "date": "2019-02-27",
        "commitResults": [
          {
            "hash": "2e2fa47dcb719fd1d797a2a73d7461a39078ccd0",
            "messageTitle": "Prepare 2.3.0",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "5747cdc8499ab5a0543eab258caab2741a8d3c4d",
            "messageTitle": "Prepare 2.3, also update the release document for this release",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "eef175ea483be822d9b7ec7cb4c5d89004904e96",
            "messageTitle": "Better phrasing for this release changes",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "b5964519ac4e4a33a1b68567a149ed7fc7674521",
            "messageTitle": "Use safe_infer() when inferring context\u0027s paths to prevent the acceptance tests to fail for distutils",
            "messageBody": "Currently this check fails for distutils because one of the `path` objects is an `ImportFrom`\nthat raises an `InferenceError` when trying to be inferred.\n",
            "insertions": 5,
            "deletions": 3
          },
          {
            "hash": "b22c1d71fde5e62d5ce6ddb043f5f6b360a499b7",
            "messageTitle": "Add note about pushing the tags",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "dbc1df378ccbbfacdcc517b4c5f6fc98bb42f957",
            "messageTitle": "Master is now 2.4",
            "messageBody": "",
            "insertions": 27,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 29,
        "deletions": 2,
        "date": "2019-02-28",
        "commitResults": [
          {
            "hash": "6b1adc668727ebfbd84763b14b65676cc11febec",
            "messageTitle": "Pass `quote\u003dFalse` to `html.escape` in the JSON reporter",
            "messageBody": "Close PyCQA/pylint#2769\n",
            "insertions": 29,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 29,
        "deletions": 17,
        "date": "2019-03-02",
        "commitResults": [
          {
            "hash": "6fe3cbc799ff5ebb282431c22238d1d37b656cdb",
            "messageTitle": "Try automatic deployments for each release tag",
            "messageBody": "",
            "insertions": 9,
            "deletions": 0
          },
          {
            "hash": "01b5dd649f2f84f6e3d5907065db0d7676948bd6",
            "messageTitle": "Update the release process following the Travis autodeployments",
            "messageBody": "",
            "insertions": 9,
            "deletions": 7
          },
          {
            "hash": "55de04f2b01c794d031c5d8090b2b2a2b5a8ba77",
            "messageTitle": "Move the --from-stdin changelog to 2.4",
            "messageBody": "",
            "insertions": 11,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 76,
        "deletions": 12,
        "date": "2019-03-03",
        "commitResults": [
          {
            "hash": "73c5c2fd4d5de0d38bebed7bd3688cb747225f39",
            "messageTitle": "Include the missing __rfloordiv__. Close #2783",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "097227b612d3bac2bed5528b72ccea4309ff5c32",
            "messageTitle": "Added a new check `class-variable-slots-conflict`",
            "messageBody": "This check is emitted when ``pylint`` finds a class variable that conflicts with a slot\nname, which would raise a ``ValueError`` at runtime.\n",
            "insertions": 63,
            "deletions": 12
          },
          {
            "hash": "30a37b1150a2b7dd4b204b1263c2151cefb27ce6",
            "messageTitle": "Add missing check_messages() for visit_classdef in classes checks",
            "messageBody": "",
            "insertions": 12,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 81,
        "deletions": 16,
        "date": "2019-03-05",
        "commitResults": [
          {
            "hash": "21eb3914a3a102a92e970c4779e7708154ef7756",
            "messageTitle": "Split deprecated_methods for Python 3.8 to account for removed methods",
            "messageBody": "",
            "insertions": 63,
            "deletions": 0
          },
          {
            "hash": "18b65c78c187cbb30b1bc73640e693817f34ecb4",
            "messageTitle": "Expose Python 3.8 in tox",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "069749e085a1a89b534044cbb05e519fbd34f509",
            "messageTitle": "Remove another method that\u0027s removed in 3.8",
            "messageBody": "",
            "insertions": 0,
            "deletions": 2
          },
          {
            "hash": "e37bb778c7d8889ced9b83ab8c66efa1608df175",
            "messageTitle": "Add 3.8-dev in Travis",
            "messageBody": "",
            "insertions": 4,
            "deletions": 0
          },
          {
            "hash": "64e39d3e1da57d48d0e2219227db8690b0a05b15",
            "messageTitle": "Also adjust the line numbers",
            "messageBody": "",
            "insertions": 13,
            "deletions": 13
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 3,
        "date": "2019-03-08",
        "commitResults": [
          {
            "hash": "4f25b4e67917b8e9c422e5ee3bb8705ce691a5fc",
            "messageTitle": "Do not add print as a keyword any longer for superfluous-parens. Found in #2801",
            "messageBody": "",
            "insertions": 0,
            "deletions": 2
          },
          {
            "hash": "fb6d44472abf78530e7a75e2ae477dda25024608",
            "messageTitle": "Skip emitting unused-argument for the parameter to process_module()",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 78,
        "deletions": 35,
        "date": "2019-03-11",
        "commitResults": [
          {
            "hash": "00726c8a021df2845b20ae9ea7cb13aabb81438c",
            "messageTitle": "``old-division`` is not emitted for non-Const nodes.",
            "messageBody": "Close #2808\n",
            "insertions": 29,
            "deletions": 0
          },
          {
            "hash": "40e8ef97b13c62e36308185b30c82c808b177c30",
            "messageTitle": "``assigning-non-slot`` not emitted for classes with unknown base classes.",
            "messageBody": "It\u0027s possible to lint classes that don\u0027t have known bases (e.g. one of them\nmight come from a C extension), in which case we cannot make a lot of assumptions\nabout the class layout with respect to `__slots__`. As such, it\u0027s best to ignore\nthese classes from this check.\n\nClose #2807\n",
            "insertions": 49,
            "deletions": 35
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 1,
        "date": "2019-03-19",
        "commitResults": [
          {
            "hash": "095928cceaef476f2e76a64a63cf215ffa782f5c",
            "messageTitle": "Skip `if` expressions from f-strings for the `check_elif` checker",
            "messageBody": "Close #2816\n",
            "insertions": 7,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 45,
        "deletions": 7,
        "date": "2019-03-20",
        "commitResults": [
          {
            "hash": "83d2536a3a38f6f6123bd7e10aabd7eb0e716ba9",
            "messageTitle": "Fix formatting error",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "ec2eb68f8f9bcad56133b59d4c7e584b7db0f646",
            "messageTitle": "Add Tidelift information",
            "messageBody": "",
            "insertions": 43,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 8,
        "date": "2019-03-27",
        "commitResults": [
          {
            "hash": "b20a2984c94e2946669d727dbda78735882bf50a",
            "messageTitle": "Move the preferred construction in open() where it has access to config",
            "messageBody": "",
            "insertions": 6,
            "deletions": 7
          },
          {
            "hash": "8a0574ead7c69c4ddeb2e2f478fe973896ad1121",
            "messageTitle": "Drop the quotes to make the test actually work",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 8,
        "deletions": 2,
        "date": "2019-03-28",
        "commitResults": [
          {
            "hash": "95232ca07a5514f1242c7fb11a7504a24e78192d",
            "messageTitle": "``epylint.py_run`` defaults to ``python`` in case the current executable is not a Python one.",
            "messageBody": "Close #2837\n",
            "insertions": 8,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 22,
        "deletions": 8,
        "date": "2019-03-29",
        "commitResults": [
          {
            "hash": "af7eda4a62a572f055febdee2528eca6e2037ca0",
            "messageTitle": "Support postponed evaluation of annotations for variable annotations.",
            "messageBody": "Close #2838\n",
            "insertions": 16,
            "deletions": 1
          },
          {
            "hash": "a2801fd820a7adc3c67afd21767ae2b022296cb5",
            "messageTitle": "Pin sphinx to the latest and fix the warning it caused",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "0e81b797f8d852da50ec88a73fc9aa320c10a7ac",
            "messageTitle": "Style - Use a single list comprehension instead of a for loop",
            "messageBody": "Co-Authored-By: Pierre-Sassoulas \u003cpierre.sassoulas@gmail.com\u003e\n",
            "insertions": 4,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 34,
        "deletions": 3,
        "date": "2019-04-03",
        "commitResults": [
          {
            "hash": "b4721fb339c4f4f0b4e39a9d0cb3223b523ac0b2",
            "messageTitle": "Better postponed evaluation of annotations handling",
            "messageBody": "Close #2847\n",
            "insertions": 16,
            "deletions": 1
          },
          {
            "hash": "c8db761f5fbe7535115639d578cd46c350d25b47",
            "messageTitle": "Handle more `unnecessary-lambda` cases when dealing with additional kwargs in wrapped calls",
            "messageBody": "Close #2845\n",
            "insertions": 18,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 18,
        "deletions": 13,
        "date": "2019-04-09",
        "commitResults": [
          {
            "hash": "474f4082a91e451929fa629b4d76c06407cfde47",
            "messageTitle": "When we can\u0027t infer bare except handlers, skip ``try-except-raise``",
            "messageBody": "Close #2853\n",
            "insertions": 18,
            "deletions": 13
          }
        ]
      },
      {
        "insertions": 8,
        "deletions": 6,
        "date": "2019-04-11",
        "commitResults": [
          {
            "hash": "f029be7302a3e882e75255b2d9226361bbe53c94",
            "messageTitle": "Fix the typing annotations",
            "messageBody": "",
            "insertions": 8,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 7,
        "date": "2019-04-19",
        "commitResults": [
          {
            "hash": "6f45c7fdad77020eebc3474992c816aea522186e",
            "messageTitle": "Squash a couple of lines into a single one",
            "messageBody": "",
            "insertions": 1,
            "deletions": 5
          },
          {
            "hash": "377e82fdf21c74fe497217bfc97f696b36ead233",
            "messageTitle": "Rename a function to use only lowercase characters",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 14,
        "deletions": 3,
        "date": "2019-04-29",
        "commitResults": [
          {
            "hash": "5f658150ffe257b61ee4240f30bfd1991435d1dd",
            "messageTitle": "Add a what\u0027s new entry for the new extension",
            "messageBody": "",
            "insertions": 12,
            "deletions": 1
          },
          {
            "hash": "2bf5c61a3ff6ae90613b81679de42c0f19aea600",
            "messageTitle": "Flip around the message of broad_try_clause",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 29,
        "deletions": 8,
        "date": "2019-05-19",
        "commitResults": [
          {
            "hash": "b488ce54e30762d81c9a7eb5c43ed904ee91cf2c",
            "messageTitle": "Exclude ``__dict__`` from ``attribute-defined-outside-init``",
            "messageBody": "Close #2909\n",
            "insertions": 14,
            "deletions": 1
          },
          {
            "hash": "c58dfdd557530f396f213eb5777df7a3c61dd08a",
            "messageTitle": "Add test to demonstrate that a recursion error does not happen. Close #2906",
            "messageBody": "",
            "insertions": 14,
            "deletions": 0
          },
          {
            "hash": "edfb78ffbcdcca2bf0351ab77d56f0465c52fdbf",
            "messageTitle": "Pass the line number for bad-inline-option instead of passing the actual line",
            "messageBody": "Close #2904\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "fc569a61d79a13fb237e472c5e95ee45bbac6707",
            "messageTitle": "Remove inadvertent change",
            "messageBody": "",
            "insertions": 0,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 217,
        "deletions": 110,
        "date": "2019-05-20",
        "commitResults": [
          {
            "hash": "36f206b5856d384c1531a41a7c73099859b99e71",
            "messageTitle": "tox stopped installing the latest pip resulting in various errors accross AppVeyor",
            "messageBody": "",
            "insertions": 1,
            "deletions": 2
          },
          {
            "hash": "50a670b1eee2a28c771daceeb169a0db4805ddae",
            "messageTitle": "Expect only certain errors from self regression tests",
            "messageBody": "These changes should fix a couple of failing tests when running the suite\nwith pytest instead of tox. The reason for those failures was that pylint was\nreusing the config file from the root directory and some of its messages\nare disabled there.\nClose #2819\n",
            "insertions": 13,
            "deletions": 5
          },
          {
            "hash": "07d5e37b9d2bded9eb98e47dacd1feff6af0188a",
            "messageTitle": "Support fully qualified typing imports for type annotations.",
            "messageBody": "Close #2915\n",
            "insertions": 108,
            "deletions": 13
          },
          {
            "hash": "2c403bbf00a52a7821a7e19cfae1f9c4f092d7da",
            "messageTitle": "Correct infered to inferred",
            "messageBody": "",
            "insertions": 83,
            "deletions": 83
          },
          {
            "hash": "44248e9f67cd066111af139113670f5c315de890",
            "messageTitle": "Syntax errors report the column number.",
            "messageBody": "Close #2914\n",
            "insertions": 10,
            "deletions": 4
          },
          {
            "hash": "ace1877788a574362acda463d519d56a728620c5",
            "messageTitle": "Use the right column number for syntax error on PyPy",
            "messageBody": "",
            "insertions": 2,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 62,
        "deletions": 30,
        "date": "2019-05-21",
        "commitResults": [
          {
            "hash": "47d97c0bf2e7409fbc75645051ad20db2c298cb0",
            "messageTitle": "Add a function to figure out if a node is a property setter and use it accordingly",
            "messageBody": "",
            "insertions": 32,
            "deletions": 24
          },
          {
            "hash": "f9e99fd5f3acaf2d836c7a3456f7538611cd4167",
            "messageTitle": "Don\u0027t emit ``attribute-defined-outside-init`` for variables defined in setters.",
            "messageBody": "Close #409\n",
            "insertions": 30,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 90,
        "deletions": 145,
        "date": "2019-05-22",
        "commitResults": [
          {
            "hash": "6b0003da63d30d0f345f24380c340b064713597f",
            "messageTitle": "Fix a bunch of linting errors from the codebase",
            "messageBody": "",
            "insertions": 77,
            "deletions": 131
          },
          {
            "hash": "0a6f65960988ac7c88b166a66e1c548b04d0fbf5",
            "messageTitle": "Use explicit astroid imports where implicit ones were being used",
            "messageBody": "",
            "insertions": 8,
            "deletions": 8
          },
          {
            "hash": "3dd27c907b1230f889d0c010de51a99e9291a60f",
            "messageTitle": "Protect against non-Const nodes in is_complex_format_str",
            "messageBody": "",
            "insertions": 5,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 52,
        "deletions": 11,
        "date": "2019-05-23",
        "commitResults": [
          {
            "hash": "f4fc3a1bbcb58a2f4d110e9bbc76d57f29172ada",
            "messageTitle": "``assignment-from-no-return`` not triggered for async methods.",
            "messageBody": "Close #2902\n",
            "insertions": 19,
            "deletions": 2
          },
          {
            "hash": "b657df6644740e77fa167d4f95c76c4c007d2a49",
            "messageTitle": "Mention the name of the new signature-mutators option",
            "messageBody": "",
            "insertions": 12,
            "deletions": 6
          },
          {
            "hash": "3bfec9f63b53abd11131c164c4fa941ee1743286",
            "messageTitle": "``unused-import`` emitted for the right import names in function scopes.",
            "messageBody": "Close #2928\n",
            "insertions": 20,
            "deletions": 3
          },
          {
            "hash": "a9cb1c740a9f3d570bc90b42d1d3015aee95712c",
            "messageTitle": "Disable too-many-branches for complex function",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 6,
        "date": "2019-05-29",
        "commitResults": [
          {
            "hash": "ebd0e206f06b8caa87efdb3ce968da5b7ddac1c0",
            "messageTitle": "Replace the modname and distname to the actual name of the package",
            "messageBody": "",
            "insertions": 2,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 20,
        "deletions": 0,
        "date": "2019-05-30",
        "commitResults": [
          {
            "hash": "1daefad7fa09092778c79af9b519e72e2024d6ab",
            "messageTitle": "Add test to prove that issue is fixed. Close #2939",
            "messageBody": "",
            "insertions": 17,
            "deletions": 0
          },
          {
            "hash": "7cc9da97285deb3b0213c9f2b403ae21f7b5c5c2",
            "messageTitle": "Allow bytes to be interpreted correctly for logging-too-many-args check",
            "messageBody": "The code was assuming that a string will be passed, not bytes, which resulted\nin a false positive.\n\nClose #2938\n",
            "insertions": 3,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 38,
        "deletions": 19,
        "date": "2019-06-01",
        "commitResults": [
          {
            "hash": "8d7a02784dfc3eb533b44779cc87b6f90aa47236",
            "messageTitle": "Only unpack the proxied function for bound methods with unbound methods",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "8f8587edff4d30c1437c5ea664bcf52f5715ad01",
            "messageTitle": "Remove an occurrence of a check that no longer exists. Close #2931",
            "messageBody": "",
            "insertions": 0,
            "deletions": 3
          },
          {
            "hash": "d14440fe280a25439c76e53455b4831e04c4bb17",
            "messageTitle": "Now that we support IfExp inference, address a test",
            "messageBody": "",
            "insertions": 15,
            "deletions": 15
          },
          {
            "hash": "a0a178cab6b7c823ca0aba2307723e7abe6ab516",
            "messageTitle": "Add test for fixed issue. Close #2937",
            "messageBody": "",
            "insertions": 20,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 30,
        "deletions": 0,
        "date": "2019-06-02",
        "commitResults": [
          {
            "hash": "e3d4e80ca9be6b61d7c9773f8a20661a52fa9ed9",
            "messageTitle": "Add test for regression. Close #2443",
            "messageBody": "",
            "insertions": 30,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2019-06-04",
        "commitResults": [
          {
            "hash": "5af3758ae0e7377bf8ddde5347f5f456657db6ce",
            "messageTitle": "Use Sequence from collections.abc",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 52,
        "deletions": 31,
        "date": "2019-06-20",
        "commitResults": [
          {
            "hash": "8582756731c83142dc8c387de2026edc9bd4969f",
            "messageTitle": "Ignore ``consider-using-dict-comprehension`` for constructions that can\u0027t be converted to a comprehension",
            "messageBody": "Close #2963\n",
            "insertions": 17,
            "deletions": 3
          },
          {
            "hash": "927db96bbd343a61428faa0249fdeec58cfb3ebe",
            "messageTitle": "Dropped support for Python 3.4",
            "messageBody": "It reached EoL a while ago an our typed_ast dependency also stopped working\nfor 3.4. Ideally just use a more recent Python version, which also helps\nus as we don\u0027t have to maintain support for multiple minor versions at once.\n",
            "insertions": 6,
            "deletions": 8
          },
          {
            "hash": "7081d91f30728653000bdfc59ea85a3395f96418",
            "messageTitle": "Drop support for 3.4 in appveyor and use 3.7 instead",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "389b9d24a0362227832162ffada60abed25a0e28",
            "messageTitle": "Bring back Travis stages",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "ee228ddacd003ea40b1eeed64fda5fe96fce4c7c",
            "messageTitle": "Normalize paths to get the self tests working on both Linux and Windows",
            "messageBody": "",
            "insertions": 24,
            "deletions": 16
          }
        ]
      },
      {
        "insertions": 16,
        "deletions": 7,
        "date": "2019-07-06",
        "commitResults": [
          {
            "hash": "02297960ac482c66c89b208b331f863ae8a2d09e",
            "messageTitle": "Excluded `attrs` from `too-few-public-methods` check. Close #2988.",
            "messageBody": "",
            "insertions": 16,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 7,
        "date": "2019-07-07",
        "commitResults": [
          {
            "hash": "f7e218bd2ffdcd32ee80cafc2169ec1f2f037364",
            "messageTitle": "Escape the clean path before normalizing to slashes (#2993)",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "e6cd6e35bae7d19d1264c398dafe21c758fe4747",
            "messageTitle": "Exclude Ellipsis from pointless-statement for Python 3.8",
            "messageBody": "",
            "insertions": 11,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 41,
        "deletions": 16,
        "date": "2019-07-10",
        "commitResults": [
          {
            "hash": "2771e54c422b4dc5931349029a0df357943a4a88",
            "messageTitle": "Take in consideration positional only args for the too-many-* checks",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "3e440d100ca49741d5a5b51325caf912120dd35e",
            "messageTitle": "Register the acceptance marker for pytest",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "6664540e33a790d162d485ca21d5a27ee4c4f606",
            "messageTitle": "Adjust the column numbers for syntax errors",
            "messageBody": "",
            "insertions": 8,
            "deletions": 1
          },
          {
            "hash": "1ce0bbb1bd0deb6cd53a6d6c80f68193ad1817f6",
            "messageTitle": "Excluded PEP 526 instance and class variables from ``no-member``. Close #2945",
            "messageBody": "",
            "insertions": 27,
            "deletions": 0
          },
          {
            "hash": "da376825716459e7afc976fe279d4f57650ca032",
            "messageTitle": "Try with a more generic PyPy version",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "f5cd8584c339b9fa49c6a998b4c54d06dac2b45d",
            "messageTitle": "Remove pypy specific test",
            "messageBody": "",
            "insertions": 0,
            "deletions": 11
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 0,
        "date": "2019-07-11",
        "commitResults": [
          {
            "hash": "f6df51513267072b78b208c3ce2144a1155aa299",
            "messageTitle": "Add test for a recursion error regression. Close #2960",
            "messageBody": "",
            "insertions": 4,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 69,
        "deletions": 2,
        "date": "2019-07-16",
        "commitResults": [
          {
            "hash": "4bcbe9b6a17269279ef95b9aa6182d1d299a3f3d",
            "messageTitle": "Excluded protocol classes from a couple of checks. Close #3002.",
            "messageBody": "",
            "insertions": 37,
            "deletions": 0
          },
          {
            "hash": "0b68f347075190c32d6101c012de7c4cdacae7bf",
            "messageTitle": "Fix linting and typing errors",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "a636569b9cc53279b3b5f4d24b58d9bc739b05d3",
            "messageTitle": "Added a new check, ``property-with-parameters``.",
            "messageBody": "This check is emitted when we detect that a defined property also\nhas parameters, which are useless.\nClose #3006\n",
            "insertions": 30,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 207,
        "deletions": 43,
        "date": "2019-07-17",
        "commitResults": [
          {
            "hash": "26e11c0145756de750499684dd97c2c460aeec9f",
            "messageTitle": "Added a new check, ``self-assigning-variable``",
            "messageBody": "This check is emitted when we detect that a variable is assigned\nto itself, which might indicate a potential bug in the code application.\nClose #2930\n",
            "insertions": 82,
            "deletions": 1
          },
          {
            "hash": "be2389821fb34fce467ae5db98c4f3bd4e327ca1",
            "messageTitle": "Ignore from isort the tests from the root",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "99ce3cdfd3bc1bf2891fd807f97ee3cd1ec26c21",
            "messageTitle": "Ignore lambda calls with variadic arguments without a context.",
            "messageBody": "Inferring variadic positional arguments and keyword arguments\nwill result into empty Tuples and Dicts, which can lead in\nsome cases to false positives with regard to no-value-for-parameter.\nIn order to avoid this, until we\u0027ll have support for call context\npropagation, we\u0027re ignoring such cases if detected.\nWe already did that for function calls, but the previous fix\nwas not taking in consideration ``lambdas``\n\nClose #2918\n",
            "insertions": 63,
            "deletions": 37
          },
          {
            "hash": "4f943ed34540bacb004193b8caa652c7b7b0e030",
            "messageTitle": "Move the self assigning check in a separate function",
            "messageBody": "",
            "insertions": 5,
            "deletions": 3
          },
          {
            "hash": "f38bd0d1b5d2e601d2a6034b3f0d6ee11343e26e",
            "messageTitle": "Added a new check, ``redeclared-assigned-name``",
            "messageBody": "This check is emitted when ``pylint`` detects that a name\nwas assigned one or multiple times in the same assignment,\nwhich indicate a potential bug.\nClose #2898\n",
            "insertions": 56,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 117,
        "deletions": 11,
        "date": "2019-07-18",
        "commitResults": [
          {
            "hash": "558e5b10d14dd81522affc7695dabd36273c5b60",
            "messageTitle": "Added a new check, ``invalid-overridden-method``",
            "messageBody": "This check is emitted when we detect that a method is overridden\nas a property or a property is overridden as a method. This can indicate\na bug in the application code that will trigger a runtime error.\n\nClose #2670\n",
            "insertions": 117,
            "deletions": 11
          }
        ]
      },
      {
        "insertions": 39,
        "deletions": 0,
        "date": "2019-07-19",
        "commitResults": [
          {
            "hash": "d5cfffa29e9008c67fc2352995dcee334fa8d09b",
            "messageTitle": "Add regression test for recursion error that does not happen any longer. Close #2899",
            "messageBody": "",
            "insertions": 9,
            "deletions": 0
          },
          {
            "hash": "be1cb74d9a31d2167c3928fddc1bc6e020977b6e",
            "messageTitle": "Add regression error for recursion crash that does not reproduce. Close #2861",
            "messageBody": "",
            "insertions": 9,
            "deletions": 0
          },
          {
            "hash": "3a70c2ba745862b35f076e7a49c1f6ca93251587",
            "messageTitle": "Add regression test for recursion error that does not happen any longer. Close #2836",
            "messageBody": "",
            "insertions": 18,
            "deletions": 0
          },
          {
            "hash": "fd164c390bd5231127a1514a147a93c04d6e8086",
            "messageTitle": "Add FUNDING.yml for tidelift",
            "messageBody": "",
            "insertions": 3,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 13,
        "deletions": 3,
        "date": "2019-08-09",
        "commitResults": [
          {
            "hash": "a6b1e810df608430b04b65ad1ddc9ba1b8a22c89",
            "messageTitle": "Do not crash when cannot infer the name of an attribute owner. Close #3019",
            "messageBody": "",
            "insertions": 13,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 17,
        "deletions": 4,
        "date": "2019-08-19",
        "commitResults": [
          {
            "hash": "32255df5608bb8b2d5b0bc05bf70712b61f44204",
            "messageTitle": "Adjut the wording to be less opinionated and mention the editable install",
            "messageBody": "",
            "insertions": 17,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 36,
        "deletions": 25,
        "date": "2019-09-10",
        "commitResults": [
          {
            "hash": "ca54a1a87f6382c68287ebc1996312ceb921f16c",
            "messageTitle": "Do not scope the iterating contexts to builtins",
            "messageBody": "This caused issues detecting that `OrderedDict` and similar non-builtin\npredefined iterable consumers where not in fact in an *iterating* context.\n\nClose #3075\n",
            "insertions": 1,
            "deletions": 2
          },
          {
            "hash": "527db314ecc00ad79be083dcca6134bb68c3bb60",
            "messageTitle": "Move a couple of new test files to subdirectories",
            "messageBody": "",
            "insertions": 5,
            "deletions": 7
          },
          {
            "hash": "ae81e3be05735ca8397e77093f76f2f76d436731",
            "messageTitle": "Compare tuples to tuples when annotating tests",
            "messageBody": "",
            "insertions": 30,
            "deletions": 16
          }
        ]
      },
      {
        "insertions": 19,
        "deletions": 10,
        "date": "2019-09-12",
        "commitResults": [
          {
            "hash": "0b947809fc018963fce1745cda89649e6d66d0c7",
            "messageTitle": "Skip lambdas from assignment-from-no-return checks",
            "messageBody": "We were looking for the presence of `decorators` in the analyzed\nfunction node, but `Lambda` node does not have this attribute.\n\nClose #3091\n",
            "insertions": 17,
            "deletions": 9
          },
          {
            "hash": "b758b549a702bf4ed5ff51178eea16a97bab702e",
            "messageTitle": "Disable local error",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "ccea762007ee320fc52d1c3fe26f793329169ab4",
            "messageTitle": "Disable too-many-public-methods for PyLinter",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 29,
        "deletions": 5,
        "date": "2019-09-15",
        "commitResults": [
          {
            "hash": "2a5c1abe2ea2e5add666565b125529dcd33daccc",
            "messageTitle": "Support forward references for ``function-redefined`` check.",
            "messageBody": "Close #2540\n",
            "insertions": 29,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 127,
        "deletions": 720,
        "date": "2019-09-17",
        "commitResults": [
          {
            "hash": "a7f236528bb3758886b97285a56f3f9ce5b13a99",
            "messageTitle": "Handle variables defined only under a type checking clause",
            "messageBody": "These kind of variables will cause a runtime error, since the variable\nwill not be defined, unless we use the `annotations` future.\n\nClose #3081\n",
            "insertions": 17,
            "deletions": 0
          },
          {
            "hash": "344f6859e9d584309f57d142259fad77a17d11ee",
            "messageTitle": "Handle redefinitions in case of type checking imports.",
            "messageBody": "Close #2834\n",
            "insertions": 35,
            "deletions": 0
          },
          {
            "hash": "0a90b4a0b369d75a3e2aee9a4ad57ce264bc18a0",
            "messageTitle": "Removed Python 2 specific checks",
            "messageBody": "Certain checks such as relative-import, invalid-encoded-data and missing-super-argument\nwere removed as they no longer make sense on Python 3.\n",
            "insertions": 24,
            "deletions": 692
          },
          {
            "hash": "1e1c8cfbd2d2420020d5a167b8640169df68fba1",
            "messageTitle": "Protect against the redefinition not being found",
            "messageBody": "",
            "insertions": 13,
            "deletions": 8
          },
          {
            "hash": "ee3e16cf83180e5c96cf884392925d18dc671a05",
            "messageTitle": "Handle ImportFrom for non-top level import checks",
            "messageBody": "",
            "insertions": 12,
            "deletions": 9
          },
          {
            "hash": "e457c455dec28f8d91f4f7c8fdd3e0e7f84ca265",
            "messageTitle": "Rename import exemption option to be different than the check name",
            "messageBody": "",
            "insertions": 9,
            "deletions": 7
          },
          {
            "hash": "0547852854ee657d76005beb4fe52c1fb2e44934",
            "messageTitle": "Handle inference ambiguity for ``invalid-format-index``",
            "messageBody": "Close #2752\n",
            "insertions": 17,
            "deletions": 3
          },
          {
            "hash": "de75ba13eedd6cb6e84a96e0b79765e890c46efe",
            "messageTitle": "Remove unused variable",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 862,
        "deletions": 774,
        "date": "2019-09-23",
        "commitResults": [
          {
            "hash": "d39f7abc50bebd46bec51d4776b622b5176d3420",
            "messageTitle": "Allow signature mutators to be verified against the name as well as qualified name of the decorators",
            "messageBody": "This is to simplify its use in single files, since `qname()` expects the decorator name to be\nfully qualified (but might be a hindrance for single file analysis)\n",
            "insertions": 24,
            "deletions": 2
          },
          {
            "hash": "b49c2817d19636ef8c9ad6e1f2894e7a62c16a76",
            "messageTitle": "Move private functions at the end of the variables checker class to make it more manageable",
            "messageBody": "",
            "insertions": 665,
            "deletions": 662
          },
          {
            "hash": "454c9bab1b40217b6844bede8017de4fcd310978",
            "messageTitle": "Squash VariablesChecker3k into the general checker class",
            "messageBody": "",
            "insertions": 17,
            "deletions": 26
          },
          {
            "hash": "42d2d4bebf2323508186b09e5c6531b8b9b1cc62",
            "messageTitle": "Support typing comments for individual arguments. Close #3112",
            "messageBody": "",
            "insertions": 13,
            "deletions": 0
          },
          {
            "hash": "939f91c886deb989ae4c5e2698c0d0d483e7bfec",
            "messageTitle": "Move closures to separate methods to simplify the check functions",
            "messageBody": "",
            "insertions": 90,
            "deletions": 57
          },
          {
            "hash": "ce2af67d0e96e26c1999e1a53e36cf1460d9d647",
            "messageTitle": "Exempt kwonly arguments when they are annotated from missing-type-doc. Close #3092",
            "messageBody": "",
            "insertions": 21,
            "deletions": 0
          },
          {
            "hash": "4b0395e32062ad2d50f617d778c1b755c7f066bd",
            "messageTitle": "Disable too-many-public-methods for humonguous class",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "79243257dc7e136dbfd6850e9285a01c909687bf",
            "messageTitle": "Document the new arguments for the private methods in docparams",
            "messageBody": "",
            "insertions": 31,
            "deletions": 27
          }
        ]
      },
      {
        "insertions": 100,
        "deletions": 122,
        "date": "2019-09-24",
        "commitResults": [
          {
            "hash": "ab79ac0b53658fff9474d601baac5d6b831e5e5e",
            "messageTitle": "Disable too-few-public-methods for data classes. Close #3025",
            "messageBody": "",
            "insertions": 17,
            "deletions": 3
          },
          {
            "hash": "3e1f61d0df4ded6479c5b109d495b8a1cd2cde31",
            "messageTitle": "Squash multiple checks for special classes into a single function",
            "messageBody": "",
            "insertions": 10,
            "deletions": 51
          },
          {
            "hash": "d23a16e3cb454e6343bc3772c82dca172f3eb6a8",
            "messageTitle": "Add regression test for old-division and floats. Close #3039",
            "messageBody": "",
            "insertions": 10,
            "deletions": 6
          },
          {
            "hash": "d9ed7d1db99d3b5ea84de4937997fae0dc22545f",
            "messageTitle": "Simplify and improve the logic of consider-iterating-dictionary",
            "messageBody": "",
            "insertions": 9,
            "deletions": 4
          },
          {
            "hash": "15209f6642c8f9b2e1e100cdc8272d18f9363df6",
            "messageTitle": "Prepare release",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "6775a008486b6031ea36ff1ba4cf720a3edeb1d3",
            "messageTitle": "use a token for travis releases",
            "messageBody": "",
            "insertions": 50,
            "deletions": 51
          },
          {
            "hash": "fce8bff8acc8dfa625529bde5c28691d94fad51e",
            "messageTitle": "Try again to do a release",
            "messageBody": "",
            "insertions": 1,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 119,
        "deletions": 52,
        "date": "2019-09-25",
        "commitResults": [
          {
            "hash": "2fa5d435df32ff363596de6e0285c13264e4ba30",
            "messageTitle": "Exempt type checking definitions inside the type check guard",
            "messageBody": "In a7f236528bb3758886b97285a56f3f9ce5b13a99 we added basic support\nfor emitting `used-before-assignment` if a variable was only defined\ninside a type checking guard (using `TYPE_CHECKING` variable from `typing`)\nUnfortunately that missed the case of using those type checking imports\ninside the guard itself, which triggered spurious used-before-assignment errors.\n\nClose #3119\n",
            "insertions": 11,
            "deletions": 1
          },
          {
            "hash": "3159b1744caee14068b4d875bb5adaa5ffbebd44",
            "messageTitle": "Exempt type checking definitions defined in both clauses of a type checking guard",
            "messageBody": "Close #3127\n",
            "insertions": 61,
            "deletions": 33
          },
          {
            "hash": "5d2fbaf76f234ff572e6be84ac1252af2eeea8bb",
            "messageTitle": "Prepare 2.4.1",
            "messageBody": "",
            "insertions": 25,
            "deletions": 1
          },
          {
            "hash": "b74d248704674ae4511ae80428d0d9bb1f765426",
            "messageTitle": "Move files that were in the wrong directory",
            "messageBody": "",
            "insertions": 7,
            "deletions": 7
          },
          {
            "hash": "c9e54946ec9e0074c52b65c18e6fcbac9830c080",
            "messageTitle": "Continue looking for undefined variables in type checking guards. Close #3127",
            "messageBody": "",
            "insertions": 6,
            "deletions": 2
          },
          {
            "hash": "2c9d44eff1cae9ce86b2f2904b02fcff864dcf10",
            "messageTitle": "Fix a bunch of other tests as well",
            "messageBody": "",
            "insertions": 8,
            "deletions": 8
          },
          {
            "hash": "5f8084cfa046b937c6039a1194f935cae82438fb",
            "messageTitle": "Disable error for complex function",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 74,
        "deletions": 16,
        "date": "2019-09-26",
        "commitResults": [
          {
            "hash": "4d0fbec72d5c55591a9c35fa7a1bfdaa03be0e61",
            "messageTitle": "``ignored-modules`` can skip submodules. Close #3135",
            "messageBody": "",
            "insertions": 49,
            "deletions": 10
          },
          {
            "hash": "d8fae0124b60abb40d833e78fb32fe355143889b",
            "messageTitle": "``self-assigning-variable`` skips class level assignments.",
            "messageBody": "Close #2930\n",
            "insertions": 19,
            "deletions": 0
          },
          {
            "hash": "fde732e0e9a4f224c5ae48ad942c6d955aa0a8e6",
            "messageTitle": "Bump master to 2.4.2",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "277774397023211bf89ca58a2c92a6c7b8fb39fb",
            "messageTitle": "Rename attributes to prepare for the astroid dataclass transform",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "ae3d4211175e27c6e45d4f67e764425655d7e18e",
            "messageTitle": "Pin astroid to the latest minor release",
            "messageBody": "This will require a lock step release and update for pylint and astroid\nbut should minimize the errors that result from an updated astroid\nversion that has backwards incompatible issues.\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 64,
        "deletions": 11,
        "date": "2019-09-30",
        "commitResults": [
          {
            "hash": "1d3b07a7280a1aad5eed1e937b8161113d1f049e",
            "messageTitle": "``consider-using-sys-exit`` is exempted when `exit()` is imported from `sys`",
            "messageBody": "Close #3145\n",
            "insertions": 18,
            "deletions": 1
          },
          {
            "hash": "4ec293ce4700bfaca89d01c45e707f40c2913d49",
            "messageTitle": "Exempt annotated assignments without variable from ``class-variable-slots-conflict``",
            "messageBody": "Close #3141\n",
            "insertions": 14,
            "deletions": 1
          },
          {
            "hash": "552fa8a26c5f5f6c7661697bc4c9c835c3b7daa3",
            "messageTitle": "Fix ``utils.is_error`` to account for functions returning early.",
            "messageBody": "This fixes a false negative with ``unused-variable`` which was no longer triggered\nwhen a function raised an exception as the last instruction, but the body of the function\nstill had unused variables.\n\nClose #3028\n",
            "insertions": 23,
            "deletions": 3
          },
          {
            "hash": "aa587eca1ec8a98c42fce6fac6f207bfb9f3a06e",
            "messageTitle": "Add the missing rc file for class_variable_slots_conflict",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "6198797aac41f938dd752620efe04b3e8503e2d1",
            "messageTitle": "Pin mypy and typed-ast to fix the CI",
            "messageBody": "",
            "insertions": 4,
            "deletions": 3
          },
          {
            "hash": "f7850aa8d9403d86e7f6d16a8974736180b043f2",
            "messageTitle": "Prepare 2.4.2",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "47fdef57e6c453ddbd65d4960db20c0e580ee041",
            "messageTitle": "Make master 2.5.X (2.4.X will continue from a different branch)",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 47,
        "deletions": 28,
        "date": "2019-10-09",
        "commitResults": [
          {
            "hash": "3f86141e608afad6b9fb69fcc13b1cf5a8d7eb9f",
            "messageTitle": "Update the Changelog to contain the in flight 2.4.3 as well as 2.5.0",
            "messageBody": "",
            "insertions": 16,
            "deletions": 0
          },
          {
            "hash": "1e05190ef09f6bdb3d4ce8573e2548853df30cdf",
            "messageTitle": "``import-outside-toplevel`` is emitted for ``ImportFrom`` nodes as well.",
            "messageBody": "Close #3175\n",
            "insertions": 31,
            "deletions": 28
          }
        ]
      },
      {
        "insertions": 41,
        "deletions": 8,
        "date": "2019-10-11",
        "commitResults": [
          {
            "hash": "15bae9fb1ed6f3f0f862ad4322ece56e94dcc48e",
            "messageTitle": "Do not emit ``no-method-argument`` for functions using positional only args.",
            "messageBody": "Close #3161\n",
            "insertions": 19,
            "deletions": 2
          },
          {
            "hash": "5dcf377a8bf7552db321e8333fd073f51373e85e",
            "messageTitle": "``consider-using-sys-exit`` is no longer emitted when `exit` is imported in the local scope.",
            "messageBody": "Close #3147\n",
            "insertions": 21,
            "deletions": 5
          },
          {
            "hash": "7606d941b6a5a726fe04580cefad5143891f1f49",
            "messageTitle": "Disable test error that is irrelevant",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 48,
        "deletions": 3,
        "date": "2019-10-16",
        "commitResults": [
          {
            "hash": "462a72dbd2b3e4e2f3ebcaaa1d0706fbc9033a37",
            "messageTitle": "`invalid-overridden-method` takes `abc.abstractproperty` in account",
            "messageBody": "Close #3150\n",
            "insertions": 11,
            "deletions": 2
          },
          {
            "hash": "141873adae38fe5046dd52be161b0ae359731d6d",
            "messageTitle": "A new check ``f-string-without-interpolation`` was added",
            "messageBody": "Close #3190\n",
            "insertions": 37,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 60,
        "deletions": 14,
        "date": "2019-10-17",
        "commitResults": [
          {
            "hash": "3d6ddbe1a85599d27172657807b8273e87ce081d",
            "messageTitle": "Fix formatting error",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "75ae5cc302b7c9b3b8b21d2f2e2b4fc0449eebbd",
            "messageTitle": "``typing.overload`` functions are exempted from ``too-many-function-args``",
            "messageBody": "Close #3170\n",
            "insertions": 58,
            "deletions": 12
          },
          {
            "hash": "662c9e46722f2ffd3d6607f1222071e0bad1e03d",
            "messageTitle": "Disable too-many-locals for complex function",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 38,
        "deletions": 3,
        "date": "2019-10-18",
        "commitResults": [
          {
            "hash": "ef0fc878b3227aacc140ef7c7ad3a194f5c6b6f9",
            "messageTitle": "Add a couple of regression tests for the recursion errors we\u0027ve been having",
            "messageBody": "",
            "insertions": 33,
            "deletions": 0
          },
          {
            "hash": "43aa78cdbd96312b259a0b455e534e92348c080a",
            "messageTitle": "Disable too-few-public-methods",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "7d6646b15686db1c97b1d3c727427b9a71ec293c",
            "messageTitle": "Prepare 2.4.3",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "86d281103cfac49f7ca9df7c4b23baf70ac8d439",
            "messageTitle": "Add release version for 2.4.3",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 32,
        "deletions": 23,
        "date": "2019-10-30",
        "commitResults": [
          {
            "hash": "f77e9452ea18cc212f79e6f9e8cb9b87b3441600",
            "messageTitle": "Catch invalid MRO constructs when ignoring method-hidden",
            "messageBody": "",
            "insertions": 9,
            "deletions": 5
          },
          {
            "hash": "a25d8df2ac12f040baf73c4ff40fa6b34dc39f97",
            "messageTitle": "Move the set construction for _infer_if_relevant_attr at the class level",
            "messageBody": "",
            "insertions": 5,
            "deletions": 4
          },
          {
            "hash": "42def1b14d0f93ad284960b26d99639e4a761be4",
            "messageTitle": "Return early in visit_class to get rid of a too many branches",
            "messageBody": "",
            "insertions": 17,
            "deletions": 14
          },
          {
            "hash": "dd310604896cdec52a4c1ae61cf32505fa022fef",
            "messageTitle": "Include BinaryIO in the list of typing imports",
            "messageBody": "Close #3217\n",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 2,
        "date": "2019-11-06",
        "commitResults": [
          {
            "hash": "c65cce470bab44da21ac9e04d4ad130ce301781f",
            "messageTitle": "The ``json`` reporter no longer bypasses ``redirect_stdout``. Close #3227",
            "messageBody": "",
            "insertions": 4,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 184,
        "deletions": 64,
        "date": "2019-11-08",
        "commitResults": [
          {
            "hash": "d00e191eb1a88501519f0c6afe16f6150743afda",
            "messageTitle": "Reverse the order of positional args check in _check_first_arg_for_type",
            "messageBody": "Because the positional only arguments can appear before the normal positional\nor keyword arguments, we need to first check the positional only ones for\nthe purpose of bad-mcs-* and similar methods.\n\nClose #3230\n",
            "insertions": 24,
            "deletions": 3
          },
          {
            "hash": "4e21e45f91ad90b36554f0a0073e3ff3991c0c01",
            "messageTitle": "Exempt all the names found in type annotations from ``unused-import``",
            "messageBody": "The previous code was assuming that only ``typing`` names need to be\nexempted, but we need to do that for the rest of the type comment\nnames as well.\n\nClose #3112\n",
            "insertions": 20,
            "deletions": 1
          },
          {
            "hash": "b63a385a5d8f287aaa2e209d199e4997baf962ea",
            "messageTitle": "``Ellipsis` is exempted from ``multiple-statements`` for function overloads.",
            "messageBody": "Close #3224\n",
            "insertions": 37,
            "deletions": 1
          },
          {
            "hash": "2a9a372c6cc2cf50bb22a7e7a8c632a62ea1e998",
            "messageTitle": "Use explicit check_messages arguments in strings checker",
            "messageBody": "",
            "insertions": 16,
            "deletions": 4
          },
          {
            "hash": "248da9f688497d8999c57a7437d213e1cb06b2b8",
            "messageTitle": "Allow implicit-str-concat-in-sequence to be emitted for string juxtaposition",
            "messageBody": "This check was initially designed for collections, but it can work for\nassignments as well, where the value of the assignment is a string\ncreated via juxtaposition.\nString-concatenation-by-juxtaposition is a language misfeature that\nviolates referential transparency, so pylint should and could catch that.\n\nClose #3030\n",
            "insertions": 45,
            "deletions": 30
          },
          {
            "hash": "09cd08c9d4e235fbdc7aa16f9cdbc020981ada06",
            "messageTitle": "Rename implicit-string-concat-in-sequence to implicit-string-concat",
            "messageBody": "",
            "insertions": 23,
            "deletions": 22
          },
          {
            "hash": "3422e4adc718c60a467d66ab0dedf4a7032c4fc5",
            "messageTitle": "No longer emit ``invalid-name`` for non-constants found at module level.",
            "messageBody": "Pylint was taking the following statement from PEP-8 too far, considering\nall module level variables as constants, which is not what the statement is saying:\n\n`Constants are usually defined on a module level and written in\nall capital letters with underscores separating words.`\n\nClose #3111\nClose #3132\n",
            "insertions": 19,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 32,
        "deletions": 22,
        "date": "2019-11-13",
        "commitResults": [
          {
            "hash": "16cb696cba36ae4f8710e7a40ee48f07abbe976c",
            "messageTitle": "Relax astroid versions for pylint 2.5",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "11c190894d09aa92fd135f551e10ebf656bd6f52",
            "messageTitle": "Relax type import detection for names that do not come from the ``typing`` module",
            "messageBody": "Close #3191\n",
            "insertions": 11,
            "deletions": 5
          },
          {
            "hash": "aa03cb7ce1209267c1f71e53a1095f9549bdc746",
            "messageTitle": "Prepare 2.4.4",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "c9cf63ebaa671a34b7d9947eebd1d0da904dbcb0",
            "messageTitle": "Transform a runtime assertion into a check",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "02688062140cc7ffa9c4f1a1f04c13d6f198a400",
            "messageTitle": "Do not exempt bare except from ``undefined-variable`` and similar checks",
            "messageBody": "If a node was wrapped in a ``TryExcept``, ``pylint`` was taking a hint\nfrom the except handler when deciding to emit or not a message.\nWe were treating bare except as a fully fledged ignore but only\nthe corresponding exceptions should be handled that way (e.g. ``NameError`` or ``ImportError``)\n\nClose #3235\n",
            "insertions": 17,
            "deletions": 14
          }
        ]
      },
      {
        "insertions": 26,
        "deletions": 13,
        "date": "2019-11-14",
        "commitResults": [
          {
            "hash": "a8f8b0245c8061e675cea8dcfa7140ca781893a5",
            "messageTitle": "Move changelog entry to the right section",
            "messageBody": "",
            "insertions": 6,
            "deletions": 10
          },
          {
            "hash": "333e4c137dcb20f89071698beb9220b21176f97a",
            "messageTitle": "Allow import aliases to exempt ``import-error`` when used in type annotations.",
            "messageBody": "Close #3178\n",
            "insertions": 18,
            "deletions": 3
          },
          {
            "hash": "b17d6bd537717375b21633478df499bb29741160",
            "messageTitle": "Fix a failed test caused by improvements to posonlyargs support",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 32,
        "deletions": 2,
        "date": "2019-11-17",
        "commitResults": [
          {
            "hash": "7253bd0fb80783fb884a01271ba0ee3a183d43fd",
            "messageTitle": "No longer emit ``assignment-from-no-return`` when a function only raises an exception",
            "messageBody": "Close #3218\n",
            "insertions": 31,
            "deletions": 1
          },
          {
            "hash": "fe995076717a9098e73e88d3da3e00acc7f96ce6",
            "messageTitle": "Disable error that was uncovered by recent astroid change",
            "messageBody": "The error does not make any sense and it is a false positive that\nreproduces only when the entire test suite is executed.\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 1,
        "date": "2019-11-18",
        "commitResults": [
          {
            "hash": "499c31f0591f3d24c9b19532bb4d7dc253be531f",
            "messageTitle": "Fix the test suite failures on PyPy",
            "messageBody": "",
            "insertions": 6,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 83,
        "deletions": 26,
        "date": "2019-11-21",
        "commitResults": [
          {
            "hash": "ca6a644ffb67ae5867424507afdc4d64dd0c3136",
            "messageTitle": "Remove pylint/utils.py from the documentation build since it is not needed",
            "messageBody": "",
            "insertions": 0,
            "deletions": 2
          },
          {
            "hash": "42c6fa232e24ab28891e63541f6f832a703a770d",
            "messageTitle": "Fixed an ``AttributeError`` caused by improper handling of ``dataclasses`` inference in ``pyreverse``",
            "messageBody": "Close #3256\n",
            "insertions": 34,
            "deletions": 3
          },
          {
            "hash": "722de4836b475d082816164a55d6998bdb2370df",
            "messageTitle": "Improve the testing around the new --fail-under flag",
            "messageBody": "",
            "insertions": 49,
            "deletions": 20
          },
          {
            "hash": "114298dccd13e72fe4733034e07ae0f2bf3aaeda",
            "messageTitle": "Remove unintentional debug statement",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 53,
        "deletions": 20,
        "date": "2019-11-27",
        "commitResults": [
          {
            "hash": "01dfa522195d79217c43065d3d013e2ee31d47b7",
            "messageTitle": "``safe_infer`` can infer a value as long as all the paths share the same type.",
            "messageBody": "This permits finding more errors for functions whose return values use the\nsame type. Until now we were stopping after the first inference result if we\ndetected that a node value had multiple possible results.\n\nClose #2503\n",
            "insertions": 40,
            "deletions": 8
          },
          {
            "hash": "04e72bc0f91c7085bfb2922bdf9afffde1286dff",
            "messageTitle": "Add the new protocol checks to the documentation",
            "messageBody": "",
            "insertions": 13,
            "deletions": 12
          }
        ]
      },
      {
        "insertions": 104,
        "deletions": 6,
        "date": "2019-12-04",
        "commitResults": [
          {
            "hash": "f0fc81220e95aa08828ddbec9f80274d62ef0dba",
            "messageTitle": "Fix a false positive caused by the newly added support for properties",
            "messageBody": "",
            "insertions": 9,
            "deletions": 6
          },
          {
            "hash": "2f1c979daf69b8374ba2a7515e4beef497a5baee",
            "messageTitle": "Add regression test for property accessors. Close #2641",
            "messageBody": "",
            "insertions": 40,
            "deletions": 0
          },
          {
            "hash": "1688894fe0f4ff258278a25f53ee67295bd4f657",
            "messageTitle": "Add regression test for overriding slots with property. Close #2439",
            "messageBody": "",
            "insertions": 22,
            "deletions": 0
          },
          {
            "hash": "4b31fc53a65aa2a97e7ca37309b689ca13c09b0b",
            "messageTitle": "Add regression test for no-member of properties. Close #870",
            "messageBody": "",
            "insertions": 15,
            "deletions": 0
          },
          {
            "hash": "1e84b02c9eedf051db556df8e4966800a8c6d841",
            "messageTitle": "Add regression test for no-member of properties. Close #844",
            "messageBody": "",
            "insertions": 18,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 26,
        "deletions": 3,
        "date": "2019-12-15",
        "commitResults": [
          {
            "hash": "ce82018b8618072bf347c78d243678a4583cc05f",
            "messageTitle": "Add regression test for property no-member error",
            "messageBody": "Close #3269\n",
            "insertions": 23,
            "deletions": 0
          },
          {
            "hash": "88c8ee4cb76427ecba701105417e0bfa75817878",
            "messageTitle": "Pin coverage to \u003c5 to account for the private coverage format changing",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 47,
        "deletions": 1,
        "date": "2019-12-16",
        "commitResults": [
          {
            "hash": "e63e664edaa7775da07fb3cc1209e2d904b8adf1",
            "messageTitle": "``missing-*-docstring`` can look for ``__doc__`` assignments.",
            "messageBody": "Close #3301\n",
            "insertions": 26,
            "deletions": 0
          },
          {
            "hash": "58b9e6421b2246597c97c75640ee6337460cb0ba",
            "messageTitle": "``undefined-variable`` can now find undefined loop iterables",
            "messageBody": "Close #498\n",
            "insertions": 21,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 1,
        "date": "2020-01-04",
        "commitResults": [
          {
            "hash": "21f25ccafe87195318f2eff20b65e5be33a0ac6d",
            "messageTitle": "Fix formatting error",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 8,
        "deletions": 7,
        "date": "2020-01-05",
        "commitResults": [
          {
            "hash": "bd6aa15de9f9b9ad848ccbc49fef06011cb95e1e",
            "messageTitle": "Mark --rcfile as a command since it cannot used in the configuration file. Found in #3329",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "e7e627515135493450712313364cf3fcce325afb",
            "messageTitle": "Compile the regular expressions at module time",
            "messageBody": "",
            "insertions": 6,
            "deletions": 6
          }
        ]
      }
    ],
    "Gabriel R Sezefredo": [
      {
        "insertions": 19,
        "deletions": 9,
        "date": "2019-10-16",
        "commitResults": [
          {
            "hash": "89d29d70aa6821eff9ef7cd4aa4cc03b61e5634c",
            "messageTitle": "Fixes \"exception-escape\" false positive with generators (#3128) (#3182)",
            "messageBody": "As reported on #3128, there is a bug when the handler bound object is being used inside a generator causing a false positive. This was due to the way we were identifying if the object was \"inside\" its handler or not. In the previous implementation we would visit the node parents until we reached the object scope (in the generator case, the scope of the node is the generator, not the handler), while this change continues to go up the parent stack until it reaches its parent handler, or, if it\u0027s not inside its handler, it reaches the module\u0027s parent (None).\r\n\r\nObject is considered inside its handler if it reaches it by going up in the parent chain. It\u0027s considered outside its handler if it reaches None.\r\n\r\nSigned-off-by: Gabriel R Sezefredo \u003cg@briel.dev\u003e",
            "insertions": 19,
            "deletions": 9
          }
        ]
      }
    ],
    "Yannack": [
      {
        "insertions": 49,
        "deletions": 7,
        "date": "2016-06-20",
        "commitResults": [
          {
            "hash": "77bec5413c1d4646294b3d9ce85342e226193b62",
            "messageTitle": "Made list of property-like decorators configurable. (#942)",
            "messageBody": "Made list of property-like decorators configurable.\r\n\r\nThis makes it possible to configure pylint to accept custom decorators similar to @property without the need to explicitly add a pylint directive #pylint disable\u003dinvalid-name",
            "insertions": 49,
            "deletions": 7
          }
        ]
      }
    ],
    "David Douard": [
      {
        "insertions": 371,
        "deletions": 370,
        "date": "2013-06-17",
        "commitResults": [
          {
            "hash": "f1786ae74b5f22913c00e80deaacd7870f5e3d7e",
            "messageTitle": "astng has been renamed astroid",
            "messageBody": "",
            "insertions": 371,
            "deletions": 370
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 3,
        "date": "2014-01-10",
        "commitResults": [
          {
            "hash": "bb7fe70cd6d15b7cec49d9097e86c8083afaf359",
            "messageTitle": "[doc] update version",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2019-03-04",
        "commitResults": [
          {
            "hash": "06b95515290bddba9765d9cfa11b6c9f03ec88d8",
            "messageTitle": "Update the README\u0027s testing section (#2785)",
            "messageBody": "use a decent python version as tox cmd line example.",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 740,
        "deletions": 141,
        "date": "2019-03-05",
        "commitResults": [
          {
            "hash": "a8e0f134796959ab08f029efe4de3a5843b5774c",
            "messageTitle": "Kill old and deprecated debian.sid directory (#2787)",
            "messageBody": "",
            "insertions": 0,
            "deletions": 111
          },
          {
            "hash": "0ec1f532e96cad94efd02d18c030137bd7018cfa",
            "messageTitle": "Relicense the logo as CC-BY-SA-4.0 (#2786)",
            "messageBody": "and add the original svg file as well.",
            "insertions": 740,
            "deletions": 30
          }
        ]
      }
    ],
    "LCD 47": [
      {
        "insertions": 8,
        "deletions": 4,
        "date": "2014-10-10",
        "commitResults": [
          {
            "hash": "f6607f7f69ac23a46961f90f5459b41a6068b5c0",
            "messageTitle": "Fix expansion of {path} in --msg-template.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 4
          },
          {
            "hash": "1625e73cac5728a555c1b7004decaa83129d2787",
            "messageTitle": "Add Changelog.  Fix tests.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 0
          }
        ]
      }
    ],
    "Ben Green": [
      {
        "insertions": 76,
        "deletions": 2,
        "date": "2018-05-15",
        "commitResults": [
          {
            "hash": "5bc4529031350397665629cdafe7172c422ab32f",
            "messageTitle": "Add check for unhashable dict keys (fixes #586) (#2089)",
            "messageBody": "",
            "insertions": 45,
            "deletions": 2
          },
          {
            "hash": "64c4d9c006a9b03414d4ac34e17aeffd3f8903cd",
            "messageTitle": "Don\u0027t emit \u0027useless-super-delegation\u0027 if annotations are different",
            "messageBody": "Fixes #1923\r\n",
            "insertions": 31,
            "deletions": 0
          }
        ]
      }
    ],
    "Moises Lopez - https://www.vauxoo.com/": [
      {
        "insertions": 55,
        "deletions": 3,
        "date": "2016-04-26",
        "commitResults": [
          {
            "hash": "2b9afbb95722ef3b76c0649c01a2d8066f812327",
            "messageTitle": "[ADD] coverage: Enable coveralls and coverage report (#873)",
            "messageBody": "Enable coverage report for coveralls",
            "insertions": 55,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 61,
        "deletions": 31,
        "date": "2016-04-30",
        "commitResults": [
          {
            "hash": "9812c5a49ae430945e9ad5dde7ec523904498805",
            "messageTitle": " [REF] import-checkers: Use of isort (#879)",
            "messageBody": "Use the isort library for wrong-import-order checker.",
            "insertions": 61,
            "deletions": 31
          }
        ]
      },
      {
        "insertions": 41,
        "deletions": 5,
        "date": "2016-05-05",
        "commitResults": [
          {
            "hash": "1e3f5bf194f2e4062fae65d59546d178cb613c7f",
            "messageTitle": "Detect local imports correctly for wrong-import-order (#888)",
            "messageBody": "Detect local imports correctly for wrong-import-order\r\n\r\nThe value node.modname for `from . import package` or `from .package import Class`\r\nreturns `package` But isort needs `.package` to detect a local import.",
            "insertions": 41,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 441,
        "deletions": 1,
        "date": "2016-05-09",
        "commitResults": [
          {
            "hash": "f34aac1b83889bdae058a447abbd2bd9a7c1996e",
            "messageTitle": "Add check for mccabe complexity cyclomatic threshold (#877)",
            "messageBody": "Add extension for checking mccabe complexity\r\n",
            "insertions": 441,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 16,
        "deletions": 0,
        "date": "2016-05-15",
        "commitResults": [
          {
            "hash": "671f734731aba87ba350f1b376ef066ba5953d41",
            "messageTitle": "Add standard folder .github to add github templates (#902)",
            "messageBody": "",
            "insertions": 16,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 0,
        "date": "2016-05-17",
        "commitResults": [
          {
            "hash": "31dfdde186612a6e4212db09d0a69e8aaf369451",
            "messageTitle": "Add pypi badge (#907)",
            "messageBody": "",
            "insertions": 4,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 146,
        "deletions": 19,
        "date": "2016-05-24",
        "commitResults": [
          {
            "hash": "87e1f531c8b7e18f7e21624bb1c70a75d0e096c1",
            "messageTitle": "wrong-import-position, wrong-import-order: Skip try-import cases and nested imports (#906)",
            "messageBody": "",
            "insertions": 146,
            "deletions": 19
          }
        ]
      },
      {
        "insertions": 11,
        "deletions": 1,
        "date": "2016-06-26",
        "commitResults": [
          {
            "hash": "f36ed233e697799061128ae10469282cd5836a4b",
            "messageTitle": "Add deprecated-module to check_messages list for visit_import. Closes #954",
            "messageBody": "",
            "insertions": 11,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 22,
        "deletions": 3,
        "date": "2016-06-30",
        "commitResults": [
          {
            "hash": "6649eedcb80047b8777a8dadc75581c44c4d3c01",
            "messageTitle": "Support PEP 8\u0027s modules level dunder names.",
            "messageBody": "Support PEP 8\u0027s modules level dunder names.\r\n\r\nThis also renames the visit method for computing the first non import node, in order to avoid confusions.\r\n\r\nCloses #965",
            "insertions": 22,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 14,
        "deletions": 0,
        "date": "2016-07-17",
        "commitResults": [
          {
            "hash": "ad43689aed84accf51223443acbd9ded1900576a",
            "messageTitle": "Do not check for useless-super-delegation if the function is decorated",
            "messageBody": "",
            "insertions": 14,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 65,
        "deletions": 2,
        "date": "2016-08-22",
        "commitResults": [
          {
            "hash": "bd4d65ec0c142ddd4a6fc3ac348ff4f59ba845ca",
            "messageTitle": "Support having plugins with options, sharing the same name",
            "messageBody": "We do support plugins that have the same name, but when both of them are adding options that can be used, pylint crashes, since it already processed the options of the first plugin, introducing the plugin section in the configuration. The patch verifies that an option group already exists and if so, it does not add the same section twice, thus avoiding the duplicate section error.",
            "insertions": 65,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 19,
        "deletions": 3,
        "date": "2016-08-30",
        "commitResults": [
          {
            "hash": "23e5530ea8c3b8146302755dc02ee3db0a8b26ed",
            "messageTitle": "Sort configuration options in sections (#1090)",
            "messageBody": "Closes #1087",
            "insertions": 19,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 27,
        "deletions": 3,
        "date": "2016-09-25",
        "commitResults": [
          {
            "hash": "e14a722db9bf81c626fe5ee5ed2251e0935cb9be",
            "messageTitle": "Add compatibility with old versions of setuptools (#1107)",
            "messageBody": "Environment markers can be used only in recent versions of\r\nsetuptools. Instead of relying on extras_require, we are falling back to\r\ninstall_requires when we detect an incompatibility between the installed\r\nsetuptools version and what pylint expects.",
            "insertions": 27,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 1,
        "date": "2016-12-27",
        "commitResults": [
          {
            "hash": "bbc746c2f2613867612bb5fe9a85542b0b28751a",
            "messageTitle": "Check the number of elements before attempting to unpack them",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 0,
        "date": "2017-03-01",
        "commitResults": [
          {
            "hash": "56daa5c3a0d2d6592c673c2932c354b68679997f",
            "messageTitle": "Use a lru_cache for unimplemented_abstract_methods and safe_infer",
            "messageBody": "This change should speed up Pylint a bit.",
            "insertions": 7,
            "deletions": 0
          }
        ]
      }
    ],
    "Danny Hermes": [
      {
        "insertions": 23,
        "deletions": 1,
        "date": "2019-08-16",
        "commitResults": [
          {
            "hash": "7100b3949fbf8bf76549876ff8e1f296bc13eed7",
            "messageTitle": "Allow a `.` as a prefix for Sphinx name resolution. (#3058)",
            "messageBody": "For context see https://github.com/PyCQA/pylint/issues/1502#issuecomment-448535694\r\n\r\nIn this issue it was agreed that `re.error`, `~re.error` and `!re.error` would all be accepted. However, it\u0027s also common in Sphinx to use a `.` prefix for local references.\r\n",
            "insertions": 23,
            "deletions": 1
          }
        ]
      }
    ],
    "Hugues Bruant": [
      {
        "insertions": 26,
        "deletions": 2,
        "date": "2019-10-30",
        "commitResults": [
          {
            "hash": "618af398c9b52a934cdd45fc407007e59c65bcad",
            "messageTitle": "Speedup py3k mode",
            "messageBody": "Avoid costly inference in visit_call and visit_attribute\nwhen the attribute name is one that cannot possibly trigger\na message.\n\nThis typically leads to a 30-50% speedup when running pylint\nin python3 porting mode on most codebases.\n\nBenchmark results on pylint\u0027s own code, on a 2018 macbook pro,\nwith python 3.6.8, using `hyperfine`.\n\npylint-2.4.2\n```\n  Time (mean ± σ):     10.071 s ±  1.136 s    [User: 9.724 s, System: 0.246 s]\n  Range (min … max):    9.352 s … 12.015 s    5 runs\n```\n\npylint-2.4.2 + this patch\n```\n  Time (mean ± σ):      6.282 s ±  0.046 s    [User: 6.099 s, System: 0.155 s]\n  Range (min … max):    6.232 s …  6.327 s    5 runs\n```\n",
            "insertions": 26,
            "deletions": 2
          }
        ]
      }
    ],
    "Steven M. Vascellaro": [
      {
        "insertions": 6,
        "deletions": 6,
        "date": "2018-07-03",
        "commitResults": [
          {
            "hash": "66f3f3d34959a6b63d5cdb950e1fcbde6c34a053",
            "messageTitle": "Add docstrings for naming style classes (#2245)",
            "messageBody": "Add docstrings for SnakeCaseStyle, CamelCaseStyle, PascalCaseStyle, and UpperCaseStyle",
            "insertions": 4,
            "deletions": 0
          },
          {
            "hash": "53ce14d1dca4624b50b665160ac90777adf77b9e",
            "messageTitle": "Fix wrong continued indentation (bad-continuation) (#2244)",
            "messageBody": "Fixes a pylint warning for wrong continued indentation (bad-continuation)",
            "insertions": 2,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2018-07-05",
        "commitResults": [
          {
            "hash": "18023f050f9db7d63df38ab0d18072b60aabee24",
            "messageTitle": "Use code block for preview release (#2257)",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      }
    ],
    "Tim Hatch": [
      {
        "insertions": 31,
        "deletions": 0,
        "date": "2012-08-29",
        "commitResults": [
          {
            "hash": "9df0acbb8a43b749b9f267dcf97521830965d39b",
            "messageTitle": "Adds check for boolop being used as exception class.  Closes #100707. ---  .../third_party/py/pylint/checkers/exceptions.py   |    7 +++++++  .../third_party/py/pylint/test/input/func_w0711.py |   15 +++++++++++++++  .../py/pylint/test/messages/func_w0711.txt         |    4 ++++  3 files changed, 26 insertions(+), 0 deletions(-)  create mode 100644 /test/input/func_w0711.py  create mode 100644 /test/messages/func_w0711.txt",
            "messageBody": "",
            "insertions": 31,
            "deletions": 0
          }
        ]
      }
    ],
    "fadedDexofan": [
      {
        "insertions": 40,
        "deletions": 0,
        "date": "2019-04-19",
        "commitResults": [
          {
            "hash": "fdc97772f4e5a61f69ae3e7bf5af27afbb9350a8",
            "messageTitle": "Added subprocess.run explicit set `check` argument checker. Closes #2848",
            "messageBody": "",
            "insertions": 40,
            "deletions": 0
          }
        ]
      }
    ],
    "Svet": [
      {
        "insertions": 80,
        "deletions": 20,
        "date": "2019-02-13",
        "commitResults": [
          {
            "hash": "e4fec97bc5af1d1b5ef87a5a15195307858b10a2",
            "messageTitle": "Fixes for linting of new style logging format. (#2713)",
            "messageBody": "The number of arguments was not handled properly, leading to an always successful check. See new tests for specific cases this fixes.",
            "insertions": 80,
            "deletions": 20
          }
        ]
      }
    ],
    "Omega Weapon": [
      {
        "insertions": 21,
        "deletions": 2,
        "date": "2012-11-12",
        "commitResults": [
          {
            "hash": "de5e24e5808386da779523a558bdb4c8e2f1a5b8",
            "messageTitle": "Make pylint-gui cope with \u0027--include-ids\u0027. Closes #110838",
            "messageBody": "When pylint\u0027s \u0027--include-ids\u0027 option is used, the message type is not a\nsingle character string but includes the ID as well - change to deal with\nthis when processing messages.\n\nOriginally reported at http://bugs.debian.org/cgi-bin/bugreport.cgi?bug\u003d689172\n\n--HG--\nbranch : stable\n",
            "insertions": 16,
            "deletions": 2
          },
          {
            "hash": "9834e66db73fdf0bca2e187002fef4dde8486acd",
            "messageTitle": "pylint-gui: Bind F5 to the run button. Closes #110839",
            "messageBody": "--HG--\nbranch : stable\n",
            "insertions": 5,
            "deletions": 0
          }
        ]
      }
    ],
    "sbagan": [
      {
        "insertions": 4,
        "deletions": 0,
        "date": "2018-12-10",
        "commitResults": [
          {
            "hash": "20d67626bcff511a713242b662e14befb2f29021",
            "messageTitle": "Fix zip-builtin-not-iterating false positive with OrderedDict (#2634)",
            "messageBody": "Add OrderedDict as accepting iterator\r\n",
            "insertions": 4,
            "deletions": 0
          }
        ]
      }
    ],
    "Łukasz Sznuk": [
      {
        "insertions": 19,
        "deletions": 13,
        "date": "2017-07-19",
        "commitResults": [
          {
            "hash": "a53028da4f370e0ac94f4b11d74bdd2da2f1f610",
            "messageTitle": "Fix ifs in formatted strings crashing Pylint",
            "messageBody": "",
            "insertions": 19,
            "deletions": 13
          }
        ]
      }
    ],
    "daniel_goldsmith": [],
    "Łukasz Rogalski": [
      {
        "insertions": 79,
        "deletions": 1,
        "date": "2016-03-14",
        "commitResults": [
          {
            "hash": "74512f1b650c3cff88ce135c87baa06767179da0",
            "messageTitle": "New check: invalid-length-returned",
            "messageBody": "Implementation of issue #557.\n",
            "insertions": 79,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 200,
        "deletions": 6,
        "date": "2016-12-04",
        "commitResults": [
          {
            "hash": "8bcd4059104329b6fcaa6436fc6d6fa458cca23f",
            "messageTitle": "Don\u0027t emit unused-argument and function-redefined for singledispatch implementations",
            "messageBody": "Closes #1032 and #1034\n",
            "insertions": 200,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2016-12-08",
        "commitResults": [
          {
            "hash": "4dec9d61c50f4df8c6185b83910b54a7442b2f9e",
            "messageTitle": "Fix spelling",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 11,
        "deletions": 2,
        "date": "2016-12-10",
        "commitResults": [
          {
            "hash": "519d6a4b8a565766a4f2a3964332f98fc9c4a6c1",
            "messageTitle": "Fix CLI output for fixme messages",
            "messageBody": "When file has CRLF line separators, CR was kept in msg. This CR made\nCLI output behave unexpectedly.\n\nSolves #1139\n",
            "insertions": 10,
            "deletions": 1
          },
          {
            "hash": "3a94b38b26b5f4191ffe8c67e1db272a2570489c",
            "messageTitle": "Fix link to contributing docs",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 50,
        "deletions": 2,
        "date": "2016-12-13",
        "commitResults": [
          {
            "hash": "740d250d1f59055b4b3980e451ef60824b8b4310",
            "messageTitle": "Add a new option for finding unused global variables.",
            "messageBody": "Closes #919\r\n",
            "insertions": 50,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 119,
        "deletions": 45,
        "date": "2016-12-16",
        "commitResults": [
          {
            "hash": "fca2e0f514656cbc4a135b3d672eb78cd6636adb",
            "messageTitle": "Improve metaclass detection in nested scopes in Python 3 (#1202)",
            "messageBody": "Closes #1177\r\n\r\n",
            "insertions": 119,
            "deletions": 45
          }
        ]
      },
      {
        "insertions": 110,
        "deletions": 8,
        "date": "2016-12-18",
        "commitResults": [
          {
            "hash": "1e44d42aca957f3c08e10b74540a6ba8d35bf055",
            "messageTitle": "New refactoring checker: consider-using-ternary (#1210)",
            "messageBody": "This check is emitted when pylint encounters constructs which were used to emulate ternary statement before it was introduced in Python 2.5.\r\n\r\nClose #1204 ",
            "insertions": 110,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 39,
        "deletions": 62,
        "date": "2016-12-19",
        "commitResults": [
          {
            "hash": "dd15541d148d28d3a82639fed32f5f9f846e9832",
            "messageTitle": "design_analysis: simplify getting count of ignored arguments",
            "messageBody": "",
            "insertions": 5,
            "deletions": 4
          },
          {
            "hash": "b3b1d0011ed957f5051fae9d35960daa6aa8040a",
            "messageTitle": "MessagesHandlerMixIn: extract common private method (#1226)",
            "messageBody": "Merge enable() and disable() method core logic into a private method, which is used internally by the two aforementioned methods. This reduces the lines of code and provides a common point of modification of the enabling/disabling mechanism in pylint.",
            "insertions": 34,
            "deletions": 58
          }
        ]
      },
      {
        "insertions": 45,
        "deletions": 27,
        "date": "2016-12-21",
        "commitResults": [
          {
            "hash": "f83dd399e560c1384e797cb65c7970f5257e7898",
            "messageTitle": "Fix too-many-nested-blocks (#1228)",
            "messageBody": "Fix too-many-nested-blocks, where last nested block in function was\r\nexcluded from analysis.\r\n\r\nCloses #1088",
            "insertions": 45,
            "deletions": 27
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 8,
        "date": "2016-12-29",
        "commitResults": [
          {
            "hash": "fa85784379edd5f23ac4a040078a7379d36a7a9e",
            "messageTitle": "consider-iterating-dictionary: fix case when comprehensions were used in assignments (#1244)",
            "messageBody": "",
            "insertions": 9,
            "deletions": 1
          },
          {
            "hash": "da30aaabb455f1a08fa36bd5d039a7db304338aa",
            "messageTitle": "test_functional: assign user-friendly names to parametrised tests (#1248)",
            "messageBody": "",
            "insertions": 3,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 20,
        "deletions": 10,
        "date": "2016-12-30",
        "commitResults": [
          {
            "hash": "2304d03121dda47343722f04dd4f5403390ab6ba",
            "messageTitle": "fix pytest-warning; TestReporter is not a class that contains tests (#1249)",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "d23b8ca66ac70e3bf024bed332e5d026c046e924",
            "messageTitle": "consider-iterating-dictionary: fix false-negatives (#1251)",
            "messageBody": "Resolves #1247",
            "insertions": 14,
            "deletions": 7
          },
          {
            "hash": "796b1690bebfee1fc637fcfce5d398646958435b",
            "messageTitle": "Use pytest-xdist for parallel execution of tests in travis (#1246)",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 128,
        "deletions": 22,
        "date": "2017-01-03",
        "commitResults": [
          {
            "hash": "38ae89680df5d4e98147320703ff71d683275b7b",
            "messageTitle": "Travis and AppVeyor for Python 3.6 (#1260)",
            "messageBody": "",
            "insertions": 5,
            "deletions": 0
          },
          {
            "hash": "60449ba9021c8b9bc428923f45ac6df277217347",
            "messageTitle": "Add tests to show issue does not occur (#1258)",
            "messageBody": "Close #853",
            "insertions": 23,
            "deletions": 0
          },
          {
            "hash": "4bb474dfad2d2dd8ea357f6b8e6a1c708246ac4a",
            "messageTitle": "Check if a name is locally assigned when looking for used-before-assignment",
            "messageBody": "If a name is locally assigned and there is another global name with the same variable, this can result in an UnboundLocalError, as seen in the following example:\r\n\r\n  x \u003d 24\r\n  def test(a):\r\n     if x \u003d\u003d a:\r\n           for x in [1, 2, 3]:\r\n               print(x)\r\n  test(24)\r\n\r\nIn this case, we should emit an ``used-before-assignment`` message. Closes #1081",
            "insertions": 49,
            "deletions": 1
          },
          {
            "hash": "ef554cfcfe1741ac8f177079174a125ae3d61ecc",
            "messageTitle": "Revert \"Use pytest-xdist for parallel execution of tests in travis (#1246)\" (#1264)",
            "messageBody": "This reverts commit 796b1690bebfee1fc637fcfce5d398646958435b.",
            "insertions": 1,
            "deletions": 3
          },
          {
            "hash": "018ed0712fba32b52de6e37c6693937a4d164c33",
            "messageTitle": "Fix too agressive logging-format-interpolation",
            "messageBody": "Fixes #572\n",
            "insertions": 37,
            "deletions": 15
          },
          {
            "hash": "ea6c74adce6613d543cb3689f39450d4a83166f5",
            "messageTitle": "Add change log entries, fix style issues",
            "messageBody": "",
            "insertions": 13,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 3,
        "date": "2017-01-04",
        "commitResults": [
          {
            "hash": "da1da56853380a5a387ad287f4398402b14ef123",
            "messageTitle": "Fix not-used-before-assignment false positive (#1266)",
            "messageBody": "",
            "insertions": 12,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 0,
        "date": "2017-01-20",
        "commitResults": [
          {
            "hash": "fa980eed41be93b9bb880ea114237dce63af9a8b",
            "messageTitle": "Add pyenchant to dependencies (#1281)",
            "messageBody": "Hopefully improve coverage by actually running spellchecking-related tests.\r\n",
            "insertions": 3,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 85,
        "deletions": 33,
        "date": "2017-01-28",
        "commitResults": [
          {
            "hash": "7daed7b8982480c868b0f642a5251f00ffb253c6",
            "messageTitle": "Add single-line-class-stmt option",
            "messageBody": "",
            "insertions": 85,
            "deletions": 33
          }
        ]
      },
      {
        "insertions": 47,
        "deletions": 7,
        "date": "2017-02-05",
        "commitResults": [
          {
            "hash": "ecd9d9e7db0d67db0691b1bbc869d82b915bc988",
            "messageTitle": "Do not emit warning on type(self)._private_attribute access (#1288)",
            "messageBody": "Closes #1031 ",
            "insertions": 47,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 75,
        "deletions": 38,
        "date": "2017-02-14",
        "commitResults": [
          {
            "hash": "0ac65de1669ee595f58620c339cab57b85c479ad",
            "messageTitle": "Add flag to allow wildcard imports if module defines __all__",
            "messageBody": "Fixes #831\n",
            "insertions": 28,
            "deletions": 3
          },
          {
            "hash": "075ec3d4a601061192147ed1abd38085f6cd1b6f",
            "messageTitle": "Fix whitespace error reported by pylint",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "4627dfbd2520011c3e6437e34027b0336035fa0a",
            "messageTitle": "Fix indentation part2",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "003e563b11fcc05ac5cab6b7baf8c862bf35e21f",
            "messageTitle": "Wrap __all__ in docs with proper markdown",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "e80ed4c721c39779c7aaa1e4d6b6acdbbd9ffdee",
            "messageTitle": "Add failing test case for missing module",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "3c8b44fc27bb6e7827f37cfa995c39e28f620c42",
            "messageTitle": "Make tests pass",
            "messageBody": "",
            "insertions": 6,
            "deletions": 3
          },
          {
            "hash": "61364842f6f65ed723a7e3bf21fc5d6253002fa6",
            "messageTitle": "refactor checker to perform import once",
            "messageBody": "",
            "insertions": 18,
            "deletions": 19
          },
          {
            "hash": "57bc1de125b30c2d498a9ce19195a9906b765a02",
            "messageTitle": "simplify _wildcard_import_is_allowed method",
            "messageBody": "",
            "insertions": 3,
            "deletions": 5
          },
          {
            "hash": "e0fdd25c214e60bef10fbaa46252f4aaa74de8c2",
            "messageTitle": "Add tests to confirm named tuple inference in astroid is improved (#1323)",
            "messageBody": "",
            "insertions": 10,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 45,
        "deletions": 1,
        "date": "2017-02-19",
        "commitResults": [
          {
            "hash": "0d3b4a72b585b34cc12cb95eaf62ca3d13173a9e",
            "messageTitle": "Understand starred expression used in string formatting RHS tuple (#1299)",
            "messageBody": "Fixes #957\r\n",
            "insertions": 45,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 25,
        "deletions": 3,
        "date": "2017-02-21",
        "commitResults": [
          {
            "hash": "ea964a046ee4a3dbc392c29f843db92577d8a933",
            "messageTitle": "len-as-condition: fix false positives when len() wasn\u0027t used in logical test (#1332)",
            "messageBody": "Closes #1325 and #1331\r\n",
            "insertions": 25,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 70,
        "deletions": 16,
        "date": "2017-03-01",
        "commitResults": [
          {
            "hash": "9b60c3907deda5ac6ac5dcf3b71c29deaa690a4d",
            "messageTitle": "typing.Tuple and typing.NamedTuple false positives: add failing tests",
            "messageBody": "Will fix #1295\n",
            "insertions": 24,
            "deletions": 0
          },
          {
            "hash": "7df8caaa3e1995018417ac2fd87afd89be6945ba",
            "messageTitle": "Make cyclic import checker respect local disable clauses (#1286)",
            "messageBody": "Fixes #59",
            "insertions": 46,
            "deletions": 16
          }
        ]
      },
      {
        "insertions": 37,
        "deletions": 17,
        "date": "2017-04-02",
        "commitResults": [
          {
            "hash": "2de04b46a3865fc95a2efc1f6358bcd06bd9de08",
            "messageTitle": "Improve documentation (#1401)",
            "messageBody": "- Use correct capitalisation of PyCQA organisation in Github links\r\n- Use current version number (1.7) in ChangeLog file\r\n- Use readhedocs URL instead of outdated docs.pylint.org\r\n- Avoid here in links in favor of actual info on link we\u0027re pointing to\r\n",
            "insertions": 16,
            "deletions": 14
          },
          {
            "hash": "18de1cf54a6d8cf3638ea43310ab915324b4a1f3",
            "messageTitle": "FAQ: clarify that Pylint 1.7 is required when Python 3.6 features are used (#1402)",
            "messageBody": "Closes #1399",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "6e77a8da2639600c0812eb3fb6e498df7f4a2a9f",
            "messageTitle": "Add tests to prove that exception is no raised after astroid fixes (#1403)",
            "messageBody": "Closes #1389",
            "insertions": 17,
            "deletions": 0
          },
          {
            "hash": "07662129d7eb3ee13e60c4fb08099db152c72912",
            "messageTitle": "Remove anomalous-backslash-in-string from pylintrc ignore list (#1404)",
            "messageBody": "",
            "insertions": 1,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 73,
        "deletions": 0,
        "date": "2017-04-13",
        "commitResults": [
          {
            "hash": "5ac73745b65fa7d161ce368716c39789d3fbd721",
            "messageTitle": "assign-to-new-keyword (#1386)",
            "messageBody": "Add a new warning, assign-to-new-keyword.\r\n\r\nThis warning is emitted whenever we detect an assignment to a\r\nvariable name that will become a keyword in the future.",
            "insertions": 73,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 32,
        "deletions": 8,
        "date": "2017-04-28",
        "commitResults": [
          {
            "hash": "cb6e4523ce001012202e5767c8029fdfad21af1e",
            "messageTitle": "Raise meaningful exception for invalid reporter class being selected (#1450)",
            "messageBody": "",
            "insertions": 32,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 4,
        "date": "2017-05-13",
        "commitResults": [
          {
            "hash": "aedf49491cd4ce73779dcd88d67df92c8164f241",
            "messageTitle": "Slight optimisation in _check_one_element_trailing_comma_tuple (#1456)",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 39,
        "deletions": 39,
        "date": "2017-05-22",
        "commitResults": [
          {
            "hash": "b95d334aff89dad4a6d51990244686cddbdc3733",
            "messageTitle": "Remove mentions of deprecated astroid node names (#1485)",
            "messageBody": "",
            "insertions": 39,
            "deletions": 39
          }
        ]
      },
      {
        "insertions": 43,
        "deletions": 11,
        "date": "2017-06-02",
        "commitResults": [
          {
            "hash": "42a0b4272b7a3fa2b550f574ba5cf9d80de5f597",
            "messageTitle": "Improve assign-to-new-keyword checker (#1504)",
            "messageBody": "Now it also emit warn on FunctionDefs, AsyncFunctionDefs and ClassDefs",
            "insertions": 43,
            "deletions": 11
          }
        ]
      },
      {
        "insertions": 16,
        "deletions": 6,
        "date": "2017-06-20",
        "commitResults": [
          {
            "hash": "59ce0c377c1b72d4496a483cc00716848047530c",
            "messageTitle": "Log config file name to stderr in non-quiet mode (#1522)",
            "messageBody": "Close #1519",
            "insertions": 16,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 5,
        "date": "2017-06-26",
        "commitResults": [
          {
            "hash": "d4b0bdaec9042333f9d75688b3145658adef9f91",
            "messageTitle": "Unskip two functional tests skipped by mistake (#1550)",
            "messageBody": "* Unskip two functional tests skipped by mistake\r\n\r\nmax_pyver\u003d2.7 caused tests to be not run on Python 2.7.x\r\n\r\n* Add relevant disables to make those tests pass\r\n",
            "insertions": 3,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 2,
        "date": "2017-07-08",
        "commitResults": [
          {
            "hash": "fbdf5ba095ebbbf04db12f6c3e88e21152a30507",
            "messageTitle": "import-error now is correctly emitted for import nodes when lower level messages are disabled",
            "messageBody": "Closes #1533\n",
            "insertions": 3,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 40,
        "deletions": 0,
        "date": "2017-07-31",
        "commitResults": [
          {
            "hash": "7d6114fe71f1e6ab4a7c19546f380a7cb216eac9",
            "messageTitle": "acceptance tests, not run by default (#1360)",
            "messageBody": "",
            "insertions": 40,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 77,
        "deletions": 28,
        "date": "2017-08-07",
        "commitResults": [
          {
            "hash": "ca0902a6614877f083a2710f5c6a2ca1d78d6206",
            "messageTitle": "spelling checker: parametrize count of suggestions",
            "messageBody": "* parametrize count of suggestions based on config parameter\r\n* fix tests on Appveyor",
            "insertions": 35,
            "deletions": 18
          },
          {
            "hash": "df9ab0f8a8b48c34856c2951ae2cda407a4b878a",
            "messageTitle": "simplify-boolean-expression is now emitted for old style ternaries with first value being falsy in boolean context (#1560)",
            "messageBody": "Closes #1559",
            "insertions": 41,
            "deletions": 8
          },
          {
            "hash": "8d0eeb22ea15726f57a1c5f4fd81e348d7d7e0f0",
            "messageTitle": "ImportsChecker: check all messages in leave_module (#1611)",
            "messageBody": "Attempts to help with #1495",
            "insertions": 1,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 97,
        "deletions": 19,
        "date": "2017-08-12",
        "commitResults": [
          {
            "hash": "b07a1e3fe2f01eca5ac0c4f49a3295e83e5ded22",
            "messageTitle": "Add suggestion-mode flag",
            "messageBody": "Added ``suggestion-mode`` configuration flag. When flag is enabled, informational\r\nmessage is emitted instead of cryptic error message for attributes accessed on\r\nc-extensions.\r\n\r\nClose #1466\r\n",
            "insertions": 97,
            "deletions": 19
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 0,
        "date": "2017-08-14",
        "commitResults": [
          {
            "hash": "d3e30fcc4f5eeb4ac1e15ed0b43ae33436df30ba",
            "messageTitle": "Disable no-init and old-style-class for enchant helper mocks (#1621)",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 25,
        "deletions": 10,
        "date": "2017-09-14",
        "commitResults": [
          {
            "hash": "a80810644b3533de5c2455f33ec63838bf731f62",
            "messageTitle": "Fix superfluous-parens false positive for logical statements involving `in` operator (#1634)",
            "messageBody": "Closes #574\r\n",
            "insertions": 25,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 425,
        "deletions": 139,
        "date": "2017-09-20",
        "commitResults": [
          {
            "hash": "5b72e7f886ee9993025c9564d918de21cbf5acd0",
            "messageTitle": "Use predefined sets of naming styles instead of explicit regexps (#1046)",
            "messageBody": "Closes #1013",
            "insertions": 425,
            "deletions": 139
          }
        ]
      },
      {
        "insertions": 14,
        "deletions": 9,
        "date": "2017-09-27",
        "commitResults": [
          {
            "hash": "83f79bfe48e26fe7311a7e7ac496254587baf1f0",
            "messageTitle": "Fix unhandled exception when node without a name is used as exception class (#1678)",
            "messageBody": "",
            "insertions": 14,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2017-09-28",
        "commitResults": [
          {
            "hash": "17e19f8d3eeba03579390698f4d3b39df5bb26eb",
            "messageTitle": "Fix TypeError on formatting c-extension-no-member msg (#1683)",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Glenn Matthews": [
      {
        "insertions": 18,
        "deletions": 3,
        "date": "2016-07-01",
        "commitResults": [
          {
            "hash": "4881c97246af6753b1e61d3fcca8326c5eff81c1",
            "messageTitle": "Fixed check_docs doc error (#735)",
            "messageBody": "",
            "insertions": 5,
            "deletions": 1
          },
          {
            "hash": "ba42389fc0b973b7e2b1ef97d5e5c1b25b5c69c0",
            "messageTitle": "Add documentation for accept-no-raise-doc and accept-no-return-doc",
            "messageBody": "",
            "insertions": 13,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 466,
        "deletions": 313,
        "date": "2016-07-10",
        "commitResults": [
          {
            "hash": "07cd560c1358cfb784a8b78d85402126e08c291f",
            "messageTitle": "Automatic generation of extensions.rst (#988)",
            "messageBody": "",
            "insertions": 466,
            "deletions": 313
          }
        ]
      },
      {
        "insertions": 71,
        "deletions": 3,
        "date": "2016-07-15",
        "commitResults": [
          {
            "hash": "78b5dc237a922c20d9e5654e08fe877fbf726ef2",
            "messageTitle": "Fix false positive for missing-[type,param]-doc (#1006)",
            "messageBody": "Fix a false positive of \u0027missing-param-doc\u0027 and \u0027missing-type-doc\u0027,\r\noccurred when a class docstring uses the \u0027For the parameters, see\u0027\r\nmagic string but the class __init__ docstring does not, or vice versa.",
            "insertions": 71,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 152,
        "deletions": 13,
        "date": "2016-07-18",
        "commitResults": [
          {
            "hash": "aad5ed6b519d9c8a941182bcd44fef992e193553",
            "messageTitle": "Add type inference for missing-raises-doc",
            "messageBody": "",
            "insertions": 111,
            "deletions": 7
          },
          {
            "hash": "2719ead6390f2314fbfa67c88cf5c90f72e65a1e",
            "messageTitle": "Recognize multiple valid keyword synonyms, supported by Sphinx",
            "messageBody": "",
            "insertions": 41,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 538,
        "deletions": 162,
        "date": "2016-07-19",
        "commitResults": [
          {
            "hash": "47577a4a396a148b92e656110c2bdb18632d44a9",
            "messageTitle": "Better input validation in register_messages to avoid overwrites. Add InvalidMessageError and use it instead of asserts in pylint.utils.",
            "messageBody": "",
            "insertions": 240,
            "deletions": 19
          },
          {
            "hash": "0495355af9b2958e2ecd23311a697a8a7a7cc887",
            "messageTitle": "Move EmptyReport and UnknownMessage to pylint.exceptions",
            "messageBody": "",
            "insertions": 23,
            "deletions": 17
          },
          {
            "hash": "f63f165dbcc87fd792916c47f4d5c5e7796f00d0",
            "messageTitle": "Rename UnknownMessage, EmptyReport to UnknownMessageError, EmptyReportError",
            "messageBody": "",
            "insertions": 29,
            "deletions": 25
          },
          {
            "hash": "3ae79853d2656a02d0e0f992b2db76be3aa9c0df",
            "messageTitle": "Add copyright string",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "1f353874d44ef27cb0e51700e7fb44de4c1b3335",
            "messageTitle": "Bisect \u0027missing-[returns|yield]-doc\u0027 warnings into separate text/type checks.",
            "messageBody": "",
            "insertions": 245,
            "deletions": 101
          }
        ]
      }
    ],
    "Andy Palmer": [
      {
        "insertions": 113,
        "deletions": 1,
        "date": "2019-12-16",
        "commitResults": [
          {
            "hash": "dc83a86bc5556e2ec630403f760461708f15a69b",
            "messageTitle": "Add check to make sure only strings are assigned to __name__ (#3271)",
            "messageBody": "Close #583 ",
            "insertions": 113,
            "deletions": 1
          }
        ]
      }
    ],
    "Fabrice Douchant": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2008-10-30",
        "commitResults": [
          {
            "hash": "b1d1dfa94670ebfd6e1f45e471fe6686319618fb",
            "messageTitle": "[#4910,#6473] generate-man option has a new key in its dictionnary : \u0027hide\u0027 : True and will not be print in man or --help",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "hippo91": [
      {
        "insertions": 179,
        "deletions": 1,
        "date": "2017-07-23",
        "commitResults": [
          {
            "hash": "1fa1695312e29cc7305b0e254edba87670000d7a",
            "messageTitle": "Enh1385 (#1578)",
            "messageBody": "Added stop-iteration-return\r\n\r\nFollowing the recommendations of PEP479 ,a new Python 3.0 checker was added\r\nto warn about raising a StopIteration inside a generator. Raising a StopIteration\r\ninside a generator may be due a direct call to `raise StopIteration`.\r\n\r\nClose #1385",
            "insertions": 179,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 70,
        "deletions": 0,
        "date": "2017-09-17",
        "commitResults": [
          {
            "hash": "172cbaa0e2b7ca8c390ebd9e872746141c966b77",
            "messageTitle": "Support for Google docstring Keyword Args sections (#1664)",
            "messageBody": "* Add of a new regexp for Keyword Args|Arguments|Parameters. Extending the list of entries in match_param_docs method with the results of self._parse_section(new_regexp)\r\n\r\n* Add of 2 unittests for Google docstring with Args and Keyword Args.\r\n\r\n* Add of ChangeLog and whatsnew entries\r\n",
            "insertions": 70,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 342,
        "deletions": 43,
        "date": "2017-09-26",
        "commitResults": [
          {
            "hash": "56a6723f96dddd1e70e668d808e8446fd53b841f",
            "messageTitle": "Adding a check for ``inconsistent-return-statements`` inside function or methods. (#1641)",
            "messageBody": "Close #1267",
            "insertions": 342,
            "deletions": 43
          }
        ]
      },
      {
        "insertions": 270,
        "deletions": 12,
        "date": "2017-09-30",
        "commitResults": [
          {
            "hash": "7efb43639f2c62947841ca0eae7b5cd68db5efc2",
            "messageTitle": "useless-super-delegation takes into account default values for the current implementation",
            "messageBody": "A method can reimplement a super method in order to provide a different default value, in which case we shouldn\u0027t emit ``useless-super-delegation``.",
            "insertions": 248,
            "deletions": 12
          },
          {
            "hash": "0b1b25a63f6d68a4dc21dbc47a0af79d3eed973e",
            "messageTitle": "Function redefinitions take in account dummy-variables-rgx",
            "messageBody": "",
            "insertions": 22,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 76,
        "deletions": 12,
        "date": "2017-10-12",
        "commitResults": [
          {
            "hash": "8a5fb98e633347c6b0755735891a4ef2d26c3e7c",
            "messageTitle": "Fixing ``useless-else-on-loop`` false-positive when break statements are deeply nested (#1687)",
            "messageBody": "",
            "insertions": 76,
            "deletions": 12
          }
        ]
      },
      {
        "insertions": 45,
        "deletions": 18,
        "date": "2017-11-13",
        "commitResults": [
          {
            "hash": "7f6bae953ad2515b5849b90a9b7b3a64f52ea3c6",
            "messageTitle": "Separate the handling of third party and first party imports",
            "messageBody": "",
            "insertions": 45,
            "deletions": 18
          }
        ]
      },
      {
        "insertions": 87,
        "deletions": 33,
        "date": "2017-12-02",
        "commitResults": [
          {
            "hash": "d343169c0ca9abd37f8000c37b4dd35a9dfe6ab5",
            "messageTitle": "Add of a class named NamesConsumer to handle more clearly the to_consume, consumed and scope_type informatios. Use of this class inside some visit/leave methods but more interestingly inside visit_name method, trying to make it a little bit clearer. Add of a method named _check_name_identical_to_args in order to deal with a name used inside function args and inside a comprehension. Deletion of _next_to_consume static method replaced by NamesConsumer.get_next_to_consume.",
            "messageBody": "",
            "insertions": 87,
            "deletions": 33
          }
        ]
      },
      {
        "insertions": 67,
        "deletions": 30,
        "date": "2017-12-03",
        "commitResults": [
          {
            "hash": "ffec6c97e65ed1782a4bb2c370be370de7c01a41",
            "messageTitle": "Rewriting _ignore_class_scope signature and adding docstring",
            "messageBody": "",
            "insertions": 17,
            "deletions": 8
          },
          {
            "hash": "938e55989000ef3b2bee2fd991615554ee4fffc5",
            "messageTitle": "Renaming names_consumer in current_consumer in visit_name. Rewriting NamesConsumer.get_next_to_consume signature",
            "messageBody": "",
            "insertions": 13,
            "deletions": 9
          },
          {
            "hash": "7b6b63a12f18ba7c2bce72866cfcce9b4494f60e",
            "messageTitle": "Renaming method _check_name_identical_to_args in _has_homonym_in_upper_function_scope. Adding docstring inside _has_homonym_in_upper_function_scope. Restricting the match in _has_homonym_in_upper_function_scope to function scope.",
            "messageBody": "",
            "insertions": 24,
            "deletions": 13
          },
          {
            "hash": "90b0f17f900dfccca113b600b289a6c0baf6fe2d",
            "messageTitle": "Add of a test that should not trigger the unused-argument message emission.",
            "messageBody": "",
            "insertions": 7,
            "deletions": 0
          },
          {
            "hash": "d87f292029897d455fbb35b56fa29b444d0e88bb",
            "messageTitle": "Add of ChangeLog and whatsnew entries.",
            "messageBody": "",
            "insertions": 6,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 83,
        "deletions": 20,
        "date": "2017-12-11",
        "commitResults": [
          {
            "hash": "b6c68505a8a1b48344b14a00d746bfbda62897ff",
            "messageTitle": "Modifying the way results of OPTION_RGX.search(line) are exploited",
            "messageBody": "",
            "insertions": 6,
            "deletions": 2
          },
          {
            "hash": "158fa9f034a3d2582a4b40490efadbfe75fb682e",
            "messageTitle": "Modifying line_too_long.py to add test checking that another directive thant \u0027line-too-long\u0027 doesn\u0027t deactivate the emission of \u0027line-too-long\u0027 message",
            "messageBody": "",
            "insertions": 4,
            "deletions": 3
          },
          {
            "hash": "908c29972c30f4c1c6b3116189fb0b74a9172bcd",
            "messageTitle": "Add of 2 very long lines with a disable\u003dfixme directive that should not deactivate emission of line-too-long messages.",
            "messageBody": "",
            "insertions": 9,
            "deletions": 5
          },
          {
            "hash": "add610ce2d4798c823c8e4b40576ce0b5bab073e",
            "messageTitle": "Add of a test on the presence of \u003d in the line. Return None instead of Return to avoid inconsistent return statement",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "34dfa8230967432598ec7d75f2caaba548738237",
            "messageTitle": "Fixing the unit test",
            "messageBody": "",
            "insertions": 5,
            "deletions": 3
          },
          {
            "hash": "b4c17e800439ebc6ae5dd5363883035d0311f37b",
            "messageTitle": "Add of ChangeLog and whatsnew entries",
            "messageBody": "",
            "insertions": 9,
            "deletions": 0
          },
          {
            "hash": "642577760a2afb355ccfb1f93e21a5bd1e37a4ed",
            "messageTitle": "Fixes ``pylint disable\u003dfixme` directives ignored for comments following the last statement in a file (#1740)",
            "messageBody": "Fixes #1681",
            "insertions": 48,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2017-12-13",
        "commitResults": [
          {
            "hash": "a8267a98faa9ec0ec20424b4b8041b1450d7780f",
            "messageTitle": "Adding trailing new line to force CI (part 1)",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "bfaf0dd7c0d007d2534b84e5f99fb7e0ef8256d8",
            "messageTitle": "Removing trailing new line to force CI (part 2)",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 15,
        "deletions": 0,
        "date": "2017-12-15",
        "commitResults": [
          {
            "hash": "b9061a0596457cf89ddd3dcf65c8aae7fb241e69",
            "messageTitle": "Pylint doesn\u0027t take anymore the default rcfile if the rcfile specified on the command line doesn\u0027t exist (#1768)",
            "messageBody": "",
            "insertions": 15,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 89,
        "deletions": 15,
        "date": "2017-12-16",
        "commitResults": [
          {
            "hash": "fecc4817ea782d13e309346a1956cf2185d98c3b",
            "messageTitle": "Turning handlers generator into a list to test it correctly.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "de98dee62096ff2e1c4ff585ff9db2855b1670c7",
            "messageTitle": "Add ot unit test with if statement inside try/except.(issue #1770)",
            "messageBody": "",
            "insertions": 18,
            "deletions": 7
          },
          {
            "hash": "b10e497e409a52d819df27957fa603a8f994e8f4",
            "messageTitle": "Add of ChangeLog and whatsnew entries for 2.0 version",
            "messageBody": "",
            "insertions": 28,
            "deletions": 0
          },
          {
            "hash": "32e2782a04262600b5c23065213e0c8f069ae55b",
            "messageTitle": "More idiomatic way of creating empty list",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "c6c1131a775d3259b0757bcb544a2cf53fcacc48",
            "messageTitle": "Add off function _is_function_def_never_returning that returns True if the function never returns. Add of a test concerning Call node in _is_node_return_ended",
            "messageBody": "",
            "insertions": 20,
            "deletions": 0
          },
          {
            "hash": "9a749dce29e6f3263092b273e83335276c5db2cc",
            "messageTitle": "Add of two tests concerning the issue 1771. One that must raise an inconsistent-return-statements and another that must not.",
            "messageBody": "",
            "insertions": 21,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 29,
        "deletions": 0,
        "date": "2017-12-17",
        "commitResults": [
          {
            "hash": "1265becefdb032adbc1468d83db08cfdbd1e3b79",
            "messageTitle": "Add ChangeLog and whatsnew entries",
            "messageBody": "",
            "insertions": 29,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 14,
        "deletions": 5,
        "date": "2017-12-28",
        "commitResults": [
          {
            "hash": "07be401dd53922c6f4b0bee4777d32bb2bca8c6a",
            "messageTitle": "Dehardcoding sys.exit. Instead, use of a collection of function names that never returns",
            "messageBody": "",
            "insertions": 13,
            "deletions": 4
          },
          {
            "hash": "7fc2290a8b57cbc1f35a51d928e515ad3388b457",
            "messageTitle": "Fixing docstring",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 36,
        "deletions": 7,
        "date": "2018-01-01",
        "commitResults": [
          {
            "hash": "2d461678e2c1c02985c4042bbc15ac6f3611c61d",
            "messageTitle": "While loop are considered return ended for check of ``inconsistent-return-statements`` message (#1806)",
            "messageBody": "",
            "insertions": 36,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 25,
        "deletions": 2,
        "date": "2018-01-03",
        "commitResults": [
          {
            "hash": "c92cdd3eefd9ee1c3614f716919d8d01a11f97cf",
            "messageTitle": "Detect mangled attribute names when emitting no-member",
            "messageBody": "Close #1643",
            "insertions": 25,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 80,
        "deletions": 87,
        "date": "2018-01-04",
        "commitResults": [
          {
            "hash": "b80d76d76e0be6ae14001a06c1b03fddc1c0f2fe",
            "messageTitle": "Renaming NamesConsumerAtomic into ScopeConsumer. Thanks @PCManticore.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 3
          },
          {
            "hash": "e7b718d87e491edeba422d9d8ae428341bc7f10f",
            "messageTitle": "Deletion of a message which was already here.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 4
          },
          {
            "hash": "49b6a1073c05b77b8e888f529f55816e3561f3b3",
            "messageTitle": "Using options of RefactoringChecker to store the list of never returning functions.",
            "messageBody": "",
            "insertions": 75,
            "deletions": 77
          },
          {
            "hash": "9f7ddc2e614d7fd4b9bb9ff28a593cdfbcb3f626",
            "messageTitle": "Using qname() instead of string concatenation.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 2
          },
          {
            "hash": "2a22407f9a612c32813f6735984c561de7eec91e",
            "messageTitle": "Creating a new variable self._never_returning_functions that holds a set of the functions that will never return",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 4,
        "date": "2018-01-05",
        "commitResults": [
          {
            "hash": "d8d2367d355dd48b0a4768c1e8db1aeabe640531",
            "messageTitle": "Avoiding stupid test: if node.qname() in self._never_returning_functions: return True \u003d\u003e return node.qname() in self._never_returning_functions.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 3
          },
          {
            "hash": "d76c2f6eda7d0ea663ef0d3c694ea4990d2ef844",
            "messageTitle": "Specifying the type csv for never-returning-functions option. Enrichment of the help associated.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 23,
        "deletions": 9,
        "date": "2018-01-06",
        "commitResults": [
          {
            "hash": "6f56cca59ac803f6e327b42adb1d771683e5d13a",
            "messageTitle": "Moving the construction of the set of never returning functions into method open as config is not fully initialized in __init__",
            "messageBody": "",
            "insertions": 4,
            "deletions": 0
          },
          {
            "hash": "9896336d11507b91317cb8d11b7c963d89b3109d",
            "messageTitle": "Add of a test with a never returning function defined inside a rc file",
            "messageBody": "",
            "insertions": 19,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2018-01-07",
        "commitResults": [
          {
            "hash": "ee4ebb8c1781088218c113019a966777957f9ab2",
            "messageTitle": "Removing optparse.Values from the default values of never returning functions",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 63,
        "deletions": 10,
        "date": "2018-01-23",
        "commitResults": [
          {
            "hash": "0b687362c18ac8bcd65ff3900bf2d46ecf4800bd",
            "messageTitle": "Do not check if function definition under an if statement are return ended to determine if the if itself is return ended.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "4c50b1f38488ff1b11c2d49e1f9e56a44dd8f8bb",
            "messageTitle": "Add of four test dealing with if statements and function definition under them",
            "messageBody": "",
            "insertions": 52,
            "deletions": 9
          },
          {
            "hash": "e5760cd26d0df14135c0ffad708a3be5acee0494",
            "messageTitle": "Add of ChangeLog and whatsnew entries",
            "messageBody": "",
            "insertions": 8,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 65,
        "deletions": 25,
        "date": "2018-01-28",
        "commitResults": [
          {
            "hash": "d95cf4ed5f2fc7d72c538e3ef5ba651a9f081ec1",
            "messageTitle": "Add of a unit test in which the exception raised cannot be inferred but it doesn\u0027t matter (from @nedbat issue 1794 conversation).",
            "messageBody": "",
            "insertions": 29,
            "deletions": 13
          },
          {
            "hash": "31fb7505edb32693dcc2462c7b93e5b5ed6a3e1c",
            "messageTitle": "Add of a test to avoid exception inference if this exception is not handled.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 0
          },
          {
            "hash": "4cdd473408288d017e6117e32f143cd597b9b556",
            "messageTitle": "Add of docstring in _import_node_context method. Add of is_node_inside_try_except method. Avoiding code duplication by using _import_node_context method.",
            "messageBody": "",
            "insertions": 20,
            "deletions": 7
          },
          {
            "hash": "7e9c1978acd7b3a91a92514e4eff4b7c50824e3a",
            "messageTitle": "Add of ChangeLog and whatsnew entries",
            "messageBody": "",
            "insertions": 8,
            "deletions": 0
          },
          {
            "hash": "fadcbba7f7193d6cb474db680bd14e404e92b8fd",
            "messageTitle": "Removing trailing whitespaces.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "ca334aed5b37c929011694ba26492295edefa2f8",
            "messageTitle": "Taking into account @PCManticore remark",
            "messageBody": "",
            "insertions": 1,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 35,
        "deletions": 5,
        "date": "2018-02-14",
        "commitResults": [
          {
            "hash": "fede47a625f40169bf839b7e8e2df643b3471635",
            "messageTitle": "Fix the wrong scope of the ``disable\u003d`` directive after a commented line.",
            "messageBody": "For example when a ``disable\u003dline-too-long`` directive is at the end of\r\na long commented line, it no longer disables the emission of ``line-too-long``\r\nmessage for lines that follow. \r\n\r\nClose #1742",
            "insertions": 35,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 93,
        "deletions": 13,
        "date": "2018-03-05",
        "commitResults": [
          {
            "hash": "68d24d41988f6d13323962409b7f9d1bd8a7d6c7",
            "messageTitle": "Add a new checker against using numeric ids instead of symbolic ids",
            "messageBody": "In pylint we have two types of checker messages, message ids, which are\r\nnumeric by nature, and symbolic ids, which are in natural language. We recommend\r\nusers to use the latter form, since it conveys a better meaning of what the error is.\r\n \r\nClose #1599",
            "insertions": 93,
            "deletions": 13
          }
        ]
      },
      {
        "insertions": 9,
        "deletions": 0,
        "date": "2018-04-06",
        "commitResults": [
          {
            "hash": "03d4b6a78c3aac3ffbf9b8ae064d3b0ee8ac3a92",
            "messageTitle": "Add of get_effective_max_line_number in FileState class + calling it in is_message_enabled.",
            "messageBody": "",
            "insertions": 9,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 23,
        "deletions": 5,
        "date": "2018-04-07",
        "commitResults": [
          {
            "hash": "57d2eed2ed51f344c85b8b918fdf7d530d43c176",
            "messageTitle": "Add of comment and changing the return value in case the message\u0027s line is after the maximum line in the ast tree",
            "messageBody": "",
            "insertions": 5,
            "deletions": 1
          },
          {
            "hash": "5caba6bd5991ad5750c24da4a3b87745adbe83f1",
            "messageTitle": "Add of unittest taht should not raise any line-too-long message even for a commented line at the end of a module",
            "messageBody": "",
            "insertions": 7,
            "deletions": 0
          },
          {
            "hash": "7bbb36b9b4471664f750b9302374b34d7ec81ff0",
            "messageTitle": "Add of ChangeLog and whatsnew entries",
            "messageBody": "",
            "insertions": 7,
            "deletions": 0
          },
          {
            "hash": "0b4fab540a2cc00b0695645d5cd7e3e8ead4a21d",
            "messageTitle": "Taking into account pylint\u0027s remark",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 4,
        "date": "2018-04-15",
        "commitResults": [
          {
            "hash": "54362148618eab0ed40cdd84efd6208cf4e788f9",
            "messageTitle": "Taking into accound @PCManticore\u0027s remarks",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 26,
        "deletions": 0,
        "date": "2018-06-02",
        "commitResults": [
          {
            "hash": "a7da6e534805e14094e302e5b0b19b7d16972a15",
            "messageTitle": "Fixed incorrect line number for line-too-long on comment at end of module (#2164)",
            "messageBody": "* Add of get_effective_max_line_number in FileState class + calling it in is_message_enabled\r\n\r\n* Add of unittest that should not raise any line-too-long message even for a commended line at the end of module\r\n\r\n* Add of ChangeLog and whatsnew entries\r\n",
            "insertions": 26,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 35,
        "deletions": 17,
        "date": "2018-06-28",
        "commitResults": [
          {
            "hash": "ed48b8a4e4903a553af9ce0b2b26572c94a20e95",
            "messageTitle": "Fix of false positive ``ìnconsistent-return-statements`` (#2220)",
            "messageBody": "Correcting the way if statements are determined as return ended or not.\r\n\r\nClose #1782",
            "insertions": 35,
            "deletions": 17
          }
        ]
      },
      {
        "insertions": 176,
        "deletions": 36,
        "date": "2019-03-19",
        "commitResults": [
          {
            "hash": "8d2f5d090b839b9a934fc9187da3766828734399",
            "messageTitle": "Add a new ``missing-parentheses-for-call-in-test`` check",
            "messageBody": "This is emitted in case a call to a function is made inside a test but it misses parentheses.\r\nIt is a more specialised form of `using-constant-test`, but tailored specifically to callables.\r\n\r\nClose #2658",
            "insertions": 176,
            "deletions": 36
          }
        ]
      },
      {
        "insertions": 73,
        "deletions": 1,
        "date": "2019-08-06",
        "commitResults": [
          {
            "hash": "5309e1d6dacbcbc30f2a4b077903e551dedc2385",
            "messageTitle": "Don\u0027t emit protected-acces for single underscore prefixed attributes in special methods",
            "messageBody": "This PR prevents the emission of protected-access message when a single\r\nunderscore prefixed attribute is accessed inside a special  method.\r\n\r\nClose #1802\r\n",
            "insertions": 73,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 443,
        "deletions": 103,
        "date": "2019-11-19",
        "commitResults": [
          {
            "hash": "9bdae8b82fcc5b0592135cbf6bead7df360a6672",
            "messageTitle": "Add support for disabling line-too-long for multilines strings",
            "messageBody": "This commit adds support for disabling `line-too-long` messages\r\nfor multilines strings such as docstrings.\r\n\r\nWhen a pylint disable pragma is present at the end of the docstring, it is taken\r\nin account for the entire docstring.\r\n\r\nClose #2957",
            "insertions": 443,
            "deletions": 103
          }
        ]
      }
    ],
    "Pierre Sassoulas": [
      {
        "insertions": 291,
        "deletions": 169,
        "date": "2018-05-10",
        "commitResults": [
          {
            "hash": "cc0c7075eaaba30e5bde7c4d7f20c0a0c8e5e846",
            "messageTitle": "Refactor - Better error message for duplicated msgid or symbol",
            "messageBody": "Create a function to get message definitions list from a checker.\nCreate a function for checking checker consistency\nCreate a function in order to register a MessageDefinition\n\nCorrected following the review of pull-request #2036 by Ashley Whetter and PCManticore.\n",
            "insertions": 139,
            "deletions": 56
          },
          {
            "hash": "b0a3a95c26d16517ed91dd4e24dda0a38d8ad95d",
            "messageTitle": "Refactor - Better error message for inconsistent checker",
            "messageBody": "",
            "insertions": 6,
            "deletions": 3
          },
          {
            "hash": "c78f6f835323ee3b23715b6b353783c4fbc27e10",
            "messageTitle": "Style - Readability changes in MessagesStore",
            "messageBody": "Use of f-strings in Python 3. Updated the docstrings with spinx syntax.\nRename variable to be clearer and use @staticmethoc when possible.\n\nFollowing review of #2036\n",
            "insertions": 51,
            "deletions": 36
          },
          {
            "hash": "06dad75f9448bead573e8191bd816a63d2767ad5",
            "messageTitle": "Fix - Remove f-string for python 3.4 and 3.5 compatibility",
            "messageBody": "And adapt line lenght in order to not add convention message.\n",
            "insertions": 16,
            "deletions": 8
          },
          {
            "hash": "c0e73b9f9ceecd88d52232f6151bcae05a9505fd",
            "messageTitle": "Fix - Take reviews by PCManticore into account",
            "messageBody": "See #2075\n",
            "insertions": 52,
            "deletions": 41
          },
          {
            "hash": "5ccbf9eaa54c0c302c9180bdfb745566c16e416d",
            "messageTitle": "Refactor - MessagesStore.check_message_id(msgid)",
            "messageBody": "Closes #2071\n",
            "insertions": 27,
            "deletions": 25
          }
        ]
      },
      {
        "insertions": 144,
        "deletions": 108,
        "date": "2018-12-18",
        "commitResults": [
          {
            "hash": "fd73f7aaead14c10cd873e936168ba7bf38cebbf",
            "messageTitle": "Refactor - get_message_definition returning a list",
            "messageBody": "Of MessageDefinition instead of a MessageDefinition.\n",
            "insertions": 67,
            "deletions": 41
          },
          {
            "hash": "da67a9da682e51844fbc674229ff6619eb9c816a",
            "messageTitle": "Refactor - Consistent function and variable name",
            "messageBody": "We return a list of message definitions so we must rename\nget_message_definition to get_message_definitions. Resulting variables\nare now named message_definitions most of the time in order to improve\nreadability. (It was often named \"msgs\" or worst \"symbol\")\n",
            "insertions": 53,
            "deletions": 47
          },
          {
            "hash": "bce332ab43b6d7cce30bc833d2d3d1e1cd6f1054",
            "messageTitle": "Refactor - get_messages -\u003e get_messages_from_checker",
            "messageBody": "",
            "insertions": 10,
            "deletions": 10
          },
          {
            "hash": "572f35f92e9eeffd7f6e48b6de1e3623848a39cc",
            "messageTitle": "Refactor - Made the error message predictable",
            "messageBody": "When refactoring MsgStore we don\u0027t want the test to break if two\nconflicting symbol or msgid are inverted. So we sort them, in order\nfor the error message to stay stable.\n",
            "insertions": 7,
            "deletions": 3
          },
          {
            "hash": "75cecdb1b88cc759223e83fd325aeafd09fec37e",
            "messageTitle": "Refactor - Rename _messages to _messages_definitions",
            "messageBody": "",
            "insertions": 7,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 3182,
        "deletions": 2975,
        "date": "2019-03-09",
        "commitResults": [
          {
            "hash": "34c6d16141edf5841aba5223815775d941484d6e",
            "messageTitle": "Chore - Move utils.py into its own package",
            "messageBody": "",
            "insertions": 6,
            "deletions": 9
          },
          {
            "hash": "5f34108a1000131d5341297c0c511b486835b153",
            "messageTitle": "Chore - Move content from __init__.py to utils.py",
            "messageBody": "",
            "insertions": 1500,
            "deletions": 1463
          },
          {
            "hash": "20976c36f1e48061e72379979411bc695564a518",
            "messageTitle": "Refactor - Create a file for the MessageStore class",
            "messageBody": "",
            "insertions": 255,
            "deletions": 243
          },
          {
            "hash": "16e98598c6d8afc826e3cc8f5612618e24d3ec6a",
            "messageTitle": "Refactor - Create a file for each class in utils",
            "messageBody": "",
            "insertions": 944,
            "deletions": 850
          },
          {
            "hash": "e9a12d27cffbb16546d6b479d2d548070e8c3579",
            "messageTitle": "Fix - C0412: Imports from package os are not grouped",
            "messageBody": "",
            "insertions": 5,
            "deletions": 6
          },
          {
            "hash": "b1780d1a4f88d4a94c162780ef346ad66b44b172",
            "messageTitle": "Refactor - Move _rest_format_section in message_handler_mix_in.py",
            "messageBody": "Following review see : https://github.com/PyCQA/pylint/pull/2654#issuecomment-470748956\n",
            "insertions": 21,
            "deletions": 20
          },
          {
            "hash": "2b5074986763d9a508a2dc38c99ba839612dc672",
            "messageTitle": "Refactor - Create a pylint.message package",
            "messageBody": "There is a lot of Message related class in Utils\nthis warrant the creation of a new package.\n\nSee also review for burst utils.py into a package here:\nhttps://github.com/PyCQA/pylint/pull/2654#issuecomment-470748956\n",
            "insertions": 155,
            "deletions": 95
          },
          {
            "hash": "bbfd38f52b6b62c4eb2a4dfda0363c85908e6104",
            "messageTitle": "Refactor - Create a unittest file for the pylint.message package",
            "messageBody": "",
            "insertions": 13,
            "deletions": 0
          },
          {
            "hash": "21954deb237d6eac162a1360f969f1b58ea354a7",
            "messageTitle": "Refactor - Move test_create_invalid_message_type in pylint.message test",
            "messageBody": "",
            "insertions": 13,
            "deletions": 13
          },
          {
            "hash": "02e0e37a19c0999a2159b090daa0545a97dee2f6",
            "messageTitle": "Refactor - Move test_register_error in pylint.message test",
            "messageBody": "",
            "insertions": 135,
            "deletions": 142
          },
          {
            "hash": "b5faf228561266786800e1a788fe9b01d25c55dc",
            "messageTitle": "Refactor - Create a unittest file for MessageStore",
            "messageBody": "Taken from unittest_lint.py\n",
            "insertions": 124,
            "deletions": 114
          },
          {
            "hash": "b2a77e465cf10f7f1122262131aa4071faf74804",
            "messageTitle": "Refactor - Rename PylintASTWalker to ASTWalker",
            "messageBody": "For obvious reasons. See review here :\nhttps://github.com/PyCQA/pylint/pull/2654#discussion_r263843101\n",
            "insertions": 10,
            "deletions": 16
          },
          {
            "hash": "5073ebd9fb907ce258ec9e3e15f092c43132f25e",
            "messageTitle": "Refactor - Rename _ini_format_section directly to format_section",
            "messageBody": "",
            "insertions": 1,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 505,
        "deletions": 519,
        "date": "2019-03-20",
        "commitResults": [
          {
            "hash": "2ca40bf161fa7c7c4b28c08062849ea1899d91d0",
            "messageTitle": "Feat - Add isort in the pre-commit configuration",
            "messageBody": "This is compatible with the current black configuration.\nSee : https://github.com/ambv/black/issues/127\n",
            "insertions": 11,
            "deletions": 0
          },
          {
            "hash": "a422e9750843f3b41a6919b9a5fa2c7d54593394",
            "messageTitle": "Chore - Update black and pre-commit in configuration",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "5ab140ac3b3dda6f32e0f73aeec09abf015ea30f",
            "messageTitle": "Style - Apply isort on all apllicable files",
            "messageBody": "",
            "insertions": 245,
            "deletions": 289
          },
          {
            "hash": "2d525d68249cf00c4dbb521e331e99b481a113c3",
            "messageTitle": "Style - Re-Apply black following the isort cleanup",
            "messageBody": "Change with isort triggered change with black.\n",
            "insertions": 216,
            "deletions": 201
          },
          {
            "hash": "bb6347e0e3a144651a0d42129b903d9dc523e566",
            "messageTitle": "Fix - C0412: Imports from package x are not grouped",
            "messageBody": "",
            "insertions": 16,
            "deletions": 15
          },
          {
            "hash": "fa31f356196f4b79d0bf9b4682c418e74761f3d0",
            "messageTitle": "Fix - An error added when applying isort/black everywhere",
            "messageBody": "",
            "insertions": 3,
            "deletions": 5
          },
          {
            "hash": "c174aee91ba10dc041ddde6dbb20ed1f2e9f5bcb",
            "messageTitle": "Fix - A problem with comment handling in import",
            "messageBody": "Apparently black and isort do not behave the same.\nSee : https://github.com/ambv/black/issues/251\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "e6e6e2778b31868c0c5ba78f80f2e38225302fd6",
            "messageTitle": "Doc - Add isort in the contribution doc",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "30b2ae713eb4453b305407772b29ea68d7c3d074",
            "messageTitle": "Feat - Add an isort formatting check in the tox.ini",
            "messageBody": "Permit to verify the formatting of future commit.\nFollowing review see : https://github.com/PyCQA/pylint/pull/2805#discussion_r266793201\n",
            "insertions": 8,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 42,
        "deletions": 5,
        "date": "2019-03-22",
        "commitResults": [
          {
            "hash": "3ff17ae9e32ad1ede7f5963d185c5c9f35ff8ca0",
            "messageTitle": "Feat - Makes C0412 (ungrouped-imports) compatible with isort (#2824)",
            "messageBody": "Closes #2806.",
            "insertions": 42,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 601,
        "deletions": 643,
        "date": "2019-03-29",
        "commitResults": [
          {
            "hash": "1dbbb35d93c19104b477c200afd3be756132a255",
            "messageTitle": "Refactor - Avoid intra-packages circular dependencies for constants",
            "messageBody": "Some constants were package internal but were used by multiple\npackages. This created circular dependencies. By creating a\nfile for constants we make sure this does not happen because\nwe won\u0027t import everything important in this file and every\nthing else can depend on it.\n",
            "insertions": 34,
            "deletions": 55
          },
          {
            "hash": "d84578f84ef8e4a7c73b7126e9321b2c4a4c7e37",
            "messageTitle": "Refactor - Remove circular import between utils and reporter",
            "messageBody": "ReportsHandlerMixIn was importing Nodes from reporter and is\nprobably more suited for the reporter package anyway.\n",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "d8116eac7c03d6889ba3b5eef8cbf53a8ba5b44b",
            "messageTitle": "Refactor - Merge normalize text in utils.py",
            "messageBody": "Now that there is no more circular import we can do that.\n",
            "insertions": 12,
            "deletions": 18
          },
          {
            "hash": "273492326c97871f289a68873ecfaad8a4168a6b",
            "messageTitle": "Refactor - Move refactor.utils function to the utils package",
            "messageBody": "This permit to have less cross dependency as the utils package\ndoes not depend on anything. The checker package still depends\non reporter. Also moved classes from __init__ to their own file\nin reporter.\n",
            "insertions": 125,
            "deletions": 112
          },
          {
            "hash": "c14f5a34bbc6b94721ef187f10ec77b3d5784956",
            "messageTitle": "Refactor - Create a new file for ASTWalker unittest",
            "messageBody": "",
            "insertions": 71,
            "deletions": 61
          },
          {
            "hash": "eabaf2eca73c8d3f210e7813bc68e8f3cc74676c",
            "messageTitle": "Fix - Move checker.utils tests into their dedicated unittest",
            "messageBody": "It turns out there is not that much utils unittests.\n",
            "insertions": 192,
            "deletions": 195
          },
          {
            "hash": "9461dc082c7758d25b4bdd1b0725ffa5eec7de41",
            "messageTitle": "Refactor - Move function for checker in Checker",
            "messageBody": "MsgStore.get_messages_from_checker \u003d\u003e Checker.messages\nMsgStore.check_checker_consistency \u003d\u003e Checker.check_consistency\nProbably makes more sense this way.\n",
            "insertions": 50,
            "deletions": 58
          },
          {
            "hash": "1a666199d07d7baea82967bacbf98e0f9f65b5b3",
            "messageTitle": "Refactor - Create file for BaseChecker",
            "messageBody": "It was \u0027hidden\u0027 in checkers.__init__.py\n",
            "insertions": 105,
            "deletions": 94
          },
          {
            "hash": "293a7f5e6add850e2f127dd1680a6e43fb1a6949",
            "messageTitle": "Refactor - Remove unused and untested code in utils",
            "messageBody": "There might be code that is used only in test but it\u0027s harder\nto detect.\n",
            "insertions": 8,
            "deletions": 44
          },
          {
            "hash": "a14fe17c097d5925f15c9164832aa339f9ad5d1e",
            "messageTitle": "Fix - Remove the redefined build-in instead of using a pragma",
            "messageBody": "",
            "insertions": 2,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 442,
        "deletions": 326,
        "date": "2019-06-20",
        "commitResults": [
          {
            "hash": "fd5c80efbffa5daa555aa90cd0b937059a09a2da",
            "messageTitle": "Test - Add unittest for MessageStore format help",
            "messageBody": "",
            "insertions": 25,
            "deletions": 0
          },
          {
            "hash": "0a1ae3f9df31e1fb3117eb3e796dd10c4cab3091",
            "messageTitle": "Test - Handle the case where the msgid does not exist",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "56965fe272a867fd5cd915aef52239a3d566bb83",
            "messageTitle": "Style - Less verbose print with triple quote strings",
            "messageBody": "",
            "insertions": 24,
            "deletions": 17
          },
          {
            "hash": "2b43736654e1f52487c9edfd794c39782e64d7e9",
            "messageTitle": "Feat - Add a __repr__ and __gt__ function for BaseCheckers",
            "messageBody": "Permit pylint\u0027s developper  to see what is inside a sorted list of\ncheckers.\n",
            "insertions": 11,
            "deletions": 0
          },
          {
            "hash": "cdd4d4bbe29b17b58b460d50bf46ced1b088e34e",
            "messageTitle": "Feat - Permit to get message definition by msgid in Checkers",
            "messageBody": "",
            "insertions": 8,
            "deletions": 0
          },
          {
            "hash": "75e28a196b7025e1950c1ddd5437f6cdd837d098",
            "messageTitle": "Refactor - Put a checker instance in informations",
            "messageBody": "",
            "insertions": 6,
            "deletions": 4
          },
          {
            "hash": "b398aafa99c144d60c7f5498ef3e150c0e12ec7e",
            "messageTitle": "Refactor - Give a checker instead of a string to _print_checker_doc",
            "messageBody": "Will permit to move functions in the BaseChecker class later.\n",
            "insertions": 18,
            "deletions": 20
          },
          {
            "hash": "b2ccc588997354e13216705143aed8d615360ee1",
            "messageTitle": "Fix - better error msg for getmessagedefinition (sqsuash)",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "275b9eba23ed7b839a94f432dda608ffa66eed51",
            "messageTitle": "Refactor - Separate string creation and display in rest_format_section",
            "messageBody": "This will permit to get the string without printing it at the same time.\nPrint add an implicit \\n so if this look convuluted remember that. We had\nto change step by step in order to be able to not have too much\ncomplexity at once.\n",
            "insertions": 12,
            "deletions": 11
          },
          {
            "hash": "ff07497ef6bd9cd02929246b4ad1d944b6de9919",
            "messageTitle": "Refactor - Separate string creation and display in _print_checker_doc",
            "messageBody": "This will permit to get the string without printing it at the same time.\nThis will also permit to move this to BaseChecker.\n",
            "insertions": 54,
            "deletions": 55
          },
          {
            "hash": "c12afa279e7749def33371db7b162f26bf5e78d9",
            "messageTitle": "Fix - Add type annotation for mypy",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "66fcf4511f3d02701b67edd4674fa19e08833960",
            "messageTitle": "Refactor - Separate string creation and display in _print_full_documentation",
            "messageBody": "This will permit to get the string without printing it at the same time.\n",
            "insertions": 17,
            "deletions": 19
          },
          {
            "hash": "e96be13c47b735ecc78f2e400568f2af2cbaccb1",
            "messageTitle": "Refactor - Move build_message_definition to the BaseChecker class",
            "messageBody": "",
            "insertions": 32,
            "deletions": 47
          },
          {
            "hash": "8a09f2dda7669e1454de00700dd1ce6419a7ab52",
            "messageTitle": "Refactor - Use a constant for the main checker name",
            "messageBody": "Following review see : https://github.com/PyCQA/pylint/pull/2844#discussion_r281014968\n",
            "insertions": 17,
            "deletions": 6
          },
          {
            "hash": "748bb0b60f10b3667bf803b60a98e7a6830a9767",
            "messageTitle": "Doc - Retrocompatibility with the main checker name",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          },
          {
            "hash": "75b68a4123cb417a1c4e8ca989011e02194a6b01",
            "messageTitle": "Refactor - Simplify the Checker.__repr__ function",
            "messageBody": "Following review see : https://github.com/PyCQA/pylint/pull/2844#discussion_r281015055\n",
            "insertions": 3,
            "deletions": 2
          },
          {
            "hash": "9e9601f2330b9f5f7fb58f8ee4e3e5955f269e3e",
            "messageTitle": "Fix - A typo in base_checker.py",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "17c468e82d88560c7155471bf0a613605fbe3cd4",
            "messageTitle": "Refactor - Remove syntax specific to python 3.6",
            "messageBody": "Following review see here : https://github.com/PyCQA/pylint/pull/2844#discussion_r281014957\n",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "2cabf33c96008b1f27d591a1495c3720869de4c9",
            "messageTitle": "Refactor - Remove _ in  _rest_format_section",
            "messageBody": "Because we want to make it a public function.\n",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "b473ef86bb91d639a20754adc4f7ab83f2241de5",
            "messageTitle": "Refactor - Move utility function to utils",
            "messageBody": "We want to use them in Checker too.\n",
            "insertions": 30,
            "deletions": 28
          },
          {
            "hash": "6a1d8db4f27a30c2cc53bd336ed6db957e736c07",
            "messageTitle": "Refactor - Use get_rest_title where it could be",
            "messageBody": "",
            "insertions": 7,
            "deletions": 9
          },
          {
            "hash": "19a74597af629dd420e547fe98ee4773757a9afc",
            "messageTitle": "Refactor - Move doc for checkers in BaseChecker",
            "messageBody": "At long last.\n",
            "insertions": 49,
            "deletions": 47
          },
          {
            "hash": "ea49905fe6cf0ad87c0d66297be8c8657a0d2886",
            "messageTitle": "Refactor - Remove useless parameter in print_checker_doc",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "0ee1d5018849e55ee57b04c749992eaa31a29da7",
            "messageTitle": "Fix - W0612: Unused variable \u0027checker_name\u0027",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "8c30d86abc66f4e5003b01055ec398d6589a6007",
            "messageTitle": "Fix - Remove invalid syntax in python 3.4",
            "messageBody": "Mypy requirements and python 3.4 seem incompatible.\n",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "30ba9f4756ed67d6779105b4ee741269501906c2",
            "messageTitle": "Refactor - Clearer function name (\u0027rest\u0027 -\u003e \u0027rst\u0027) in utils",
            "messageBody": "I used the old name but there was probably a typo in it, as the format is\ncalled rst.\n",
            "insertions": 22,
            "deletions": 22
          },
          {
            "hash": "801ed4f4117e056d1a6ebc95b07127a4b1d8750f",
            "messageTitle": "Refactor - Use self directly in checker get_full_documentation",
            "messageBody": "",
            "insertions": 4,
            "deletions": 6
          },
          {
            "hash": "bed2484b2ea7341661e4cecc622b1d67e58d1d2c",
            "messageTitle": "Refactor - Giving multiple parameters instead of a dict",
            "messageBody": "This make the understanding of the function easier.\n",
            "insertions": 5,
            "deletions": 8
          },
          {
            "hash": "c4144c8548f873434a288b305e7ba405098d9706",
            "messageTitle": "Feat - Add a __str__ function to BaseChecker",
            "messageBody": "",
            "insertions": 70,
            "deletions": 1
          },
          {
            "hash": "569421ca60d82ae984a6f52d76ec8d7397aac437",
            "messageTitle": "Refactor - Remove unused argument \u0027name\u0027",
            "messageBody": "",
            "insertions": 0,
            "deletions": 2
          },
          {
            "hash": "298a22d96ca512ab3910303ae8f2913e608d0a64",
            "messageTitle": "Refactor - Rename an overlapsing function in MessageHandlerMixIn",
            "messageBody": "BaseChecker and MessageHandlerMixIn can be the same instance.\n",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 1262,
        "deletions": 1042,
        "date": "2019-07-22",
        "commitResults": [
          {
            "hash": "e44f83e22ac9b586ac05881a20caa7d40bc0b909",
            "messageTitle": "[pre-commit] More precise exclusion for black",
            "messageBody": "Probably broken when we moved the test from pylint/test to\ntests/.\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "a598e2b5514da298aae821075ec1d444b53f9ab4",
            "messageTitle": "[isort configuration] More precise excludes in isort.cfg",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "eae3436de87df5abb08a4583e345e7afa5510ac9",
            "messageTitle": "[black style] Apply black style on unformatted python file",
            "messageBody": "",
            "insertions": 1260,
            "deletions": 1040
          }
        ]
      },
      {
        "insertions": 142,
        "deletions": 89,
        "date": "2019-08-06",
        "commitResults": [
          {
            "hash": "8115a7ea80863bd6df47762811574cb06c4d0458",
            "messageTitle": "[pylint.message] Rename msg_id to msgid",
            "messageBody": "This is the standard of the Message class.\n",
            "insertions": 7,
            "deletions": 8
          },
          {
            "hash": "d7d6047704a6993c0d5cec6e1babbb3dbade69a6",
            "messageTitle": "[pylint.message] Remove MessageStore.add_renamed_message",
            "messageBody": "It was only used in tests never in code.\n",
            "insertions": 0,
            "deletions": 26
          },
          {
            "hash": "3482d0b6b6b73c68aefea8c956c511e549f73f2a",
            "messageTitle": "[pylint.message] Clearer conditionnal msgid formatting",
            "messageBody": "",
            "insertions": 3,
            "deletions": 2
          },
          {
            "hash": "112b330e5cebd1da835170ac05b1ec46173ad811",
            "messageTitle": "[pylint.message] Rename descr to description",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "f40473fb547802663098f159fe540743663445cb",
            "messageTitle": "[pylint.lint] Rename neededcheckers to needed_checkers",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "d15aba2c37d357bc845643563521d3a13e317227",
            "messageTitle": "[pylint.message] Rename msg_descr to msgid",
            "messageBody": "",
            "insertions": 4,
            "deletions": 8
          },
          {
            "hash": "cf90029974bed71b7d194fec0a6684edeb926f07",
            "messageTitle": "[pylint.message] Remove a useless variable",
            "messageBody": "",
            "insertions": 15,
            "deletions": 12
          },
          {
            "hash": "26c4108087a23bd5d3347e473811d42427157852",
            "messageTitle": "[pylint.message] F401 \u0027pylint.message.x\u0027 imported but unused",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "e8bed2fc04ac53a201b6bc9d78e197abc937beca",
            "messageTitle": "[pylint.message] Add unittests for MessageDefinition",
            "messageBody": "",
            "insertions": 89,
            "deletions": 1
          },
          {
            "hash": "c1fe6e175f80df385129aa77ad363009b22f8089",
            "messageTitle": "[pylint.utils] pylint.utils.category_id used only once",
            "messageBody": "",
            "insertions": 9,
            "deletions": 15
          },
          {
            "hash": "b21bcd77f77d78cc9dd9dc3ca3ad30c00d7cc159",
            "messageTitle": "[pylint.message] category_id does not need to be a function",
            "messageBody": "",
            "insertions": 5,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 26,
        "deletions": 18,
        "date": "2019-08-09",
        "commitResults": [
          {
            "hash": "947cf939086b9f1dca14c2a269aba924965dc864",
            "messageTitle": "[checkers.utils] Incompatible return value type (expected List[Any]) (#3049)",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "68507788fb8bcd0f7b4bf8975574bbd215c2b056",
            "messageTitle": "[pylint.message] Rename MessagesStore to MessageDefinitionStore",
            "messageBody": "We anticipate to have a MessageIdStore.\n",
            "insertions": 15,
            "deletions": 10
          },
          {
            "hash": "7eee24f13b297bddfaeb9ffbb730891da690f643",
            "messageTitle": "[pylint.message] MessageHandlerMixIn.add_message is too complex",
            "messageBody": "Created a function to check message definition explicitely.\n",
            "insertions": 10,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 21,
        "date": "2019-08-16",
        "commitResults": [
          {
            "hash": "43792243f4cc9d79d3b653aee2de2e8ba37f8d77",
            "messageTitle": "[pylint.message] Move backward compatibility in MessageDefinition",
            "messageBody": "If we need this mechanism it\u0027s better to handle it everywhere.\n",
            "insertions": 6,
            "deletions": 5
          },
          {
            "hash": "bd24f94c77c9c9c81d86d098936645b8c0de3bf3",
            "messageTitle": "[pylint.message] Symbol seems to never be None anymore",
            "messageBody": "",
            "insertions": 6,
            "deletions": 16
          }
        ]
      },
      {
        "insertions": 591,
        "deletions": 333,
        "date": "2019-08-19",
        "commitResults": [
          {
            "hash": "380df00f61e7ac2d0640f31b658fc853e4b8f9a0",
            "messageTitle": "[Readme] Add information on how to launch tests fast (#3040)",
            "messageBody": "",
            "insertions": 23,
            "deletions": 0
          },
          {
            "hash": "36e556837aa524fb0ff167782943483b5233b040",
            "messageTitle": "[pylint.checkers] Make the link between msgid and symbol strictly 1-1",
            "messageBody": "Will permit to improve performance with less check but more\nimportantly simplify the message store a lot.\n",
            "insertions": 15,
            "deletions": 15
          },
          {
            "hash": "7ac41288e267d8b84cee7b87cc1984b4885a16fa",
            "messageTitle": "[docparams] Rename legacy message definition to keep 1:1 mapping",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "122049b58c258346ef59e474f48940f5d12a158a",
            "messageTitle": "[changelog] Add the 1:1 relation between msgid and symbol",
            "messageBody": "",
            "insertions": 6,
            "deletions": 0
          },
          {
            "hash": "4bd00376f84b673e397a1abe629d330a0444af35",
            "messageTitle": "[pylint.message] Create a MessageIdStore class",
            "messageBody": "",
            "insertions": 274,
            "deletions": 0
          },
          {
            "hash": "672def32e3aca52da9be5d71566e1b86810b4283",
            "messageTitle": "[pylint.message] Create a MessageDefinition.check_msgid function",
            "messageBody": "",
            "insertions": 32,
            "deletions": 18
          },
          {
            "hash": "0e143606cbcdf2b0f97b09a7eb76cdcd8e35feef",
            "messageTitle": "[tests.message] Create a test for MessageDefinition __str__",
            "messageBody": "",
            "insertions": 9,
            "deletions": 0
          },
          {
            "hash": "6c29ff712a93a7ff2348862c61a534ceaa4481eb",
            "messageTitle": "[pylint.message] Simplification with 1-1 link between symbol and msgid",
            "messageBody": "Also add a lot of unit tests.\n",
            "insertions": 225,
            "deletions": 293
          },
          {
            "hash": "ac25a275afe489e7ddf24ff6fd078414854ebaa4",
            "messageTitle": "[pylint.checkers] Clearer __repr__ when printing checkers",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 243,
        "deletions": 102,
        "date": "2019-09-10",
        "commitResults": [
          {
            "hash": "3981bec0d1edc0cfc0ff8fc67b42038735e25fe4",
            "messageTitle": "[tests.message] Add a test for multiple messages with the same old name",
            "messageBody": "",
            "insertions": 59,
            "deletions": 1
          },
          {
            "hash": "398ab5ab37a4e4d0945d23372b237e8411848ed2",
            "messageTitle": "[test/functional] Better error message for fail",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "641a0d02a32a7a2951ebfb970bf387f089681285",
            "messageTitle": "[pylint.message] Simplify get_message_definitions",
            "messageBody": "",
            "insertions": 4,
            "deletions": 8
          },
          {
            "hash": "572ed87ee9eb3653f7509347d82e64f278a9ec06",
            "messageTitle": "[pylint.message] Optimize MessageDefinitionStore storage",
            "messageBody": "",
            "insertions": 10,
            "deletions": 8
          },
          {
            "hash": "ac30e1e766903b43efdc6bf3c4ddbd0b41a7f550",
            "messageTitle": "[pylint.message] Remove a check that never fail",
            "messageBody": "It seems to make performance 2/3 % better during test and during pylint\nown analysis.\n",
            "insertions": 1,
            "deletions": 11
          },
          {
            "hash": "4c2e1a5acfaa0c6352d030f5676f48b0e063e99d",
            "messageTitle": "[changelog] Add \u0027multiple message with the same old name\u0027",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "cda977e124c3809535fb347c7195d25d68eaf300",
            "messageTitle": "[functional tests] Add __repr__ for FunctionalTestFile",
            "messageBody": "Easier debugging of the tests.\n",
            "insertions": 3,
            "deletions": 0
          },
          {
            "hash": "056ba1895f700dac78a07524c82ef5d1948a43de",
            "messageTitle": "[functional tests] Clearer error message when file not found",
            "messageBody": "",
            "insertions": 1,
            "deletions": 2
          },
          {
            "hash": "3ac820926b4ca387517d10a6d5d1f1c355e943be",
            "messageTitle": "[functional tests] Use walk instead of listdir",
            "messageBody": "Permit to place the functional tests wherever we want.\n",
            "insertions": 6,
            "deletions": 3
          },
          {
            "hash": "676ec55ff9d8f10e52b740a57e4e62a3255d6709",
            "messageTitle": "[functional tests] Clearer fatal fail error message",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "997d9d1ec72fce84903da4784ac56fbe30e6da1e",
            "messageTitle": "[functional tests] Rename example_functional_tests.py \u003d\u003e e/example_functional_tests.py",
            "messageBody": "Permit to navigate in the functional tests easier.\n",
            "insertions": 0,
            "deletions": 0
          },
          {
            "hash": "71c8ed1a024359ac006e2b290dc06b232135c2b3",
            "messageTitle": "[functional tests] Module needs an __init__.py",
            "messageBody": "Or we get a \"module does not exists\".\n",
            "insertions": 0,
            "deletions": 0
          },
          {
            "hash": "9c3ad2cfa0c30bd7dbcb66e9114986968bd73802",
            "messageTitle": "[functional tests] Modify expected result after moving files",
            "messageBody": "",
            "insertions": 23,
            "deletions": 21
          },
          {
            "hash": "80138d4a7bb64b278011c8fc94debca0f881194b",
            "messageTitle": "[functional tests] Import error must import syntax error",
            "messageBody": "",
            "insertions": 3,
            "deletions": 4
          },
          {
            "hash": "5345fe74b9ab81cabe450be767afa7629e367ca8",
            "messageTitle": "[functional tests] Move test starting by too to their dir",
            "messageBody": "",
            "insertions": 0,
            "deletions": 0
          },
          {
            "hash": "65fb74d78aed5705f58124145d8a42b47ecd34de",
            "messageTitle": "[missing-docstring] Break down into class, function, and module",
            "messageBody": "Also fixed spelling in C0112 to C0116 messages following the review\nof pull-request #2036 by Ashley Whetter.\n\nSee also #2075, #2077, #2262, #2654, #2805, #2809, #2844, #2992\nand #3013 for full historical context.\n",
            "insertions": 66,
            "deletions": 37
          },
          {
            "hash": "11ec0937f1bb4fcd2f1d929bc4dd5a5c035a0d0a",
            "messageTitle": "[CONTRIBUTORS] Remove duplication between far away contributions",
            "messageBody": "",
            "insertions": 1,
            "deletions": 3
          },
          {
            "hash": "3b0be68eef64784acfba2fae11d08c208f5c90f7",
            "messageTitle": "[docstrings] Add W0132 as the old name for empty-docstring",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "d54c88a4d504d283d92c6899e26c68299f23ddd7",
            "messageTitle": "[missing-x-docstring] Add retro-compatibility functional tests",
            "messageBody": "We need to make sure the change do not break existing code.\n",
            "insertions": 57,
            "deletions": 0
          }
        ]
      }
    ],
    "Daniel Harding": [
      {
        "insertions": 12,
        "deletions": 9,
        "date": "2010-10-07",
        "commitResults": [
          {
            "hash": "9ec0a226a97a0e9d3151b83e100b191d3e05c3c0",
            "messageTitle": "add initial support for set and list comprehensions",
            "messageBody": "",
            "insertions": 12,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 25,
        "deletions": 3,
        "date": "2010-10-09",
        "commitResults": [
          {
            "hash": "02a7ae4f380d107ef9c8ec851c1149049d5ca89c",
            "messageTitle": "update VariablesChecker to take into account the nested scopes of dictionary and set comprehensions",
            "messageBody": "",
            "insertions": 25,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 2,
        "date": "2014-04-29",
        "commitResults": [
          {
            "hash": "9281fd72cbf810f07f3a01651c13c38ed1fb17a7",
            "messageTitle": "Fix running init-hook provided by configuration file.",
            "messageBody": "--HG--\nbranch : fix_rcfile_init_hook\n",
            "insertions": 6,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 0,
        "date": "2014-04-30",
        "commitResults": [
          {
            "hash": "7eb367f31f9339b006396228c21a0adaf7a5a7de",
            "messageTitle": "Update ChangeLog for init-hook fix.",
            "messageBody": "--HG--\nbranch : fix_rcfile_init_hook\n",
            "insertions": 3,
            "deletions": 0
          }
        ]
      }
    ],
    "ludal@logilab.fr": [
      {
        "insertions": 15,
        "deletions": 0,
        "date": "2006-06-26",
        "commitResults": [
          {
            "hash": "308f4172324ded5d66afa742aa4ebd79f6c51249",
            "messageTitle": "Added FAQ about how to find out option names for pylintrc",
            "messageBody": "",
            "insertions": 15,
            "deletions": 0
          }
        ]
      }
    ],
    "anatoly techtonik": [
      {
        "insertions": 5,
        "deletions": 0,
        "date": "2013-09-22",
        "commitResults": [
          {
            "hash": "8fc6fae9be9d3df1acaee9dab7b188360e22fc31",
            "messageTitle": "Run as a python module \u0027python -m pylint\u0027.",
            "messageBody": "Convenience feature on Windows, where Python scripts are never\nadded to %PATH% directories by default.\n\n  python -m pip install pylint\n  python -m pylint\n",
            "insertions": 5,
            "deletions": 0
          }
        ]
      }
    ],
    "ttenhoeve-aa": [
      {
        "insertions": 227,
        "deletions": 5,
        "date": "2017-11-11",
        "commitResults": [
          {
            "hash": "cdfaa17515096e2a10ade3c187e9cea7fb4a5c09",
            "messageTitle": "Fix line counting for missing-docstring check in combination with docstring-min-length (#1672)",
            "messageBody": "",
            "insertions": 227,
            "deletions": 5
          }
        ]
      }
    ],
    "Krzysztof Czapla": [
      {
        "insertions": 17,
        "deletions": 1,
        "date": "2017-09-27",
        "commitResults": [
          {
            "hash": "14da5ce258d3818037304a6e0f61aba1462e251d",
            "messageTitle": "Do not emit keyword as unicode string in superfluous-parens message",
            "messageBody": "Closes #1420",
            "insertions": 17,
            "deletions": 1
          }
        ]
      }
    ],
    "Hugo": [
      {
        "insertions": 17,
        "deletions": 23,
        "date": "2017-12-11",
        "commitResults": [
          {
            "hash": "bf1aa0c6bbdbc64c1da01f43c564aad3984468e0",
            "messageTitle": "Update classifiers and add python_requires",
            "messageBody": "",
            "insertions": 10,
            "deletions": 3
          },
          {
            "hash": "b35166f35b0be1aa85ad0789ab265e655dd6c1e7",
            "messageTitle": "Drop support for EOL Python 3.3",
            "messageBody": "",
            "insertions": 3,
            "deletions": 10
          },
          {
            "hash": "2a6629629ad3eb0117fcb9d44bf1034cc6224cf2",
            "messageTitle": "Jython is no longer supported",
            "messageBody": "",
            "insertions": 4,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 0,
        "date": "2018-02-10",
        "commitResults": [
          {
            "hash": "aab5dc642127ac950f96cbd42f9812ac785805f4",
            "messageTitle": "Add \"Python 3 Only\" classifier",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      }
    ],
    "Ionel Maries Cristian": [
      {
        "insertions": 10,
        "deletions": 4,
        "date": "2015-02-15",
        "commitResults": [
          {
            "hash": "e2b08116ef3dc6cc3be276f69769a1065f79e5ec",
            "messageTitle": "Import __pkginfo__ from the package in the makefile.",
            "messageBody": "--HG--\nbranch : support-editable-installs\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "ef4d9336d64c87678c9e44a7c82bef6197c6c1a5",
            "messageTitle": "Add new entry in the deb changelog.",
            "messageBody": "--HG--\nbranch : support-editable-installs\n",
            "insertions": 9,
            "deletions": 3
          }
        ]
      }
    ],
    "Craig Citro": [
      {
        "insertions": 16,
        "deletions": 1,
        "date": "2017-05-22",
        "commitResults": [
          {
            "hash": "d03b949b64ed2d4755c556a4cabb6f5acc70487b",
            "messageTitle": "Use the full filename for identifying __init__.py. (#1461)",
            "messageBody": "Previously, `pylint.utils.expand_modules` identified `__init__.py` files by a\r\nsubstring match, which led to false positives for files with names like\r\n`flycheck__init__.py`. (While users are unlikely to choose such a filename,\r\ntools like flycheck use these sorts of filenames for temporary files.)\r\n\r\nThe result was that `pylint` would end up linting the entire package, not just\r\nthe file in question.\r\n\r\nThe fix is straightforward -- we use `os.path.basename` instead of a substring\r\ncheck, and add a test.",
            "insertions": 16,
            "deletions": 1
          }
        ]
      }
    ],
    "Fantix King": [
      {
        "insertions": 25,
        "deletions": 5,
        "date": "2019-02-22",
        "commitResults": [
          {
            "hash": "15e405f20c9432f50c677a4026adc76124716861",
            "messageTitle": "Fix bug of W0120",
            "messageBody": "When break is deep in the else of an inner loop, W0120 was raised.\n",
            "insertions": 9,
            "deletions": 2
          },
          {
            "hash": "b18acace2194aab6db409e002a50ecf65cfe0aa9",
            "messageTitle": "CRF: added a separate test for the bugfix",
            "messageBody": "",
            "insertions": 16,
            "deletions": 3
          }
        ]
      }
    ],
    "Alex Jurkiewicz": [
      {
        "insertions": 9,
        "deletions": 9,
        "date": "2016-03-08",
        "commitResults": [
          {
            "hash": "61f81403412c8e1ef761bd79cca86551c6088fb4",
            "messageTitle": "Improve R0102 error messaging.",
            "messageBody": "",
            "insertions": 9,
            "deletions": 9
          }
        ]
      }
    ],
    "Sylvain Thénault": [
      {
        "insertions": 145,
        "deletions": 138,
        "date": "2006-05-05",
        "commitResults": [
          {
            "hash": "53f596746dc715640db086daff71aa4005f4670c",
            "messageTitle": "* new W0212 message for access to protected member from client code * new W0212 message for access to protected member from client code     * new W0105 message extracted from W0104 (statement seems to have no effect)       with string",
            "messageBody": "",
            "insertions": 145,
            "deletions": 138
          }
        ]
      },
      {
        "insertions": 1296,
        "deletions": 296,
        "date": "2006-05-09",
        "commitResults": [
          {
            "hash": "6adc616ae204e8024a309a743b288c3f6acc08c5",
            "messageTitle": "check ChangeLog",
            "messageBody": "",
            "insertions": 1296,
            "deletions": 296
          }
        ]
      },
      {
        "insertions": 560,
        "deletions": 6,
        "date": "2006-08-25",
        "commitResults": [
          {
            "hash": "2af2a968e726461c27844f97df5679643c8dd4b8",
            "messageTitle": "zarb manual merge, gargl",
            "messageBody": "",
            "insertions": 560,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 10,
        "date": "2006-09-19",
        "commitResults": [
          {
            "hash": "9676a2990ff235ec48daa7c95558d5c4b92e5902",
            "messageTitle": "fix commited merge :(",
            "messageBody": "",
            "insertions": 0,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 13,
        "date": "2006-09-20",
        "commitResults": [
          {
            "hash": "b3e54783106f77f7546bd19dd35cf89366d79867",
            "messageTitle": "stop requiring __revision__",
            "messageBody": "",
            "insertions": 1,
            "deletions": 3
          },
          {
            "hash": "abf803ade4a2fac2967b141a22ea7f53c31ae11a",
            "messageTitle": "ignore missing attribute on optparse\u0027s Values instances",
            "messageBody": "",
            "insertions": 4,
            "deletions": 2
          },
          {
            "hash": "e0e4118b840f5468306411104afeb57cc7d29e0f",
            "messageTitle": "remove buggy cut and paste, remove some __revision__",
            "messageBody": "",
            "insertions": 0,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 33,
        "deletions": 20,
        "date": "2006-09-23",
        "commitResults": [
          {
            "hash": "2a3523058854ec8666b3be3d2cbd3cde806883e9",
            "messageTitle": "require __revision__ in functional tests",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "67f5a8462b6378e443246a971b8bdce316db1520",
            "messageTitle": "fix false positives with py \u003e\u003d 2.5",
            "messageBody": "",
            "insertions": 6,
            "deletions": 5
          },
          {
            "hash": "12382f28c5093f9d3818966cd5764a3566e1523e",
            "messageTitle": "py 2.5 test fixes",
            "messageBody": "",
            "insertions": 26,
            "deletions": 15
          }
        ]
      },
      {
        "insertions": 19,
        "deletions": 1,
        "date": "2006-09-24",
        "commitResults": [
          {
            "hash": "997df1b780aaa30bbcee159504ca01a0f193841d",
            "messageTitle": "fix gen expr scope bug",
            "messageBody": "",
            "insertions": 19,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 78,
        "deletions": 50,
        "date": "2006-09-25",
        "commitResults": [
          {
            "hash": "2e68e3cc3abb7096715b87577092471180708222",
            "messageTitle": "fixed python \\\u003e\u003d 2.4 format false positive with multiple lines statement",
            "messageBody": "",
            "insertions": 33,
            "deletions": 22
          },
          {
            "hash": "2c007e3f319d33e49b1d428776c75a045295e728",
            "messageTitle": "fix custom reporter pb",
            "messageBody": "",
            "insertions": 12,
            "deletions": 1
          },
          {
            "hash": "0e61cea8c10bc153b20f02912f8de3696256d41f",
            "messageTitle": "update to follow atng api changes. No more test errors, only failures :o/",
            "messageBody": "",
            "insertions": 23,
            "deletions": 20
          },
          {
            "hash": "6642dee7a980f7298f5cf501f0ef2fff9bf35318",
            "messageTitle": "0.12.1",
            "messageBody": "",
            "insertions": 10,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 18,
        "deletions": 14,
        "date": "2006-10-03",
        "commitResults": [
          {
            "hash": "62c476c40cc442f21aee42bca1ac1492fd731373",
            "messageTitle": "apply skip\u0027s patch",
            "messageBody": "",
            "insertions": 2,
            "deletions": 4
          },
          {
            "hash": "e59e47031ec5574ed0997064972005efc55eef47",
            "messageTitle": "use common 0.19.3 generate_config api",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "a70d0da6f6e0fe71fdc5dbe09f2ea52e82d99c67",
            "messageTitle": "message fixes",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "57d086ba52d48d6d4cc30d5c715cb0f0b6ef0151",
            "messageTitle": "fix some format checker false positives",
            "messageBody": "",
            "insertions": 9,
            "deletions": 4
          },
          {
            "hash": "970fedf1b79fdc4b22343ddba8440c8927c003ee",
            "messageTitle": "changelog update",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2006-10-08",
        "commitResults": [
          {
            "hash": "fa5064c3a82465da2a501591f24460c06d624025",
            "messageTitle": "fix changelog",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "6056bf0a4bc59e9594049667874c82b1b02b563a",
            "messageTitle": "test fix",
            "messageBody": "",
            "insertions": 1,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 0,
        "date": "2006-10-25",
        "commitResults": [
          {
            "hash": "fbdce6dca973ed2b6edf33ca47403151942b66a0",
            "messageTitle": "fix py23 tests",
            "messageBody": "",
            "insertions": 0,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 4,
        "date": "2006-11-10",
        "commitResults": [
          {
            "hash": "f7fb293652ea3771c113357bca025371bade4ff5",
            "messageTitle": "fix deprecated import",
            "messageBody": "",
            "insertions": 2,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 4,
        "date": "2006-11-15",
        "commitResults": [
          {
            "hash": "7b4d9c2d493a7b5edd2e8cf948c6f5fbf00e823e",
            "messageTitle": "fix typo",
            "messageBody": "",
            "insertions": 2,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 4,
        "date": "2006-11-21",
        "commitResults": [
          {
            "hash": "c28e070fad6477c1c1ee617fea4e3e4bb97c1620",
            "messageTitle": "fix W0233 bug",
            "messageBody": "",
            "insertions": 5,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 137,
        "deletions": 40,
        "date": "2006-11-23",
        "commitResults": [
          {
            "hash": "51345a71d5971e013ec305aa210dd78f07fbd77d",
            "messageTitle": "test fixes",
            "messageBody": "",
            "insertions": 3,
            "deletions": 2
          },
          {
            "hash": "1cad98f77109a0a76eec1baea09c4a20b120b1e1",
            "messageTitle": "fix E0101 false positive",
            "messageBody": "",
            "insertions": 42,
            "deletions": 10
          },
          {
            "hash": "cb2ee5b6091b9c33d937770fddbbce49ffe5d974",
            "messageTitle": "#3119 and #3117",
            "messageBody": "",
            "insertions": 12,
            "deletions": 10
          },
          {
            "hash": "c5406a76a66c4dc30021ca25e7e28b5a23c30c42",
            "messageTitle": "w0233 tests",
            "messageBody": "",
            "insertions": 17,
            "deletions": 5
          },
          {
            "hash": "89d66c978b1f0b2364fd0ca47d314e1200081b05",
            "messageTitle": "#2508: E0601 false positive with lambda",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "ec714ee57a364dac61ddd166678ef479189df69b",
            "messageTitle": "fix E1011 duplication pb",
            "messageBody": "",
            "insertions": 28,
            "deletions": 4
          },
          {
            "hash": "14d1cad489103597c573f1437a05be9726718c1e",
            "messageTitle": "0.12.3",
            "messageBody": "",
            "insertions": 9,
            "deletions": 4
          },
          {
            "hash": "dfceba56d21c5ab9852081a1b4e2083566394ca5",
            "messageTitle": "fix for a ginco crash",
            "messageBody": "",
            "insertions": 21,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 237,
        "deletions": 76,
        "date": "2006-12-05",
        "commitResults": [
          {
            "hash": "9475399a98e93bf16abc05d9a1250803714815eb",
            "messageTitle": "see changelog",
            "messageBody": "",
            "insertions": 83,
            "deletions": 28
          },
          {
            "hash": "77b82ffab6a55081898bad6ca745747598ecd694",
            "messageTitle": "some documentation improvments",
            "messageBody": "",
            "insertions": 154,
            "deletions": 48
          }
        ]
      },
      {
        "insertions": 171,
        "deletions": 152,
        "date": "2006-12-27",
        "commitResults": [
          {
            "hash": "c57910b316efd5ad88eeeaed3d9461ca6c0f2b54",
            "messageTitle": "include daniel drake\u0027s patch",
            "messageBody": "",
            "insertions": 27,
            "deletions": 10
          },
          {
            "hash": "6a8bb3f34407d546b4cb644a07cd16d192ab8ecb",
            "messageTitle": "doc update",
            "messageBody": "",
            "insertions": 144,
            "deletions": 142
          }
        ]
      },
      {
        "insertions": 13,
        "deletions": 3,
        "date": "2007-02-09",
        "commitResults": [
          {
            "hash": "1c0e79285222a0dda1baa572aaddc4843caf7603",
            "messageTitle": "apply ddrake patch",
            "messageBody": "",
            "insertions": 13,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 465,
        "deletions": 29,
        "date": "2007-02-13",
        "commitResults": [
          {
            "hash": "3a84afbe3e036c2879fffa515b81692e0bf88ce9",
            "messageTitle": "cleanup, change checker enabling impl",
            "messageBody": "",
            "insertions": 33,
            "deletions": 21
          },
          {
            "hash": "d276308720bdb73aeb22c3235f26496dc838b78b",
            "messageTitle": "rpython checking, work in progress",
            "messageBody": "",
            "insertions": 432,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 1095,
        "deletions": 126,
        "date": "2007-02-15",
        "commitResults": [
          {
            "hash": "e61477fbd41da36ea54735fa78c0d5ced385e87a",
            "messageTitle": "rpython tests ok",
            "messageBody": "",
            "insertions": 835,
            "deletions": 82
          },
          {
            "hash": "5f92b4bf5f57b0965b6eb3db7646caa89b50d577",
            "messageTitle": "better slice pb detection",
            "messageBody": "",
            "insertions": 94,
            "deletions": 28
          },
          {
            "hash": "ffe51d3cdc74472e48436d35d29d16207483530a",
            "messageTitle": "check %r",
            "messageBody": "",
            "insertions": 38,
            "deletions": 10
          },
          {
            "hash": "2696844ded737e7e9f7e52e44b54606ef6c1bc8e",
            "messageTitle": "check generator expression",
            "messageBody": "",
            "insertions": 31,
            "deletions": 5
          },
          {
            "hash": "dd2cc6fb2910eb6d6efc79433fa6fa4ea3ead5c1",
            "messageTitle": "check multiple inheritance",
            "messageBody": "",
            "insertions": 97,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 39,
        "deletions": 9,
        "date": "2007-02-16",
        "commitResults": [
          {
            "hash": "937932879e14d9fa3a5c8aa5f493412a4a2d12de",
            "messageTitle": "update for new astng api",
            "messageBody": "",
            "insertions": 11,
            "deletions": 5
          },
          {
            "hash": "132f18c5a925c2fd5b6a9ac75455314933a190f8",
            "messageTitle": "add factory method test, other test fixes",
            "messageBody": "",
            "insertions": 28,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 60,
        "deletions": 38,
        "date": "2007-02-17",
        "commitResults": [
          {
            "hash": "4b1d2a3542bfd33500eab47d717f3bf98e500ad4",
            "messageTitle": "W0107: unnecessary pass",
            "messageBody": "",
            "insertions": 23,
            "deletions": 5
          },
          {
            "hash": "2aa82b4af90298f89db6de369ad45f957f0b08e9",
            "messageTitle": "fix #3205: W0704 false positive",
            "messageBody": "",
            "insertions": 15,
            "deletions": 7
          },
          {
            "hash": "54d4c1988c5676848b0253bf54272aee301c7934",
            "messageTitle": "implement #3285: reported for Visual Studio line number reporting (msvs)",
            "messageBody": "",
            "insertions": 22,
            "deletions": 26
          }
        ]
      },
      {
        "insertions": 48,
        "deletions": 23,
        "date": "2007-02-18",
        "commitResults": [
          {
            "hash": "e10113003a495f0e20bd23759ffb1fdc2f0c6f3e",
            "messageTitle": "update test",
            "messageBody": "",
            "insertions": 6,
            "deletions": 7
          },
          {
            "hash": "8df45f9d7e4505e4d1cc7ae5596e2bbbf202e24e",
            "messageTitle": "lint fixes",
            "messageBody": "",
            "insertions": 42,
            "deletions": 16
          }
        ]
      },
      {
        "insertions": 195,
        "deletions": 65,
        "date": "2007-02-19",
        "commitResults": [
          {
            "hash": "e40704c23b63e3a63a9e46a40548a75d75ed48bc",
            "messageTitle": "transfert",
            "messageBody": "",
            "insertions": 6,
            "deletions": 5
          },
          {
            "hash": "05a53382b2788b26b11c64b7f034287eb609aa76",
            "messageTitle": "tc to finish",
            "messageBody": "",
            "insertions": 24,
            "deletions": 0
          },
          {
            "hash": "3fa76475dcd95a3af52be0680e49597fec46c6cd",
            "messageTitle": "#3123",
            "messageBody": "",
            "insertions": 6,
            "deletions": 5
          },
          {
            "hash": "fdad3fc883b8deda02fba8b53fae4e2fbae0d5f3",
            "messageTitle": "#2485 W0222 false positive",
            "messageBody": "",
            "insertions": 54,
            "deletions": 8
          },
          {
            "hash": "c6d58e5b4cab1b9ccbdf02bc8368acc476a711b6",
            "messageTitle": "don\u0027t emit \u0027method could be a function\u0027 for special methods",
            "messageBody": "",
            "insertions": 10,
            "deletions": 2
          },
          {
            "hash": "42d3f5783b81cc3ee880c1a70fe50cc841b99d9a",
            "messageTitle": "more test",
            "messageBody": "",
            "insertions": 40,
            "deletions": 3
          },
          {
            "hash": "b15774007277f03dc6dc6dd8d769e1d15b0a9ebf",
            "messageTitle": "#3156",
            "messageBody": "",
            "insertions": 10,
            "deletions": 0
          },
          {
            "hash": "d1d39a32dce7ada8d985ba74c0f281fa6c926866",
            "messageTitle": "#3259",
            "messageBody": "",
            "insertions": 40,
            "deletions": 37
          },
          {
            "hash": "262e2fd292d381457775615b8fab2ad165a9fd98",
            "messageTitle": "test fix, fix vs reporter name",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 187,
        "deletions": 95,
        "date": "2007-02-22",
        "commitResults": [
          {
            "hash": "9ab00128a56fd4cbb7d3fe5257344e0fd043f7e1",
            "messageTitle": "new generic F0004 message for unexpected inference",
            "messageBody": "",
            "insertions": 14,
            "deletions": 8
          },
          {
            "hash": "f85d069803c323adaac855f2d0f4e99e85c13332",
            "messageTitle": "warn about unsupported protocol",
            "messageBody": "",
            "insertions": 148,
            "deletions": 75
          },
          {
            "hash": "efc4905daef466c3d4727a3f5c683b445d211d6c",
            "messageTitle": "prepare version",
            "messageBody": "",
            "insertions": 22,
            "deletions": 11
          },
          {
            "hash": "8b65a6ea53fec2f58dff89e37c0f11a93b70a3cf",
            "messageTitle": "test fix",
            "messageBody": "",
            "insertions": 0,
            "deletions": 0
          },
          {
            "hash": "4d4e8edb7fc76f46dafdf9d77c3215bece8b8839",
            "messageTitle": "fix potential bug",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 3,
        "date": "2007-02-25",
        "commitResults": [
          {
            "hash": "98920f55da2b48b3003928d2b345c06646971467",
            "messageTitle": "fix --rpython-mode option to only enable the python checker",
            "messageBody": "",
            "insertions": 6,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 11,
        "deletions": 3,
        "date": "2007-02-26",
        "commitResults": [
          {
            "hash": "b96a92a20d1030c9734861a40c25d717edcfcb06",
            "messageTitle": "complete changelog",
            "messageBody": "",
            "insertions": 10,
            "deletions": 2
          },
          {
            "hash": "621ab9767cf10f3c243fe6d273dc8190ba368dc3",
            "messageTitle": "fix date",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 13,
        "deletions": 13,
        "date": "2007-02-28",
        "commitResults": [
          {
            "hash": "34973d5d4e9f6a00555553d64671ba34ba2fa665",
            "messageTitle": "grrr",
            "messageBody": "",
            "insertions": 11,
            "deletions": 2
          },
          {
            "hash": "2896333fe47afe6d93b754e311e4c759192c03a3",
            "messageTitle": "rollback to 0.13",
            "messageBody": "",
            "insertions": 2,
            "deletions": 11
          }
        ]
      },
      {
        "insertions": 34,
        "deletions": 0,
        "date": "2007-03-01",
        "commitResults": [
          {
            "hash": "5b854d8b76c8bc569b0358568aa886bf361d0ee6",
            "messageTitle": "base rpython doc",
            "messageBody": "",
            "insertions": 30,
            "deletions": 0
          },
          {
            "hash": "32b44fa1f5066279cef616596f2d4d55d9996343",
            "messageTitle": "Added tag pylint-version-0_13_0 for changeset f9e3771de4a2",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "fe1cb19f5dd4f051888c540c2f55b9a2d6f15495",
            "messageTitle": "Added tag pylint-debian-version-0_13_0-1 for changeset 63f72a5447c9",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "12c1a2ac92e22fa5a1a2db98d2f5b0bc7c00d6e0",
            "messageTitle": "add missing rpython testing data",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 1,
        "date": "2007-03-02",
        "commitResults": [
          {
            "hash": "bfaa81dc57f43700d64026728652728e691b1c61",
            "messageTitle": "0.13.1",
            "messageBody": "",
            "insertions": 12,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 28,
        "deletions": 21,
        "date": "2007-03-05",
        "commitResults": [
          {
            "hash": "56e056988fffe8397e43f60939e8b4634f75e0b9",
            "messageTitle": "fix pb reported by Marien on python-projects",
            "messageBody": "",
            "insertions": 28,
            "deletions": 21
          }
        ]
      },
      {
        "insertions": 322,
        "deletions": 229,
        "date": "2007-03-07",
        "commitResults": [
          {
            "hash": "7eb163456cf0c19c57eaffa9e5881f25b86a7c92",
            "messageTitle": "    * fix disable-checker option so that it won\u0027t accidentally enable the       rpython checker which is disabled by default",
            "messageBody": "",
            "insertions": 22,
            "deletions": 12
          },
          {
            "hash": "6431713667ec1cbd2519133aa039653a5dacd901",
            "messageTitle": "regenerate doc",
            "messageBody": "",
            "insertions": 283,
            "deletions": 217
          },
          {
            "hash": "a829aa890ba096afdbf2139c6c918c4dd7964d93",
            "messageTitle": "blah",
            "messageBody": "",
            "insertions": 17,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 24,
        "deletions": 15,
        "date": "2007-03-09",
        "commitResults": [
          {
            "hash": "13f03bd8a367cb97cbfb1697fd7e3235ba8ce328",
            "messageTitle": "py2.3 test fixes",
            "messageBody": "",
            "insertions": 12,
            "deletions": 7
          },
          {
            "hash": "cf6b981be2e7c4720b81d1dedb8c10c626f0aa5c",
            "messageTitle": "use testlib",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "5cf93dd3e2fcdaadbb693e47e475ab98c3420ec8",
            "messageTitle": "test fix",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "7e01bd6da35c9ba6ff619729f537ee3f68686b69",
            "messageTitle": "defaultSuite is not working with testlib.unittest_main, go back to unittest.main",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "e8c112cafb77f28a92bb3a128d8e9d5b8b51898a",
            "messageTitle": "add 2.5 in __pkginfo__ so apycot run tests with it",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "9e7af2c7c83b7fb75f56cdd20e16b06814402f5d",
            "messageTitle": "also skip that one",
            "messageBody": "",
            "insertions": 4,
            "deletions": 0
          },
          {
            "hash": "7166da1c7f99660642320992f5cf44b564469b90",
            "messageTitle": "now lgc.testlib support defaultTest argument",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 3,
        "date": "2007-04-12",
        "commitResults": [
          {
            "hash": "34af881b21ea2cd1157f332b09563ac2f9c49cb4",
            "messageTitle": "ReST syntax fixes",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2007-04-16",
        "commitResults": [
          {
            "hash": "9ba3931889eec06a4ed065cf856a77120c7eed72",
            "messageTitle": "don\u0027t warn on access to instance._ (a bit ginco specific but...)",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 14,
        "deletions": 4,
        "date": "2007-06-07",
        "commitResults": [
          {
            "hash": "33f38bb624bb723c2e446b2e6cd19fe539d4e4da",
            "messageTitle": "add note about gedit plugin",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          },
          {
            "hash": "0a3146bae43288a1bdb64b5d92bf00c6e1956d55",
            "messageTitle": "prepare 0.13.2",
            "messageBody": "",
            "insertions": 10,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 18,
        "deletions": 0,
        "date": "2007-07-13",
        "commitResults": [
          {
            "hash": "6cc36378f78aab2feb2d26d429d273d6a1f78865",
            "messageTitle": "implement #4012: flag back tick as deprecated (new W0333 message)",
            "messageBody": "",
            "insertions": 12,
            "deletions": 0
          },
          {
            "hash": "89b367da29914ed4ce95fca177d9eabe006124a9",
            "messageTitle": "fix #4026: pylint.el should require compile",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "30ead39404f5b744a69dfe86e76a1bc3abe9de19",
            "messageTitle": "update changelog",
            "messageBody": "",
            "insertions": 5,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 160,
        "deletions": 225,
        "date": "2007-07-14",
        "commitResults": [
          {
            "hash": "e524e87562c8d92f10c4684f7dd365b71d57878c",
            "messageTitle": "fix #3733: Messages (dis)appear depending on order of file names",
            "messageBody": "",
            "insertions": 60,
            "deletions": 57
          },
          {
            "hash": "29a1a337b7208efdc966a006597edd9d2557629a",
            "messageTitle": "pylint pylint",
            "messageBody": "",
            "insertions": 100,
            "deletions": 77
          },
          {
            "hash": "3ed2903e620620bf4103097903e8080546b73588",
            "messageTitle": "rlint is not usable yet, may reintroduce it later but remove it for now",
            "messageBody": "",
            "insertions": 0,
            "deletions": 91
          }
        ]
      },
      {
        "insertions": 9,
        "deletions": 4,
        "date": "2007-07-20",
        "commitResults": [
          {
            "hash": "012196ca03ce9364d99a555a3e4d55e4be76a96b",
            "messageTitle": "applied Stefan Rank patch",
            "messageBody": "",
            "insertions": 9,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 2,
        "date": "2007-08-09",
        "commitResults": [
          {
            "hash": "61a3c707d1ccc6b7fbc2b43bd4c6a2ef4495500d",
            "messageTitle": "fix a bug in colorized reporter, spotted by Dave Borowitz",
            "messageBody": "",
            "insertions": 3,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 2,
        "date": "2007-08-22",
        "commitResults": [
          {
            "hash": "12c28b6d335d8a1ac33978bbda899e0c24d41cd9",
            "messageTitle": "doc fixes",
            "messageBody": "",
            "insertions": 6,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 26,
        "deletions": 9,
        "date": "2008-01-14",
        "commitResults": [
          {
            "hash": "1ecc15b00de45cccd0b5790d0885a0a3c8519044",
            "messageTitle": "0.14",
            "messageBody": "",
            "insertions": 11,
            "deletions": 5
          },
          {
            "hash": "e8179ad1fa40eb3c66d457232c6eee65b2e78070",
            "messageTitle": "include Thomas W Barr patch: ignored-class option on typecheck checker",
            "messageBody": "",
            "insertions": 15,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 863,
        "deletions": 612,
        "date": "2008-02-07",
        "commitResults": [
          {
            "hash": "07340dcbb0198ee3cf551a1453292aa81abf0b24",
            "messageTitle": "included Stefan Rank\u0027s patch to deal with 2.4 relative import",
            "messageBody": "",
            "insertions": 32,
            "deletions": 19
          },
          {
            "hash": "eae036d87aac831dcb6e64226170cb7378bd450e",
            "messageTitle": "regenerated documentation",
            "messageBody": "",
            "insertions": 158,
            "deletions": 146
          },
          {
            "hash": "c68072ba3538c9afb8bf4830c9154633d9bdddf7",
            "messageTitle": "included Robert Kirkpatrick\u0027s tutorial and typos fixes",
            "messageBody": "",
            "insertions": 456,
            "deletions": 76
          },
          {
            "hash": "a8d9a5b71c40ee42e9c3bfe470cf4b2de83f01fc",
            "messageTitle": "makefile fix",
            "messageBody": "",
            "insertions": 177,
            "deletions": 177
          },
          {
            "hash": "59db1e5bc15d8fecc34128df01702a451c34ef48",
            "messageTitle": "fix faq reference",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "886164ad67b1bd264af0ec707986ae98152120d4",
            "messageTitle": "fix test failure due to astng cache",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          },
          {
            "hash": "1e4f622e871d2cff6c9daf98b8b5b15a37c3c1ef",
            "messageTitle": "update messages",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "0a9ea1f31524f64657abb89165207d9465728f58",
            "messageTitle": "fix bug in reenabling message",
            "messageBody": "",
            "insertions": 25,
            "deletions": 12
          },
          {
            "hash": "c8a3e32d0eca691269c9b10d0fcec4ded38e1ed9",
            "messageTitle": "ChangeLog",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "58ab68be5205ffd0e2a328bf14319110b03e00ce",
            "messageTitle": "compact ChangeLog",
            "messageBody": "",
            "insertions": 4,
            "deletions": 176
          }
        ]
      },
      {
        "insertions": 59,
        "deletions": 19,
        "date": "2008-03-27",
        "commitResults": [
          {
            "hash": "6fbbe18d627d451fd25ea815a612298207c341af",
            "messageTitle": "backported Yaroslav Halchenko patches",
            "messageBody": "",
            "insertions": 39,
            "deletions": 4
          },
          {
            "hash": "04f60edd9450ca0dca27944a661fea16ab6ad089",
            "messageTitle": "    * typecheck: acquired-members option has been dropped in favor of the more       generic generated-members option. If the zope option is set, the behaviour       is now to add some default values to generated-members.",
            "messageBody": "",
            "insertions": 17,
            "deletions": 10
          },
          {
            "hash": "2236bb1177d0200105170d5190fd5c3e14e0b501",
            "messageTitle": "cleanup",
            "messageBody": "",
            "insertions": 3,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 6,
        "date": "2008-05-05",
        "commitResults": [
          {
            "hash": "1305a73de53853a35a8b27e0b8a37d316bceeef3",
            "messageTitle": "fix USER_HOME name error when PYLINTHOME env var is defined",
            "messageBody": "",
            "insertions": 7,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 3,
        "date": "2008-05-13",
        "commitResults": [
          {
            "hash": "c4b7a6f7f90f918e60ced25eefe31da171bf7cf8",
            "messageTitle": "fix #2473: invoking pylint on __init__.py (hopefuly)",
            "messageBody": "",
            "insertions": 5,
            "deletions": 2
          },
          {
            "hash": "a1699c1409cad389a1d44433afb6e938de5039f3",
            "messageTitle": "regexp fix",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 34,
        "deletions": 23,
        "date": "2008-07-30",
        "commitResults": [
          {
            "hash": "363cc2a2f06fb4a0acb3b40af27a8ae3b2ed8746",
            "messageTitle": "fix diagrams definition handlers",
            "messageBody": "",
            "insertions": 34,
            "deletions": 23
          }
        ]
      },
      {
        "insertions": 11,
        "deletions": 4,
        "date": "2008-07-31",
        "commitResults": [
          {
            "hash": "b496213cf0657b277b5c626838286e9e2cf6f449",
            "messageTitle": "new non regression crash test",
            "messageBody": "",
            "insertions": 8,
            "deletions": 1
          },
          {
            "hash": "04bc07bbff5cd100caf9bb4c2d17cd1f8fdfb5d4",
            "messageTitle": "consistency",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 17,
        "date": "2008-08-20",
        "commitResults": [
          {
            "hash": "4732db70f97159700a3d8c1bc8ac7728e76bd8c8",
            "messageTitle": "remove deprecated quiet argument to Run()",
            "messageBody": "",
            "insertions": 10,
            "deletions": 17
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 4,
        "date": "2008-10-15",
        "commitResults": [
          {
            "hash": "7d22cb7135592557302bf564b594aa7ae3f8b1ec",
            "messageTitle": "fix .bat files as suggested by Okko Willeboords to all space in file names",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 3,
        "date": "2008-11-19",
        "commitResults": [
          {
            "hash": "aa5ec5c393640b7667ce9df27f783daafa2b1431",
            "messageTitle": "cleanup",
            "messageBody": "",
            "insertions": 1,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 123,
        "deletions": 45,
        "date": "2008-12-03",
        "commitResults": [
          {
            "hash": "74f6523268b5a1f6a3bc11ff943672744891d162",
            "messageTitle": "    * include a modified version of Maarten ter Huurne patch of avoid W0613       warning on arguments from overridden method",
            "messageBody": "",
            "insertions": 73,
            "deletions": 10
          },
          {
            "hash": "981405eb15d8bfeb5d92db138658ad530f8e2255",
            "messageTitle": "add epylint.bat script to fix Windows installation",
            "messageBody": "",
            "insertions": 43,
            "deletions": 27
          },
          {
            "hash": "fc6a68b5523b1e65bd05af3931f199e2ab161edb",
            "messageTitle": "cleanup / lint fixes",
            "messageBody": "",
            "insertions": 7,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 18,
        "deletions": 6,
        "date": "2008-12-16",
        "commitResults": [
          {
            "hash": "7bfb17db83ba6a673787b15f5698ddc51ffba8d8",
            "messageTitle": "test None to avoid pb running \u0027pytest -x\u0027 for instance...",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "bd7048c7ce48d7e624ccffc9f197e70e60d58d81",
            "messageTitle": "test update",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "b4c1bbdf87abc4b902e30f73f58286bd8d7330da",
            "messageTitle": "fix W0631 false positive reported by Paul Hachmann",
            "messageBody": "",
            "insertions": 13,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 1,
        "date": "2009-01-15",
        "commitResults": [
          {
            "hash": "6704a70383965b63d5b9a1de17d0fb1c8564c32b",
            "messageTitle": "fix #6954, patch contributed by Mads Kiilerich",
            "messageBody": "",
            "insertions": 11,
            "deletions": 0
          },
          {
            "hash": "6cb5633e4e969f399c9f72953c0cb1e25f09d3f5",
            "messageTitle": "typo",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 18,
        "deletions": 1,
        "date": "2009-01-16",
        "commitResults": [
          {
            "hash": "570839fbb091294dc95914e1abea57b3866942d0",
            "messageTitle": "fix #6949: as suggested by m. kiilerich, we should remove __dict__ node added by astng to avoid E0601/E0602 false negative",
            "messageBody": "",
            "insertions": 18,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 8,
        "deletions": 5,
        "date": "2009-01-19",
        "commitResults": [
          {
            "hash": "3a608c9d398313a3469403b542cace7c01475260",
            "messageTitle": "fix test: avoid undesired messages",
            "messageBody": "",
            "insertions": 8,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 47,
        "deletions": 34,
        "date": "2009-01-21",
        "commitResults": [
          {
            "hash": "1e4e5d7c28164ec800eb9f74a67c58629bba8d6f",
            "messageTitle": "setuptools compat",
            "messageBody": "",
            "insertions": 42,
            "deletions": 32
          },
          {
            "hash": "7893d07bf6048ca469275a36474ac453e82b0d4c",
            "messageTitle": "don\u0027t crash if unsupported option in found configuration file",
            "messageBody": "",
            "insertions": 5,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 279,
        "deletions": 105,
        "date": "2009-01-28",
        "commitResults": [
          {
            "hash": "00e028211f20cfc3c171f7848fbf88443e0e614c",
            "messageTitle": "use join",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "b657285c78089cf4e5c5159acfcb3f88ae51bef8",
            "messageTitle": "change [en|dis]able-msg-cat options: only accept message categories identified by their first letter (eg IRCWEF) without the need for comma as separator",
            "messageBody": "",
            "insertions": 31,
            "deletions": 25
          },
          {
            "hash": "b734c03d03da0b0b932c40044de18825637db0b2",
            "messageTitle": "enhance m.kiilerich patch so exit status code may be somewhat controlled (eg which message categories will trigger non zero status code)",
            "messageBody": "",
            "insertions": 55,
            "deletions": 35
          },
          {
            "hash": "bf5263179102af311ace3a110954942318ac348a",
            "messageTitle": "update change log",
            "messageBody": "",
            "insertions": 14,
            "deletions": 2
          },
          {
            "hash": "260c919a305caeaa45a2b13e36c8d48beece4391",
            "messageTitle": "#5575",
            "messageBody": "",
            "insertions": 23,
            "deletions": 9
          },
          {
            "hash": "c28101b902cf45f9515d9d5e162f073fca96df31",
            "messageTitle": "fix W0631, false positive reported by Paul Hachmann",
            "messageBody": "",
            "insertions": 7,
            "deletions": 3
          },
          {
            "hash": "3bbacbb0e0de8fe4beaaa157206c8d501b8d8728",
            "messageTitle": "0.16",
            "messageBody": "",
            "insertions": 11,
            "deletions": 5
          },
          {
            "hash": "9f7b6846b9b51eeec6a84df09e34bc27de53614a",
            "messageTitle": "setup.py fix",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "23fd11df220ae230ba20362b8fd94d3b03b695c0",
            "messageTitle": "Nathaniel Manista patch to check suspicious lambda",
            "messageBody": "",
            "insertions": 57,
            "deletions": 1
          },
          {
            "hash": "c50ad1a5052caf054b2e90677fbf2298816535bf",
            "messageTitle": "nathaniel patch tests",
            "messageBody": "",
            "insertions": 47,
            "deletions": 0
          },
          {
            "hash": "0d9ccbc04f9d0ad9157a313d79488e49a97fae9f",
            "messageTitle": "remove zero-status-cat option, use message filtering + different status  code instead",
            "messageBody": "",
            "insertions": 31,
            "deletions": 24
          }
        ]
      },
      {
        "insertions": 11,
        "deletions": 7,
        "date": "2009-02-12",
        "commitResults": [
          {
            "hash": "aa731b65894479043b8c5e34c0ebf476ff4e0301",
            "messageTitle": "fix html reporter to avoid all messages ending in pylint_globals.html when --files-output is set",
            "messageBody": "",
            "insertions": 11,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 32,
        "deletions": 35,
        "date": "2009-03-06",
        "commitResults": [
          {
            "hash": "eba361bb86e0967027f2356d45fc8042c247b6a7",
            "messageTitle": "astng2 support",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 32,
            "deletions": 35
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 63,
        "date": "2009-03-09",
        "commitResults": [
          {
            "hash": "2bfc97918d2cad0245dc61ca96aa3d3d00daa50c",
            "messageTitle": "less generic but cleaner setup.py script, stop adding test into include_dirs to avoid byte-compilation pb w/ syntax error in test data",
            "messageBody": "",
            "insertions": 10,
            "deletions": 55
          },
          {
            "hash": "df2211470a515b982073a6587873f09b7e428d04",
            "messageTitle": "cleanup",
            "messageBody": "",
            "insertions": 0,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 58,
        "deletions": 22,
        "date": "2009-03-13",
        "commitResults": [
          {
            "hash": "d6ee7aefa1ac1538b6195ba8501be746f7cf0095",
            "messageTitle": "test fixes",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "d4bb9f5f10987a2f1c4586775a81cf6ec7471724",
            "messageTitle": "fix block lines for enabling/disabling messages",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 24,
            "deletions": 3
          },
          {
            "hash": "5771d8eb2f7a76bc96be8f1d5c3c737ff325a4be",
            "messageTitle": "None is now a Const",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "2302e194dbfdf1b60b26ec7f393df743de8f58e3",
            "messageTitle": "should use blockstart_tolineno when available",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 10,
            "deletions": 8
          },
          {
            "hash": "a80e226b7d0d042f726ea05ee02f478d48d06cc1",
            "messageTitle": "handle AssName / DelName to enhance detection of unused/undefined variable on aug and del assigment",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 19,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 44,
        "deletions": 57,
        "date": "2009-03-17",
        "commitResults": [
          {
            "hash": "e5bf91d422d3291a4aba46eec91c6252075b0609",
            "messageTitle": "better name, fix impl",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 9,
            "deletions": 10
          },
          {
            "hash": "4c6702b83225200fbd8845eaca4a2294aaef1614",
            "messageTitle": "fix import for new astng organisation",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 26,
            "deletions": 37
          },
          {
            "hash": "bb864d0b5b0537b3c96677bb1d0f820744a2b450",
            "messageTitle": "use MANAGER",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "1cc5dcaa6238d313b7f3e468984d6e09c19a7571",
            "messageTitle": "default code is 28",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "eaaa803e9b54fb30567317fd1ec734584cd8ca02",
            "messageTitle": "fix output status computing",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "409fd1949c24a7efde059e5e95ca60b327ff370b",
            "messageTitle": "fix checking of module attributes accessible in module scope",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "bc2b99a64da9512686b211a84389c1cdac070312",
            "messageTitle": "CallFunc as now a func attribute, not node",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "7780cf0001e2198e84256d040b2fe8b922ad971b",
            "messageTitle": "re",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "565a349aa61148e9319fae1bd8e20d69f39d3048",
            "messageTitle": "simply test using isinstance...",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 1,
            "deletions": 2
          },
          {
            "hash": "99ecd483e2a74482bd889784cea2e39ab84d542a",
            "messageTitle": "oops",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 46,
        "deletions": 78,
        "date": "2009-03-18",
        "commitResults": [
          {
            "hash": "8d24848435fd554c5761df1fe8bf403fa5d1834d",
            "messageTitle": "update astng dep",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "2f441cf1b79c3bf3e7dc5e898d8208660d3eb6f1",
            "messageTitle": "remove more rpython stuff",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 2,
            "deletions": 59
          },
          {
            "hash": "22c81adfb03524cab18843ac430c004b120c5d0e",
            "messageTitle": "more tests",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 8,
            "deletions": 0
          },
          {
            "hash": "aaf880d70a2b4a4d8a1e37dbe37dfb8d25f5ee17",
            "messageTitle": "fix msg order",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "2ac99b2a24d44a3b56c035a889f6bd78f4f41b7f",
            "messageTitle": "give stmt node, not function node,~ to get correct line number",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "744d593409a003429ceb18baa1616735124b07a6",
            "messageTitle": "update import",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 7,
            "deletions": 5
          },
          {
            "hash": "dc6916fc9a5065c01ea9857390f884269e66c5e3",
            "messageTitle": "remove debug raise",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 0,
            "deletions": 1
          },
          {
            "hash": "c03c13a248a3911f6780957c12a3f5555573dafe",
            "messageTitle": "fix module special attributes checking",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 8,
            "deletions": 1
          },
          {
            "hash": "b4b4e930e357dc0a3741f54002a27a6fbdb93e51",
            "messageTitle": "update setuptools deps",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "c75fa2107bb84a2196dfbef3e9b1d0e053722370",
            "messageTitle": "test and fix W0612 false positive",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 10,
            "deletions": 0
          },
          {
            "hash": "80d38e7ceafd9916220a7ca1368c68710a1540cc",
            "messageTitle": "more test",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 3,
            "deletions": 0
          },
          {
            "hash": "3f1736d8ab437e507c1a1ec1f74dc3fd425789d4",
            "messageTitle": "no more necesary",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 0,
            "deletions": 3
          },
          {
            "hash": "5d16f4ee9be28f132de14f119e7ab4043d58f25f",
            "messageTitle": "argh, was actuallly necessary",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 3,
            "deletions": 0
          },
          {
            "hash": "c09f10c055b516ed33ef263e144044af447fe3ad",
            "messageTitle": "use is_argument",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 1,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 30,
        "deletions": 28,
        "date": "2009-03-19",
        "commitResults": [
          {
            "hash": "41cf9526d11d3ea33f1154d5cd463cddbf968178",
            "messageTitle": "cleanup",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 4,
            "deletions": 15
          },
          {
            "hash": "6980f02d07fd86ec3d9b6e8cd20750c2dc095388",
            "messageTitle": "more format checker test",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 18,
            "deletions": 0
          },
          {
            "hash": "a081c9f3779e1103e8c69ee9c46f3a424b2bbe84",
            "messageTitle": "use .fromlineno, not .lineno",
            "messageBody": "--HG--\nbranch : astng2\n",
            "insertions": 8,
            "deletions": 13
          }
        ]
      },
      {
        "insertions": 166,
        "deletions": 94,
        "date": "2009-03-23",
        "commitResults": [
          {
            "hash": "4984c5df9ca65d43e69568748e4af358e0b5f449",
            "messageTitle": "fix #8687, W0613 false positive on inner function",
            "messageBody": "",
            "insertions": 24,
            "deletions": 22
          },
          {
            "hash": "fef9a433db5d65a0a96635d5d92e0f28ec04cf44",
            "messageTitle": "skip * or **magic",
            "messageBody": "",
            "insertions": 17,
            "deletions": 1
          },
          {
            "hash": "99d4443eb41a872342f408e972d0bae463e25823",
            "messageTitle": "set E0501 line no to the first line where non ascii character has been found",
            "messageBody": "",
            "insertions": 13,
            "deletions": 10
          },
          {
            "hash": "962caf0d5cbb56358030a311e4de6b5ce686f632",
            "messageTitle": "more complete list of special methods, also skip W0613 for python internal method",
            "messageBody": "",
            "insertions": 42,
            "deletions": 15
          },
          {
            "hash": "4b1ac9b0ea2a6e2b9a56697b385a8075692fb957",
            "messageTitle": "cleanup",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "5b1b907c3e112cd11a38f734c15233f5c1634d1a",
            "messageTitle": "fix is_func_decorator / is_default",
            "messageBody": "",
            "insertions": 9,
            "deletions": 8
          },
          {
            "hash": "fe072fdb2c61ee174ab0f7407d3a92988877e37f",
            "messageTitle": "more complete list",
            "messageBody": "",
            "insertions": 6,
            "deletions": 0
          },
          {
            "hash": "8b574d75ce2b61b322210e72837f3c41cf25d835",
            "messageTitle": "fix #8350, C0322 false positive on multi-line string",
            "messageBody": "",
            "insertions": 28,
            "deletions": 18
          },
          {
            "hash": "3b4c4bca1e930ad34e9b361b54bd4028d229cd6c",
            "messageTitle": "changelog",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "230e13d62ed89fe4e1aac0772362b86bc88b242f",
            "messageTitle": "don\u0027t issue E0203 when in try: except AttributeError",
            "messageBody": "",
            "insertions": 19,
            "deletions": 14
          },
          {
            "hash": "af04a907a2a084ec18cbb8e28552ceafd7dbb95c",
            "messageTitle": "cleanup",
            "messageBody": "",
            "insertions": 3,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 94,
        "deletions": 36,
        "date": "2009-03-24",
        "commitResults": [
          {
            "hash": "dda02ab2e5faf3ae2401925f46f7a6840ecb8afc",
            "messageTitle": "only skip E0602 when catched by a NameError or parent",
            "messageBody": "",
            "insertions": 36,
            "deletions": 6
          },
          {
            "hash": "ad8c0dacc0fef9cb02d90f37d661afa13a30536c",
            "messageTitle": "only skip E0203 when catched by an AttributeError or parent",
            "messageBody": "",
            "insertions": 12,
            "deletions": 4
          },
          {
            "hash": "4eada4276efeccbcdbdbae010665a61d81a43041",
            "messageTitle": "cleanup",
            "messageBody": "",
            "insertions": 0,
            "deletions": 2
          },
          {
            "hash": "deccc712dc20ba3224dbf1b051375d78f57d835d",
            "messageTitle": "changelog",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "050c3205a95565f60f9f8087d2fb1163ed896c8e",
            "messageTitle": "add test for #5719, fixed in astng",
            "messageBody": "",
            "insertions": 11,
            "deletions": 1
          },
          {
            "hash": "928f9e76c498f4fc622c7d241659cd15cc10f77f",
            "messageTitle": "don\u0027t show information messages by default",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "eb283cee6aa4ddd8180615551ac75d26e497031a",
            "messageTitle": "order import graph",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "e5a61d80a9236ca7b7fae154a2782b379795a2ae",
            "messageTitle": "setuptools fixes",
            "messageBody": "",
            "insertions": 16,
            "deletions": 14
          },
          {
            "hash": "0ab80f0e50eafa83777157c6ca72c443b904f067",
            "messageTitle": "switch to python-support for consistency w/ other logilab\u0027s packages",
            "messageBody": "",
            "insertions": 12,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 335,
        "deletions": 72,
        "date": "2009-03-25",
        "commitResults": [
          {
            "hash": "037076855b9415e022bb196d33edeb4310a31884",
            "messageTitle": "fix format  tests",
            "messageBody": "",
            "insertions": 6,
            "deletions": 6
          },
          {
            "hash": "96bd05e163fea4c9f4a515690074f62ffc69353c",
            "messageTitle": "not sure where this message change comes from...",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "cf8f4ecc29550080a8a28e2c6083a0cd04ea0590",
            "messageTitle": "0.18",
            "messageBody": "",
            "insertions": 328,
            "deletions": 65
          }
        ]
      },
      {
        "insertions": 29,
        "deletions": 17,
        "date": "2009-04-08",
        "commitResults": [
          {
            "hash": "bac6d4d2ec89589f829f8651c344bd01e9bca931",
            "messageTitle": "different error code with py \u003c 2.5",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "d39dc48233f02fac3f0a15b665dbb575e2189304",
            "messageTitle": "more complete list of python internal methods",
            "messageBody": "",
            "insertions": 10,
            "deletions": 3
          },
          {
            "hash": "92cc541e0ff2b417e60b72ab0861c733781b4e97",
            "messageTitle": "do not print Redefining builtin for additional builtins",
            "messageBody": "",
            "insertions": 7,
            "deletions": 8
          },
          {
            "hash": "d804c8a0829fc67f8d0419198fb7c7fbd3c47b6f",
            "messageTitle": "cleanup",
            "messageBody": "",
            "insertions": 0,
            "deletions": 4
          },
          {
            "hash": "73c19b7fc88ad86b7839e1877cae554a20217e65",
            "messageTitle": "#8764",
            "messageBody": "",
            "insertions": 10,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 3,
        "date": "2009-05-18",
        "commitResults": [
          {
            "hash": "f640423e69e4de6febae80b488b7628bc67093d6",
            "messageTitle": "Nathaniel\u0027s fix for w0108 false positive",
            "messageBody": "",
            "insertions": 10,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 12,
        "date": "2009-06-11",
        "commitResults": [
          {
            "hash": "e43cb92267b550fe9f6ba983009c3e2985320c08",
            "messageTitle": "d-t-w",
            "messageBody": "",
            "insertions": 12,
            "deletions": 12
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 1,
        "date": "2009-06-26",
        "commitResults": [
          {
            "hash": "e850b2777c394fd4d404bbf5758139567497b3d0",
            "messageTitle": "avoid error on ast built from live code",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 158,
        "deletions": 22,
        "date": "2009-08-06",
        "commitResults": [
          {
            "hash": "6a770636cfec2491c47e42079231496399cd8cad",
            "messageTitle": "improved flymake code and doc provided by Derek Harland",
            "messageBody": "",
            "insertions": 158,
            "deletions": 22
          }
        ]
      },
      {
        "insertions": 277,
        "deletions": 291,
        "date": "2009-08-26",
        "commitResults": [
          {
            "hash": "a34ed24b57a081fc490428832e6aa5f843fb68c7",
            "messageTitle": "refactor \u0026 fix the imports checker",
            "messageBody": "",
            "insertions": 99,
            "deletions": 111
          },
          {
            "hash": "b228dc6626addf40710c1e26a95e32e577112125",
            "messageTitle": "fix test, new logging checker",
            "messageBody": "",
            "insertions": 17,
            "deletions": 17
          },
          {
            "hash": "066ff789e7820bcb255500dfe5d41c059c3b8cf2",
            "messageTitle": "d-t-w, cleanup",
            "messageBody": "",
            "insertions": 161,
            "deletions": 163
          }
        ]
      },
      {
        "insertions": 281,
        "deletions": 188,
        "date": "2009-08-27",
        "commitResults": [
          {
            "hash": "5b6e51395a9ef79e3c5c8d1f91d234f11c949e65",
            "messageTitle": "reindent",
            "messageBody": "",
            "insertions": 65,
            "deletions": 72
          },
          {
            "hash": "205455a81512a49408f1e0a888ff322e9caba97d",
            "messageTitle": "fix necessary eol spaces",
            "messageBody": "",
            "insertions": 19,
            "deletions": 17
          },
          {
            "hash": "ce86fc1cb6c5e82795874ea50021bb01b11b5ff0",
            "messageTitle": "d-t-w",
            "messageBody": "",
            "insertions": 54,
            "deletions": 54
          },
          {
            "hash": "55c14a9c4e407cc318e9dd46a492258fabc74bc7",
            "messageTitle": "add test case of #8711, assigning from yield expression (actually fixed in astng)",
            "messageBody": "",
            "insertions": 21,
            "deletions": 0
          },
          {
            "hash": "8c77ea6bd8be1ba601aa2f203dab1d562f02940b",
            "messageTitle": "add test for #9588: false positive E1101 for augmented assignment",
            "messageBody": "",
            "insertions": 39,
            "deletions": 0
          },
          {
            "hash": "eddf11730f74f7d71b379c272dcd747b7742d873",
            "messageTitle": "d-t-w",
            "messageBody": "",
            "insertions": 7,
            "deletions": 7
          },
          {
            "hash": "25119d59989d09262587a2f5b8ca785fd0b40e75",
            "messageTitle": "d-t-w",
            "messageBody": "",
            "insertions": 26,
            "deletions": 26
          },
          {
            "hash": "efbaddbdcdbd95cacd580e0a54094707dffe669c",
            "messageTitle": "test and fix for #9215",
            "messageBody": "",
            "insertions": 30,
            "deletions": 1
          },
          {
            "hash": "af4eacb2adbb8232e52e138230fae0c5990d431d",
            "messageTitle": "0.18.1",
            "messageBody": "",
            "insertions": 18,
            "deletions": 11
          },
          {
            "hash": "43d357b32d4a770468350fa5b07536ef99e8cdf3",
            "messageTitle": "Added tag pylint-version-0.18.1 for changeset 185fbee3cc0b",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "414e7a121c56301ea38978014ecf7a398e91530f",
            "messageTitle": "Added tag pylint-debian-version-0.18.1-1 for changeset 132d0022a5fe",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 8,
        "deletions": 71,
        "date": "2009-08-28",
        "commitResults": [
          {
            "hash": "aeafc994eb9040f3bb6d7ee87ef3aed98cbfbc26",
            "messageTitle": "drop deprecated runtest.py file",
            "messageBody": "",
            "insertions": 0,
            "deletions": 5
          },
          {
            "hash": "26b2d823a33255621fc311d7aac0d4c503c39c85",
            "messageTitle": "no need for a TODO file, use the tracker",
            "messageBody": "",
            "insertions": 0,
            "deletions": 46
          },
          {
            "hash": "64e72fa1aa12905ccbbfeaa178bce3ecd0a7932c",
            "messageTitle": "simplify and fix MANIFEST.in",
            "messageBody": "",
            "insertions": 8,
            "deletions": 20
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 2,
        "date": "2009-10-21",
        "commitResults": [
          {
            "hash": "591478071211f6db0f8cafc4aa4929f50e37266a",
            "messageTitle": "fix warning",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "6f63f188baeb2c76fa8105d18e7251fc65cc0132",
            "messageTitle": "missing __delete__ method",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 164,
        "deletions": 164,
        "date": "2009-11-23",
        "commitResults": [
          {
            "hash": "8746b95b65267dfa758174cd2de61719f7fb4697",
            "messageTitle": "include Dotan Barak spell fixes patch",
            "messageBody": "",
            "insertions": 164,
            "deletions": 164
          }
        ]
      },
      {
        "insertions": 21,
        "deletions": 19,
        "date": "2009-11-25",
        "commitResults": [
          {
            "hash": "5c937da236b1c46b43245b50509ece6ce7906a90",
            "messageTitle": "test fixes to consider fixed typos",
            "messageBody": "",
            "insertions": 8,
            "deletions": 8
          },
          {
            "hash": "a531f72114460a63db411bdf0a960e16b1277a62",
            "messageTitle": "use display_type defined as an astng method",
            "messageBody": "",
            "insertions": 2,
            "deletions": 10
          },
          {
            "hash": "55729538e7def0d3ffae08b4a3fedcae68fbc7a1",
            "messageTitle": "missing __revision__ to avoid failure",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "1a9bcaada90a50d82796e2617871f88aed90722a",
            "messageTitle": "fix #18862: E0601 false positive with lambda functions",
            "messageBody": "",
            "insertions": 10,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 102,
        "deletions": 11,
        "date": "2009-12-18",
        "commitResults": [
          {
            "hash": "1c06c675b22b9f9b6b2081a1f1bd61809253368c",
            "messageTitle": "include vincent patch for #5821",
            "messageBody": "",
            "insertions": 67,
            "deletions": 1
          },
          {
            "hash": "5264e02877816d230eb1d0ef659f43c2fd46b853",
            "messageTitle": "prepare 0.19",
            "messageBody": "",
            "insertions": 12,
            "deletions": 5
          },
          {
            "hash": "74c6412a461e2967b8dbe2e98b4c3f7285730736",
            "messageTitle": "doc update",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "d6bb1087bf8361a09540a26035ed3f188f7de0cf",
            "messageTitle": "update dependencies",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "458ccb85a67607a6eff8834093b84d402b8f965d",
            "messageTitle": "packaging fixes",
            "messageBody": "",
            "insertions": 16,
            "deletions": 2
          },
          {
            "hash": "c0b9291cd18e8b0177168456e50bf6392190f591",
            "messageTitle": "Added tag pylint-version-0.19.0 for changeset ee15313ac5f5",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "d9e6871819152ffceec37e8334e1cf429abf7283",
            "messageTitle": "Added tag pylint-debian-version-0.19.0-1 for changeset d357b40e3af7",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 1,
        "date": "2010-02-03",
        "commitResults": [
          {
            "hash": "f34b549cdf7a7c7699a8045713b1c60fc504b907",
            "messageTitle": "add note about wingide",
            "messageBody": "",
            "insertions": 4,
            "deletions": 0
          },
          {
            "hash": "ad3078f583225863a1f96e1f5d2e6e5016b27456",
            "messageTitle": "fix bug discovered by Diez B. Roggisch: we should access  to the potentially extended list, not the original one",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 127,
        "deletions": 12,
        "date": "2010-02-23",
        "commitResults": [
          {
            "hash": "e8e8fd80f2787933494f67a9140c1710940e04ca",
            "messageTitle": "implement #5564: ignore function / methode arguments with leading \"_\".  * \"ignored-argument-names\" have been added to options in order to set the    regexp that recognizes the ignored arguments.  * func_too_many_locals_arguments.(py, txt) have been added to test \"too many    arguments\" and \"too many local variables\" features.",
            "messageBody": "",
            "insertions": 79,
            "deletions": 4
          },
          {
            "hash": "9686bf693764bdf9bb805afbbbe0ac71230b6cab",
            "messageTitle": "patch for #5977. Yields do not increment the counter of returns.   * remove yields counting",
            "messageBody": "",
            "insertions": 48,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 13,
        "deletions": 2,
        "date": "2010-03-04",
        "commitResults": [
          {
            "hash": "ebb64fcf6f83eb12e7dd86467054d223922a56b0",
            "messageTitle": "applied Colin Moris patch closing #9263: no W0613 for __init__ (method does not use all of its arguments)",
            "messageBody": "",
            "insertions": 11,
            "deletions": 2
          },
          {
            "hash": "8a8be97e8fd7751d4c6341e9f59ca7908a7893d5",
            "messageTitle": "update changelog",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 18,
        "deletions": 1,
        "date": "2010-03-22",
        "commitResults": [
          {
            "hash": "7174c37463c790b2bab760f923349b1e706a4910",
            "messageTitle": "test and fix crash on global w/ \u0027virtual\u0027 nodes such as __file__, __module__, etc.",
            "messageBody": "",
            "insertions": 17,
            "deletions": 0
          },
          {
            "hash": "9917db3dc3abc6d13768be3c7ff8989b5634caa5",
            "messageTitle": "fix test",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 65,
        "deletions": 11,
        "date": "2010-03-23",
        "commitResults": [
          {
            "hash": "e413924a4cd837914f521df4bb3daa165812c329",
            "messageTitle": "implement #18860, new W0199 message on assert (a, b) by Fletcher Johnson",
            "messageBody": "",
            "insertions": 32,
            "deletions": 7
          },
          {
            "hash": "554bf4e55dee455fa5cacc6cc6ff88129e4486ea",
            "messageTitle": "nikola kramaric fix #5975, Abstract intermediate class not recognized as such",
            "messageBody": "",
            "insertions": 28,
            "deletions": 1
          },
          {
            "hash": "9365bee1ff43b75c12b3217df25488fb419246af",
            "messageTitle": "we may have name node with fromlineno to None for astng built from C-compiled modules",
            "messageBody": "",
            "insertions": 5,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 326,
        "deletions": 146,
        "date": "2010-04-02",
        "commitResults": [
          {
            "hash": "6ba4a8990fbe445cffd4e0ee19c14be362745b66",
            "messageTitle": "apply tahiti team doc patch",
            "messageBody": "",
            "insertions": 310,
            "deletions": 144
          },
          {
            "hash": "17f9b78a9fb716236e3295bd3114cc9d2d12ad11",
            "messageTitle": "apply patch from Nicola Kramaric closing #21591: html reporter produces no output if reports is set to \u0027no\u0027",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "7b7ba07ae4c88cdf0ed180cb3974259ac628842f",
            "messageTitle": "update changelog",
            "messageBody": "",
            "insertions": 13,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 214,
        "deletions": 219,
        "date": "2010-04-16",
        "commitResults": [
          {
            "hash": "69f4e17d13b37e0de2155d4c71225215f6cc47d0",
            "messageTitle": "set option level to configure --help / --long[-long]-help with lgc 0.50",
            "messageBody": "",
            "insertions": 11,
            "deletions": 8
          },
          {
            "hash": "f8795808c8b0f61ad1417102b3666d73313501ba",
            "messageTitle": "refactor messages and checker handling",
            "messageBody": "* new ast walker, built at registration time\n\n* properly handle dependencies between checkers instead of\n  priority based order\n\n* only run checker necessary according to activated message\n\n* much more simple command line: [en|dis]able-msg,\n  [en|dis]able-msg-cat and [en|dis]able-report superseeded\n  by [en|dis]able options\n\n-\u003e we should split current checkers into simpler checker with the\nsame name, and proper dependencies when needed\n",
            "insertions": 160,
            "deletions": 194
          },
          {
            "hash": "b629af106ea082e283abc4047d5b1ae328404317",
            "messageTitle": "d-t-w",
            "messageBody": "",
            "insertions": 10,
            "deletions": 10
          },
          {
            "hash": "3c7834e9961459f9db71fb827b20a4219c6081e6",
            "messageTitle": "fix support for checker.[visit|leavve]_default methods",
            "messageBody": "",
            "insertions": 31,
            "deletions": 6
          },
          {
            "hash": "5cf0cef9a86952ca83dedac14d43deb37d03115a",
            "messageTitle": "record ordered checkers for later call to close",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 766,
        "deletions": 726,
        "date": "2010-04-19",
        "commitResults": [
          {
            "hash": "0af504b46ba0f7f63fc9d92d2f641a71e4deb971",
            "messageTitle": "use generic disable / enable methods and inline option",
            "messageBody": "",
            "insertions": 125,
            "deletions": 135
          },
          {
            "hash": "ede82d769578c8498d48e353022e6e52bbd5ebec",
            "messageTitle": "cleanup, d-t-w, fix remaining [en|dis] method call",
            "messageBody": "",
            "insertions": 257,
            "deletions": 254
          },
          {
            "hash": "b8f436971271cd6746c70510f81fd6cb9306ad04",
            "messageTitle": "also unify [en|dis]able-report with generic [en|dis]able.",
            "messageBody": "Provide bw compat from -msg because it may be heavilu used in python files.\n",
            "insertions": 22,
            "deletions": 21
          },
          {
            "hash": "da7767073bbb989e756047f84bf40ca5f8982dbc",
            "messageTitle": "--help output configuration",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "116d7011f303fd219acc40aabb14bbdc46eb52b6",
            "messageTitle": "fix full documentation generation",
            "messageBody": "",
            "insertions": 25,
            "deletions": 23
          },
          {
            "hash": "50760a7ddacf19cacc4ac0f68dd8d39d794b961e",
            "messageTitle": "begin splitting the basic checker",
            "messageBody": "",
            "insertions": 333,
            "deletions": 288
          },
          {
            "hash": "25eed32d1bffd94c859ea5153277f1cd2db9382e",
            "messageTitle": "cleanup",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 529,
        "deletions": 75,
        "date": "2010-05-11",
        "commitResults": [
          {
            "hash": "a706638581bb1bfd62a37aff18f5c13b9eea341b",
            "messageTitle": "--errors-only short name is now -E, -e is for --enable and -d for --disable",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "44103ba35cc481332d1181cb385048f7d070da8a",
            "messageTitle": "remove deprecation warning with lgc \u003e 0.50",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "26a215b95153a78caf0ac5aa16d17e1510f52619",
            "messageTitle": "apply emile\u0027s patch, fix test with python\u003e\u003d2.6",
            "messageBody": "",
            "insertions": 34,
            "deletions": 8
          },
          {
            "hash": "b63ce67f9d38c3b3acbfba38806802cadc0e6ce9",
            "messageTitle": "fix statement count",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          },
          {
            "hash": "bd55aea1eabdff936e16f2a8210e9cd4fa0093ad",
            "messageTitle": "cleanup",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "0c10f49a9ff35264ff0131292c857cf5a07b8411",
            "messageTitle": "new pylint gui, contributed by Scott Pilkey and friends from the Tahiti team",
            "messageBody": "",
            "insertions": 426,
            "deletions": 36
          },
          {
            "hash": "190db2ffc8b23109f65a343e09348b9967f0ba70",
            "messageTitle": "prepare 0.21",
            "messageBody": "",
            "insertions": 19,
            "deletions": 5
          },
          {
            "hash": "7060f000f837573ff3c69b0172505eb49d059600",
            "messageTitle": "Added tag pylint-version-0.21.0 for changeset 97d944ea839e",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "2e64d0432015b55a83fb1d543ee5f82d091530e7",
            "messageTitle": "Added tag pylint-debian-version-0.21.0-1 for changeset 859239bcd087",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "7aa9470f37fff8078a0c92f01b672ecd944e7109",
            "messageTitle": "enhance announce skel",
            "messageBody": "",
            "insertions": 12,
            "deletions": 8
          },
          {
            "hash": "997dfd6a958d64a92f97ceef3fb1fe507db5fc25",
            "messageTitle": "forgot to close changelog file",
            "messageBody": "",
            "insertions": 26,
            "deletions": 13
          }
        ]
      },
      {
        "insertions": 28,
        "deletions": 23,
        "date": "2010-05-12",
        "commitResults": [
          {
            "hash": "4d92f84f482f90686132d58c052e3b22c328b79a",
            "messageTitle": "lint fixes",
            "messageBody": "",
            "insertions": 5,
            "deletions": 7
          },
          {
            "hash": "014473260689ff2b0e04fc91992adce3d66cfd93",
            "messageTitle": "fix #28962: pylint crash with new options, due to missing stats data while writing the Statistics by types report",
            "messageBody": "",
            "insertions": 23,
            "deletions": 16
          }
        ]
      },
      {
        "insertions": 151,
        "deletions": 155,
        "date": "2010-05-25",
        "commitResults": [
          {
            "hash": "c13d5b55023240fa489acbdb1fb163dac0b3af4c",
            "messageTitle": "proper update of report identifiers to avoid collision with message in the Refactoring category",
            "messageBody": "",
            "insertions": 20,
            "deletions": 20
          },
          {
            "hash": "763f484095cadf9cbe668c737452117d1f1794a9",
            "messageTitle": "update man page for 0.21 usage, closes debian #582494",
            "messageBody": "",
            "insertions": 131,
            "deletions": 135
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 2,
        "date": "2010-06-04",
        "commitResults": [
          {
            "hash": "929ce1da01fdcaf8dea35000bf9f1c37d911d373",
            "messageTitle": "update changelog",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "ab1002a37d311819dd1b7caac2b5108ba9c13b46",
            "messageTitle": "0.21.1",
            "messageBody": "",
            "insertions": 11,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 0,
        "date": "2010-06-07",
        "commitResults": [
          {
            "hash": "ca72b55f8ed963cb97bb8954050650b98966ba52",
            "messageTitle": "Added tag pylint-version-0.21.1 for changeset 468843aec599",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "31210a5be0145e7836a095cacb12cd3b3b3acf51",
            "messageTitle": "Added tag pylint-debian-version-0.21.1-1 for changeset bc9688af2128",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 8,
        "deletions": 3,
        "date": "2010-07-01",
        "commitResults": [
          {
            "hash": "9c46cd7d7b76408ebaf9bfc6ea1e20d8b9d52827",
            "messageTitle": "Patrick Altman patch closing #36913",
            "messageBody": "",
            "insertions": 8,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 15,
        "deletions": 0,
        "date": "2010-07-05",
        "commitResults": [
          {
            "hash": "f0a9a86d98ba98728fb6c1777c2292ac8b4c549e",
            "messageTitle": "add test on empty implements",
            "messageBody": "",
            "insertions": 15,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 36,
        "deletions": 32,
        "date": "2010-07-12",
        "commitResults": [
          {
            "hash": "4c135a7d6e99bb3efa970ceb4ea9ebc2bf8c4667",
            "messageTitle": "update vim plugin url, add spyder, d-t-w",
            "messageBody": "",
            "insertions": 36,
            "deletions": 32
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 0,
        "date": "2010-07-26",
        "commitResults": [
          {
            "hash": "53cbaca197cfb95eb5234999dd93738fabbda2e9",
            "messageTitle": "fix fly-make documentation, as suggested by Derek Harland on python-projects",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 3,
        "date": "2010-08-16",
        "commitResults": [
          {
            "hash": "ee6532eee2cee42a8f14781eb262feb822fd50fc",
            "messageTitle": "clarify that you should put \u0027disable\u0027 option only one in the configuration file",
            "messageBody": "",
            "insertions": 5,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 3,
        "date": "2010-08-18",
        "commitResults": [
          {
            "hash": "37b54b313cc891a3c6f419ddc860cc61f22f5e9d",
            "messageTitle": "fix #28796: regression in --generated-members introduced pylint 0.20",
            "messageBody": "",
            "insertions": 4,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 24,
        "deletions": 15,
        "date": "2010-08-26",
        "commitResults": [
          {
            "hash": "768c1527fe96fd67b79fa624ecb71835efd22eb2",
            "messageTitle": "0.21.2",
            "messageBody": "",
            "insertions": 21,
            "deletions": 14
          },
          {
            "hash": "f2fd3680e3cbb9d58c6afd4e9cf5e88b594ba0c7",
            "messageTitle": "fix pkginfo",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "83f89593751982ec8836f28f8b9814cb41ae169a",
            "messageTitle": "Added tag pylint-version-0.21.2 for changeset f56cc1149f10",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "da3703424445c903455d882b4690a5024d6a65c6",
            "messageTitle": "Added tag pylint-debian-version-0.21.2-1 for changeset 084604fee73f",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 1,
        "date": "2010-09-06",
        "commitResults": [
          {
            "hash": "78d2a2106ce3204abbf4854d22ab4360a52a57a5",
            "messageTitle": "close changelog",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 1,
        "date": "2010-09-14",
        "commitResults": [
          {
            "hash": "877b093312778c08408b0355334f41ae9c545d8e",
            "messageTitle": "[test] fix smoketest.test0 by removing line to long message",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 83,
        "deletions": 68,
        "date": "2010-09-28",
        "commitResults": [
          {
            "hash": "ef03a02645383462f5f2003f7d88bc0799bebc56",
            "messageTitle": "update to unittest2",
            "messageBody": "",
            "insertions": 67,
            "deletions": 67
          },
          {
            "hash": "18b0f8361e6b4fa7f67da810a5e0de6eda013ef5",
            "messageTitle": "0.21.3",
            "messageBody": "",
            "insertions": 14,
            "deletions": 1
          },
          {
            "hash": "f046739ed5e6ea028eea938ca98f569ae2404eee",
            "messageTitle": "Added tag pylint-version-0.21.3 for changeset f098483da5ab",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "525323c9d555bfd26b72beb026fb4ec0a269f352",
            "messageTitle": "Added tag pylint-debian-version-0.21.3-1 for changeset 70e2836f1f46",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 4,
        "date": "2010-10-11",
        "commitResults": [
          {
            "hash": "1a10d59369eeb016856bcfa069e3308d540d4662",
            "messageTitle": "force source to true when explicitly asked to analyze a file",
            "messageBody": "",
            "insertions": 3,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2010-11-22",
        "commitResults": [
          {
            "hash": "222292502499b36637349c4d358f3e3170034576",
            "messageTitle": "precize line number in deprecation warning",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 10,
        "date": "2010-12-14",
        "commitResults": [
          {
            "hash": "18a57626a9bdeca94ff77c992e9ad1d744b645ef",
            "messageTitle": "performance: remove strange unused F0321 check, hence disabling the format checker when using \"-E\" or \"-d W,C\" option",
            "messageBody": "",
            "insertions": 2,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2011-01-03",
        "commitResults": [
          {
            "hash": "66452a58de50e64258859b3b54a6ddb31c8c9e29",
            "messageTitle": "apply patch provided by vijayendra bapte on the python projects list for using epylint under windows environment",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 32,
        "deletions": 8,
        "date": "2011-01-06",
        "commitResults": [
          {
            "hash": "a1dc8eb5ef12f566138ff725bba1a63eb3c62cec",
            "messageTitle": "avoid W0221 or W0222 when *args and **kwargs are in use. Patch by Charles Duffy.",
            "messageBody": "",
            "insertions": 31,
            "deletions": 5
          },
          {
            "hash": "91e8b4ce4adb8b19c3d928608f9dc6f1dec2a84e",
            "messageTitle": "#57311: Remove mentions of optik",
            "messageBody": "",
            "insertions": 1,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 14,
        "deletions": 11,
        "date": "2011-01-11",
        "commitResults": [
          {
            "hash": "673316bb83c4fac55bd854b66f2165e32c17a409",
            "messageTitle": "republish 0.23 which has never been published actually",
            "messageBody": "",
            "insertions": 14,
            "deletions": 11
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 0,
        "date": "2011-01-13",
        "commitResults": [
          {
            "hash": "37d3d4ada60ec18281cc5730423a87633d06c4d1",
            "messageTitle": "Added tag pylint-version-0.23.0 for changeset 2599058e6521",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "6d7ca386437e16da959bba9ad742de5641d66d61",
            "messageTitle": "Added tag pylint-debian-version-0.23.0-1 for changeset d6b7c88d182e",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 31,
        "deletions": 22,
        "date": "2011-06-16",
        "commitResults": [
          {
            "hash": "820e2b62a9a88542db41733bfda72ad77888ad3a",
            "messageTitle": "closes #69220: add column offset to the astng node",
            "messageBody": "",
            "insertions": 14,
            "deletions": 6
          },
          {
            "hash": "bc00856a5460ad10bd655483ba3e4181ae9dacc1",
            "messageTitle": "cleanups",
            "messageBody": "",
            "insertions": 17,
            "deletions": 16
          }
        ]
      },
      {
        "insertions": 360,
        "deletions": 188,
        "date": "2011-07-08",
        "commitResults": [
          {
            "hash": "1439af71e60d2cec640353cdcd9b69d9d3eb658c",
            "messageTitle": "closes #69950: Tests failing due to \u0027column offset\u0027 changes in 744",
            "messageBody": "",
            "insertions": 2,
            "deletions": 3
          },
          {
            "hash": "88c648a2432087c3ab8f40288d42e68603bdde2e",
            "messageTitle": "add note for IDE developpers",
            "messageBody": "",
            "insertions": 4,
            "deletions": 0
          },
          {
            "hash": "db8b3a47be9a7e111c2ea9b75cc8fa4ef7cf60c2",
            "messageTitle": "closes #69993: Additional string format checks for logging module",
            "messageBody": "",
            "insertions": 183,
            "deletions": 108
          },
          {
            "hash": "1fa5b2d8202ce2cf899016d37992aba61ee28df7",
            "messageTitle": "fix dumb name error in test",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "9894a90d4389a80e2a2921298f972e42303b642c",
            "messageTitle": "missing test data files",
            "messageBody": "",
            "insertions": 33,
            "deletions": 0
          },
          {
            "hash": "fc6034c2b2c8a7e191c01330557aaa17fec222b8",
            "messageTitle": "try to add information about why something is not importable",
            "messageBody": "",
            "insertions": 7,
            "deletions": 2
          },
          {
            "hash": "9f0f1b263e506e06e2c558d81de2ae929694bd54",
            "messageTitle": "test for #70381: IndendationError in import causes crash",
            "messageBody": "",
            "insertions": 5,
            "deletions": 0
          },
          {
            "hash": "4cf56a9467b82086b164d92db2f56455daf6fab2",
            "messageTitle": "missing test data file",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "8c9dd0eddc6d75f1bca1688b23ef11cc43eb56fc",
            "messageTitle": "closes #70495: absolute imports fail depending on module path (patch by Jacek Konieczny)",
            "messageBody": "",
            "insertions": 21,
            "deletions": 2
          },
          {
            "hash": "67bbca5f8bb04314a981f27d25048d26b490e91c",
            "messageTitle": "built-in checkers use [01-50] base message ids (closes #68057)",
            "messageBody": "",
            "insertions": 93,
            "deletions": 68
          },
          {
            "hash": "333a79259834fb63107f86b00f7752a1bf124a45",
            "messageTitle": "fix test failure with some python distribution (eg debian\u0027s 2.7) due to missing pstats module",
            "messageBody": "",
            "insertions": 5,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 3,
        "date": "2011-07-20",
        "commitResults": [
          {
            "hash": "11066526528b19a8b5e150099e792ae507479d57",
            "messageTitle": "0.24",
            "messageBody": "",
            "insertions": 10,
            "deletions": 3
          },
          {
            "hash": "66a9d5b64135801d6d61e7a01fe73584578ca7e2",
            "messageTitle": "Added tag pylint-version-0.24.0 for changeset 278d04a4749c",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "2b854e32aaff8d3d3cfd7388ab16dd690268e948",
            "messageTitle": "Added tag pylint-debian-version-0.24.0-1 for changeset e20d4f941078",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 84,
        "deletions": 24,
        "date": "2011-09-07",
        "commitResults": [
          {
            "hash": "91bc9adc5aed93dc1291a12847627c4d50597b58",
            "messageTitle": "closes #74742: make allowed name for first argument of class method configurable",
            "messageBody": "(patch by Google)\n",
            "insertions": 23,
            "deletions": 5
          },
          {
            "hash": "367866786e76c4bdfa71a362a835b1cdec0296aa",
            "messageTitle": "closes #74087: handle case where inference of a module return YES",
            "messageBody": "This avoid some cases of \"TypeError: \u0027_Yes\u0027 object does not support indexing\"\nwhen conditionally assigning a nonexisting module to intermediate modules in\na dotted name.\n\nThis is only a cosmetic fix to avoid the crash, the actual fix probably\nneeds a lot of work on the inference module to support conditional\nassignment and inspection of several places of assignment, rather than just\nthe latest one. Probably not worth it, either.\n\npatch by Google\n",
            "insertions": 17,
            "deletions": 3
          },
          {
            "hash": "a5e9bfea83f216af4b746d9afa5c0215e2d9f065",
            "messageTitle": "Fixes misleading wording in warnings E1001 and E1002 (patch by google)",
            "messageBody": "",
            "insertions": 7,
            "deletions": 7
          },
          {
            "hash": "8a3d1e80465dbfd5c939ab8ad6b0ad93c9afe539",
            "messageTitle": "closes #74745: make \u0027too general\u0027 exception names configurable (patch by Google)",
            "messageBody": "",
            "insertions": 19,
            "deletions": 7
          },
          {
            "hash": "e62152e132512e83b301e955494e255f9193b1be",
            "messageTitle": "closes #74747: don\u0027t crash when lookup up a special attribute in class scope",
            "messageBody": "(patch by google)\n",
            "insertions": 18,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 10,
        "date": "2011-10-03",
        "commitResults": [
          {
            "hash": "9654c98df97d614eb08f75a9e690635cf7fb2149",
            "messageTitle": "better message for E0202 (closes #77237)",
            "messageBody": "this also ease treatment: don\u0027t try to search parent frame (ie belonging class) which may\nbe hazardous, simply use the assignment node.\n",
            "insertions": 10,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 8,
        "date": "2011-10-04",
        "commitResults": [
          {
            "hash": "ca98ca8284b1cbba4067bc97f1fada02ed0df214",
            "messageTitle": "closes #73941: HTML reports badly formatted since col_offset addition, which was only partially added to the report",
            "messageBody": "",
            "insertions": 10,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 11,
        "deletions": 2,
        "date": "2011-10-07",
        "commitResults": [
          {
            "hash": "3a5a922b0dedcbfcce26080e281e0b88a02dff8e",
            "messageTitle": "0.25",
            "messageBody": "",
            "insertions": 9,
            "deletions": 2
          },
          {
            "hash": "2670a4eb8e3aa5cda52628a59c2b01f2deac601c",
            "messageTitle": "Added tag pylint-version-0.25.0 for changeset db15dcd07ce0",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "43bd1e39d9939ab48dddf56b5777525dfed0834e",
            "messageTitle": "Added tag pylint-debian-version-0.25.0-1 for changeset de2dd37ba146",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 151,
        "deletions": 29,
        "date": "2011-10-24",
        "commitResults": [
          {
            "hash": "93e817dc07b7ea04ea0ab85405f6f2b6422e6bd6",
            "messageTitle": "Fix for #81078: Warn if names in exception handlers clobber overwrite existing names",
            "messageBody": "",
            "insertions": 112,
            "deletions": 5
          },
          {
            "hash": "c5fbafaf1934db0d91dd0e2b227ef044ee290319",
            "messageTitle": "drop unittest2 deprecation warning",
            "messageBody": "",
            "insertions": 18,
            "deletions": 18
          },
          {
            "hash": "206d34267ff0234dcda12be1402c26dcd5b8cb36",
            "messageTitle": "Update W0623 to not trigger on code like:",
            "messageBody": "try:\n  ...\nexcept IOError, e:\n  ...\n\n...\n\ntry:\n  ...\nexcept OSError, e:\n  ...\n",
            "insertions": 21,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 117,
        "deletions": 71,
        "date": "2011-10-26",
        "commitResults": [
          {
            "hash": "f7bb70450c779235a9bc1a7d5666ee62d1638f77",
            "messageTitle": "This patch is an attempt to completely remove the need for all Google-internal patches done to pylint.",
            "messageBody": "Currently, we have to modify pylint in two places:\n\n* Default plugin loading:\n  Due to the way Python applications are deployed, the import magic in\n  checkers.package_load does not work and needs to be replaced. Placing the\n  calls in an overridable methods allows us to modify the behavior in our own\n  linter class\n* Special reporter:\n  We use a custom reporter. It can be passed to Run using the reporter argument,\n  but creating in the initializer allows for other reporters to be added to\n  REPORTER_OPT_MAP, which is a more general solution and might also benefit others.\n\nThese changes do not add any value to upstream pylint per se, but are not intrusive\nand would help us minimize the maintenance burden when upgrading to a new pylint\nupstream version, freeing up resources for more important work on pylint.\n",
            "insertions": 67,
            "deletions": 62
          },
          {
            "hash": "a91af2c9b5dfdca8f077fb3f535e94014e8cf999",
            "messageTitle": "Do not issue warnings when using 2.6\u0027s property.setter/deleter functionality. Closes #50461, #52020 and #51222.",
            "messageBody": "",
            "insertions": 45,
            "deletions": 2
          },
          {
            "hash": "d3f545682f301e4b388bb9677ecab1ce51b2668c",
            "messageTitle": "add note about soon useless stream.seek()",
            "messageBody": "",
            "insertions": 5,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 105,
        "deletions": 144,
        "date": "2011-12-05",
        "commitResults": [
          {
            "hash": "751484e68edbb8345aa9a48ceadec60a772f14f2",
            "messageTitle": "[doc] update README.Python3 (closes: #82421)",
            "messageBody": "Forget hardy distribution.\n",
            "insertions": 103,
            "deletions": 142
          },
          {
            "hash": "c8e40db275959c37f4efc605d86db44acb8d4305",
            "messageTitle": "doc update",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 2,
        "date": "2011-12-08",
        "commitResults": [
          {
            "hash": "e10f513f345f0bf6be6825e334a6b0defe97b0b6",
            "messageTitle": "0.25.1",
            "messageBody": "",
            "insertions": 8,
            "deletions": 2
          },
          {
            "hash": "0370344ea6f7a8c4b58689a65775d58af48e4649",
            "messageTitle": "Added tag pylint-version-0.25.1 for changeset 9f22949188a3",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "18c2506a9289f7f90ad433605ea65eba589a893b",
            "messageTitle": "Added tag pylint-debian-version-0.25.1-1 for changeset 3a6cf40ab050",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 9,
        "deletions": 7,
        "date": "2012-01-09",
        "commitResults": [
          {
            "hash": "c8e20f7f0568a1eee1e4d62f86abe0ce1d88a14a",
            "messageTitle": "epylint: ensure it uses the same python/pylint version. Closes #87024",
            "messageBody": "also, drop usage of sub-shell on the way.\n",
            "insertions": 9,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 14,
        "deletions": 1,
        "date": "2012-01-19",
        "commitResults": [
          {
            "hash": "281e4e1819447d31b366dfc3ace4e4bedd77aeb7",
            "messageTitle": "fix crash when decorators are accessed through more than one dot. Closes #87192",
            "messageBody": "",
            "insertions": 14,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 2,
        "date": "2012-02-23",
        "commitResults": [
          {
            "hash": "7e1cf48f5e089d051405612e0add7e4c8abccae8",
            "messageTitle": "d-t-w",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "d1ae21960ac1b39f9b6100ac5c790af30236edac",
            "messageTitle": "InferenceError may be raised when running the next iteration, but we don\u0027t want it to propagate",
            "messageBody": "",
            "insertions": 3,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 36,
        "deletions": 1,
        "date": "2012-03-15",
        "commitResults": [
          {
            "hash": "f6ad8e26b9586d280d42581b721ce2d3e9124b1e",
            "messageTitle": "don\u0027t emit E0202 (attribute hiding a method) on @property methods. Closes #89092",
            "messageBody": "",
            "insertions": 36,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 24,
        "deletions": 23,
        "date": "2012-05-03",
        "commitResults": [
          {
            "hash": "5fbe1a037319451a5e99ef48aad479ed11aafe99",
            "messageTitle": "Refactoring reporting.",
            "messageBody": "",
            "insertions": 24,
            "deletions": 23
          }
        ]
      },
      {
        "insertions": 9,
        "deletions": 4,
        "date": "2012-05-15",
        "commitResults": [
          {
            "hash": "a83c752258e482ced75894fb6092c8fa9ba7003c",
            "messageTitle": "fix gui reporter broken by addition of coloffset information. Closes #92584",
            "messageBody": "",
            "insertions": 9,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 11,
        "deletions": 2,
        "date": "2012-05-21",
        "commitResults": [
          {
            "hash": "ba578113c9c1b88cbc57ef5a9f09ef0a5a5cde5f",
            "messageTitle": "fix crash when using set in regexp for --generated-members option. Closes #88914",
            "messageBody": "",
            "insertions": 11,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 182,
        "deletions": 65,
        "date": "2012-06-07",
        "commitResults": [
          {
            "hash": "fa23ddf35a4414fb270d3a184a538ecf80481494",
            "messageTitle": "Doesn\u0027t check that overriden method signature match if it\u0027s a private method, closes #18772",
            "messageBody": "",
            "insertions": 59,
            "deletions": 19
          },
          {
            "hash": "662421f1f74303b547e501269a30020045a6ed3e",
            "messageTitle": "Add checking for protected attribute assignement, closes #7394. Remove checking for protected attribute access via super(). Move common code for checking protected attribute accessing in a new function _check_protected_attribute_access.",
            "messageBody": "",
            "insertions": 76,
            "deletions": 25
          },
          {
            "hash": "d7915c4f313d935e842fbdb2dfef5c73ba8dba13",
            "messageTitle": "Refactor _check_protected_attribute_access by extracting independent part in utils functions. Improve is_super_call docstring.",
            "messageBody": "",
            "insertions": 31,
            "deletions": 10
          },
          {
            "hash": "4607f2db9e191d50fee815613d3877b354969615",
            "messageTitle": "split test to isolate py 2.7 specific syntax and get tests back to green with py 2.5",
            "messageBody": "",
            "insertions": 16,
            "deletions": 11
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 4,
        "date": "2012-07-13",
        "commitResults": [
          {
            "hash": "89a8417f1fc0f0b1f6e831f4e3880dc8cc92ee3c",
            "messageTitle": "fix indentation",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 21,
        "deletions": 9,
        "date": "2012-07-17",
        "commitResults": [
          {
            "hash": "10eb5c99043ac2b3a99874dfb2a6bf93e59f47a4",
            "messageTitle": "0.25.2",
            "messageBody": "",
            "insertions": 21,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 0,
        "date": "2012-07-18",
        "commitResults": [
          {
            "hash": "95a264fc452b1a164950cd6b937857c8886e40b4",
            "messageTitle": "Added tag pylint-version-0.25.2 for changeset 042861bd555a",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "660c0502b59095895382ec4cb6a90bbb9c755ceb",
            "messageTitle": "Added tag pylint-debian-version-0.25.2-1 for changeset 1b744fb874a2",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 4,
        "date": "2012-07-24",
        "commitResults": [
          {
            "hash": "2739e71c7498eb9a954b9bf1d0dc8bb40ee628d9",
            "messageTitle": "use lgc.compat to access builtins for cross-interpreters compat",
            "messageBody": "",
            "insertions": 3,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 5,
        "date": "2012-08-22",
        "commitResults": [
          {
            "hash": "bfc5ea47c96b3c91ff4a6e81a3dba93278bf60a1",
            "messageTitle": "pylint fixes",
            "messageBody": "",
            "insertions": 2,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 13,
        "deletions": 5,
        "date": "2012-08-29",
        "commitResults": [
          {
            "hash": "1d167fc40714cf5d71e084cf8a58d8ff22a4d146",
            "messageTitle": "amend ChangeLog",
            "messageBody": "",
            "insertions": 4,
            "deletions": 0
          },
          {
            "hash": "dc7d5bc37b786d0691f3875de68c810bfed0961a",
            "messageTitle": "fix grammatical error for W0332 message. Closes #100654",
            "messageBody": "",
            "insertions": 9,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2012-09-06",
        "commitResults": [
          {
            "hash": "18b2e71e8d55e31d8e709f4fb146a904db47650f",
            "messageTitle": "fix test broken by 27930e5ee87e",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 123,
        "deletions": 59,
        "date": "2012-09-14",
        "commitResults": [
          {
            "hash": "4b316ba0b51d4a63cf7ad3523a3121c1b7276f2a",
            "messageTitle": "create a console_scripts entry point to be used by easy_install, buildout and pip. Closes #103949",
            "messageBody": "uniformize run interface and update licensing on the way\n",
            "insertions": 123,
            "deletions": 59
          }
        ]
      },
      {
        "insertions": 341,
        "deletions": 184,
        "date": "2012-09-19",
        "commitResults": [
          {
            "hash": "1c74cc6749440e4ae97b8e1c0ad1c7f3113989e4",
            "messageTitle": "white spaces cleanup",
            "messageBody": "",
            "insertions": 43,
            "deletions": 44
          },
          {
            "hash": "5c08aad79af2458ad91e759a1b43c78baaf1a647",
            "messageTitle": "drop useless attribute from variables checker",
            "messageBody": "",
            "insertions": 0,
            "deletions": 5
          },
          {
            "hash": "16568a2ed8798caccf065b55322849cd2ffa9e18",
            "messageTitle": "use .iter*  version of dict methods when possible",
            "messageBody": "",
            "insertions": 26,
            "deletions": 26
          },
          {
            "hash": "374b6c1de5b01f07e8ac7a1673b8a0dc5a3b7a43",
            "messageTitle": "[format checker] check for anomalous backslash escape (new W1401, W1402). Closes #104571",
            "messageBody": "",
            "insertions": 159,
            "deletions": 4
          },
          {
            "hash": "2ee2abbccc3ab35a4318b17ab0b8ce836993d8f8",
            "messageTitle": "stop using assert_, rather use assertTrue / assertFalse",
            "messageBody": "",
            "insertions": 63,
            "deletions": 55
          },
          {
            "hash": "baa64bef67973cbc9fb5d28757e92c8438a2fc26",
            "messageTitle": "lint fixes",
            "messageBody": "",
            "insertions": 50,
            "deletions": 50
          }
        ]
      },
      {
        "insertions": 28,
        "deletions": 29,
        "date": "2012-09-20",
        "commitResults": [
          {
            "hash": "163c4466948197ee2dfa6eaf2e7d7aa3e34a7cba",
            "messageTitle": "Add name type in C0103 message",
            "messageBody": "",
            "insertions": 18,
            "deletions": 15
          },
          {
            "hash": "18cc2a2b8c8943cf58b36be232b3c5a8219900c5",
            "messageTitle": "don\u0027t want to run a checker only because of a Fatal error",
            "messageBody": "",
            "insertions": 5,
            "deletions": 10
          },
          {
            "hash": "d2ac3e6c37c59bffc4a2d535aa0001483833c0b5",
            "messageTitle": "minor tweaks to previous changeset (custom reporter). Closes #105337",
            "messageBody": "",
            "insertions": 5,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 41,
        "deletions": 34,
        "date": "2012-10-05",
        "commitResults": [
          {
            "hash": "380d337259bc6bdb16da3123f4d6e5d04cd9cf49",
            "messageTitle": "explicit trailing whitespace, avoid temptation to drop those (thx Martin)",
            "messageBody": "",
            "insertions": 26,
            "deletions": 26
          },
          {
            "hash": "13fd42e9f33d41ad07823361b8f9063443d944b1",
            "messageTitle": "0.26",
            "messageBody": "",
            "insertions": 7,
            "deletions": 1
          },
          {
            "hash": "690c8873af2dc6a3aa3ea76e29ac74065a4e2cdb",
            "messageTitle": "add trove classifier for python 3 compat",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "bf7431719bb1d7e89a1d9aed9bbd941622441bd9",
            "messageTitle": "use env for pyreverse as for others",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "422194c325e4506b0e967dee1f6dc2d294fbf670",
            "messageTitle": "rewrite bin script to use python3 ourselves, this is not done anymore by packaging tools",
            "messageBody": "",
            "insertions": 2,
            "deletions": 4
          },
          {
            "hash": "ed73ab69935ed392be61854a0652dd2f06d491f1",
            "messageTitle": "oops",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          },
          {
            "hash": "d1a36f1812324435d57dd3d2ad9fd95a22298aa7",
            "messageTitle": "oops, drop extra backslash",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "83081a760ef8a061b78ff8e0be69663ad9af9ca7",
            "messageTitle": "Added tag pylint-version-0.26.0 for changeset 562919d79dec",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "b2dff45754698e9778befc87e55834eb4c841d73",
            "messageTitle": "Added tag pylint-debian-version-0.26.0-1 for changeset 156edc8d61df",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 4,
        "date": "2013-02-20",
        "commitResults": [
          {
            "hash": "748a85fee8034fe87ce066141e8309c6792afb21",
            "messageTitle": "don\u0027t reference sys.stdout as default argument value, so one may redirect sys.stdout to catch pylint output. For instance this properly silent smoke tests",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "7db6bb7cb1d8a65ea72284f13fa9ae976d61cd67",
            "messageTitle": "disable R0924 here to fix test_regr.test_gtk_import",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 20,
        "deletions": 9,
        "date": "2013-02-22",
        "commitResults": [
          {
            "hash": "c5270c2c909725f2523ba8cf23892ca9e99bd79e",
            "messageTitle": "redefine cmp under py3k. Closes #120635",
            "messageBody": "",
            "insertions": 6,
            "deletions": 1
          },
          {
            "hash": "abeafad3d1503dcaa0586369dfe591fb9dd3a466",
            "messageTitle": "use load_module_from_file rather than relative import broken in python 3.3. Closes #110213",
            "messageBody": "",
            "insertions": 14,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 6,
        "date": "2013-02-25",
        "commitResults": [
          {
            "hash": "2e57298846aeb72b589329f63af434bf9d74f398",
            "messageTitle": "quick fix: use %s rather than %s will avoid crash if lineno is None. See https://bitbucket.org/logilab/pylint/pull-request/6/fixed-a-bug-in-clobber_in_except-causing",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "37b07b305fb190df034b2810d47e194938fc26ce",
            "messageTitle": "use .fromlineno instead of .lineno (which is not reliable)",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 30,
        "deletions": 24,
        "date": "2013-02-26",
        "commitResults": [
          {
            "hash": "787e5a85fa76df4a5b0d338e9be79d9760e87ec3",
            "messageTitle": "changelog cleanup",
            "messageBody": "",
            "insertions": 22,
            "deletions": 22
          },
          {
            "hash": "8735492cfe2d15b869df4921b2532873bf190dc0",
            "messageTitle": "0.27",
            "messageBody": "",
            "insertions": 8,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 0,
        "date": "2013-02-27",
        "commitResults": [
          {
            "hash": "95de4b5b1362bec782b0b821043af3f84a35301b",
            "messageTitle": "Added tag pylint-version-0.27.0 for changeset 83bf3a2efddf",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "a9355784c021ae07827bbbe57fdc0c5a919b0e78",
            "messageTitle": "Added tag pylint-debian-version-0.27.0-1 for changeset b79adc16cd58",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 3,
        "date": "2013-03-27",
        "commitResults": [
          {
            "hash": "54b71813bce4c7917489bb5f7cce4d89a99206e2",
            "messageTitle": "add test for #122793 (fixed in astng)",
            "messageBody": "",
            "insertions": 9,
            "deletions": 0
          },
          {
            "hash": "f78b304026fa20679312ed57fb2095bea16988e8",
            "messageTitle": "use any(genexp) rather than a list comprehension",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 149,
        "deletions": 143,
        "date": "2013-03-29",
        "commitResults": [
          {
            "hash": "dfa5084e115d85ec933b267317f669733251044c",
            "messageTitle": "add test for #124337, fixed in logilab-astng",
            "messageBody": "",
            "insertions": 11,
            "deletions": 0
          },
          {
            "hash": "a3d56dd1caa143a93f5ab9a6162bcac7f2d2103a",
            "messageTitle": "stop relying on is_standard_module to avoid having internal dependencies in external deps report. Closes #124660",
            "messageBody": "",
            "insertions": 16,
            "deletions": 20
          },
          {
            "hash": "5f675eceeac5879994a0e3a55ac1d3e6be0af00f",
            "messageTitle": "move string literal checker from format.py to strings.py",
            "messageBody": "",
            "insertions": 110,
            "deletions": 107
          },
          {
            "hash": "c20fb5205948021e71c770544af4fac940788013",
            "messageTitle": "a few pylint fixes and copyright cleanups",
            "messageBody": "",
            "insertions": 12,
            "deletions": 16
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 1,
        "date": "2013-04-12",
        "commitResults": [
          {
            "hash": "df6bb1749776be5d8726755ae8ef1e5b8f59d454",
            "messageTitle": "closes #123892 by adding errors\u003dreplace when encoding unicode strings",
            "messageBody": "",
            "insertions": 7,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 842,
        "deletions": 760,
        "date": "2013-04-16",
        "commitResults": [
          {
            "hash": "cbae7f3f2d1d8064594189355596fa4589318062",
            "messageTitle": "regenerate generated documentation",
            "messageBody": "",
            "insertions": 582,
            "deletions": 482
          },
          {
            "hash": "5f08d1a8972fdf7057c5511830b69fa1f1a4883b",
            "messageTitle": "d-t-w",
            "messageBody": "",
            "insertions": 82,
            "deletions": 89
          },
          {
            "hash": "c439feade34052ed2033f7eda4dfef1d197a6fb5",
            "messageTitle": "update to avoid mkdoc deprecation warnings",
            "messageBody": "",
            "insertions": 7,
            "deletions": 1
          },
          {
            "hash": "cf344e19ce72fd2e6616edf2c98ddc7b92ef1006",
            "messageTitle": "drop deprecated announce file",
            "messageBody": "",
            "insertions": 0,
            "deletions": 46
          },
          {
            "hash": "d9a0c897d83610039f5b413e184785e08ba787df",
            "messageTitle": "documentation typos, spotted by afayolle",
            "messageBody": "",
            "insertions": 9,
            "deletions": 9
          },
          {
            "hash": "e6289afd0456c4cfb0a00b1b2c4563c7e018d851",
            "messageTitle": "naming",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "39707ebf0e4c3289118ffc95f382fa895f99e8f4",
            "messageTitle": "pylint home page is www.pylint.org / ftp is dead",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "586c12fd49ad3fc96f6407b056e14aa0c961091d",
            "messageTitle": "doc rest fixes",
            "messageBody": "",
            "insertions": 3,
            "deletions": 5
          },
          {
            "hash": "4c434a46c0e7af2a1fc441b1ff5037c70aa69aa3",
            "messageTitle": "a few documentation fixes",
            "messageBody": "",
            "insertions": 36,
            "deletions": 32
          },
          {
            "hash": "5cc60cb1a3449b5015ef0275000722a45d697f5a",
            "messageTitle": "consistent product naming: Pylint",
            "messageBody": "",
            "insertions": 59,
            "deletions": 58
          },
          {
            "hash": "4e5b7976338921dbdc34ec9a1e102bb530e9c834",
            "messageTitle": "closes #1 (bitbucket): fix \"dictionary changed size during iteration\" crash",
            "messageBody": "",
            "insertions": 4,
            "deletions": 2
          },
          {
            "hash": "8015ecdd7b11670b64f80e02d98137f088a9feec",
            "messageTitle": "Moving development to bitbucket. Rephrase README on the way",
            "messageBody": "",
            "insertions": 36,
            "deletions": 31
          },
          {
            "hash": "271c697897f8249d63847f2d7e7b82301317068c",
            "messageTitle": "add test case for (astng fixed) #127416",
            "messageBody": "",
            "insertions": 19,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 130,
        "deletions": 1079,
        "date": "2013-04-17",
        "commitResults": [
          {
            "hash": "88dc9daedb6cf3cf4ed073311caf0c3b93fa9009",
            "messageTitle": "[doc] redo some of my changes after rebasing nico\u0027s changes; rm former manual/quickstart",
            "messageBody": "",
            "insertions": 60,
            "deletions": 947
          },
          {
            "hash": "2c50b2087e105492fff74b3997c9b468e23113b4",
            "messageTitle": "[doc/faq] refer to existing section of the documentation in the faq, reorder message control section",
            "messageBody": "",
            "insertions": 54,
            "deletions": 128
          },
          {
            "hash": "4bc875a97c3fd26042739198319bc500d8cdc555",
            "messageTitle": "[doc] add missing title, fixing toc",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "5e460651bce8c33c5fa5596043b8259f97e82c30",
            "messageTitle": "[doc/install] link to setuptools, easy_install instead of easyinstall",
            "messageBody": "",
            "insertions": 4,
            "deletions": 3
          },
          {
            "hash": "de21e1c910016f5299a97c762b102cfdd7140714",
            "messageTitle": "[doc] backport content about visual studio configuration from logilab.org",
            "messageBody": "",
            "insertions": 9,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 55,
        "deletions": 864,
        "date": "2013-04-25",
        "commitResults": [
          {
            "hash": "8d3422e502e8148ec6819da62fdf63357f024984",
            "messageTitle": "[doc gen] fix feature.rst generation rule in Makefile and remove it from hg",
            "messageBody": "",
            "insertions": 10,
            "deletions": 843
          },
          {
            "hash": "bab0f2414dc01a63b47ae554ae085e025ae9da0a",
            "messageTitle": "prepare .28",
            "messageBody": "",
            "insertions": 16,
            "deletions": 7
          },
          {
            "hash": "6dccc179e69e46412d5bbfa77312119651df4f08",
            "messageTitle": "fix failing test",
            "messageBody": "",
            "insertions": 4,
            "deletions": 3
          },
          {
            "hash": "efe6ff5693595265fdf8187c4208ee9ab4e9a6cf",
            "messageTitle": "[test] grmbl, C0121 disabling was missing",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "3fdb1c5545bfbb5bc8be99e393a258a9f97b04ba",
            "messageTitle": "[test] move gtk enum crash test out of automatic functional tests, it depends on pygtk being installed so require specific attention",
            "messageBody": "",
            "insertions": 11,
            "deletions": 0
          },
          {
            "hash": "198fcdea66a043b512ed56d91f12efa22aca659b",
            "messageTitle": "[test] extract python 2.7 specific code from func_dangerous_value to avoid failure on 2.6",
            "messageBody": "",
            "insertions": 10,
            "deletions": 7
          },
          {
            "hash": "88cb4cd5d6597c302d2426b59d1daa59570150eb",
            "messageTitle": "[pkginfo] update project\u0027s url to pylint.org and kill deprecated ftp/copyright",
            "messageBody": "",
            "insertions": 1,
            "deletions": 3
          },
          {
            "hash": "48bac2684cb4b7c9e7cd6226efca47c45cebbb5b",
            "messageTitle": "Added tag pylint-version-0.28.0 for changeset 36355f1fe1fd",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "f5c0b5e5a3135085417423033d4fee1c2346ab3f",
            "messageTitle": "Added tag pylint-debian-version-0.28.0-1 for changeset 3a3b3ec9ab05",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 8,
        "deletions": 5,
        "date": "2013-04-29",
        "commitResults": [
          {
            "hash": "cee8b204aded1d01a854de4efc37b793619ef630",
            "messageTitle": "fix manifest.in so doc is back into source distribution, as well as some rephrasing to avoid junk. Closes issue #6",
            "messageBody": "",
            "insertions": 8,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 38,
        "deletions": 41,
        "date": "2013-05-07",
        "commitResults": [
          {
            "hash": "3ad9e5c64ee910db0dc725bbea105ee8c999aefa",
            "messageTitle": "fix spelling of max-branchs option, now max-branches",
            "messageBody": "",
            "insertions": 34,
            "deletions": 33
          },
          {
            "hash": "0f4fb563ee488fd7b67ae41e75f82fb18f82c56d",
            "messageTitle": "drop ref to internal and 404 url",
            "messageBody": "",
            "insertions": 1,
            "deletions": 6
          },
          {
            "hash": "8128c90078222725094ee5cf1020676ff8694283",
            "messageTitle": "add delta to comparison with note from previous execution",
            "messageBody": "as suggested by Sébastien Celles\n",
            "insertions": 3,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 56,
        "deletions": 50,
        "date": "2013-06-19",
        "commitResults": [
          {
            "hash": "403150ce787233ad073e581a76f8bdbf6c201252",
            "messageTitle": "[test] drop broken dead code",
            "messageBody": "",
            "insertions": 1,
            "deletions": 9
          },
          {
            "hash": "ac825be27c0902e1d05e97ae3d31c4550cf69289",
            "messageTitle": "don\u0027t pipe stderr, we don\u0027t read it and it may hang epylint. Closes issue #15",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "99892f33bdb9d71f2cddab609970512229018cb7",
            "messageTitle": "[import checker] remove \"string\" from the default list of deprecated modules. Closes #3",
            "messageBody": "There are still some useful stuff there and a lot of people complains about that false\npositive, so remove it until a better solution is found.\n",
            "insertions": 7,
            "deletions": 2
          },
          {
            "hash": "5bdb6c6fa2c2350616ab449f1756dc1fee07fe8f",
            "messageTitle": "[base checker] simplified invalid-name message",
            "messageBody": "",
            "insertions": 18,
            "deletions": 16
          },
          {
            "hash": "a341446ffdfb6135f8d9b35c5461c26a18230fe2",
            "messageTitle": "repair test broken by removal of \u0027string\u0027 from the default list of deprecated modules",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "2d59b043df1ed204a33ed567cfb9bffb563a4f71",
            "messageTitle": "repair test not properly fixed on invalid-name message change",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "a573441c7ce6ce05c44b6daaa1e7e11828b62530",
            "messageTitle": "move EmptyReport exception to pylint.utils and refactor imports so pylint.utils stop importing checkers/reporters",
            "messageBody": "",
            "insertions": 23,
            "deletions": 16
          },
          {
            "hash": "0a8c1ef61cf862e301784287ae1254bd3e8316d8",
            "messageTitle": "[test] update message of invalid-name",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 6,
        "date": "2013-06-21",
        "commitResults": [
          {
            "hash": "d18b4bcba1878ee077bfaa90f1248b8fe792e6e5",
            "messageTitle": "Added tag before-astroid for changeset a31544127be9",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "9f000f8eeb402899856bd681b320a4166debd31f",
            "messageTitle": "fix a few places where astng was still referenced instead of astroid + bad logilab-astroid in pkginfo dependencies",
            "messageBody": "",
            "insertions": 6,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 7,
        "date": "2013-07-08",
        "commitResults": [
          {
            "hash": "ab569551d4980a53d40477704ea7ee286412e537",
            "messageTitle": "[variables checker] drop check_messages that trigger false positive when other messages from this checker are disabled (eg running --errors-only)",
            "messageBody": "",
            "insertions": 0,
            "deletions": 3
          },
          {
            "hash": "4c732eb3f9140581cbf0f08626c03a5e79812a49",
            "messageTitle": "fix register_plugins isdir usage, and use already imported functions. Closes issue #33",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 82,
        "deletions": 27,
        "date": "2013-07-17",
        "commitResults": [
          {
            "hash": "50cc9a60c48b72df9c7ce23e1ed2f62d224c01f9",
            "messageTitle": "[doc] enhance contribution section",
            "messageBody": "",
            "insertions": 51,
            "deletions": 10
          },
          {
            "hash": "3a1bed847975faf90c193a0b19c742bc929bcf8a",
            "messageTitle": "[design analysis] fix badly implemented protocol for read-only containers like tuple. Close #25",
            "messageBody": "",
            "insertions": 24,
            "deletions": 13
          },
          {
            "hash": "1c3da4794d8430166c43ff0c5ac4bf193d41cca5",
            "messageTitle": "fix regression introduced by 7eef8a7185ba: open mode no more checked with python2",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "f7f316f995c9fc219761ce6251ff1541b6f71682",
            "messageTitle": "add test for no-final-new-line",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 32,
        "deletions": 9,
        "date": "2013-07-18",
        "commitResults": [
          {
            "hash": "e1dc491da5481ce84bdac4d42214d869b7bbcbcd",
            "messageTitle": "ChangeLog update and cleanups",
            "messageBody": "",
            "insertions": 32,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2013-07-24",
        "commitResults": [
          {
            "hash": "64d0a6dff90f5aa2a270ca5c9db57f8cde6c2c0b",
            "messageTitle": "update method renamed in astroid",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 45,
        "deletions": 33,
        "date": "2013-07-25",
        "commitResults": [
          {
            "hash": "cecb47e0f94dc59e7231252532ed255ba8529b28",
            "messageTitle": "[packaging] debian/control cleanup",
            "messageBody": "",
            "insertions": 12,
            "deletions": 8
          },
          {
            "hash": "6d7e0b5d332da99fbb6e21783591991131a1d751",
            "messageTitle": "[doc] move contributors in a separated file, reorganize it a bit and give more credits to current contributors",
            "messageBody": "",
            "insertions": 33,
            "deletions": 25
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 14,
        "date": "2013-07-30",
        "commitResults": [
          {
            "hash": "afb158907a0369eeac085c87fe3fdf5cfb788973",
            "messageTitle": "[test] normalize EOLs",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "c0f894f0105617c3f5177b31def1c9ee6d82a6c8",
            "messageTitle": "rename Message to MessageDefinition",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "1cf2d3fef9e18f45fafdac3119af0ad5355575d8",
            "messageTitle": "get_msg_display_string always return symbolic name",
            "messageBody": "",
            "insertions": 3,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 119,
        "deletions": 156,
        "date": "2013-07-31",
        "commitResults": [
          {
            "hash": "60c8d487eaecca25d202524662ceb27d9b136cc0",
            "messageTitle": "fix epylint w/ python3. Closes issue #7",
            "messageBody": "",
            "insertions": 6,
            "deletions": 4
          },
          {
            "hash": "3c41a7c1520bcecbeab248b5623b497ea22d3da8",
            "messageTitle": "update epylint to use msg-template rather than deprecated parseable reporter",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "a93f0907fca793139e1c83be3c41d699a1cbc936",
            "messageTitle": "some pylint and style fixes",
            "messageBody": "",
            "insertions": 111,
            "deletions": 150
          },
          {
            "hash": "eb24190b16580217cb7c72226e80762087316ab5",
            "messageTitle": "enhance the default output",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 8,
        "deletions": 1,
        "date": "2013-08-02",
        "commitResults": [
          {
            "hash": "c7808374f139c018705318bc6c56242380dee47c",
            "messageTitle": "fix syntax error due to missing encoding declaration",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "80a9fe158649f41caf86b3da2a5341731f3a4702",
            "messageTitle": "prepare 1.0",
            "messageBody": "",
            "insertions": 7,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 13,
        "deletions": 3,
        "date": "2013-08-05",
        "commitResults": [
          {
            "hash": "905d01f8482b02d6e1bf4deb3514a269f419dd03",
            "messageTitle": "add missing test main call to please apycot/\u0027python file.py\u0027",
            "messageBody": "",
            "insertions": 13,
            "deletions": 3
          },
          {
            "hash": "9bd12d27d36410ddedb09b4c5c3fee91ac8d1bf3",
            "messageTitle": "rename test so it is started with python2.6 as well as python 2.7",
            "messageBody": "",
            "insertions": 0,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 3,
        "date": "2013-08-06",
        "commitResults": [
          {
            "hash": "eaec1c438ee9f94abfef4d668f3201bfd66977b2",
            "messageTitle": "[test] fix message file location",
            "messageBody": "",
            "insertions": 0,
            "deletions": 0
          },
          {
            "hash": "91707ba8582a3a2c02e04258195eeb8e5be20168",
            "messageTitle": "[test] move out python \u003e\u003d 2.7 specific part",
            "messageBody": "",
            "insertions": 5,
            "deletions": 3
          },
          {
            "hash": "a3b50c1a09ab09c5c02bd9a93d293b5366bc30db",
            "messageTitle": "Added tag pylint-version-1.0.0 for changeset e21be0620fa9",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "6897b7fc52f469804a1623b9eef8682cfa12a677",
            "messageTitle": "Added tag pylint-debian-version-1.0.0-1 for changeset 1a1ac3d203ca",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 1,
        "date": "2013-09-02",
        "commitResults": [
          {
            "hash": "e0a770f5a0499a26c14121174bda054739a08a99",
            "messageTitle": "forgot to close ChangeLog at 1.0 release time",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 23,
        "deletions": 7,
        "date": "2013-09-03",
        "commitResults": [
          {
            "hash": "ba979bee110811e635fe62703eeb1ed366b80f1c",
            "messageTitle": "some epylint enhancements: support options to give to pylint after the file to analyze and add some arguments checking",
            "messageBody": "Closes bitbucket issues #53 and #54.\n",
            "insertions": 23,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2013-09-04",
        "commitResults": [
          {
            "hash": "532d9e335b306d870c362dbeb57c399f353b7196",
            "messageTitle": "fix typo in --msg-template description. Closes issue #67",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2013-09-18",
        "commitResults": [
          {
            "hash": "3ee510715a8cafca727c94c4568af461c4387b9d",
            "messageTitle": "fix useless-else-on-loop test docstring",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 219,
        "deletions": 214,
        "date": "2013-09-25",
        "commitResults": [
          {
            "hash": "7c641ad379618b049733a33786f3604e1740be84",
            "messageTitle": "cleanup unittest_reporting",
            "messageBody": "",
            "insertions": 8,
            "deletions": 21
          },
          {
            "hash": "14a481acc7524c455af5aa70dd09b3a35d3b1e37",
            "messageTitle": "[message handling] MessageDefinition grew a new format_help method to use instead of linter.get_message_help.",
            "messageBody": "Along with previous refactoring, this allows to close bitbucket issue #74.\n\nAlso, message help now include its min/max python version.\n",
            "insertions": 70,
            "deletions": 28
          },
          {
            "hash": "7202b5096ed24c3a1fe1137cd1f5fcf2389f2632",
            "messageTitle": "[message handling] refactor MessageDefinition instantiation",
            "messageBody": "",
            "insertions": 47,
            "deletions": 42
          },
          {
            "hash": "e3678c9ab7432aa550da07d398291be570a834a2",
            "messageTitle": "[message handling] kill sort_msgs function, use sorted with key instead",
            "messageBody": "",
            "insertions": 2,
            "deletions": 22
          },
          {
            "hash": "68d2f065cd79fa0fe9bbab571850e8ce4a654055",
            "messageTitle": "[doc] enhance description of new output format a bit",
            "messageBody": "",
            "insertions": 15,
            "deletions": 3
          },
          {
            "hash": "a321a9ce48c713984d6caba854e56706d5228112",
            "messageTitle": "[doc] fix makefile to ensure features.rst is systemactically regenerated",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "feb96846eab7eb8c59835923569d16467df310de",
            "messageTitle": "[output] use more symbol instead of msgid: use them in message occurences report and revert order in message help",
            "messageBody": "",
            "insertions": 6,
            "deletions": 6
          },
          {
            "hash": "f182f2b1791860b0e3051fc5c42d1dd03f717176",
            "messageTitle": "[doc] update documentation outputs and options. Closes #66",
            "messageBody": "",
            "insertions": 59,
            "deletions": 81
          },
          {
            "hash": "4e803a5e068636714530da7391c959eca5969294",
            "messageTitle": "fix some reST compilation pb",
            "messageBody": "",
            "insertions": 10,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 16,
        "deletions": 14,
        "date": "2013-10-07",
        "commitResults": [
          {
            "hash": "177e7e5106c167b443a0d000ba5f39044b79b85c",
            "messageTitle": "epylint command line was omitting options",
            "messageBody": "",
            "insertions": 16,
            "deletions": 14
          }
        ]
      },
      {
        "insertions": 19,
        "deletions": 19,
        "date": "2013-10-25",
        "commitResults": [
          {
            "hash": "3ebf31c0d7b02a43c593bddc90663f6c509eb39b",
            "messageTitle": "[lint] rename get_astroid into get_ast",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "72c4d3f95b4763a7b61f215b235816ef6cef3b0d",
            "messageTitle": "fix tests broken due to Windows line ending or by output format change introduced in ed904ee30bc5",
            "messageBody": "",
            "insertions": 15,
            "deletions": 15
          }
        ]
      },
      {
        "insertions": 40,
        "deletions": 10,
        "date": "2013-11-21",
        "commitResults": [
          {
            "hash": "5281674e4859459f98155192907ea64b5748587d",
            "messageTitle": "fix false used-before-assignment for except handler defined  identifier used on the same line (closes issue #111)",
            "messageBody": "",
            "insertions": 14,
            "deletions": 1
          },
          {
            "hash": "130b87b9b7a561f5c8a81a96ad9ff7393e9a4335",
            "messageTitle": "[doc] backport https://bitbucket.org/jmcgeheeiv/pylintrc_search_doc/src/a3c82aa9fa1a7d78c0bd9eb965426c870428ff38/doc/run.rst",
            "messageBody": "",
            "insertions": 26,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 105,
        "deletions": 105,
        "date": "2013-12-04",
        "commitResults": [
          {
            "hash": "48fc04a7eaabe69dcc30740d138e3e73ff5db2b9",
            "messageTitle": "fix indentation in various places. Damned googlers :p",
            "messageBody": "",
            "insertions": 105,
            "deletions": 105
          }
        ]
      },
      {
        "insertions": 18,
        "deletions": 23,
        "date": "2013-12-19",
        "commitResults": [
          {
            "hash": "88f4b37eed2a82a5c151d777729fc4b460443c62",
            "messageTitle": "attempt to use tox to test on several python version",
            "messageBody": "",
            "insertions": 8,
            "deletions": 0
          },
          {
            "hash": "0dae865f1c85785219201d7fcc16988d08d1159e",
            "messageTitle": "minimal python versions",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "98d324abffb2809ef1bdadeb375d48856486fb9a",
            "messageTitle": "testutils: open messge file using Universal new lines mode to avoid failure due to do Windows/Unix CRLF pbs",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "31e8909e5200d6b4952dcc7c413b1ab7a1024b59",
            "messageTitle": "testutils: use argument order expected by unittest, expected value first",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "b4cf42ea4819bc9c630a22f5c1927fafeeb194a3",
            "messageTitle": "[test] skip test which is not really useful and cause pb in tox or installed environment (with \u0027.\u0027 in path, such as python2.7)",
            "messageBody": "",
            "insertions": 1,
            "deletions": 8
          },
          {
            "hash": "57c1dc880b1399aadd31f42c062f4f8f8e743f53",
            "messageTitle": "[import checker] is_standard_module relative to package is buggy, systematically update the import graph will avoid bugs",
            "messageBody": "and test failures when test are run from a virtualenv. Also remove the\n.package_dir method which was only used there.\n",
            "insertions": 4,
            "deletions": 9
          },
          {
            "hash": "02cde0ace8e71ad1d609f4e4bc41ac6485a9bfda",
            "messageTitle": "[test] remove reference to droped test class",
            "messageBody": "",
            "insertions": 0,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 299,
        "deletions": 616,
        "date": "2013-12-20",
        "commitResults": [
          {
            "hash": "97ecaff084655486e58e3415cbaa23b362985ec1",
            "messageTitle": "[packaging] cleanup MANIFEST.in",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "75def2fc5a3d4836cabe050b28d7c9f45815adf5",
            "messageTitle": "[packaging] drop config for no more supported debian/ubuntu distributions",
            "messageBody": "",
            "insertions": 0,
            "deletions": 237
          },
          {
            "hash": "4b24653c9fde8ff148ae647a4d60db248f4c9b37",
            "messageTitle": "[py3] missing-super-argument is a python2 only message",
            "messageBody": "",
            "insertions": 3,
            "deletions": 2
          },
          {
            "hash": "8e0813d0b673a08afed9f6ad8b42c98ff43b60b4",
            "messageTitle": "tox tweaks",
            "messageBody": "",
            "insertions": 4,
            "deletions": 2
          },
          {
            "hash": "562bfa5d11e5d79ecf0f3c4b178fb4e4f2134ecd",
            "messageTitle": "[test] use assertTrue instead of  deprecated assert_",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "ae8f32d560f3e89eeeb8abeb1eae47101393f3fd",
            "messageTitle": "[py3] various fixes for python3",
            "messageBody": "",
            "insertions": 20,
            "deletions": 8
          },
          {
            "hash": "6d8c13d20d02e6feb43ba98cb6a2c7429913f2f3",
            "messageTitle": "[py3] avoid some unclosed file warning",
            "messageBody": "",
            "insertions": 6,
            "deletions": 3
          },
          {
            "hash": "2abeffd87e23fefd70a09c2a687bbd905bf83190",
            "messageTitle": "[test/pyreverse] make test predictable and stop sorting file content in this case",
            "messageBody": "",
            "insertions": 56,
            "deletions": 30
          },
          {
            "hash": "0b3ab2ba969d3940d5f2d2512921f9e0d0736124",
            "messageTitle": "fix unproperly spelled max version for missing-super-argument",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "e4eea138320ccf96ad8d475e46bc7902c065357b",
            "messageTitle": "add pylint logo into doc/",
            "messageBody": "",
            "insertions": 0,
            "deletions": 0
          },
          {
            "hash": "edb2f943f61c222a9c00c1dc123db4c9b1f96095",
            "messageTitle": "fix unpacking-non-sequence false negative: detect that infered node **is an instance** of an iterable class.",
            "messageBody": "Also, slightly enhance the message for it and its unbalanced-tuple-unpackaging\ncousin.\n",
            "insertions": 43,
            "deletions": 39
          },
          {
            "hash": "1f69804608ee5ebb81136d809ac650b61ccccbf8",
            "messageTitle": "[pyreverse] more refactoring to get actually predicable results (take 2)",
            "messageBody": "simplify pyreverse related test code on the way.\n",
            "insertions": 113,
            "deletions": 165
          },
          {
            "hash": "b4ab4cfa53a5115aa01777a412a4494377f79dce",
            "messageTitle": "useless-else-on-loop not emited if there is a break in the else clause of inner loop. Close #117",
            "messageBody": "",
            "insertions": 29,
            "deletions": 8
          },
          {
            "hash": "1149bfa77266654676f522c9fef32f91f64956a4",
            "messageTitle": "`input` is not a bad function when using python3. Close #110",
            "messageBody": "",
            "insertions": 7,
            "deletions": 1
          },
          {
            "hash": "604d7146db0a335884a07b4adba634c8de96f609",
            "messageTitle": "fix way to get pylint.lint file as suggested in issue #106",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "6eae182ae69c45213065a89b657ea7b6f1ace658",
            "messageTitle": "drop badly-implemented-container which cause several problems in its current implementation.",
            "messageBody": "Somewhat close #112 (among other reporter problems).\n",
            "insertions": 6,
            "deletions": 110
          },
          {
            "hash": "c0b4d64b5cfea5b69c6f000ae07f42a5a943d32d",
            "messageTitle": "split lines",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 293,
        "deletions": 256,
        "date": "2013-12-22",
        "commitResults": [
          {
            "hash": "99196f23052a5d04ad5135b815d19ff4771db27c",
            "messageTitle": "various pylint fixes",
            "messageBody": "",
            "insertions": 293,
            "deletions": 256
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 5,
        "date": "2013-12-23",
        "commitResults": [
          {
            "hash": "341cd1bb7b3405efa19596fb3f946abe8fe7ed1a",
            "messageTitle": "1.1",
            "messageBody": "",
            "insertions": 12,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2014-01-08",
        "commitResults": [
          {
            "hash": "bd648bb630c72b72ee84dddd0ab35e36f2d831a6",
            "messageTitle": "Added tag pylint-debian-version-1.1.0-1 for changeset 55c5af5c213c",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "cfb835625a790e05e7458cb37ab5578204c0e9c0",
            "messageTitle": "Added tag pylint-version-1.1.0 for changeset a520db270ed7",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "9d5c37c8ac1494662414f3203b3b86f79ae4024a",
            "messageTitle": "changelog cleanup",
            "messageBody": "",
            "insertions": 0,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 1,
        "date": "2014-02-26",
        "commitResults": [
          {
            "hash": "13ee941dadcaadbbdbeac8f4db2df9e3f7c88ef1",
            "messageTitle": "give trove classifiers to distutils. Closes #152",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 2,
        "date": "2014-03-12",
        "commitResults": [
          {
            "hash": "b470899f8c848d316452b70936103f59dc5c4c08",
            "messageTitle": "tweak hgignore as suggested by Buck Golemon",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "051e1b0238dfa77ae0cdc42bd2962ef748a98d57",
            "messageTitle": "cleanup as suggested by Buck Golemon",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 55,
        "deletions": 43,
        "date": "2014-03-21",
        "commitResults": [
          {
            "hash": "e75a06f82376f1cc2cebfb2316f490d96d70d938",
            "messageTitle": "[test] drop unused class and other minor cleanups",
            "messageBody": "",
            "insertions": 6,
            "deletions": 24
          },
          {
            "hash": "19f04999a4aec5d763ef472b72dd48c4a203c251",
            "messageTitle": "wrap line to 80 char, it makes a smoke test fail",
            "messageBody": "",
            "insertions": 3,
            "deletions": 2
          },
          {
            "hash": "fed42a71b14b5d55fa769a6e0851c9321cbaa82a",
            "messageTitle": "enhance option preprocessing error detection and related tests",
            "messageBody": "",
            "insertions": 28,
            "deletions": 9
          },
          {
            "hash": "b9b264e7c650ef5478630417ee45166e80a916d1",
            "messageTitle": "ensure --init-hooks is evaluated before other options. Closes issue #166",
            "messageBody": "",
            "insertions": 18,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 20,
        "deletions": 9,
        "date": "2014-04-02",
        "commitResults": [
          {
            "hash": "5b3ef9458c8388ba8386bd86b10367468a43c699",
            "messageTitle": "[test] tox use astroid from bitbucket, not the lastest released version",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "eabdf23558998ccf5331064fcc566b39ddf69a67",
            "messageTitle": "[pyreverse] predictable attributes/methods order",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "db2fbe352ca7ad174322d85d939ab69cb25d6353",
            "messageTitle": "[test] display output when some test fail to ease debugging on CI platform",
            "messageBody": "",
            "insertions": 10,
            "deletions": 1
          },
          {
            "hash": "b26d3c758d465bf65a9f016facfe51526b6d303d",
            "messageTitle": "[test] display output when some test fail to ease debugging on CI platform",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "fa436cdbc425cdf82739811c0879ede5137bc7b2",
            "messageTitle": "recent astroid cset trigger a maybe-no-member message that makes some tests fail",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 2,
        "date": "2014-04-09",
        "commitResults": [
          {
            "hash": "8018ea37cf292c188b6bc67eeaad9968122c373a",
            "messageTitle": "[testutils] UnittestLinter.add_stats return stats for actual linter compat",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "931949d457f9ba7d35a9ea178df2a07263e8ac7e",
            "messageTitle": "[testutils] fix set_config: wraps is a decorator",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "11ad2a706d58605c3b0037f7949ba292657dbcc6",
            "messageTitle": "[testutils] fix set_config: \u0027reopening\u0027 the checker may be necessary to new configuration is properly considered",
            "messageBody": "",
            "insertions": 3,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 120,
        "deletions": 70,
        "date": "2014-04-11",
        "commitResults": [
          {
            "hash": "b04afc2c0b02b991cf14cf6e3ec72dee813ac8d5",
            "messageTitle": "update changelog",
            "messageBody": "",
            "insertions": 3,
            "deletions": 0
          },
          {
            "hash": "a23654de25a380acceb72b151fc8ecb09a3e1271",
            "messageTitle": "don\u0027t promote inline comment in rc file",
            "messageBody": "their situation w/ ConfigParser is somewhat fuzzy, and we don\u0027t want to promote\nthem in pylintrc, so simply show whole line comments.\n\nCloses #150\n",
            "insertions": 4,
            "deletions": 3
          },
          {
            "hash": "a43933b27f0c342def9a12a590f883bde02e7175",
            "messageTitle": "[doc] use symbolic names in faq",
            "messageBody": "",
            "insertions": 15,
            "deletions": 13
          },
          {
            "hash": "40d99111e5794240200486cb092cba54551c092c",
            "messageTitle": "Additionaly search for rc file in ~/.config/pylintrc. Closes #121",
            "messageBody": "",
            "insertions": 18,
            "deletions": 10
          },
          {
            "hash": "4ff79c2496e772aeb8d0d4d068da5896f27835a9",
            "messageTitle": "update mailinglist to code-quality",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "6ea312b67133dc7a72522e90ca835d70d64f0dd9",
            "messageTitle": "regenerate pylint\u0027s man page. Closes #137",
            "messageBody": "",
            "insertions": 71,
            "deletions": 38
          },
          {
            "hash": "316881be29203d73c25dd44eda6b8a8e524f932f",
            "messageTitle": "Don\u0027t register the newstyle checker w/ python \u003e\u003d 3. Closes #109",
            "messageBody": "",
            "insertions": 8,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 75,
        "deletions": 48,
        "date": "2014-04-14",
        "commitResults": [
          {
            "hash": "d181d13acbbdbf32a5b145851dfbf7c0800604dd",
            "messageTitle": "[test] strip output to avoid dumb errors",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "ef2914391db67553f90fa5650c40fa890f4c1f32",
            "messageTitle": "use symbolic names in the newstyle checker",
            "messageBody": "",
            "insertions": 8,
            "deletions": 8
          },
          {
            "hash": "8c5ebff406e83eddf23698abc5167581293e060c",
            "messageTitle": "Always register messages even if they may not be emitted.",
            "messageBody": "This avoid several problems:\n\n* error reported because the message is used in enable/disable\n\n* check_message doesn\u0027t work properly because message is erroneously considered\n  as enabled (because check_message_id raise UnknownMessage)\n\nSo, put them all in linter._messages, filtering out non-emitable message in\nlist_messages.\n",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "1833a980025a225242e0adb7531c67d7039cb784",
            "messageTitle": "restore newstyle checker, we still want (part of) the super call checks. Rely on check_messages to disable methods with useless messages",
            "messageBody": "",
            "insertions": 11,
            "deletions": 8
          },
          {
            "hash": "e1dddba8ca461ba0fa494b24eb5f46784f7d5cf1",
            "messageTitle": "fix test for python 3",
            "messageBody": "",
            "insertions": 15,
            "deletions": 3
          },
          {
            "hash": "3218c9737eacf469ffd49cb7498984c2f8d40a33",
            "messageTitle": "delete trailing whitespaces",
            "messageBody": "",
            "insertions": 4,
            "deletions": 3
          },
          {
            "hash": "14232ee29471bcc38c736eaf374eda73c018c596",
            "messageTitle": "update test_func exhaustivity testing",
            "messageBody": "* skip messages that can not be emitted\n* use set instead of list\n* properly mark max version to some messages and drop now (almost) useless\n  messages list\n",
            "insertions": 12,
            "deletions": 19
          },
          {
            "hash": "1fba15e41198766ad1935f4df7377e21f250cf46",
            "messageTitle": "adapt list of deprecated modules to python 3 and update test accordingly",
            "messageBody": "",
            "insertions": 21,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 64,
        "deletions": 13,
        "date": "2014-04-15",
        "commitResults": [
          {
            "hash": "04c0ad7e5bcfa8c05c0f8662e32c44d9e32bf2a7",
            "messageTitle": "fix fsf address",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "d56dc79f7687a322c507724f044b7dd22fc9cb2d",
            "messageTitle": "[test utils] add walk method to CheckerTestCase",
            "messageBody": "",
            "insertions": 7,
            "deletions": 0
          },
          {
            "hash": "72be37c46deb725afdefc15dc7a0cfddf1567eb8",
            "messageTitle": "various cleanups",
            "messageBody": "",
            "insertions": 16,
            "deletions": 12
          },
          {
            "hash": "9191478785f26e0c583c7c3b2f78d92416bc7165",
            "messageTitle": "[classes checker] fix access-member-before-definition false negative wrt aug assign. Closes #164",
            "messageBody": "",
            "insertions": 40,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 3,
        "date": "2014-04-16",
        "commitResults": [
          {
            "hash": "3b38136150ce755299eab9e7e8f510583c515b2b",
            "messageTitle": "Do not attempt to analyze non python file, eg .so file. Closes #122",
            "messageBody": "",
            "insertions": 5,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 16,
        "date": "2014-04-17",
        "commitResults": [
          {
            "hash": "50a944ffed3c819030ac28d023cf4a638c5e3053",
            "messageTitle": "remove optparse from default ignored-modules, we\u0027ll find another proper way to do that as needed",
            "messageBody": "",
            "insertions": 3,
            "deletions": 16
          }
        ]
      },
      {
        "insertions": 158,
        "deletions": 66,
        "date": "2014-04-18",
        "commitResults": [
          {
            "hash": "170b3056db8c8057bd56b4fbcbbc1b510e035963",
            "messageTitle": "[test] rename test modules",
            "messageBody": "",
            "insertions": 26,
            "deletions": 19
          },
          {
            "hash": "d9d1e91c507762d19d4c284e4bad5efabecad37a",
            "messageTitle": "[packaging] attempt to skip byte-compilation for tests files",
            "messageBody": "This doesn\u0027t occurs when using bare distutils but does when using setuptools (eg\nfrom easy_install/pip). As setuptools seems broken on my box, I\u0027ve not been able\nto test that.\n\n(Hopefuly) closes #171\n",
            "insertions": 9,
            "deletions": 3
          },
          {
            "hash": "433ae0e6052fb34c66f6b157de01342a7429d1fb",
            "messageTitle": "[variable checker] fix dummy-variable-rgx help. Closes #75",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "1a30dacbdc3abb1e336f926002511843639534a3",
            "messageTitle": "oops, drop unintentionnaly commited print, breaking py3 install",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          },
          {
            "hash": "97a1d428cb38c866c1e264e67473d1f799b29f08",
            "messageTitle": "regenerate doc/example/man",
            "messageBody": "",
            "insertions": 104,
            "deletions": 35
          },
          {
            "hash": "0aecef703d6667071ede003ab01a2f8f3a86867f",
            "messageTitle": "pylint 1.1",
            "messageBody": "",
            "insertions": 16,
            "deletions": 6
          },
          {
            "hash": "600484643ee5cdd2d517ac9002bc4816ca4f49d5",
            "messageTitle": "Added tag pylint-1.1 for changeset 13dbaf45f432",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 17,
        "deletions": 14,
        "date": "2014-04-22",
        "commitResults": [
          {
            "hash": "1c9bd7f23f74fa52abf48e71be12d4183cbe80ba",
            "messageTitle": "fix debian changelog",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "62b1a57f0902eee896d156fa66f65b297302ad1e",
            "messageTitle": "Removed tag pylint-1.1",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "2aae812fe58727aac2d091af3a140629721041ef",
            "messageTitle": "Added tag pylint-1.2 for changeset ee1190f87c82",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "21c3dbe3ce73d2833ac992269397321a1d706470",
            "messageTitle": "[doc] use symbolic name in message control examlple. Closes #27",
            "messageBody": "",
            "insertions": 11,
            "deletions": 11
          },
          {
            "hash": "3df02a7d4b327395591ada2250c7eaea2f837b26",
            "messageTitle": "ensure doc has the correct version",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 3,
        "date": "2014-04-25",
        "commitResults": [
          {
            "hash": "cfb67dcd755cebb6042cb8e21896b4dd3dfc14b5",
            "messageTitle": "restore init-hook accidentaly renamed in cset 474324137864. Closes #211",
            "messageBody": "",
            "insertions": 6,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 17,
        "deletions": 4,
        "date": "2014-04-29",
        "commitResults": [
          {
            "hash": "fac0b37f7cc1b9763d5a0e6f8c86e3c1922dc5e4",
            "messageTitle": "fix explicit check of python script. Closes #219",
            "messageBody": "",
            "insertions": 17,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 11,
        "deletions": 2,
        "date": "2014-04-30",
        "commitResults": [
          {
            "hash": "3b701a0241dfb61ca248072e8ff9d30abb8b2bfa",
            "messageTitle": "1.2.1",
            "messageBody": "",
            "insertions": 9,
            "deletions": 2
          },
          {
            "hash": "aa1b04e7c431608611614f4eb564947bf2ef1429",
            "messageTitle": "missing test file",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 16,
        "deletions": 11,
        "date": "2014-07-23",
        "commitResults": [
          {
            "hash": "b6e91d88baf0b9194ae65b9a6fb85813cddef786",
            "messageTitle": "stop having ASTWalker as BaseChecker base class, it\u0027s not used anymore (and for a while)",
            "messageBody": "",
            "insertions": 1,
            "deletions": 3
          },
          {
            "hash": "4ee817e2eb1ad93ccf8226372c6331d6bf4dcbf9",
            "messageTitle": "import modutils from astroid, it has been backported there",
            "messageBody": "",
            "insertions": 7,
            "deletions": 7
          },
          {
            "hash": "630f0b32e7ab5f0075f66e66180a57ac56ec0484",
            "messageTitle": "fix issue #203, we should not let ImportError propagate from the import checker",
            "messageBody": "",
            "insertions": 8,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 393,
        "deletions": 350,
        "date": "2014-07-24",
        "commitResults": [
          {
            "hash": "6f6d65e29ab443056000c332d2cd4b01bfb73231",
            "messageTitle": "go back to dependency on astroid 1.1 since it breaks tox tests, even when configured to grab astroid from hg :(",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "51c5dc1b89d899fa750440f11df6b561560826e4",
            "messageTitle": "fix bad indentation issues",
            "messageBody": "",
            "insertions": 7,
            "deletions": 6
          },
          {
            "hash": "97396c6072863b2c8f92949aa50fe23577b0acd4",
            "messageTitle": "extract a messages store from the MessagesHandlerMixIn class",
            "messageBody": "",
            "insertions": 202,
            "deletions": 179
          },
          {
            "hash": "dec2a60f3a5a8d7ce971559c88011599d26f34ec",
            "messageTitle": "[refactor] move handling of file specific state to its own FileState class (mostly message states)",
            "messageBody": "",
            "insertions": 182,
            "deletions": 163
          }
        ]
      },
      {
        "insertions": 574,
        "deletions": 564,
        "date": "2014-07-25",
        "commitResults": [
          {
            "hash": "2bc1c6076f5d6a065d7b1dadcbab1a1e70968279",
            "messageTitle": "delete some trailing whitespaces",
            "messageBody": "",
            "insertions": 6,
            "deletions": 6
          },
          {
            "hash": "404fc9aca9830865cba5fe6dbe49636a420e6b46",
            "messageTitle": "Don\u0027t emit hidden-method message when the attribute has been monkey-patched,",
            "messageBody": "you\u0027re on your own when you do that\n\nCloses http://www.logilab.org/ticket/36653\n",
            "insertions": 14,
            "deletions": 10
          },
          {
            "hash": "ee5cb9e719137a83e66e77ee822e08b4a43f34cd",
            "messageTitle": "use a set instead of a dict with dumb values",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "8bf4306380527dbf5c3735f40acee17b962e716b",
            "messageTitle": "Only emit attribute-defined-outside-init for definition within the same module as the offended class",
            "messageBody": "This avoids mangling the output in some cases\n",
            "insertions": 8,
            "deletions": 1
          },
          {
            "hash": "e170624e0f16dfdfc3c147a2b820c624b2cbf8ae",
            "messageTitle": "linting pylint",
            "messageBody": "",
            "insertions": 534,
            "deletions": 540
          },
          {
            "hash": "f73e3ee23822322772a816673c8221ac5e7a44e0",
            "messageTitle": "regenerated example pylintrc and man page (though they should be removed from the repo at some point)",
            "messageBody": "",
            "insertions": 9,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 192,
        "deletions": 205,
        "date": "2014-11-19",
        "commitResults": [
          {
            "hash": "b14dfa4485c705990c7820014cdae78632732553",
            "messageTitle": "drop BaseRawChecker bw compat",
            "messageBody": "",
            "insertions": 3,
            "deletions": 25
          },
          {
            "hash": "d788df3700257c6483d3bfebdc0d232bfec07f1b",
            "messageTitle": "pylint pylint",
            "messageBody": "",
            "insertions": 167,
            "deletions": 160
          },
          {
            "hash": "a6f74a825204daeb3959f604fe55b0d44d1e0fdf",
            "messageTitle": "Change default max-line-length to 100 rather than 80",
            "messageBody": "",
            "insertions": 20,
            "deletions": 18
          },
          {
            "hash": "75e4a421a7f288423986cc0a9f29730f60506aa5",
            "messageTitle": "tests: fix more tests broken by max-line-length change",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      }
    ],
    "Torsten Marek": [
      {
        "insertions": 47,
        "deletions": 7,
        "date": "2011-09-23",
        "commitResults": [
          {
            "hash": "779e2c4078d5f6ee0a319a9807b215e775411426",
            "messageTitle": "closes #76920: don\u0027t crash in preprocess_option if some looked option has no value",
            "messageBody": "while on is expected.\n",
            "insertions": 47,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 8,
        "deletions": 3,
        "date": "2011-10-24",
        "commitResults": [
          {
            "hash": "62711eaa051d829f609651b60f65036fea1b6980",
            "messageTitle": "W0702 messages should be added to the line of the except handler, not the first line of the body. Closes #81113",
            "messageBody": "",
            "insertions": 8,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 33,
        "deletions": 1,
        "date": "2011-11-17",
        "commitResults": [
          {
            "hash": "df62bb8696ad499435fa9313cb71828dfd189a52",
            "messageTitle": "Detect assignments to a loop variable in the else branch of a for statement.",
            "messageBody": "Closes: #9188,#4024\n",
            "insertions": 33,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 24,
        "deletions": 1,
        "date": "2012-03-15",
        "commitResults": [
          {
            "hash": "442d90383827cc06061124c2942c540d3588eae1",
            "messageTitle": "Fix the variables check to not emit false positives for E0602 on {list,generator} comprehension loop variables inside decorators. Closes #77982",
            "messageBody": "",
            "insertions": 24,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 26,
        "deletions": 0,
        "date": "2012-05-15",
        "commitResults": [
          {
            "hash": "ee8ca327141be4000cd3c654eb9e710671760be9",
            "messageTitle": "Emit W0102 (dangerous default value) when sets are used as default arguments for functions. Closes #92911",
            "messageBody": "",
            "insertions": 26,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 40,
        "deletions": 8,
        "date": "2012-06-07",
        "commitResults": [
          {
            "hash": "70344aeaf71e6af96729b38777e74e6391fbf05d",
            "messageTitle": "Closes #93591: Correctly emit W0623 on multiple assignment of unpackable exceptions",
            "messageBody": "eg for code like\n\ntry:\n  ...\nexcept AnyException as (here, there):\n  ...\n\nInstead of warning about redefining tuple, recurse into the tuple and check all names.\n",
            "insertions": 40,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 27,
        "deletions": 8,
        "date": "2012-11-07",
        "commitResults": [
          {
            "hash": "bd8bd1e42cebd5d93505cc299ee0b619ea7fd90d",
            "messageTitle": "Change the regular expression for inline options so that a preceeding # is not optional.",
            "messageBody": "",
            "insertions": 6,
            "deletions": 1
          },
          {
            "hash": "1768e5b31cb71de4c8576640dce826e624195f61",
            "messageTitle": "Make dot output for import graph predictable and not depend on ordering of strings in hashes.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 2
          },
          {
            "hash": "e08a23df4d938d2a768dad287d92f437a5fe99c8",
            "messageTitle": "Add hooks for import path setup and move pylint\u0027s sys.path modifications into them. These hooks can be overridden by other implementations.",
            "messageBody": "",
            "insertions": 16,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 135,
        "deletions": 8,
        "date": "2012-11-12",
        "commitResults": [
          {
            "hash": "f235861d6ceeab1efd82f0fca4dd61893cf1ac97",
            "messageTitle": "Add messages I0020 and I0021 for reporting of suppressed messages and useless suppression pragmas. Closes #110840",
            "messageBody": "Both messages are disabled by default, and only emitted after all other\ncheckers have been processed.\n",
            "insertions": 114,
            "deletions": 4
          },
          {
            "hash": "5a490fc2f868890f7f43fd081e8dc4164b58a9d9",
            "messageTitle": "Fixes a crash when an __init__ method in a base class has been created by assignment rather than direct function definition. Closes #110853",
            "messageBody": "--HG--\nbranch : stable\n",
            "insertions": 21,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 128,
        "deletions": 30,
        "date": "2013-01-08",
        "commitResults": [
          {
            "hash": "e5837c47144284bb5465add6147fe6860c602f83",
            "messageTitle": "Fix emission of reimport warnings and extend the testcase. Closes #112667",
            "messageBody": "--HG--\nbranch : stable\n",
            "insertions": 43,
            "deletions": 10
          },
          {
            "hash": "406263c27ebf898184fed6696feeae450b963adb",
            "messageTitle": "Fixed a couple of bugs in the __all__ handling and added a new warning about non-string objects in __all__.",
            "messageBody": "Closes #112698\n\n--HG--\nbranch : stable\n",
            "insertions": 45,
            "deletions": 11
          },
          {
            "hash": "704fbb4fbf20bcfebac5ecf421944ac665ff75a6",
            "messageTitle": "Emit a warning if __all__ contains non-string objects.",
            "messageBody": "Closes #112728\n",
            "insertions": 40,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 19,
        "deletions": 3,
        "date": "2013-02-20",
        "commitResults": [
          {
            "hash": "9bfc5d9ef1c8acf133aafce723e242dc91ccf41f",
            "messageTitle": "Two small fixes for suppression warnings I00{2,1}:  - make sure to include the full message name (with symbol, if requested) in the output  - flush I002{0,1} warnings after each module, not after complete run",
            "messageBody": "",
            "insertions": 19,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 282,
        "deletions": 37,
        "date": "2013-03-29",
        "commitResults": [
          {
            "hash": "7b0b774031f846b9da6eec179d7007eb2cc4149d",
            "messageTitle": "Unify handling for dangerous default values and make sure that set, dict and list literals are treated the same way as list(), set() and dict().",
            "messageBody": "Depends on inference fixes found in logilab-astng 0.24.3/0.25\n",
            "insertions": 24,
            "deletions": 10
          },
          {
            "hash": "00fe50dafa71674603ddc364a5269cfc2caaf657",
            "messageTitle": "Warn about duplicate argument names. Python raises a SyntaxError, but it\u0027s not raised during the actual parsing, but in pass 2 (before bytecode compilation).",
            "messageBody": "Closes #123233\n",
            "insertions": 33,
            "deletions": 1
          },
          {
            "hash": "719fc9c96953b8f72521bc4292e2a7400ec46fbd",
            "messageTitle": "Improve the warning message for E1124[redundant-keyword-arg].",
            "messageBody": "",
            "insertions": 4,
            "deletions": 2
          },
          {
            "hash": "c8e91ed86e3b05a7c1493af5c1303c753e7e614f",
            "messageTitle": "Make sure that pragmas that apply to whole lines are interpreted literally, so that their scope is not extended to the whole scope if they occur at the beginning of a scope.",
            "messageBody": "Closes #123285\n",
            "insertions": 78,
            "deletions": 17
          },
          {
            "hash": "fc58a92c0437f618f8c9038d64e5cd39b5c3d770",
            "messageTitle": "Warn about suspicious arguments in {bytes,str,unicode}.{l,r,}strip calls. Closes #74013",
            "messageBody": "",
            "insertions": 47,
            "deletions": 2
          },
          {
            "hash": "6fd6d335d19941395686359e4e3ed43d0b7b4b18",
            "messageTitle": "Lambdas can contain yields, do not warn about them.",
            "messageBody": "Closes #123259\n",
            "insertions": 10,
            "deletions": 1
          },
          {
            "hash": "1c19e05887bb6abb26dd54cffa8229226a4ca36c",
            "messageTitle": "Emit a warning for loops that have an else clause but no break or return.",
            "messageBody": "Technically, the else: is superfluous with the return statement, but after much internal\ndiscussion, I\u0027ve changed the patch to allow this. The main point is that the indented block\nis useful as a visual marker to say that the loop may end early and end execution of the whole\nblock, or something else might happen afterwards. That being said, I wouldn\u0027t be terribly sad\nif we took it out again.\n\nCloses #81378\n",
            "insertions": 86,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 18,
        "deletions": 12,
        "date": "2013-04-25",
        "commitResults": [
          {
            "hash": "31e6b776a0817ffc84e9a5c763d061dc7b4ca474",
            "messageTitle": "Change C0109 [useless-else-on-loop] to W0120 (W0109 is already taken) and change it to only accept breaks for else: branches on loops.",
            "messageBody": "",
            "insertions": 17,
            "deletions": 12
          },
          {
            "hash": "dd885bbbe635b03a6479a60056a38317bd4a7aeb",
            "messageTitle": "Make sure the test suite runs with Python 2.7",
            "messageBody": "The messages for func_dangerous_default_py27 were missing, and if they are added\nas func_dangerous_default_py27.txt, both func_dangerous_default* files are\nassociated with that file. Just rename the whole test to circumvent this problem.\n",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 68,
        "deletions": 41,
        "date": "2013-05-01",
        "commitResults": [
          {
            "hash": "06e37c7e99e1c34eeb00eae607560cbb1df4358d",
            "messageTitle": "Tokenize the input source only once and hand it to all checkers that need the token stream.",
            "messageBody": "A lot of checkers need access to the token stream, but they all tokenize the\nsource code again in BaseRawChecker.process_module. This change introduces\na new checker type ITokenChecker, for which the token stream is created\nexactly once in PyLinter, and then injected into all registered checkers.\n",
            "insertions": 68,
            "deletions": 41
          }
        ]
      },
      {
        "insertions": 13,
        "deletions": 10,
        "date": "2013-05-03",
        "commitResults": [
          {
            "hash": "7c5f3eee257a16245409598e4adb1b5f379de126",
            "messageTitle": "Minor updates for the token checker interface, triggered by the review.",
            "messageBody": "",
            "insertions": 13,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 80,
        "deletions": 45,
        "date": "2013-06-17",
        "commitResults": [
          {
            "hash": "4c46114deaec5a4df27382170825be38e328e98c",
            "messageTitle": "Remove the sample config test case.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 31
          },
          {
            "hash": "f96901c03f2bfd87291297556b1f1960dfef227f",
            "messageTitle": "The tokenize module rejects certain source files that are accepted as valid by the Python interpreter, e.g. modules that end with a line continuation. Catch the exception and skip the files.",
            "messageBody": "",
            "insertions": 12,
            "deletions": 1
          },
          {
            "hash": "0bc390e87b2363c671e17d065ae9d67afad0b1bc",
            "messageTitle": "Added a new warning old-raise-syntax to warn about the construct",
            "messageBody": "raise ExceptionClass, argument\n",
            "insertions": 13,
            "deletions": 3
          },
          {
            "hash": "3b19d873f3ed0ea8aee3a1e2692e86aa86b74e03",
            "messageTitle": "Do not flag names in nested with statements on the same line as undefined.",
            "messageBody": "",
            "insertions": 6,
            "deletions": 5
          },
          {
            "hash": "b5f41f97aa0c66da62f6c1d6521f91c350a9ab4b",
            "messageTitle": "Extend the line length check.",
            "messageBody": "",
            "insertions": 49,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 525,
        "deletions": 278,
        "date": "2013-06-18",
        "commitResults": [
          {
            "hash": "0c2af6a72d72ba75e8ced3774d1def1f9a43db13",
            "messageTitle": "Do not treat all variables starting with _ as dummy variables, only _.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 1
          },
          {
            "hash": "b5308aae443e0c3eaa5a3da728c6849e949869cd",
            "messageTitle": "Do not warn about redefinitions of dummy variables.",
            "messageBody": "",
            "insertions": 21,
            "deletions": 1
          },
          {
            "hash": "1cf50e2a5795d6107fd298d8e25c0c748c3b7d90",
            "messageTitle": "Add a warning for trailing whitespace.",
            "messageBody": "",
            "insertions": 180,
            "deletions": 161
          },
          {
            "hash": "2b172ad79b66ff7c0ae257bb23bc67f89b80c6bf",
            "messageTitle": "Allow messages to be added by symbolic name as well as by ID.",
            "messageBody": "",
            "insertions": 19,
            "deletions": 7
          },
          {
            "hash": "57da6d484ee10b94e4d81e2697b2b44e3be89c1f",
            "messageTitle": "Added a new warning unpacking-in-except (W0712) about unpacking exceptions in handlers, which is unsupported in Python 3.",
            "messageBody": "",
            "insertions": 16,
            "deletions": 1
          },
          {
            "hash": "e9dd580d018bf78b96a4fe20e6018ff0cf812ed2",
            "messageTitle": "Extended the docstring tester to optionally allow skipping the requirement for short functions/methods/classes and added a testcase.",
            "messageBody": "",
            "insertions": 150,
            "deletions": 15
          },
          {
            "hash": "15032fda8d4682716a1b0055b7e33c84ba411058",
            "messageTitle": "Add name checking for variables defined in class scope, with a new name type class_variable.",
            "messageBody": "",
            "insertions": 31,
            "deletions": 8
          },
          {
            "hash": "8d9aeb98d1019cf14f643d04ade31b06ce29056b",
            "messageTitle": "Added a new warning old-style-class for classes that do not have any base class.",
            "messageBody": "",
            "insertions": 103,
            "deletions": 84
          }
        ]
      },
      {
        "insertions": 528,
        "deletions": 188,
        "date": "2013-06-19",
        "commitResults": [
          {
            "hash": "0353142ac9bd8f860ffb20937de9f1b35dc87a20",
            "messageTitle": "Clean up misc checker, use single regex instead of several ones.",
            "messageBody": "",
            "insertions": 8,
            "deletions": 17
          },
          {
            "hash": "a83131141c2d336ac5088fb0fd03c3417b58be20",
            "messageTitle": "Refactor PyLintASTWalker to allow using symbolic names in check_messages as well.",
            "messageBody": "",
            "insertions": 65,
            "deletions": 6
          },
          {
            "hash": "3c96b2f3856d3dd0d272b56e4e896ed5013e4174",
            "messageTitle": "Added a new warning \u0027invalid-encoded-data\u0027 for files that contain an encoding, but whose contents cannot be decoded with this encoding.",
            "messageBody": "",
            "insertions": 32,
            "deletions": 5
          },
          {
            "hash": "7bcb96848e634e1d6db55995e5286168a5ca02a6",
            "messageTitle": "Add bad-open-mode warning for invalid open modes specified on open/file calls.",
            "messageBody": "",
            "insertions": 137,
            "deletions": 0
          },
          {
            "hash": "82dc4732c5f2196801cbce040003ed30d217624d",
            "messageTitle": "Add utility function is_builtin_object.",
            "messageBody": "",
            "insertions": 6,
            "deletions": 2
          },
          {
            "hash": "3fd411930f292cb2d1eb30c11f9e4a2f55b8aa67",
            "messageTitle": "Fix a typo (unexcepted -\u003e unexpected) in the description of the invalid encoding warning.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "6902390acae302a213d1be2b9dc567f755470e5b",
            "messageTitle": "Also use the proper way of checking for enabled messages for leave_* methods.",
            "messageBody": "",
            "insertions": 7,
            "deletions": 5
          },
          {
            "hash": "8f7f469c2c53eddfd550a6018471e1a0c7e7604a",
            "messageTitle": "Use the class name regex for toplevel name assignments whose RHS callfunc result is a class.",
            "messageBody": "",
            "insertions": 75,
            "deletions": 13
          },
          {
            "hash": "49c41ce56af71a6f7290398a3783989941add30f",
            "messageTitle": "Move old-raise-syntax warning to correct checker class.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 5
          },
          {
            "hash": "5b9be08b917359ec960558b89a03f523ee4744b0",
            "messageTitle": "Change the base checker to use symbolic names rather than IDs.",
            "messageBody": "",
            "insertions": 70,
            "deletions": 69
          },
          {
            "hash": "8e5200e40cf865e9cd55bb9f9292eef3b04ac012",
            "messageTitle": "Names in global statements are now checked against the regular expression for constants.",
            "messageBody": "",
            "insertions": 23,
            "deletions": 5
          },
          {
            "hash": "814d6a1f873afd3676dae7b4edaa38a087a06159",
            "messageTitle": "Turn reporters into proper plugins rather than classes that are loaded explicitly.",
            "messageBody": "",
            "insertions": 98,
            "deletions": 58
          }
        ]
      },
      {
        "insertions": 149,
        "deletions": 17,
        "date": "2013-06-20",
        "commitResults": [
          {
            "hash": "f19e4a9bbc1186106b2b5ee671be33ee610ac935",
            "messageTitle": "Extend the CheckerTestCase to allow overriding configuration values during setUp.",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          },
          {
            "hash": "9538af878b8cc0b5e377ee757a085d3f7dae4758",
            "messageTitle": "Do not emit the invalid-name warning for inherited instance attributes.",
            "messageBody": "",
            "insertions": 15,
            "deletions": 1
          },
          {
            "hash": "4da73050ce6b42028e40671edd75dea2191363ae",
            "messageTitle": "Implement property support for method name checking.",
            "messageBody": "",
            "insertions": 128,
            "deletions": 10
          },
          {
            "hash": "653054a9451ab23c0aff8d534012fb6571ce4b91",
            "messageTitle": "Rename func_w0133 (a warning that does not exist any more) to func_name_checking.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 0
          },
          {
            "hash": "cebd73f41a0215308d0d523447520888260632cd",
            "messageTitle": "Remove/suppress non-name related-warnings from func_name_checking.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 14,
        "deletions": 6,
        "date": "2013-06-22",
        "commitResults": [
          {
            "hash": "45907c05f04ddf5c082c61afd8cf7b67e1d2cfe6",
            "messageTitle": "Added new warning no-final-newline.",
            "messageBody": "",
            "insertions": 14,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 109,
        "deletions": 8,
        "date": "2013-07-24",
        "commitResults": [
          {
            "hash": "d243dac732d6c559ee0af9b4c023cfd76467b85e",
            "messageTitle": "Do not double-check parameter names with the regex for parameters and inline variables.",
            "messageBody": "",
            "insertions": 15,
            "deletions": 4
          },
          {
            "hash": "60ccc5b09e7f97ff1fdf8824d8376dcfc65ceca5",
            "messageTitle": "Emit warnings about lines exceeding the column limit when those lines are inside multiline docstrings.",
            "messageBody": "",
            "insertions": 25,
            "deletions": 2
          },
          {
            "hash": "c55ede14f49329b0b86cead8f6ffcee03b4dc5ce",
            "messageTitle": "Do not emit [fixme] for every line if the config value \u0027notes\u0027 is empty, but [fixme] is enabled.",
            "messageBody": "Also added a very basic test for checkers/misc.py.\n",
            "insertions": 69,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 132,
        "deletions": 13,
        "date": "2013-11-05",
        "commitResults": [
          {
            "hash": "f1209f53bb96cf4ef07f6d8f7c2f85699eba0b3c",
            "messageTitle": "Added a new option to the multiple-statement-per-line warning to allow if statements with single-line bodies on the same line. The option is off by default.",
            "messageBody": "",
            "insertions": 97,
            "deletions": 8
          },
          {
            "hash": "1839d48d6c909c9d23d68cb59a5fcdef53107287",
            "messageTitle": "Allow linter subclasses to override should_analyze_file to skip all processing of a file.",
            "messageBody": "",
            "insertions": 25,
            "deletions": 0
          },
          {
            "hash": "126b33ad7325626ead8d4cf614883adebdc8c66f",
            "messageTitle": "Fix a potential crash in the redefine-in-handler warning if the redefined name is a nested getattr node.",
            "messageBody": "",
            "insertions": 10,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 637,
        "deletions": 309,
        "date": "2013-11-06",
        "commitResults": [
          {
            "hash": "d917d28ea80325d4190f943cfc439c678d32d5e0",
            "messageTitle": "Add a new warning \u0027superfluous-parens\u0027 for unnecessary parentheses after certain keywords.",
            "messageBody": "",
            "insertions": 202,
            "deletions": 6
          },
          {
            "hash": "cb0d54530b8585eccebdd16b159ea7d6c4604bc1",
            "messageTitle": "Take first steps to use the symbolic name internally instead of the numeric id.",
            "messageBody": "This changeset changes utils.py to use the symbolic name as the primary key in _messages,\nand the numeric ID as an alternative name in a new dictionary.\n\nAlso prepares the codebase for supporting renamed messages.\n",
            "insertions": 39,
            "deletions": 26
          },
          {
            "hash": "45ed74a29325a944181c76b1bcfa8ef98d06bac6",
            "messageTitle": "Add support for registering deprecated names for messages.",
            "messageBody": "",
            "insertions": 32,
            "deletions": 1
          },
          {
            "hash": "f632d39984072a1ee2cebbdff861c65135eb54f4",
            "messageTitle": "Combine \u0027no-space-after-operator\u0027, \u0027no-space-after-comma\u0027 and \u0027no-space-before-operator\u0027 into \u0027bad-whitespace\u0027",
            "messageBody": "Changes:\n - consistent whitespace (single space on either side) is enforced for assignment operators\n - some constructs are now configurable\n   - whitespace after trailing comma\n   - spacing around key/value separators in dicts\n - checks now happen on the token stream itself rather than evaluationg\n   regular expressions against the raw code\n",
            "insertions": 364,
            "deletions": 276
          }
        ]
      },
      {
        "insertions": 294,
        "deletions": 155,
        "date": "2014-03-30",
        "commitResults": [
          {
            "hash": "83ea268fb75b142432f25058c906cba5d36b7bc5",
            "messageTitle": "Add missing operator \u003d\u003d to list of comparison operators in format checker.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "e15eac5d2ce38918026ca03c779dc18194b3ec34",
            "messageTitle": "Also emit wildcard-import on unresolved imports.",
            "messageBody": "",
            "insertions": 11,
            "deletions": 6
          },
          {
            "hash": "6741ad7a78a5699bd0aa8f142f3bc3309d2a99c7",
            "messageTitle": "Add a new command line option \u0027-u\u0027 to test/test_func to automatically create or update expected messages files.",
            "messageBody": "",
            "insertions": 37,
            "deletions": 25
          },
          {
            "hash": "101e06f86a95dcb05e6b48c40b6fe7eb1b9a2cdb",
            "messageTitle": "Added a new option logging-modules to make the list of modules to be inspected for logging format problems configurable.",
            "messageBody": "",
            "insertions": 85,
            "deletions": 7
          },
          {
            "hash": "7f0ab0624e00f8ab0d3a465d8eee732c233b33f9",
            "messageTitle": "Emit all messages by symbolic name in checkers/typecheck.py.",
            "messageBody": "",
            "insertions": 14,
            "deletions": 14
          },
          {
            "hash": "506b047a4ef042c1b128b59ef5dd29f5da4a90f1",
            "messageTitle": "Also warn about empty docstrings on overridden methods.",
            "messageBody": "",
            "insertions": 37,
            "deletions": 14
          },
          {
            "hash": "a71ce3ab777233e2ba97112f62226c50e4e90724",
            "messageTitle": "Add a new decorator that can be used to declaratively set options on the checker instance for CheckerTestCase.",
            "messageBody": "",
            "insertions": 25,
            "deletions": 12
          },
          {
            "hash": "ac416feee19cc580803ef4c4c4b8bdc868fcb612",
            "messageTitle": "Make it possible to show a naming hint for invalid name by setting include-naming-hint. Also make the naming hints configurable.",
            "messageBody": "",
            "insertions": 84,
            "deletions": 76
          }
        ]
      },
      {
        "insertions": 110,
        "deletions": 3,
        "date": "2014-04-02",
        "commitResults": [
          {
            "hash": "0863db6a0ad8328a7b8484942b9259bae63ce1b7",
            "messageTitle": "Also inspect constructor calls in addition to function calls.",
            "messageBody": "",
            "insertions": 110,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 145,
        "deletions": 126,
        "date": "2014-04-04",
        "commitResults": [
          {
            "hash": "dcf429c6ea66fec350041521dda659ffd7a99c70",
            "messageTitle": "Fix testcase names in test_base.py to be PEP8-conformant.",
            "messageBody": "",
            "insertions": 9,
            "deletions": 9
          },
          {
            "hash": "5a472689ad534486d3e390974f78cb744e2390fc",
            "messageTitle": "Unify and improve function invocation errors:  - always use argument instead of a mix of argument and parameter  - simplify messages  - add type of callable to each error (function, method etc)",
            "messageBody": "",
            "insertions": 95,
            "deletions": 84
          },
          {
            "hash": "28d18bbc5c0e22e15aa72a262188cd8015afb986",
            "messageTitle": "Emit all warnings by their symbolic names in the exceptions checker.",
            "messageBody": "",
            "insertions": 19,
            "deletions": 18
          },
          {
            "hash": "32860336bd2af545879de23c98c16202a16ed5f5",
            "messageTitle": "Raise all messages by name in the strings checkers.",
            "messageBody": "",
            "insertions": 14,
            "deletions": 12
          },
          {
            "hash": "dbe9271e20dd3c5400332b45206e402d3f469b6e",
            "messageTitle": "Update CONTRIBUTORS",
            "messageBody": "",
            "insertions": 8,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2014-04-08",
        "commitResults": [
          {
            "hash": "1019cfc1911bd02695e0deb9b8e4d988df289a48",
            "messageTitle": "Update func_kwoa for Python 3.0 to include the type of function call.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 263,
        "deletions": 8,
        "date": "2014-04-09",
        "commitResults": [
          {
            "hash": "5a6ee7e00b58de14a38aade53d938f72c8c1f712",
            "messageTitle": "Do not crash when disable or enable in the RC file contain invalid message IDs or names.",
            "messageBody": "Closes #170\n",
            "insertions": 27,
            "deletions": 7
          },
          {
            "hash": "072a19f0cc49a043481a021751fb26e4fe26ef58",
            "messageTitle": "Added support for enforcing multiple, but consistent name styles for different name types inside a single module.",
            "messageBody": "",
            "insertions": 236,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 201,
        "deletions": 111,
        "date": "2014-04-10",
        "commitResults": [
          {
            "hash": "2763e1fa473db08fa9bc96d443968d93766e27c1",
            "messageTitle": "Detect logging calls on Logger instances in almost all cases.",
            "messageBody": "",
            "insertions": 66,
            "deletions": 37
          },
          {
            "hash": "d22ea81815864e1877193c96a5a89d43c19cad4b",
            "messageTitle": "Fix naming of invocation types, astroid exports a lot more information, and class methods are actually bound.",
            "messageBody": "",
            "insertions": 73,
            "deletions": 24
          },
          {
            "hash": "89516029fa4ddefb80bdccac18de30d2b6ab1664",
            "messageTitle": "Improve pragma handling to not detect pylint:* strings in non-comments.",
            "messageBody": "Closes #79\n",
            "insertions": 6,
            "deletions": 6
          },
          {
            "hash": "9447a523f6c44ac43d3d5ef025a5fd45267166e5",
            "messageTitle": "Add back the -i and -s options for backwards compat, but have them be ignored.",
            "messageBody": "Closes #180\n",
            "insertions": 14,
            "deletions": 1
          },
          {
            "hash": "cf683a93f0005270154848c8a4cee91f8da904f2",
            "messageTitle": "Emit only symbolic names from the classes checker.",
            "messageBody": "",
            "insertions": 29,
            "deletions": 30
          },
          {
            "hash": "20e7da0dea924598b8200d68fbdfe2474d973d5c",
            "messageTitle": "Only emit symbolic warnings from the imports checker.",
            "messageBody": "",
            "insertions": 11,
            "deletions": 11
          },
          {
            "hash": "99e9065860f7100187e56fce62a23f246bbec092",
            "messageTitle": "Only emit symbolic warnings from the stdlib checker.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 72,
        "deletions": 72,
        "date": "2014-04-16",
        "commitResults": [
          {
            "hash": "6173d6e408fb00e89f37fd3b5a35b183a9ce695f",
            "messageTitle": "Only emit symbolic warnings from the format checker.",
            "messageBody": "",
            "insertions": 40,
            "deletions": 40
          },
          {
            "hash": "625baa2be74cbd20ce46226a36cd6c4ba59e0c55",
            "messageTitle": "Only emit symblic warnings from the variables checker.",
            "messageBody": "",
            "insertions": 32,
            "deletions": 29
          },
          {
            "hash": "ea1d0d18e86ff178f407c513035827ba63a10cf5",
            "messageTitle": "Stop setting active_msgs on checkers, as they can just rely on is_message_enabled on the linter.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 730,
        "deletions": 111,
        "date": "2014-04-17",
        "commitResults": [
          {
            "hash": "0370649341487d40a42ad0961f6c0b22cab43f81",
            "messageTitle": "Only emit symbolic warnings from the design analysis checker.",
            "messageBody": "",
            "insertions": 22,
            "deletions": 15
          },
          {
            "hash": "49c88d4b00ee55f811280b96c06726c71f1312a2",
            "messageTitle": "Only emit symbolic warnings from the logging checker.",
            "messageBody": "",
            "insertions": 8,
            "deletions": 8
          },
          {
            "hash": "f69623ed427ad4406461db9cdb4ada15a1541f0e",
            "messageTitle": "Only emit symbolic warnings from the misc checker.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "236e7aada50b5d60455530fd3e54d2a15db64394",
            "messageTitle": "Only use and emit symbolic warnings in the main linter module",
            "messageBody": "",
            "insertions": 30,
            "deletions": 30
          },
          {
            "hash": "cea807070702ddccc554b653e7d76f2aaaed076a",
            "messageTitle": "Remove F0004[unexpected-inferred-value], it\u0027s not used anywhere.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 4
          },
          {
            "hash": "1b3fa94d1265f402d5659884578aef2d7567345b",
            "messageTitle": "Use one symbol for warning about deprecated pragmas.",
            "messageBody": "",
            "insertions": 15,
            "deletions": 19
          },
          {
            "hash": "480e0ad8985964a48522be7595d4556fdbfa0cc4",
            "messageTitle": "Add a check for indentation of continued lines, enforcing PEP8 style of continued and hanging indents.",
            "messageBody": "",
            "insertions": 647,
            "deletions": 29
          },
          {
            "hash": "a05de3853650eaef8d03f9cc0b5d995a6fa33505",
            "messageTitle": "Do not crash in update mode if a file does not exist.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 71,
        "deletions": 44,
        "date": "2014-04-18",
        "commitResults": [
          {
            "hash": "eb50cf3c21957af87e230cb16bd3ef86f015873c",
            "messageTitle": "Handle \u003c\u003e in the surface token dispatcher part.",
            "messageBody": "",
            "insertions": 8,
            "deletions": 6
          },
          {
            "hash": "272a8de7e2ff70704f3c021fbb16bb88f196cc4b",
            "messageTitle": "Simplify the processing inside the main token loop, now that we have access to the full token stream.",
            "messageBody": "Also fix a bug with misindented lines that start with a number not being reported properly.\n",
            "insertions": 33,
            "deletions": 34
          },
          {
            "hash": "702d98a26a1caf5f5077971581140c69391cf1f0",
            "messageTitle": "Do not warn about \\u escapes in string literals when Unicode literals are used for Python 2.*. Fixes BitBucket issue #151.",
            "messageBody": "",
            "insertions": 17,
            "deletions": 3
          },
          {
            "hash": "e36bb957f568167e193d463b4ceeb28023c52755",
            "messageTitle": "* Emit [assignment-from-none] when the function contains bare returns. Fixes issue #191.",
            "messageBody": "",
            "insertions": 13,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 163,
        "deletions": 0,
        "date": "2014-04-23",
        "commitResults": [
          {
            "hash": "cc3b05fc95859eabb7dccb257d7495fb38f26d9e",
            "messageTitle": "Added a new warning for closing over variables that are defined in loops.",
            "messageBody": "",
            "insertions": 163,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 7,
        "date": "2014-04-25",
        "commitResults": [
          {
            "hash": "35b2b6a01b6fc29d9031a1284f67068af99e73ce",
            "messageTitle": "Don\u0027t use the print statement in func_bad_continuation to avoid different code in Python 2.x and 3.x",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "7e9f3c19a90b1045cd874b34304694294c1bfe12",
            "messageTitle": "Use Module.future_imports for detecting if print is a builtin.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 62,
        "deletions": 59,
        "date": "2014-04-26",
        "commitResults": [
          {
            "hash": "484e7b7aadf7378629562b993cf8e2f76781a075",
            "messageTitle": "Make the test suite pass on Python 2.6 again.",
            "messageBody": "",
            "insertions": 62,
            "deletions": 59
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2014-04-28",
        "commitResults": [
          {
            "hash": "3562450869bba928ce70f4183fa32ed5c4477842",
            "messageTitle": "Make the func_unicode_literal test pass on Python \u003c 2.7.4, which does not tokenize strings with the b prefix properly.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 0,
        "date": "2014-04-30",
        "commitResults": [
          {
            "hash": "a9e8d55ff017fb83cb8efd0ae5dcbc9b7052b40e",
            "messageTitle": "Make sure the script used in testing is installed, otherwise the tox tests fail.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 904,
        "deletions": 426,
        "date": "2014-07-24",
        "commitResults": [
          {
            "hash": "f73b20730bd7582c6802fb2257c546e6ffc94916",
            "messageTitle": "Added a new test suite for functional tests.",
            "messageBody": "Main changes:\n - version restrictions are not encoded in file names any more, but in option files\n - expected messages are annotated in the test files directly\n",
            "insertions": 305,
            "deletions": 31
          },
          {
            "hash": "920712fce6a808482d521170fc75b325b4001788",
            "messageTitle": "Change the multi-style name checker from first-style-wins to majority-style-wins.",
            "messageBody": "",
            "insertions": 49,
            "deletions": 20
          },
          {
            "hash": "ca903958f5ea7a55492c27855e7b20896404c77f",
            "messageTitle": "Implement confidence levels.",
            "messageBody": "- attach confidence levels to a number of messages\n- include confidence levels in the message object\n- if the confidence of a message is not HIGH or UNDEFINED,\n  include it in the test output.\n",
            "insertions": 276,
            "deletions": 153
          },
          {
            "hash": "f55eddb7e27ff2f1caa38b390e7a2c8b45a82559",
            "messageTitle": "Add a test case for #205.",
            "messageBody": "",
            "insertions": 11,
            "deletions": 0
          },
          {
            "hash": "9b8250c027f426c8b87693c36917d567a68ce314",
            "messageTitle": "Make pylint compatible with Python 2.5 again, and make all the tests pass (Closes: #278).",
            "messageBody": "",
            "insertions": 263,
            "deletions": 222
          }
        ]
      },
      {
        "insertions": 294,
        "deletions": 282,
        "date": "2014-07-25",
        "commitResults": [
          {
            "hash": "26212418ee309b27978f00910c952bbf5e8bc815",
            "messageTitle": "Allow implicitly concatenated strings to align with the previous string part.",
            "messageBody": "",
            "insertions": 24,
            "deletions": 15
          },
          {
            "hash": "b626280fe7b2eca2359441b85535846b41bad73f",
            "messageTitle": "Fix more edge cases in the cell-var-from-loop warning (Closes: #233).",
            "messageBody": "",
            "insertions": 33,
            "deletions": 7
          },
          {
            "hash": "cd6d9a2afbdecd6a2931fe972f908a539803d6e7",
            "messageTitle": "Extend the test case for metaclass invocation detection.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "864f186a2e6ca19815b8c8a5de350984be6ab58e",
            "messageTitle": "Porting tests over to the new framework.",
            "messageBody": "",
            "insertions": 104,
            "deletions": 109
          },
          {
            "hash": "42089c9c81a4c7c4c581ab50f22eb1b68669bb03",
            "messageTitle": "Port more testcases to the new framework.",
            "messageBody": "",
            "insertions": 72,
            "deletions": 121
          },
          {
            "hash": "722f94a5eb315ee5db68d3b9db5f0a32386c77fb",
            "messageTitle": "Support multi-line messages in the expected output files.",
            "messageBody": "",
            "insertions": 10,
            "deletions": 3
          },
          {
            "hash": "1414393b506e02327f979566210c87d32cd409a1",
            "messageTitle": "Update the changelog with some bugs that were fixed.",
            "messageBody": "",
            "insertions": 12,
            "deletions": 0
          },
          {
            "hash": "68c658979adab28b422aa79eb18be93f543412d3",
            "messageTitle": "Add a missing expected test output file.",
            "messageBody": "",
            "insertions": 17,
            "deletions": 0
          },
          {
            "hash": "bffb82e5c6a067b5463f24a33b20e7e9b2e9b956",
            "messageTitle": "Mark \u0027relative-import\u0027 as only being present in Python 2.*.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 4
          },
          {
            "hash": "c1569d66465c0659ca238dc8965a68325542e69f",
            "messageTitle": "Use the maxversion attribute on some warning instead of checking for the Python version.",
            "messageBody": "",
            "insertions": 17,
            "deletions": 21
          }
        ]
      },
      {
        "insertions": 406,
        "deletions": 485,
        "date": "2014-07-26",
        "commitResults": [
          {
            "hash": "97006fcc02e1035c6b5c680e4f07b7e58fb14a12",
            "messageTitle": "Remove dependency on logilab.testlib in the test suite (also removes Python 2.5 compatibility).",
            "messageBody": "",
            "insertions": 164,
            "deletions": 192
          },
          {
            "hash": "315e32d9639690707e7843f5f699203112187a69",
            "messageTitle": "Port some regression tests to the new functional test framework and make it possible to specify required packages.",
            "messageBody": "",
            "insertions": 32,
            "deletions": 41
          },
          {
            "hash": "2b44093bfcc7026a4d182d2c7f48241fa85ad263",
            "messageTitle": "Rename .args files to .rc to more accurately reflect purpose and format.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "160c7c215365d65d7691e77768d7deada356903f",
            "messageTitle": "Converted more test cases to the new test framework.",
            "messageBody": "",
            "insertions": 208,
            "deletions": 250
          }
        ]
      },
      {
        "insertions": 199,
        "deletions": 150,
        "date": "2014-07-27",
        "commitResults": [
          {
            "hash": "add103d401c7904178ec3106dad099f61a3e124d",
            "messageTitle": "Keep message lines from expected files that are not emitted by the current Python version when regenerating files.",
            "messageBody": "",
            "insertions": 64,
            "deletions": 38
          },
          {
            "hash": "f0a084ffaf815ac6776e294d413a01446dff40b8",
            "messageTitle": "Fix test case naming in test_functional.",
            "messageBody": "",
            "insertions": 7,
            "deletions": 7
          },
          {
            "hash": "7c86e39440a6d3469237b2f478ff50dca949ed02",
            "messageTitle": "Only run the module tests, and make sure that no new test cases in the old test framework are added.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 8
          },
          {
            "hash": "5ef2d87f2c6217ca39c679288942fd402f6b640c",
            "messageTitle": "More test cases moved to the new test framework.",
            "messageBody": "",
            "insertions": 127,
            "deletions": 97
          }
        ]
      },
      {
        "insertions": 59,
        "deletions": 33,
        "date": "2014-07-29",
        "commitResults": [
          {
            "hash": "7255b515360515edf434131cf618f41fb47523ce",
            "messageTitle": "Simplify and speed up the selftest by only linting pylint.lint once instead of 4 times.",
            "messageBody": "",
            "insertions": 59,
            "deletions": 33
          }
        ]
      },
      {
        "insertions": 80,
        "deletions": 482,
        "date": "2014-07-30",
        "commitResults": [
          {
            "hash": "467557e2e9dbd916c6f88079b6da4c45831dabe8",
            "messageTitle": "Fix mixed line endings in 3.4-specific test case.",
            "messageBody": "",
            "insertions": 10,
            "deletions": 10
          },
          {
            "hash": "d7c67a5c1841bac24a958dc63b5520fff1e19f6e",
            "messageTitle": "Remove testcases only for Python \u003c 2.7.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 149
          },
          {
            "hash": "11f077a154e1cb4abca52c0e894ef472eb816107",
            "messageTitle": "Remove the 2.5-specific duplicate-keyword-arg warnings.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 10
          },
          {
            "hash": "6474896379b8cf857e586e9efee8cfdccd158fe9",
            "messageTitle": "Remove superfluous min_pyver constraints on functional test cases.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 10
          },
          {
            "hash": "289842d58ccb618937b08fd4a3fcba73503aab8e",
            "messageTitle": "Converted and merge test cases.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 165
          },
          {
            "hash": "e3cfe5844196274b4ad61ee8323ad2acf9b6a0dd",
            "messageTitle": "Remove old testcase that has already been converted.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 59
          },
          {
            "hash": "82f9b997c4d04324681696581671a83a49fb6168",
            "messageTitle": "Remove the exhaustivity test from the old framework, it just creates needless churn right now. Once all test cases have been ported, it will be added again in the new framework.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 25
          },
          {
            "hash": "d25c5f84b74f7a1d35b7521c43c237b2682ad536",
            "messageTitle": "Converted more test cases.",
            "messageBody": "",
            "insertions": 64,
            "deletions": 54
          }
        ]
      },
      {
        "insertions": 304,
        "deletions": 250,
        "date": "2014-08-16",
        "commitResults": [
          {
            "hash": "df737168a764b1b418127ed8eadf8c148f47e118",
            "messageTitle": "Move definition of Message class out of reporters module, and make it a namedtuple.",
            "messageBody": "",
            "insertions": 47,
            "deletions": 38
          },
          {
            "hash": "7e204dfe753c84596d472adfbc51cd040e4632c5",
            "messageTitle": "Extend the reporter interface with a method that takes a message object, for better extendability.",
            "messageBody": "",
            "insertions": 26,
            "deletions": 24
          },
          {
            "hash": "da73a4dd84e9fdf907de7699616427f40d85f5cd",
            "messageTitle": "Expected output files for the new test framework are now CSV files.",
            "messageBody": "CSV files are easier to parse (messages with multi-line output were\nparsed with a heuristic so far), and are easier to extend with new fields.\n",
            "insertions": 185,
            "deletions": 138
          },
          {
            "hash": "5c0e53d808d7bb04584e1793665671bfb2463b7a",
            "messageTitle": "Some work on making pylint work on Python 3 without 2to3.",
            "messageBody": "",
            "insertions": 46,
            "deletions": 50
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2014-08-18",
        "commitResults": [
          {
            "hash": "85221b262c8c612dda3b5542f9ba9e2714d1d156",
            "messageTitle": "Fix print statement.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 41,
        "deletions": 34,
        "date": "2014-11-09",
        "commitResults": [
          {
            "hash": "0ed61a71b1756e204cd57d3711c7f4d0b90ebef2",
            "messageTitle": "Make most tests run unmodified under Python 3.4.",
            "messageBody": "",
            "insertions": 39,
            "deletions": 31
          },
          {
            "hash": "2799aedfac5c4b845478ab40e44d76968f9736bb",
            "messageTitle": "Use astroid.modutils everywhere.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 91,
        "deletions": 78,
        "date": "2014-11-22",
        "commitResults": [
          {
            "hash": "3d9ff234598cb25694de90f2e6ac1ee0c8eb8177",
            "messageTitle": "Add options to control extension loading in astroid.",
            "messageBody": "",
            "insertions": 24,
            "deletions": 1
          },
          {
            "hash": "f7a8e735ae8fe1b4f8711ba74b9dadcf093c3571",
            "messageTitle": "Convert some testcases to the new framework.",
            "messageBody": "",
            "insertions": 64,
            "deletions": 70
          },
          {
            "hash": "a1c7cc3d79046856c0b1931be214e72e28e5f508",
            "messageTitle": "Use the public method astroid.nodes.Class.is_subtype_of.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 7
          }
        ]
      }
    ],
    "BioGeek": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2014-12-18",
        "commitResults": [
          {
            "hash": "1e05cbe15f148bb2f33e2d6b20c88fc42418e1de",
            "messageTitle": "Fix typos in docstring",
            "messageBody": "--HG--\nbranch : BioGeek/fix-typos-in-docstring-1418910993320\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "mihai_stan": [
      {
        "insertions": 24,
        "deletions": 3,
        "date": "2015-02-05",
        "commitResults": [
          {
            "hash": "0a961d54fec5ab58e1b4feb4a4cf3d57a16aae29",
            "messageTitle": "Treat nulls as separators",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "749146256eb5c832f2657b02a8914c73a0adf099",
            "messageTitle": "Added C0403 invalid-characters-in-docstring for docstrings with invalid characters (e.g. \\x00)",
            "messageBody": "",
            "insertions": 22,
            "deletions": 3
          }
        ]
      }
    ],
    "Brandon W Maister": [
      {
        "insertions": 20,
        "deletions": 18,
        "date": "2016-02-06",
        "commitResults": [
          {
            "hash": "006b0f6c6dcf7979fa537ac59eb6e527b3a0a6d5",
            "messageTitle": "Seems like Pylint has switched to github?",
            "messageBody": "",
            "insertions": 20,
            "deletions": 18
          }
        ]
      }
    ],
    "Athos Ribeiro": [
      {
        "insertions": 7,
        "deletions": 1,
        "date": "2020-01-06",
        "commitResults": [
          {
            "hash": "b3d52631ea19328ab3ff5b2a12c280bc4e63ccaa",
            "messageTitle": "Fix false positive for inverse containment tests",
            "messageBody": "While dict-keys-not-iterating does not generate false positives for the\n\u0027in\u0027 containment test, the check does generate false positives for the\ninverse counterpart of the containment test, \u0027not in\u0027. This patch\nchanges the check behavior to also consider the \u0027not in\u0027 operator as an\niterating context.\n\n* Relates to #2186\n\nSigned-off-by: Athos Ribeiro \u003cathoscr@fedoraproject.org\u003e\n",
            "insertions": 7,
            "deletions": 1
          }
        ]
      }
    ],
    "T.Rzepka": [
      {
        "insertions": 7,
        "deletions": 1,
        "date": "2013-09-21",
        "commitResults": [
          {
            "hash": "0380c5aa291c96e808d5e63bc1e0f398df0306f2",
            "messageTitle": "#51: Building pylint Windows installer for Python3 fails",
            "messageBody": "",
            "insertions": 7,
            "deletions": 1
          }
        ]
      }
    ],
    "Alexander Pervakov": [
      {
        "insertions": 8,
        "deletions": 9,
        "date": "2016-04-24",
        "commitResults": [
          {
            "hash": "789e8de06c663c3bf390b0aed7014a4b6d3e94f1",
            "messageTitle": "Update docs for --ignore option",
            "messageBody": "",
            "insertions": 8,
            "deletions": 9
          }
        ]
      }
    ],
    "Charles Hebert": [
      {
        "insertions": 274,
        "deletions": 1,
        "date": "2009-11-27",
        "commitResults": [
          {
            "hash": "71ec3b15799abe69963151b08ad38d7f185b0121",
            "messageTitle": "Add a checker verifying string formatting (James Lingard\u0027s patch) + tests",
            "messageBody": "",
            "insertions": 274,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 3,
        "date": "2009-12-04",
        "commitResults": [
          {
            "hash": "057af46efa665ca5d866545217aefb7067cd48d3",
            "messageTitle": "update ChangeLog",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          }
        ]
      }
    ],
    "Xi Shen": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2015-01-24",
        "commitResults": [
          {
            "hash": "ae3ae4af11a236a98e759b1735ec7f20d62c8050",
            "messageTitle": "pylint.el edited online with Bitbucket",
            "messageBody": "- use `shell-quote-argument` to quote file name correctly\n- tested in both Windows and Linux\n\n--HG--\nbranch : davidshen84/pylintel-edited-online-with-bitbucket--1422057628377\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "bluesheeptoken": [
      {
        "insertions": 2,
        "deletions": 1,
        "date": "2019-03-19",
        "commitResults": [
          {
            "hash": "60f39390d2079ea51b57d396276c0a06558f1dc9",
            "messageTitle": "Modify range-builtin-not-iterating message (#2810)",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          }
        ]
      }
    ],
    "Michael Kefeder": [
      {
        "insertions": 31,
        "deletions": 0,
        "date": "2015-11-19",
        "commitResults": [
          {
            "hash": "ef8fc191074320d4cd0713352299bc33b18a3dae",
            "messageTitle": " Ignore missing docstrings for decorated attribute setters and deleters",
            "messageBody": " Closes issue #651.\n",
            "insertions": 31,
            "deletions": 0
          }
        ]
      }
    ],
    "Nathan Marrow": [
      {
        "insertions": 32,
        "deletions": 11,
        "date": "2019-03-22",
        "commitResults": [
          {
            "hash": "40b71e6f6dfdafd7417da43ce1d75f8899ed6a54",
            "messageTitle": "Don\u0027t recurse in inherit_from_std_ex",
            "messageBody": "Commit 79c71de changed inherit_from_std_ex to pass recurs\u003dTrue to the\ncall to ancestors. Since the ancestors call now recurses, there is no\nneed for the inherit_from_std_ex function to recurse as well, especially\nsince ancestors handles circular references (A inherits from B which\ninherits from A).\n",
            "insertions": 31,
            "deletions": 7
          },
          {
            "hash": "ac5b1a434a8dddf3cfea361eb5c65669e76dc9b1",
            "messageTitle": "Collapse if/else into ternary",
            "messageBody": "",
            "insertions": 1,
            "deletions": 4
          }
        ]
      }
    ],
    "Erik": [
      {
        "insertions": 111,
        "deletions": 4,
        "date": "2016-10-31",
        "commitResults": [
          {
            "hash": "bc1228f7f5990d31c865d9a142840db8c9d734ba",
            "messageTitle": "Implemented support to warn when overlappling exceptions in same handler",
            "messageBody": "",
            "insertions": 111,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 166,
        "deletions": 41,
        "date": "2016-12-15",
        "commitResults": [
          {
            "hash": "ea4273cdff22cb5c0bc5fd8a408cd03b454c43bf",
            "messageTitle": "Extracted overlapping exceptions checker into extension",
            "messageBody": "",
            "insertions": 166,
            "deletions": 41
          }
        ]
      }
    ],
    "Peter Kolbus": [
      {
        "insertions": 443,
        "deletions": 397,
        "date": "2019-07-09",
        "commitResults": [
          {
            "hash": "af45f55d862d530e947e685a3812812fd4c61435",
            "messageTitle": "Improve help for options (#2986)",
            "messageBody": "",
            "insertions": 443,
            "deletions": 397
          }
        ]
      }
    ],
    "Benjamin Drung": [
      {
        "insertions": 153,
        "deletions": 150,
        "date": "2018-09-28",
        "commitResults": [
          {
            "hash": "2d32ff3b9b17c4900a02e123ec9773f8b69f23a2",
            "messageTitle": "Fix Windows newlines (CRLF) to Unix newlines (LF)",
            "messageBody": "Several files in pylint/test/functional have Windows newlines (CRLF)\ninstead of Unix newlines (LF). To list these files, run:\n\n```\nfind . -type f -exec file \"{}\" \";\" | grep CRLF\n```\n\nThis commit corrects the line endings of the file that the following\ncommit will touch by running following command:\n\n```\nperl -pi -e \u0027s/\\r\\n/\\n/g\u0027 pylint/test/functional/using_constant_test.py\n```\n\nSigned-off-by: Benjamin Drung \u003cbenjamin.drung@profitbricks.com\u003e\n",
            "insertions": 141,
            "deletions": 141
          },
          {
            "hash": "dafd4245fe75c77ce4c8cf6017b36280db7f8459",
            "messageTitle": "Fix TypeError in test_good_comprehension_checks",
            "messageBody": "The following expression from test_good_comprehension_checks will fail\nto execute, because the list element from the range function has the\ntype int and int has no len method:\n\n```\n\u003e\u003e\u003e [data for data in range(100) if len(data)]\nTraceback (most recent call last):\n  File \"\u003cstdin\u003e\", line 1, in \u003cmodule\u003e\n  File \"\u003cstdin\u003e\", line 1, in \u003clistcomp\u003e\nTypeError: object of type \u0027int\u0027 has no len()\n```\n\nUse the built-in `abs` method instead of the `len` method to make the\ntest case a little bit more realistic.\n",
            "insertions": 7,
            "deletions": 7
          },
          {
            "hash": "a5b97de22b208bd8d4fc3b19ef487ffba330264d",
            "messageTitle": "Add myself to contributors",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "3c2fb0ef2f640675079a1f9c56d2bc81f7b809dd",
            "messageTitle": "[doc] Support specifying the Python interpreter",
            "messageBody": "On Debian, the binary `python` will always point to Python 2. When\nbuilding the documentation, there is no way to change the Python\ninterpreter to Python 3 on Debian.\n\nTherefore allow specifying PYTHON to override the Python interpreter.\n",
            "insertions": 3,
            "deletions": 2
          }
        ]
      }
    ],
    "Robert Schweizer": [
      {
        "insertions": 357,
        "deletions": 29,
        "date": "2019-09-10",
        "commitResults": [
          {
            "hash": "fb81d1ade4f0c87039c828f9aed94469691d825d",
            "messageTitle": "Report unnecessary else after continue and break",
            "messageBody": "Close #2327\n",
            "insertions": 357,
            "deletions": 29
          }
        ]
      }
    ],
    "Chris Lamb": [
      {
        "insertions": 2,
        "deletions": 1,
        "date": "2017-12-11",
        "commitResults": [
          {
            "hash": "444c878efb48976aa8b91266d42dc2086e6009b1",
            "messageTitle": "Make the documentation build reproducibly. (#1761)",
            "messageBody": "Whilst working on the Reproducible Builds effort [0], we noticed\r\nthat pylint could not be built reproducibly.\r\n\r\nThis is due to the documentation generator iterating over the filesystem\r\nin a nondeterminstic order and then iterating over an internal,\r\nnondeterminstic, data structure.\r\n\r\nThis was originally filed in Debian as #883913.\r\n\r\n [0] https://reproducible-builds.org/\r\n [1] https://bugs.debian.org/883913\r\n\r\nSigned-off-by: Chris Lamb \u003cchris@chris-lamb.co.uk\u003e",
            "insertions": 2,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2018-04-02",
        "commitResults": [
          {
            "hash": "6bf4a7019ac9f79ed052a31ea5c298f187000df3",
            "messageTitle": "Make the build reproducible (#1989)",
            "messageBody": "Whilst working on the Reproducible Builds effort [0], we noticed\r\nthat pylint could not be built reproducibly.\r\n\r\nThis is due to iterating over a set in a non-determinstic manner\r\nand using that in the documentation output.\r\n\r\nThis was originally filed in Debian as #894607 [1].\r\n\r\n [0] https://reproducible-builds.org/\r\n [1] https://bugs.debian.org/894607\r\n\r\nSigned-off-by: Chris Lamb \u003clamby@debian.org\u003e",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "David Shea": [
      {
        "insertions": 23,
        "deletions": 0,
        "date": "2014-07-01",
        "commitResults": [
          {
            "hash": "78230215203c54e0cb3d67f1251baf24a31bc155",
            "messageTitle": "Emit an error when a list index is a non-integer type",
            "messageBody": "--HG--\nbranch : list-index-checker\n",
            "insertions": 23,
            "deletions": 0
          },
          {
            "hash": "c6c3a094df8bbdfdd3ed10c921010e8085cf9b46",
            "messageTitle": "Created new branch list-index-checker",
            "messageBody": "--HG--",
            "insertions": 0,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 140,
        "deletions": 10,
        "date": "2014-07-03",
        "commitResults": [
          {
            "hash": "329d2a84c0a40c4454a29e18185dc7418f0fc756",
            "messageTitle": "Add a check for invalid types used as slice indices.",
            "messageBody": "--HG--\nbranch : list-index-checker\n",
            "insertions": 84,
            "deletions": 0
          },
          {
            "hash": "e2a50bba2690bee8b130c16c41b1de49056482ad",
            "messageTitle": "Add tests for list index type checking and clean up the conditional",
            "messageBody": "--HG--\nbranch : list-index-checker\n",
            "insertions": 54,
            "deletions": 10
          },
          {
            "hash": "91ba84c18bf0eb4e2b692ba2aebb7cd05c01de3c",
            "messageTitle": "Add a changelog entry for list and slice type checks",
            "messageBody": "--HG--\nbranch : list-index-checker\n",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 219,
        "deletions": 67,
        "date": "2014-07-06",
        "commitResults": [
          {
            "hash": "2825673dd230f66fdc6605196a4f8b2d8e697b2b",
            "messageTitle": "Correct a typo: indicies -\u003e indices",
            "messageBody": "--HG--\nbranch : list-index-checker\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "73ecd4196eeb68c14e3168013c23def6f9b04646",
            "messageTitle": "Expand and correct the types used in the index and slice checks.",
            "messageBody": "Check for invalid index types used with all builtin sequence types.\n\nAllow slice objects and instances with __index__ to be used as indices.\n\nCheck for __index__ implemented in bases of an instance.\n\nRemove the astroid types from the error messages and correct the wording.\n\nUse .pytype() instead of .name to check types to avoid problems with custom\ntypes defining names that conflict with the bulitin types. Use type(None)\ninstead of types.NoneType to avoid python 3 incompatibilities.\n\nHandle None returned by safe_infer.\n\n--HG--\nbranch : list-index-checker\n",
            "insertions": 155,
            "deletions": 61
          },
          {
            "hash": "fca7ad202fec9f24f1cb7e407364827881a3aaf7",
            "messageTitle": "Check for invalid indices used with subclasses of sequence types.",
            "messageBody": "--HG--\nbranch : list-index-checker\n",
            "insertions": 63,
            "deletions": 4
          },
          {
            "hash": "d66cd9960cff35221e7a85a11d1e6acb01c3a153",
            "messageTitle": "Remove the types import since it is no longer used",
            "messageBody": "--HG--\nbranch : list-index-checker\n",
            "insertions": 0,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 170,
        "deletions": 61,
        "date": "2014-07-07",
        "commitResults": [
          {
            "hash": "feb0f594ef8e8856ff19f8dfccfd880409f68922",
            "messageTitle": "Expand the description for invalid-sequence-index to match the check.",
            "messageBody": "--HG--\nbranch : list-index-checker\n",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "6cf01a1e526faf2c9321c7e9515e86833ae104f8",
            "messageTitle": "Clean up some stylistic issues in the sequence and slice index type checks.",
            "messageBody": "--HG--\nbranch : list-index-checker\n",
            "insertions": 43,
            "deletions": 46
          },
          {
            "hash": "c2254b3ffff5813a33256de93b7ec69d28f59644",
            "messageTitle": "Correct the use of root()",
            "messageBody": "--HG--\nbranch : list-index-checker\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "04a604ee6a40ff4149792f9d8216fa61d29a2d64",
            "messageTitle": "Correct the sequence index check for set and delete operations.",
            "messageBody": "Usage of an index does not always imply __getitem__.\n\n--HG--\nbranch : list-index-checker\n",
            "insertions": 97,
            "deletions": 11
          },
          {
            "hash": "5a84d6f5eaea98250179d655bddd3a668a250176",
            "messageTitle": "Correct problems with checking extended slice syntax.",
            "messageBody": "Fix a crash triggered by visit_index events on ExtSlice objects, and emit an\nerror when extslice syntax is used with builtin sequence types.\n\n--HG--\nbranch : list-index-checker\n",
            "insertions": 27,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 96,
        "deletions": 85,
        "date": "2014-07-08",
        "commitResults": [
          {
            "hash": "38288afeab1b3832660848c05b3f155fd4f02317",
            "messageTitle": "Skip sequence index checks on types that do not resolve to an Instance or a Class.",
            "messageBody": "This avoids a crash on types that do not implement getattr, such as\nUnboundMethod.\n\n--HG--\nbranch : list-index-checker\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "13cb8d6a3b86215f2dd7f42dd7ea36ee04666cd2",
            "messageTitle": "Fix a typo in a comment",
            "messageBody": "--HG--\nbranch : list-index-checker\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "2b6870d9a6df2824b9a8aff3bfea90513ee0de18",
            "messageTitle": "Skip the check for whether node is a Slice in visit_slice.",
            "messageBody": "It would actually be pretty weird if the node weren\u0027t a Slice in this case.\n\n--HG--\nbranch : list-index-checker\n",
            "insertions": 0,
            "deletions": 3
          },
          {
            "hash": "d357efc97367eec804eac3709e8eae8665c28fde",
            "messageTitle": "Move the sequence_types set to the global level",
            "messageBody": "--HG--\nbranch : list-index-checker\n",
            "insertions": 4,
            "deletions": 3
          },
          {
            "hash": "367fd4f2239efa5d537430a5751ec747d27170dc",
            "messageTitle": "Rearrange the sequence and slice index tests for better clarity",
            "messageBody": "--HG--\nbranch : list-index-checker\n",
            "insertions": 90,
            "deletions": 77
          }
        ]
      }
    ],
    "Djailla": [
      {
        "insertions": 41,
        "deletions": 27,
        "date": "2019-11-18",
        "commitResults": [
          {
            "hash": "4d70a435455abfff59dd2bad521da45c82b45165",
            "messageTitle": "[travis] Cleanup travis config using up to date interpreters",
            "messageBody": "",
            "insertions": 9,
            "deletions": 6
          },
          {
            "hash": "7b22be4d0b3d76f0308aedbed0f2fb073074fd61",
            "messageTitle": "Put `spelling` step in the `Prechecks` stage",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "b2a87ae8b40cba7197cce35edc9607482940a632",
            "messageTitle": "[formating] Bump black and isort",
            "messageBody": "Use last version of black : 19.10b0\n",
            "insertions": 26,
            "deletions": 17
          },
          {
            "hash": "0844d21e30629b80bbea7758ddc8bd8ae7d3f6a6",
            "messageTitle": "Update changelog",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "0ed3782d7a933b822d2ecf189fc24da0aaefbd6e",
            "messageTitle": "Also update black and isort in pre-commit config",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      }
    ],
    "Jared Garst": [
      {
        "insertions": 37,
        "deletions": 5,
        "date": "2016-10-31",
        "commitResults": [
          {
            "hash": "3a83a093d14d59d5026c0beae6bf025fe6b4ded7",
            "messageTitle": "Add deprecations for Python 3.6",
            "messageBody": "tkinter.tix, importlib.machinery.SourceFileLoader.load_module\nand importlib.machinery.SourcelessFileLoader.load_module() have\nbeen depreciated in Python 3.6.\n",
            "insertions": 37,
            "deletions": 5
          }
        ]
      }
    ],
    "glmdgrielson": [
      {
        "insertions": 23,
        "deletions": 2,
        "date": "2018-04-02",
        "commitResults": [
          {
            "hash": "1101ba32118496429051336cec3140f75b7a8a69",
            "messageTitle": "Don\u0027t report docstrings on inner functions. (#1987)",
            "messageBody": "Inner functions don\u0027t need to be documented, as they are not part of a public API.\r\nFixes PyCQA/pylint#1956\r\n\r\n",
            "insertions": 23,
            "deletions": 2
          }
        ]
      }
    ],
    "Arun Persaud": [
      {
        "insertions": 47,
        "deletions": 47,
        "date": "2014-02-23",
        "commitResults": [
          {
            "hash": "f91020d413823528939d52ad4af3997300158c20",
            "messageTitle": "Updated FSF address.",
            "messageBody": "",
            "insertions": 47,
            "deletions": 47
          }
        ]
      }
    ],
    "Hugues": [
      {
        "insertions": 14,
        "deletions": 2,
        "date": "2019-11-04",
        "commitResults": [
          {
            "hash": "481be93dfc3622e1fb9f807f0774a3fa940eb57d",
            "messageTitle": "Fix py3k (#3210)",
            "messageBody": "Enable syntax errors to properly surface invalid code in py3\r\nporting mode, instead of silently swallowing them and giving\r\nthe incorrect impression that the code is valid for py3.\r\n\r\nCloses #2956",
            "insertions": 14,
            "deletions": 2
          }
        ]
      }
    ],
    "danields": [
      {
        "insertions": 45,
        "deletions": 10,
        "date": "2018-08-10",
        "commitResults": [
          {
            "hash": "8c9ccd3c815298064d0bd4272f1a3d0934c80bc2",
            "messageTitle": "Now linter reports on each duplicated argument with node information if it avaliable. Fix #1712",
            "messageBody": "",
            "insertions": 45,
            "deletions": 10
          }
        ]
      }
    ],
    "Ville Skyttä": [
      {
        "insertions": 37,
        "deletions": 37,
        "date": "2017-04-02",
        "commitResults": [
          {
            "hash": "c812c59b31ba0b3f45c4bef6d4d93f561f79949d",
            "messageTitle": "Spelling fixes (#1397)",
            "messageBody": "",
            "insertions": 30,
            "deletions": 30
          },
          {
            "hash": "5f17ad125e7a3376702dd49bf18a22ecb32c6ae6",
            "messageTitle": "Python 3.6 invalid escape sequence deprecation fixes (#1396)",
            "messageBody": "https://docs.python.org/3/whatsnew/3.6.html#deprecated-python-behavior",
            "insertions": 7,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 47,
        "deletions": 47,
        "date": "2018-01-30",
        "commitResults": [
          {
            "hash": "9d23fab60bb5405fde4b081f980693f0b797f41c",
            "messageTitle": "Spelling fixes",
            "messageBody": "",
            "insertions": 47,
            "deletions": 47
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 3,
        "date": "2018-06-12",
        "commitResults": [
          {
            "hash": "1347e2a966b2afb99acc812becf3d6f7503eea8c",
            "messageTitle": "Fix invalid jobs number error message to note that it can be set to 0",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "740906eeacc75049f1f85a955f5f23173db8b36f",
            "messageTitle": "Document jobs\u003d0 behavior in help message and man page",
            "messageBody": "",
            "insertions": 3,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 567,
        "deletions": 358,
        "date": "2018-06-13",
        "commitResults": [
          {
            "hash": "7f07744de8da529f4e3e9ae21db4f1ff79368fe0",
            "messageTitle": "Generate example pylintrc and man page with /dev/null pylintrc",
            "messageBody": "To avoid e.g. user pylintrc affecting the output.\n",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "de81e7c26f42f6e318ac5a7ef54925877ca7b5bc",
            "messageTitle": "Escape backslashes in man page formatter help output",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "1f9fdcd2e1c2ae4b3528dc4a0cad14dbdcbd8dfc",
            "messageTitle": "Label current value as default in man page formatter help output",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "98ae361916c4a9757d2503f63f0fe2666ac81ef8",
            "messageTitle": "Rephrase PYLINTHOME description",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "a71cf4ead8c644798de1b5da37949b27fd6979d6",
            "messageTitle": "Use two digit month and day in man page formatter title output",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "6e2c366ff8752a3d98cab9acbd8221868c69f820",
            "messageTitle": "Regenerate example pylintrc and man page",
            "messageBody": "",
            "insertions": 561,
            "deletions": 354
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 3,
        "date": "2018-07-17",
        "commitResults": [
          {
            "hash": "d7cccb7474660f25f1f3ae994eb6efddf6a99fd2",
            "messageTitle": "2.0 release notes spelling and grammar fixes (#2307)",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 2,
        "date": "2018-07-23",
        "commitResults": [
          {
            "hash": "e7843a7c0b146622b3cc3a25abaed958dd6d3456",
            "messageTitle": "Add column offset to fixmes (#2319)",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "d49bdcf6d6e0e5977bdd38c2b5c0cd231b2e3dde",
            "messageTitle": "Use final 3.7 in Travis (#2318)",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 11,
        "deletions": 13,
        "date": "2018-07-26",
        "commitResults": [
          {
            "hash": "5621f0c4452195c1a86e11691984f06260dc3b4c",
            "messageTitle": "Simplify fixme regex",
            "messageBody": "Because it is matched using search(), no need to provide leading\r\nmatch-all. And the trailing part is not required either, because it\r\nmatched anything, and the regex is not anchored at end.\r\n\r\nAlso dropped the `in` optimization. Tested with a file consisting of one ~1.1MB line containing a fixme comment at the end, and saw no measurable difference in execution time\r\nwith the \"in\" check there or not.\r\n",
            "insertions": 3,
            "deletions": 12
          },
          {
            "hash": "bc7d64d866065473f33d0161c3608c4784c7d106",
            "messageTitle": "Add my copyrite alias (#2348)",
            "messageBody": "",
            "insertions": 8,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 1,
        "date": "2019-06-20",
        "commitResults": [
          {
            "hash": "a913613257c9d14245a780695c113400c862cae3",
            "messageTitle": "Fix mypy 0.710 errors",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2019-09-25",
        "commitResults": [
          {
            "hash": "26008155931784eb933a5cd3a09f109cf105fd1b",
            "messageTitle": "Require astroid \u003e\u003d 2.3",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 57,
        "deletions": 4,
        "date": "2019-10-16",
        "commitResults": [
          {
            "hash": "6df0b3e2a4381c64d4ca68c99d20b101b2b61fa7",
            "messageTitle": "Flag various collections as dangerous defaults (#3183) (#3194)",
            "messageBody": "",
            "insertions": 57,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 20,
        "deletions": 18,
        "date": "2019-12-16",
        "commitResults": [
          {
            "hash": "eb33a48d2977b5b85aece9e0fd113ca13297823a",
            "messageTitle": "Fix uppercase style default regex for leading 3+ upper followed by lowercase",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "c4a954fdc354a8849a6bd3641bd64b8ce0608c73",
            "messageTitle": "Simplify naming style regexps",
            "messageBody": "Mostly remove unnecessary parenthesis.\n",
            "insertions": 17,
            "deletions": 17
          }
        ]
      }
    ],
    "Chris Rebert": [
      {
        "insertions": 3,
        "deletions": 3,
        "date": "2015-02-21",
        "commitResults": [
          {
            "hash": "d34480998c494e33d26f1cbd104b5f786a1c3774",
            "messageTitle": "fix \"datetetime\" [sic] typo",
            "messageBody": "--HG--\nbranch : fix-typo\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "7a10fa91dd8a24040d346979cdb0661e1d33bd7f",
            "messageTitle": "add missing spaces between words in W1503\u0027s docs",
            "messageBody": "--HG--\nbranch : missing-spaces\n",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 143,
        "deletions": 1,
        "date": "2015-02-22",
        "commitResults": [
          {
            "hash": "ff4e14ea1bde8a5b81539781a1446460d07519b4",
            "messageTitle": "Fix #299: Warn about `type(x) is/\u003d\u003d Y`",
            "messageBody": "--HG--\nbranch : impl-299\n",
            "insertions": 143,
            "deletions": 1
          }
        ]
      }
    ],
    "Michka Popoff": [
      {
        "insertions": 20,
        "deletions": 4,
        "date": "2017-08-09",
        "commitResults": [
          {
            "hash": "95c14357327c66ec887d3bbf1c92905d4adbb3c0",
            "messageTitle": "Do not warn for locally disabled cyclic import checks",
            "messageBody": "Since commit 7df8caaa3e1995018417ac2fd87afd89be6945ba,\nthe \"# pylint: disable\u003dcyclic-import\" statment is\nrespected.\n\nOne case which was not covered is the disabling of the\ncheck for an import from inside a method/function.\n\nExample:\n\nFile test1.py\n\u003e class B(object):\n\u003e     pass\n\u003e\n\u003e def function():\n\u003e     from . import test2  # pylint: disable\u003dcyclic-import\n\u003e     pass\n\nFile test2.py\n\u003e from . import test1\n\u003e\n\u003e class A(object):\n\u003e     pass\n\nPylint wrongly reports:\nCyclic import (testfolder.test1 -\u003e testfolder.test2) (cyclic-import)\n\nThis is due to the fact that the self._excluded_edges\ndict was not filled with the imports that need to be\nexcluded. Passing the line number to the\nself.linter.is_message_enabled() check allows to not\nprematurely return due to the line number being None.\n\nAlso fixed (with the help of rogalski) the test setup which\ngot confused by the second \u0027func\u0027 in the test function name\n",
            "insertions": 20,
            "deletions": 4
          }
        ]
      }
    ],
    "Derek Gustafson": [
      {
        "insertions": 1232,
        "deletions": 1285,
        "date": "2016-12-06",
        "commitResults": [
          {
            "hash": "8dfe19525426b57d969f08848b711325362cb115",
            "messageTitle": "Switch test runner from unnittest to pytest.",
            "messageBody": "",
            "insertions": 430,
            "deletions": 427
          },
          {
            "hash": "2e692c6d127090d91a29867244ad112b199747e6",
            "messageTitle": "Fix pylint warnings.",
            "messageBody": "",
            "insertions": 33,
            "deletions": 69
          },
          {
            "hash": "5ff3e04e423036fa7cf65fe3ed38e76f3a1e821d",
            "messageTitle": "Added test_func tests back in.",
            "messageBody": "",
            "insertions": 34,
            "deletions": 27
          },
          {
            "hash": "72ea777b1f601aa8d227b8a7d085f5d2d12471d7",
            "messageTitle": "Added test_functional tests back in.",
            "messageBody": "",
            "insertions": 21,
            "deletions": 15
          },
          {
            "hash": "4faacf211922fbb5a02260dad36a0dbc9d6b6ca6",
            "messageTitle": "Reduce dependency on unittest",
            "messageBody": "",
            "insertions": 714,
            "deletions": 747
          }
        ]
      },
      {
        "insertions": 28,
        "deletions": 238,
        "date": "2016-12-07",
        "commitResults": [
          {
            "hash": "3d14bcb35e7fd9b744be353cf6ca689b1ea038b3",
            "messageTitle": "Remove pytest.main calls.",
            "messageBody": "",
            "insertions": 28,
            "deletions": 238
          }
        ]
      },
      {
        "insertions": 1262,
        "deletions": 1346,
        "date": "2016-12-08",
        "commitResults": [
          {
            "hash": "197555aecfb71a053670b15466c533d988d8f90d",
            "messageTitle": "Removed setup and teardown functions.",
            "messageBody": "",
            "insertions": 1136,
            "deletions": 1136
          },
          {
            "hash": "3f7b2c626dcb991377a1a2b3cbc681edd531cb80",
            "messageTitle": "Parametrized tests",
            "messageBody": "",
            "insertions": 125,
            "deletions": 169
          },
          {
            "hash": "2fa1375777a1314051ae5f7945ef4e189f30a5e4",
            "messageTitle": "Remove unneeded test utilities.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 41
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 2,
        "date": "2016-12-10",
        "commitResults": [
          {
            "hash": "292cb9b2e992736cd8f80c175a4924bd627124e7",
            "messageTitle": "Added pyargs back to tox.ini",
            "messageBody": "",
            "insertions": 1,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 56,
        "deletions": 9,
        "date": "2016-12-14",
        "commitResults": [
          {
            "hash": "7aa5d4be7c6ff4dd424b1a4989744b1588f9b5ef",
            "messageTitle": "Aliasing an import with underscore skips unused-import check",
            "messageBody": "Close #1190 ",
            "insertions": 13,
            "deletions": 0
          },
          {
            "hash": "38e25ba9f81bfa661862536adc920c1614cb50b6",
            "messageTitle": "Fix PCManticore concerns.",
            "messageBody": "",
            "insertions": 43,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 32,
        "deletions": 20,
        "date": "2016-12-17",
        "commitResults": [
          {
            "hash": "1ad6cb3431af3052d9b57fb36d7d4611f937e575",
            "messageTitle": "Make removed tests pass.",
            "messageBody": "",
            "insertions": 32,
            "deletions": 20
          }
        ]
      },
      {
        "insertions": 49,
        "deletions": 59,
        "date": "2016-12-21",
        "commitResults": [
          {
            "hash": "1bb7712d2154e0c9a85c6c80972df7d52fe75c60",
            "messageTitle": "Remove unittest dependancy of test_overlapping_exceptions (#1232)",
            "messageBody": "",
            "insertions": 49,
            "deletions": 59
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 5,
        "date": "2016-12-31",
        "commitResults": [
          {
            "hash": "9b1e5a90fdd35c25b1f5039ffc7eb33b7ca9f913",
            "messageTitle": "Fix errors introduced by change to arguments-differ (#1252)",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 135,
        "deletions": 128,
        "date": "2017-01-03",
        "commitResults": [
          {
            "hash": "e2f34ebe51d0b9d08ff7a03117b0149434446997",
            "messageTitle": "Refactor pytest fixtures. (#1255)",
            "messageBody": "",
            "insertions": 135,
            "deletions": 128
          }
        ]
      },
      {
        "insertions": 65,
        "deletions": 5,
        "date": "2017-01-21",
        "commitResults": [
          {
            "hash": "27ade1a61dec51ddc0027435210c75278234226a",
            "messageTitle": "Objects with the same name as inner attributes are not marked as unused any longer.",
            "messageBody": "If a name of an external object was being redefined in another scope, as in the following example, then pylint would have complained about the external object not being used any longer.\r\n\r\n  from a import b #  this gets an unused variable warning.\r\n\r\n  class A:\r\n     b \u003d b[0]\r\n",
            "insertions": 65,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 21,
        "deletions": 2,
        "date": "2017-03-23",
        "commitResults": [
          {
            "hash": "da2e9724a195ea48451222457e56fbb9311186da",
            "messageTitle": "Allow yield in async function for python3.6.  Closes #1372. (#1380)",
            "messageBody": "",
            "insertions": 21,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 11,
        "deletions": 0,
        "date": "2017-04-06",
        "commitResults": [
          {
            "hash": "79f45263a8904533160d3fa0d4e69b11d3d7d315",
            "messageTitle": "Fix crash on checking attributes of Unknown object.  Closes #1365. (#1382)",
            "messageBody": "",
            "insertions": 11,
            "deletions": 0
          }
        ]
      }
    ],
    "Luis Escobar": [
      {
        "insertions": 171,
        "deletions": 1,
        "date": "2016-04-13",
        "commitResults": [
          {
            "hash": "5a201d5ff23e0301603cfb5ffd64520ac011463b",
            "messageTitle": "[IMP] Add New checks for PEP 0257 - Docstring Conventions - triple double quotes and handling-docstring-indentation",
            "messageBody": "",
            "insertions": 171,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 14,
        "deletions": 11,
        "date": "2016-04-14",
        "commitResults": [
          {
            "hash": "8c781416ea5d0b1dac8c1cbbbf2c501d0e2e6baa",
            "messageTitle": "[FIX] Change base class to BaseChecker in DocStringAddicChecker",
            "messageBody": "",
            "insertions": 4,
            "deletions": 5
          },
          {
            "hash": "aba192ca4eb931364ec13abfc60a9eed628bfa0c",
            "messageTitle": "[FIX] Change method to read node file and break assignment variable in multiple conditions",
            "messageBody": "",
            "insertions": 10,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 14,
        "deletions": 7,
        "date": "2016-04-15",
        "commitResults": [
          {
            "hash": "3667b91f26c1874e0bc62903b150f657bf0cd2d4",
            "messageTitle": "[FIX] Use linecache intead open and add new test case with carriage return",
            "messageBody": "",
            "insertions": 13,
            "deletions": 6
          },
          {
            "hash": "c512b107e390037867ed604b98cf7915c836badb",
            "messageTitle": "[FIX] No whitespace after comma",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 3,
        "date": "2016-04-30",
        "commitResults": [
          {
            "hash": "1e2413c0054c1eb6c909d671a459f644c713f19c",
            "messageTitle": "When found triple single quote and \\n not check bad-docstring-quotes (#884)",
            "messageBody": "When found triple single quote and \\n not check bad-docstring-quotes\r\n",
            "insertions": 6,
            "deletions": 3
          }
        ]
      }
    ],
    "Mitar": [
      {
        "insertions": 44,
        "deletions": 3,
        "date": "2017-08-25",
        "commitResults": [
          {
            "hash": "e231a409a83a23c24c8b7dbbaca79314eee6d4c6",
            "messageTitle": "Allow simple xrefs for types in docstrings (#1602)",
            "messageBody": "* Allow simple xrefs for types in docstrings.",
            "insertions": 44,
            "deletions": 3
          }
        ]
      }
    ],
    "Marianna Polatoglou": [
      {
        "insertions": 43,
        "deletions": 0,
        "date": "2018-05-14",
        "commitResults": [
          {
            "hash": "9c551b0766266c1ebaa14a3b09e58c4e3f1e6bbc",
            "messageTitle": "Add unit tests for wildcard import",
            "messageBody": "One test that should fail with the current code, checking that there\nwill be no messages if the root is actually a package and __init__.py\nand one test that passes, there is indeed a message \u0027wildcard-import\u0027\nwhen not an __init__.py file\n",
            "insertions": 30,
            "deletions": 0
          },
          {
            "hash": "f1f265cfa21b9a2be6ec0e90f9145cc4a88fc478",
            "messageTitle": "Skip wildcard check if __init__.py, solves #2026",
            "messageBody": "",
            "insertions": 5,
            "deletions": 0
          },
          {
            "hash": "75a68fb5be105e138ca9527b0fc5c7e02b1a15e5",
            "messageTitle": "Update ChangeLog, whatsnew and CONTRIBUTORS",
            "messageBody": "",
            "insertions": 8,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 81,
        "deletions": 3,
        "date": "2018-05-15",
        "commitResults": [
          {
            "hash": "00d3cc2d906fd89087694ee8fc1581bfdfb6c720",
            "messageTitle": "Add tests for self/cls assignment",
            "messageBody": "",
            "insertions": 36,
            "deletions": 0
          },
          {
            "hash": "5177b111c14c31d6e6c3cdf096484252ec670343",
            "messageTitle": "Implement self/cls assignment check, closes #977",
            "messageBody": "",
            "insertions": 29,
            "deletions": 2
          },
          {
            "hash": "04079a2a3fa6738c9391eff815e0a3323bca6316",
            "messageTitle": "Update ChangeLog and whatsnew",
            "messageBody": "",
            "insertions": 16,
            "deletions": 1
          }
        ]
      }
    ],
    "Banjamin Freeman": [
      {
        "insertions": 45,
        "deletions": 4,
        "date": "2018-05-14",
        "commitResults": [
          {
            "hash": "56e8ec2ddcfd62a6b15baab1efa70ed3311a9a21",
            "messageTitle": "Warn when using subprocess.Popen preexec_fn kwarg  (#2087)",
            "messageBody": "Close #1195 ",
            "insertions": 45,
            "deletions": 4
          }
        ]
      }
    ],
    "Dan Goldsmith": [
      {
        "insertions": 22,
        "deletions": 5,
        "date": "2014-01-28",
        "commitResults": [
          {
            "hash": "eff371aabfcc9b0427311e7339990b9e74966cbd",
            "messageTitle": "Added option to include HTML ids in output",
            "messageBody": "",
            "insertions": 22,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 60,
        "deletions": 20,
        "date": "2014-01-29",
        "commitResults": [
          {
            "hash": "5d3217a42473cf2f49f3546afea64f271ce79b20",
            "messageTitle": "Basic HTML parsing of message format implemented",
            "messageBody": "",
            "insertions": 42,
            "deletions": 12
          },
          {
            "hash": "916a511ab72dcf1e26144c829b9d6a8d3988b8d6",
            "messageTitle": "Tidy of html classes",
            "messageBody": "",
            "insertions": 11,
            "deletions": 1
          },
          {
            "hash": "9e3a26e2314f8867f7b9879c3ca60d969df1ebbe",
            "messageTitle": "Remove include html ids from lint",
            "messageBody": "",
            "insertions": 1,
            "deletions": 7
          },
          {
            "hash": "c7d8bfc7aa161fb3df187304f69edc2c8e7d0913",
            "messageTitle": "Updated output documents with default html output",
            "messageBody": "",
            "insertions": 3,
            "deletions": 0
          },
          {
            "hash": "035449a050d09c04a582ba408f4c25032719f0a6",
            "messageTitle": "Allow html format output to use --msg-template strings addresses issue #135",
            "messageBody": "",
            "insertions": 3,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 19,
        "date": "2014-04-11",
        "commitResults": [
          {
            "hash": "f6ebeab7b1a2b625062f3ba9f61ceda573834188",
            "messageTitle": "Removed cruft / Commented code from HTML reportes",
            "messageBody": "",
            "insertions": 0,
            "deletions": 19
          }
        ]
      }
    ],
    "Santiago Castro": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2019-04-09",
        "commitResults": [
          {
            "hash": "26c45aaf72e9e6596111867885a5e361eeea2303",
            "messageTitle": "Add missing closing parenthesis in option help",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "James Morgensen": [
      {
        "insertions": 5,
        "deletions": 2,
        "date": "2015-04-30",
        "commitResults": [
          {
            "hash": "816afe7b65eb3e2b8bae9aa6f1a0b8933156f3cb",
            "messageTitle": "Fix issue #223 (ignored_modules should apply to import errors too). The fix will ignore import errors caused by attempting to import any name which is or is a subpackage of a module listed in ignored_modules.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 82,
        "deletions": 3,
        "date": "2015-05-01",
        "commitResults": [
          {
            "hash": "7f67beaf295a89dae80707fc194eeada2e51efa0",
            "messageTitle": "Make fix for #223 more readable; add a test and a ChangeLog line.",
            "messageBody": "",
            "insertions": 82,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 12,
        "date": "2015-05-02",
        "commitResults": [
          {
            "hash": "bd652f6152a9bfa389f403ca8877ae97686c5a0a",
            "messageTitle": "Remove erroneously included test.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 12
          }
        ]
      }
    ],
    "Erik Eriksson": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2016-12-16",
        "commitResults": [
          {
            "hash": "4fa36596634dfdd5341a656a3b1227bbf2805323",
            "messageTitle": "Simplify loop.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Nir Soffer": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2017-12-24",
        "commitResults": [
          {
            "hash": "0017d57d84a7592ea910cbc6596206cbd295044d",
            "messageTitle": "The right way was wrong, os.environ is not a dict (#1776)",
            "messageBody": "The documentation specify that os.environ is a mapping object, so we should\r\nnot assume the undocumented copy() method. The recommended and simple\r\nway to copy the os.environ is with a dict.",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "craig-sh": [
      {
        "insertions": 942,
        "deletions": 26,
        "date": "2019-11-27",
        "commitResults": [
          {
            "hash": "c6322018ab54b082d42b0da1809951e703685ddf",
            "messageTitle": "Enhance the protocol checker (#3259)",
            "messageBody": "This commit adds multiple checks for various Python protocols\r\n\r\n  E0304 (invalid-bool-returned): __bool__ did not return a bool\r\n  E0305 (invalid-index-returned): __index__ did not return an integer\r\n  E0306 (invalid-repr-returned): __repr__ did not return a string\r\n  E0307 (invalid-str-returned): __str__ did not return a string\r\n  E0308 (invalid-bytes-returned): __bytes__ did not return a string\r\n  E0309 (invalid-hash-returned): __hash__ did not return an integer\r\n  E0310 (invalid-length-hint-returned): __length_hint__ did not return a non-negative integer\r\n  E0311 (invalid-format-returned): __format__ did not return a string\r\n  E0312 (invalid-getnewargs-returned): __getnewargs__ did not return a tuple\r\n  E0313 (invalid-getnewargs-ex-returned): __getnewargs_ex__ did not return a tuple of the form (tuple, dict)\r\n\r\nClose #560",
            "insertions": 942,
            "deletions": 26
          }
        ]
      }
    ],
    "Daniele Procida": [
      {
        "insertions": 63,
        "deletions": 5,
        "date": "2015-10-25",
        "commitResults": [
          {
            "hash": "944a8f47d7a47975549a3f906d69c26ecdc2675d",
            "messageTitle": "Added notes on integration with TextMate",
            "messageBody": "",
            "insertions": 63,
            "deletions": 5
          }
        ]
      }
    ],
    "Matthijs Blom": [
      {
        "insertions": 11,
        "deletions": 6,
        "date": "2019-12-02",
        "commitResults": [
          {
            "hash": "6d818e3b84b853fe06f4199eb8408fe6dfe033be",
            "messageTitle": "Add missing special method names (#3282)",
            "messageBody": "Close #3281 ",
            "insertions": 11,
            "deletions": 6
          }
        ]
      }
    ],
    "Sandro Tosi": [
      {
        "insertions": 2,
        "deletions": 1,
        "date": "2015-03-01",
        "commitResults": [
          {
            "hash": "5989e64719c56bffd0231fd8220124f8e7586b67",
            "messageTitle": "Make the doc buildable using the current checkout",
            "messageBody": "Passing the PYTHONPATH from the command line, and setting PATH to the built\nscript, this change will make it possible to use the built code used instead of\nthe system-wide installation to build the documentation.\n\nUsage example:\n\nPATH\u003d./build/scripts-2.7:$PATH make -C doc html PYTHONPATH\u003d./build/lib\n",
            "insertions": 2,
            "deletions": 1
          }
        ]
      }
    ],
    "Konstantin": [
      {
        "insertions": 94,
        "deletions": 8,
        "date": "2018-03-16",
        "commitResults": [
          {
            "hash": "03aa4ca2d6a78a4d9dc69438cbc76b982aca1569",
            "messageTitle": "Add check for swapping variables with tuples(#1922) (#1929)",
            "messageBody": "",
            "insertions": 94,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 174,
        "deletions": 0,
        "date": "2018-03-29",
        "commitResults": [
          {
            "hash": "435eec14596a080be1b485590fe78043cb0c8894",
            "messageTitle": "Add new checker \"consider-using-join\" (#1963)",
            "messageBody": "Closes #1952\r\n\r\n",
            "insertions": 174,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 131,
        "deletions": 9,
        "date": "2018-04-18",
        "commitResults": [
          {
            "hash": "ab93123a30da6a75e5df7e1de209688bd80068d9",
            "messageTitle": "Add a new check, consider-using-join",
            "messageBody": "Add a check `consider-using-in` for comparisons of a variable against\r\nmultiple values with \"\u003d\u003d\" and \"or\"s instead of checking if the variable\r\nis contained \"in\" a tuple of those values.\r\n\r\nClose #1977",
            "insertions": 131,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 143,
        "deletions": 4,
        "date": "2018-05-26",
        "commitResults": [
          {
            "hash": "1d4b8c7f17b7b5bdaab26e17a00fd5a434f4b382",
            "messageTitle": "Implement \"consider-using-get\"-checker (close #2076) (#2141)",
            "messageBody": "An idiomatic way to get a key from a dictionary would be to use the dict.get method\r\nwith a default \"if missing\" value.\r\n\r\nSee i.e. docs.python-guide.org and docs.python.org\r\n\r\nClose #2076\r\n\r\n\r\n",
            "insertions": 143,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 31,
        "deletions": 2,
        "date": "2018-06-20",
        "commitResults": [
          {
            "hash": "06f12916c5bf1a4cc940f7a7b3a9b0aac35648a2",
            "messageTitle": "Add new checker \u0027consider-using-dict-comprehension\u0027 (#2204)",
            "messageBody": "A new check is emitted for using old style dict initializations with list\r\ncomprehensions instead of dict-comprehensions, which are faster\r\nand easier to read.",
            "insertions": 31,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2018-06-28",
        "commitResults": [
          {
            "hash": "c3e2d5e03d0122e544183f1c2c66ef68066283c8",
            "messageTitle": "fix logic error in comment (#2217)",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Mitchell T.H. Young": [
      {
        "insertions": 8,
        "deletions": 2,
        "date": "2018-04-24",
        "commitResults": [
          {
            "hash": "96f4ca10cb787217064d2ee21b2209e2bcbde2f3",
            "messageTitle": "Add support for numpydoc return value names (#2031)",
            "messageBody": "Numpydoc specification allows for optional return value name in the form\r\nof:\r\n```\r\nReturns\r\n-------\r\nname : type\r\n    Some description\r\n```\r\nThese were not being honored by the current regex for return lines. This\r\nadds an optional, non-capturing group to the regex which accounts for\r\nthe `name : ` bit.\r\n\r\nFixes #2030",
            "insertions": 8,
            "deletions": 2
          }
        ]
      }
    ],
    "Martin Vielsmaier": [
      {
        "insertions": 22,
        "deletions": 1,
        "date": "2019-05-05",
        "commitResults": [
          {
            "hash": "7054204c688947e6c056cde27190951bfe8f63e9",
            "messageTitle": "Fix crash in callable check (#2901)",
            "messageBody": "",
            "insertions": 22,
            "deletions": 1
          }
        ]
      }
    ],
    "Ned Batchelder": [
      {
        "insertions": 5,
        "deletions": 4,
        "date": "2017-05-13",
        "commitResults": [
          {
            "hash": "da7566aede3ef98278e9b1b350f6e0a8ea3fd1d7",
            "messageTitle": "Make the help accurate: multiple modules are allowed (#1449)",
            "messageBody": "",
            "insertions": 5,
            "deletions": 4
          }
        ]
      }
    ],
    "Alexander Todorov": [
      {
        "insertions": 60,
        "deletions": 1,
        "date": "2016-09-18",
        "commitResults": [
          {
            "hash": "2beb5e650d689d4903676b5ca6d82a1806bbbe79",
            "messageTitle": "Add new error conditions for \u0027bad-super-call\u0027 (#1109)",
            "messageBody": "now detects ``super(type(self), self)`` and\r\n``super(self.__class__, self)`` which can lead to recursion loop\r\nin derived classes.",
            "insertions": 60,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2016-11-02",
        "commitResults": [
          {
            "hash": "21ecaa744484218be5c89c7108771465425542bc",
            "messageTitle": "Fix a typo in CONTRIBUTORS (#1153)",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 217,
        "deletions": 7,
        "date": "2016-11-29",
        "commitResults": [
          {
            "hash": "4ba16605d52a331bcc466f7f5d101dae7244a303",
            "messageTitle": "Add new checker len-as-condition (#1154)",
            "messageBody": "* Add new checker len-as-condition\r\n\r\n* Fix len(SEQUENCE) warnings discovered by new checker\r\n",
            "insertions": 217,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 181,
        "deletions": 3,
        "date": "2016-12-29",
        "commitResults": [
          {
            "hash": "97a6a4fa0dd8389950619c4bc9877753c30512e4",
            "messageTitle": "Add new extension for comparison against empty string constants (#1183)",
            "messageBody": "",
            "insertions": 181,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 193,
        "deletions": 1,
        "date": "2016-12-31",
        "commitResults": [
          {
            "hash": "53414376fdb528087f9e5e23d0dbeab871bfd3fd",
            "messageTitle": "Add new extension for detecting integer comparisons against zero (#1243)",
            "messageBody": "",
            "insertions": 193,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 63,
        "deletions": 5,
        "date": "2018-03-29",
        "commitResults": [
          {
            "hash": "261a4630c08c30b55f5f215eabfaddd3bd61532c",
            "messageTitle": "New error condition try-except-raise (#1939)",
            "messageBody": "reports on except handlers where raise is the first operator\r\nin the handler body. Reports on either bare raise or when we\u0027re\r\nraising the same type of exception as the one that is being\r\nhandled.\r\n\r\nUpdate existing tests to ignore the new error condition.",
            "insertions": 63,
            "deletions": 5
          }
        ]
      }
    ],
    "Aru Sahni": [
      {
        "insertions": 21,
        "deletions": 0,
        "date": "2015-12-09",
        "commitResults": [
          {
            "hash": "3a69bfdab07dfe0a44e1076fca95a30e037e7d8a",
            "messageTitle": "Port .hgignore to .gitignore",
            "messageBody": "",
            "insertions": 21,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 20,
        "date": "2015-12-10",
        "commitResults": [
          {
            "hash": "1a12f6c5f9504a3e8e23a21aa48ded96bceda759",
            "messageTitle": "Remove .hgignore",
            "messageBody": "",
            "insertions": 0,
            "deletions": 20
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 5,
        "date": "2015-12-15",
        "commitResults": [
          {
            "hash": "77420b79174a18931217d3afeb84871eeea692b5",
            "messageTitle": "Explicitly root gitignores that were rooted in the hgignore.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 32,
        "deletions": 2,
        "date": "2015-12-21",
        "commitResults": [
          {
            "hash": "54fe9101239f194bef7ffffe8c3c4ee624206736",
            "messageTitle": "Add PyCharm instructions so no one tries to reference the broken URI.",
            "messageBody": "",
            "insertions": 32,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 93,
        "deletions": 4,
        "date": "2016-01-09",
        "commitResults": [
          {
            "hash": "2ec342e612c730a266413783918f4a0d41441ca5",
            "messageTitle": "Add the ability to ignore files based on regex matching.",
            "messageBody": "This addresses issue #156 by allowing for multiple ignore patterns\nto be specified. Rather than clobber the existing ignore option, I\u0027ve\nintroduced a new one called ignore-patterns. That way there are as few\nsurprises as something involving regular expressions can have.\n\nMultiple patterns must be separated by a comma. For example, if I\nwanted to ignore all files that started with `test_` and `_`, I\u0027d pass this\nin: `--ignore-patterns\u003d\"test_.*\",\"_.*\"`.\n\nClose #156\n",
            "insertions": 93,
            "deletions": 4
          }
        ]
      }
    ],
    "Jared Deckard": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2016-12-16",
        "commitResults": [
          {
            "hash": "a6f13937231dd8ad0c762ce28f48415faf0b6564",
            "messageTitle": "Upgrade tox to v2.x for py35 compatability (#1220) (#1221)",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Nicolas Chauvat": [
      {
        "insertions": 2,
        "deletions": 0,
        "date": "2006-08-15",
        "commitResults": [
          {
            "hash": "2533b11c6326496f79e34a63970a9bc071d36626",
            "messageTitle": "improve hgignore",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 3,
        "date": "2008-06-23",
        "commitResults": [
          {
            "hash": "efb9d96338eb12a1ac463ec62d629062ef4244d9",
            "messageTitle": "fix reST markup",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2008-10-21",
        "commitResults": [
          {
            "hash": "8d4ff0290a942f6eab33da429125a087ca23e73c",
            "messageTitle": "fix man page",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 5,
        "date": "2009-09-08",
        "commitResults": [
          {
            "hash": "d8776f42d344f727e3d1ab31cae1fef6ee58fc24",
            "messageTitle": "Bugfix: correct grammar/spelling of messages",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 0,
        "date": "2010-08-24",
        "commitResults": [
          {
            "hash": "ea94fc15cf9741e20898ab5ded4db4e5716f9367",
            "messageTitle": "add a q/a about configuration file format",
            "messageBody": "",
            "insertions": 10,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 33,
        "deletions": 27,
        "date": "2011-08-08",
        "commitResults": [
          {
            "hash": "56d0309434db7e5bb8aff4886f92f4731eb5df13",
            "messageTitle": "[doc] merge documentation fixes from the website",
            "messageBody": "",
            "insertions": 17,
            "deletions": 14
          },
          {
            "hash": "96065186be1c544429dd03f9d41aaebcb1a14b66",
            "messageTitle": "[doc] more documentation fixes",
            "messageBody": "",
            "insertions": 16,
            "deletions": 13
          }
        ]
      },
      {
        "insertions": 385,
        "deletions": 3,
        "date": "2013-04-04",
        "commitResults": [
          {
            "hash": "fa3ce6ac0089df18fe335203cc9cc73f298dc837",
            "messageTitle": "[doc] generate documentation with sphinx",
            "messageBody": "",
            "insertions": 385,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 782,
        "deletions": 79,
        "date": "2013-04-06",
        "commitResults": [
          {
            "hash": "575b69cfb37548e596f41715f60384e752b994a9",
            "messageTitle": "[doc] complete refactoring",
            "messageBody": "",
            "insertions": 782,
            "deletions": 79
          }
        ]
      },
      {
        "insertions": 26,
        "deletions": 9,
        "date": "2013-04-17",
        "commitResults": [
          {
            "hash": "f63f72abcf11f4c51f24d08885835d4320d39735",
            "messageTitle": "[doc/tutorial] use sourcecode directive",
            "messageBody": "",
            "insertions": 26,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 94,
        "deletions": 181,
        "date": "2013-04-29",
        "commitResults": [
          {
            "hash": "525ce361fe58d5ebdec2ed80fce625b80a598efa",
            "messageTitle": "[doc] continue refactoring",
            "messageBody": "",
            "insertions": 94,
            "deletions": 181
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 7,
        "date": "2013-05-20",
        "commitResults": [
          {
            "hash": "6b40f8ec563e0b5674fd2f80d0fea9cf9231258f",
            "messageTitle": "since PyLinter._dynamic_plugins is used as a set, make it a set",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "da49bbd8f17b1c248a42556fd2220ac29f1032a6",
            "messageTitle": "old-style classes are deprecated: refactor to new style",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          }
        ]
      }
    ],
    "amdev@AMDEV-WS01.cisco.com": [
      {
        "insertions": 123,
        "deletions": 6,
        "date": "2014-02-27",
        "commitResults": [
          {
            "hash": "295f818e78c1de4aa459613e83752e0cd23ceb36",
            "messageTitle": "Initial draft of plugin how-to.",
            "messageBody": "",
            "insertions": 123,
            "deletions": 6
          }
        ]
      }
    ],
    "Stephane Wirtel": [
      {
        "insertions": 51,
        "deletions": 1,
        "date": "2015-09-21",
        "commitResults": [
          {
            "hash": "79691d95406af958be74f12714ba6d749ba15137",
            "messageTitle": "Add a new check for the nonlocal variables without binding (close issue #582)",
            "messageBody": "--HG--\nbranch : fix-582\n",
            "insertions": 51,
            "deletions": 1
          }
        ]
      }
    ],
    "root": [
      {
        "insertions": 15458,
        "deletions": 0,
        "date": "2006-04-26",
        "commitResults": [
          {
            "hash": "4becf6f9e596b45401680c4947e2d92c953d5e08",
            "messageTitle": "forget the past. forget the past.",
            "messageBody": "",
            "insertions": 14574,
            "deletions": 0
          },
          {
            "hash": "1edf5101afba0965cb814c548afc22bc3cecb205",
            "messageTitle": "forget the past. forget the past.",
            "messageBody": "",
            "insertions": 884,
            "deletions": 0
          }
        ]
      }
    ],
    "Erik Wright": [
      {
        "insertions": 55,
        "deletions": 10,
        "date": "2017-07-19",
        "commitResults": [
          {
            "hash": "4f5d2279ca3694ea363ac5a1df54ecbdba2b612d",
            "messageTitle": "Optimize effect of disabling import warnings",
            "messageBody": "Disabling \u0027wrong-import-order\u0027 or \u0027wrong-import-position\u0027 for a single line now prevents that line from triggering violations on subsequent lines.\n",
            "insertions": 38,
            "deletions": 8
          },
          {
            "hash": "7a6ff760a14163765384dec08a4b488335e2699b",
            "messageTitle": "Optimize effect of disabling ungrouped-imports.",
            "messageBody": "Disabling \u0027ungrouped-imports\u0027 for a single line now prevents that line from triggering violations on subsequent lines.\n",
            "insertions": 17,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 6,
        "date": "2017-08-16",
        "commitResults": [
          {
            "hash": "3b56d183ca3b148d2ff092bbda5b061c20660a2c",
            "messageTitle": "Correct the location of a Changelog entry. (#1629)",
            "messageBody": "A PR was merged that introduced a changelog entry in a previous release.\r\n\r\nThis PR places the entry in the correct (upcoming) release section.",
            "insertions": 6,
            "deletions": 6
          }
        ]
      }
    ],
    "Sardorbek Imomaliev": [
      {
        "insertions": 7,
        "deletions": 3,
        "date": "2018-12-14",
        "commitResults": [
          {
            "hash": "735618916c63ba2f8b647fbd45dcf2456343836c",
            "messageTitle": "Fix docs to work with astroide\u003e2.x (#2646)",
            "messageBody": "",
            "insertions": 7,
            "deletions": 3
          }
        ]
      }
    ],
    "sdet_liang": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2016-10-25",
        "commitResults": [
          {
            "hash": "601b10abfa593ea1190345ed737f61e0e58270c4",
            "messageTitle": "Fix err \"global name \u0027module\u0027 is not defined\" (#1146)",
            "messageBody": "Fix following error when using this plugin\r\n```\r\nwith module.stream() as stream:\r\nNameError: global name \u0027module\u0027 is not defined\r\n```",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Jonathan Kotta": [
      {
        "insertions": 77,
        "deletions": 1,
        "date": "2016-01-12",
        "commitResults": [
          {
            "hash": "9c94c61b24170713c58d009c61363e84e287a3fd",
            "messageTitle": "Add pylint-insert-ignore-comment to pylint.el",
            "messageBody": "",
            "insertions": 77,
            "deletions": 1
          }
        ]
      }
    ],
    "Sushobhit": [
      {
        "insertions": 106,
        "deletions": 9,
        "date": "2018-05-15",
        "commitResults": [
          {
            "hash": "5f5026627520bd06dae00f9cb87148ba9733d312",
            "messageTitle": "Add new check \u0027comparison-with-itself\u0027 (#2074)",
            "messageBody": "This test checks that we don\u0027t compare a value with itself,\r\nwhich might suggest some potential bug or an honest mistake.\r\n\r\nFixes #2051\r\n",
            "insertions": 106,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 260,
        "deletions": 2,
        "date": "2018-05-19",
        "commitResults": [
          {
            "hash": "0120e4b671bcb8e81500de787a284b38af282bac",
            "messageTitle": "Take annotations in account for missing-type-doc and missing-return-doc",
            "messageBody": "Close #2083",
            "insertions": 200,
            "deletions": 1
          },
          {
            "hash": "b0f6184e03182736f8423441dfb87985da28e209",
            "messageTitle": "Add checker to warn when imported package is renamed as original one.",
            "messageBody": "Given an import, we\u0027ll emit this error whenever pylint finds an alias\r\nwith the same name as the import module.\r\n\r\nClose #2052.\r\n",
            "insertions": 60,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 79,
        "deletions": 114,
        "date": "2018-05-27",
        "commitResults": [
          {
            "hash": "8c5256dd2d3dc3cc24fe6b307bf8d683ba38b798",
            "messageTitle": "Remove six package usages. (#2151)",
            "messageBody": "",
            "insertions": 79,
            "deletions": 114
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 18,
        "date": "2018-05-30",
        "commitResults": [
          {
            "hash": "71181d23d16ea04dd205fb16e2de0aed3eef98ed",
            "messageTitle": "Completely remove six shims from the codebase",
            "messageBody": "",
            "insertions": 2,
            "deletions": 18
          }
        ]
      },
      {
        "insertions": 158,
        "deletions": 2,
        "date": "2018-06-18",
        "commitResults": [
          {
            "hash": "bdbf5561bf24523c234ec966aaa629c7e6f703d7",
            "messageTitle": "Add checker for simplifying chained comparison.",
            "messageBody": "Add new checker \"chained-comparison\"  which is used when pylint\r\ncan detect that multiple comparisons can be squashed together\r\ninto one.\r\n\r\nClose #2032 ",
            "insertions": 158,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 14,
        "deletions": 6,
        "date": "2018-06-28",
        "commitResults": [
          {
            "hash": "40df65a321f8434dbff085c98e6b21360b466147",
            "messageTitle": "Add build stages in travis.yml (#2219)",
            "messageBody": "",
            "insertions": 14,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 134,
        "deletions": 4,
        "date": "2018-07-31",
        "commitResults": [
          {
            "hash": "660c3787aa1bcd83d366653e776974b23394db29",
            "messageTitle": "consider bare except also for try-except-raise (#2353)",
            "messageBody": "pylint crashes due to safe_infer, in case of bare except.",
            "insertions": 48,
            "deletions": 3
          },
          {
            "hash": "676852cedc90c0ed4e7412b03b8d6b58a1f00486",
            "messageTitle": "Add new check misplaced-format-function. (#2218)",
            "messageBody": "* Add new check misplaced-format-function.\r\n\r\ncheck only w.r.t print function.\r\nFor other use cases no-member check already exists.\r\n\r\nfix code block not visible for few checkers\r\n",
            "insertions": 86,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 46,
        "deletions": 16,
        "date": "2018-08-31",
        "commitResults": [
          {
            "hash": "e3cb6d4a99162497f9a809eb721f7964f4c536ac",
            "messageTitle": "Emit unused-import instead of unused-variable when dealing with unused imports",
            "messageBody": "When pylint encounters unused imports in scopes (e.g. functions),\r\nit used to emit `unused-variable`. This is somewhat confusing, as those\r\nnames are not necessarily variables, so instead let\u0027s emit the more\r\nobvious `unused-import`.\r\n\r\nClose #2421",
            "insertions": 46,
            "deletions": 16
          }
        ]
      },
      {
        "insertions": 33,
        "deletions": 10,
        "date": "2018-09-28",
        "commitResults": [
          {
            "hash": "47c258eee17937bae776594a101eb8fdd36cd71d",
            "messageTitle": "Fix utils.is_subclass_of to be aware of complex hierarchies (#2508)",
            "messageBody": "",
            "insertions": 33,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 42,
        "deletions": 0,
        "date": "2019-08-22",
        "commitResults": [
          {
            "hash": "6b3afd4f6d75debd7f286f0d3c760ed10ab1e79f",
            "messageTitle": "Added a new check, consider-using-sys-exit, close #2925 (#3062)",
            "messageBody": "Close #2925 ",
            "insertions": 42,
            "deletions": 0
          }
        ]
      }
    ],
    "Arthur Lutz": [
      {
        "insertions": 4,
        "deletions": 4,
        "date": "2009-03-03",
        "commitResults": [
          {
            "hash": "e4ff845afa35a47d79f9f1abe449d0053567b026",
            "messageTitle": "add project page to readme",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          }
        ]
      }
    ],
    "Rogalski, Lukasz": [
      {
        "insertions": 81,
        "deletions": 110,
        "date": "2019-01-20",
        "commitResults": [
          {
            "hash": "4564f6aaf288c36cdaa410f90423a84d80868df0",
            "messageTitle": "Fixme should be triggered only in comments",
            "messageBody": "Closes #2321\n",
            "insertions": 81,
            "deletions": 110
          }
        ]
      }
    ],
    "guillaume2": [
      {
        "insertions": 12,
        "deletions": 3,
        "date": "2017-07-19",
        "commitResults": [
          {
            "hash": "418cf5b1a48f885edbc30cfe0b93e2b221903df4",
            "messageTitle": "Add of a new key/value pair in the json dictionnary. The key is message-id and the value is the message id. closes #1512",
            "messageBody": "",
            "insertions": 8,
            "deletions": 0
          },
          {
            "hash": "1778d028bb1a99b3c5608b5a6ac2a761928bc931",
            "messageTitle": "Tab replaced by spaces",
            "messageBody": "",
            "insertions": 3,
            "deletions": 2
          },
          {
            "hash": "0fc0440b67935488e779ca2a8ab8ba6a407704f5",
            "messageTitle": "Typo : dictionnary \u003d\u003e dictionary",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 41,
        "deletions": 4,
        "date": "2017-07-23",
        "commitResults": [
          {
            "hash": "d7260de1f4be5b9149c814eaae0f65a349a9cd88",
            "messageTitle": "logging-not-lazy is emitted when the addition sign is used as well",
            "messageBody": "Close #1479\n",
            "insertions": 41,
            "deletions": 4
          }
        ]
      }
    ],
    "moylop260": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2015-09-26",
        "commitResults": [
          {
            "hash": "fd2e758e9ba444ddf4ec45119b1aa2f575219f06",
            "messageTitle": "Fix #362 - Show deprecated-module even if the module is not installed",
            "messageBody": "--HG--\nbranch : fix-362\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 21,
        "deletions": 8,
        "date": "2015-09-27",
        "commitResults": [
          {
            "hash": "1b786c095709a97a971c4abae9c18052e69a2d24",
            "messageTitle": "Fix #362 - support in import and add test",
            "messageBody": "--HG--\nbranch : fix-362\n",
            "insertions": 18,
            "deletions": 3
          },
          {
            "hash": "0b3597f1def0d173e735cda822e71186769a247d",
            "messageTitle": "revert temp comment",
            "messageBody": "--HG--\nbranch : fix-362\n",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "4812b5e48c7cf9aefde2734133fc0bd532394163",
            "messageTitle": "revert original tox.ini",
            "messageBody": "--HG--\nbranch : fix-362\n",
            "insertions": 1,
            "deletions": 2
          },
          {
            "hash": "cbab1852f6c933c78a0676f7235d8fcfe4442283",
            "messageTitle": "Remove unused line",
            "messageBody": "--HG--\nbranch : fix-362\n",
            "insertions": 0,
            "deletions": 1
          }
        ]
      }
    ],
    "David Lindquist": [
      {
        "insertions": 76,
        "deletions": 5,
        "date": "2014-08-19",
        "commitResults": [
          {
            "hash": "061d054a56b60e8d8952fd2033056913669e7df5",
            "messageTitle": "Emit warning for .format() interpolation within logging function calls.",
            "messageBody": "",
            "insertions": 73,
            "deletions": 5
          },
          {
            "hash": "b585654baa438bf2805599b07daacd9ea6474ab4",
            "messageTitle": "Updated ChangeLog",
            "messageBody": "",
            "insertions": 3,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 1,
        "date": "2014-08-20",
        "commitResults": [
          {
            "hash": "676b52ccca989a36d5dca63b739b248a88a8c8c9",
            "messageTitle": "Code review update: return False instead of using assert.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 5,
        "date": "2014-09-01",
        "commitResults": [
          {
            "hash": "d45a60405a0e315c89afdc7d6aa9602e7a53239e",
            "messageTitle": "Changed symbolic name to: logging-format-interpolation Fixed indentation",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 16,
        "deletions": 16,
        "date": "2014-09-03",
        "commitResults": [
          {
            "hash": "c84f1c6ea5a92c57f17997f54dc4cd69d4f63a80",
            "messageTitle": "Backed out changeset 787ddbe3705a",
            "messageBody": "",
            "insertions": 2,
            "deletions": 14
          },
          {
            "hash": "dcc7030e2a345791106b03d68646bdeb2effb3d7",
            "messageTitle": "ChangeLog edited online with Bitbucket: fixed conflicts",
            "messageBody": "",
            "insertions": 14,
            "deletions": 2
          }
        ]
      }
    ],
    "Aurelien Campeas": [
      {
        "insertions": 2,
        "deletions": 3,
        "date": "2008-09-15",
        "commitResults": [
          {
            "hash": "f3103ef45d930b6a2c0df7e77bc39720a5e437e2",
            "messageTitle": "fix #5993 (epylint should work with python 2.3)",
            "messageBody": "",
            "insertions": 2,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 1,
        "date": "2013-03-13",
        "commitResults": [
          {
            "hash": "5be8b055635ab60beec12cb0808f5488b2fcb0bc",
            "messageTitle": " fix name error causing crash when symbols are included in output messages. Closes #124662",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 3,
        "date": "2013-04-11",
        "commitResults": [
          {
            "hash": "2bc5b3c7cd45d7dec3aa8515ab45408190c89fe3",
            "messageTitle": "fix NameError",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          }
        ]
      }
    ],
    "root@clnstor.am.local": [
      {
        "insertions": 8,
        "deletions": 8,
        "date": "2013-09-03",
        "commitResults": [
          {
            "hash": "81b40e278a9190cbe1184a38c9d40a9c8be1fa86",
            "messageTitle": "Fix tests eols.",
            "messageBody": "--HG--\nbranch : iter\n",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "30dda1822754d5eb3af4170872509bc0822403d5",
            "messageTitle": "Fix deprecation warnings.",
            "messageBody": "--HG--\nbranch : iter\n",
            "insertions": 4,
            "deletions": 4
          }
        ]
      }
    ],
    "syutbai": [
      {
        "insertions": 72,
        "deletions": 5,
        "date": "2019-11-21",
        "commitResults": [
          {
            "hash": "16017690196e77fcabdedf1cd8b8cbfb357a97d4",
            "messageTitle": "Add support for --fail-under flag",
            "messageBody": "Add a --fail-under \u003cscore\u003e flag, also configurable in a `.pylintrc`file\r\n\r\nIf the final score is more than the specified score, it\u0027s considered a\r\nsuccess and pylint exits with exit code 0. Otherwise, it\u0027s considered\r\na failure and pylint exits with its current exit code based on the\r\nmessages issued.\r\n\r\nClose #2242\r\n",
            "insertions": 72,
            "deletions": 5
          }
        ]
      }
    ],
    "Florian Bruhin": [
      {
        "insertions": 2,
        "deletions": 4,
        "date": "2015-04-20",
        "commitResults": [
          {
            "hash": "7ae66d3a948489340e0b20cd21a8114c2ff9c902",
            "messageTitle": "Use no-docstring-rgx option to not emit missing-docstring for private funcs.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 1,
        "date": "2015-05-21",
        "commitResults": [
          {
            "hash": "0163965e6485e6177997ed38ad26c3a40cecaf68",
            "messageTitle": "Clarify no-docstring-rgx change in ChangeLog",
            "messageBody": "--HG--\nbranch : The-Compiler/clarify-nodocstringrgx-change-in-changel-1432184214099\n",
            "insertions": 2,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 44,
        "deletions": 46,
        "date": "2015-07-25",
        "commitResults": [
          {
            "hash": "137daab49798a5f85ca2801ffc4358a25622b08e",
            "messageTitle": "Fix tests when $HOME is unset in the environment.",
            "messageBody": "tox beginning with v2.0 does hide most environment from the tests, which means\ngetting $HOME/$USERDIR to reset it later will fail.\n\nWith this change, we delete the variable when it wasn\u0027t set when starting the\ntest.\n\n--HG--\nbranch : home-fix\n",
            "insertions": 15,
            "deletions": 6
          },
          {
            "hash": "9285b6508e1a6967d6ea2a98a732e65be4ecaf7b",
            "messageTitle": "Use a context manager for fake home directories.",
            "messageBody": "--HG--\nbranch : home-fix\n",
            "insertions": 27,
            "deletions": 37
          },
          {
            "hash": "67ec771d705023fff5d88b5490bbd0272f4c108e",
            "messageTitle": "Get rid of astroid.common.__version__.",
            "messageBody": "--HG--\nbranch : no-logilab-common\n",
            "insertions": 2,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 572,
        "deletions": 53,
        "date": "2015-07-26",
        "commitResults": [
          {
            "hash": "11ed7046595d001c6c6ab7d46a1f5483e0af9557",
            "messageTitle": "Get rid of logilab.common.optik_ext and logilab.common.textutils.",
            "messageBody": "--HG--\nbranch : no-logilab-common\n",
            "insertions": 155,
            "deletions": 19
          },
          {
            "hash": "20fa6d19bb11b833e41a0489c325178f878ac479",
            "messageTitle": "Get rid of logilab.common.compat.",
            "messageBody": "--HG--\nbranch : no-logilab-common\n",
            "insertions": 6,
            "deletions": 8
          },
          {
            "hash": "ce399f468335bf2370bccb80ee292bd33100fb84",
            "messageTitle": "Get rid of logilab.common.interface.",
            "messageBody": "--HG--\nbranch : no-logilab-common\n",
            "insertions": 24,
            "deletions": 8
          },
          {
            "hash": "f4aada70df495bd10f33f10e66ded72e6d503b43",
            "messageTitle": "Remove dead test file.",
            "messageBody": "This also removes the need for logilab.common.deprecation.\n\n--HG--\nbranch : no-logilab-common\n",
            "insertions": 0,
            "deletions": 8
          },
          {
            "hash": "4674987fb79669c4f1e12d48cf00a3d3087751d2",
            "messageTitle": "Get rid of logilab.common.modutils.",
            "messageBody": "This was only needed in a test.\n\n--HG--\nbranch : no-logilab-common\n",
            "insertions": 6,
            "deletions": 6
          },
          {
            "hash": "c68f93b544cf93f5eb97c1da4af8d8e87096e48d",
            "messageTitle": "Get rid of logilab.common.vcgutils.",
            "messageBody": "This is basically an 1:1 copy...\n\n--HG--\nbranch : no-logilab-common\n",
            "insertions": 201,
            "deletions": 1
          },
          {
            "hash": "2463e6a9bd6c684d3b4d82a320d4c18c232dca9c",
            "messageTitle": "Get rid of logilab.common.graph.",
            "messageBody": "--HG--\nbranch : no-logilab-common\n",
            "insertions": 180,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 57,
        "date": "2015-12-11",
        "commitResults": [
          {
            "hash": "0e5a67c4e3a2f0be66f2ed17677406f1d42878b1",
            "messageTitle": "Delete .hgtags",
            "messageBody": "",
            "insertions": 0,
            "deletions": 57
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2016-06-08",
        "commitResults": [
          {
            "hash": "5d97336452d0e3883bc429c4a3144acc4295f984",
            "messageTitle": "Don\u0027t pin mccabe version",
            "messageBody": "Fixes #932\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2016-07-13",
        "commitResults": [
          {
            "hash": "952bb539df5ff729be5753c217e7c90f4702f643",
            "messageTitle": "Spelling fix (#1003)",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2016-07-23",
        "commitResults": [
          {
            "hash": "0b295ce1a0a3da18c0e13ce181c4bb6adcc89230",
            "messageTitle": "Use ClassDef.instantiate_class() (#1040)",
            "messageBody": "Otherwise we get this from astroid:\r\n\r\n.../pylint/pylint/checkers/classes.py:1112: PendingDeprecationWarning:\r\nClassDef.instanciate_class() is deprecated and slated for removal in\r\nastroid 2.0, use ClassDef.instantiate_class() instead.\r\n    instance \u003d cls.instanciate_class()",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2016-09-17",
        "commitResults": [
          {
            "hash": "17d3cca72577374a0ee6b4a3f7c907021217ebe2",
            "messageTitle": "Adjust README path in setup.py (#1102)",
            "messageBody": "This is probably what caused #1100?\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Nick Bastin": [
      {
        "insertions": 13,
        "deletions": 0,
        "date": "2015-12-19",
        "commitResults": [
          {
            "hash": "ac80c33d5a23d78c37eba0585dce19b864eb14f5",
            "messageTitle": "Ignore unneeded-not in __ne__, test it",
            "messageBody": "",
            "insertions": 13,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2015-12-20",
        "commitResults": [
          {
            "hash": "393ca621a003da3ce4e2180b172364088792b00b",
            "messageTitle": "Suppress too-few-public-methods for unneeded-not test",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 0,
        "date": "2015-12-21",
        "commitResults": [
          {
            "hash": "dbfd7deef35ce19e194343f48250a7a238527ff4",
            "messageTitle": "Add changelog update",
            "messageBody": "",
            "insertions": 4,
            "deletions": 0
          }
        ]
      }
    ],
    "Alain Leufroy": [
      {
        "insertions": 14,
        "deletions": 5,
        "date": "2010-02-17",
        "commitResults": [
          {
            "hash": "38128e9c51c725e10943d46ae2c768ed896fab9e",
            "messageTitle": "implements #9982: specific error message when raising NotImplemented",
            "messageBody": "",
            "insertions": 14,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 94,
        "deletions": 4,
        "date": "2010-02-23",
        "commitResults": [
          {
            "hash": "84411fa30899b007b1772cf1555094d97888e6d4",
            "messageTitle": "implement #9776, \u0027W0150\u0027 break or return statement in finally block may swallow exception. https://www.logilab.net/elo/ticket/9776",
            "messageBody": "* add \u0027_check_not_in_finally\u0027 to check if a node is in a finally clauses while given\nparent types were not founded before\n* add the checks in \u0027visite_return\u0027 and \u0027visite_break\u0027\n* add the flag \u0027_tryfinallys\u0027 to prevent searching about try...finally bloc if we\u0027re\noutside one.\n",
            "insertions": 94,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 22,
        "deletions": 7,
        "date": "2011-07-08",
        "commitResults": [
          {
            "hash": "bc66f92a85219978eeae85afd560a4609390fb57",
            "messageTitle": "add regular expression support for generated-members (closes #69738)",
            "messageBody": "proposed: by Bruno Clermont\n",
            "insertions": 22,
            "deletions": 7
          }
        ]
      }
    ],
    "Ashley Whetter": [
      {
        "insertions": 303,
        "deletions": 7,
        "date": "2016-04-30",
        "commitResults": [
          {
            "hash": "a994eeb62066213bdbf4bc82878105f29958401f",
            "messageTitle": "[ADD] check_docs can find constructor parameters in __init__ (#887)",
            "messageBody": "Also added warning W9005 to indicate when constructor parameters are documented\r\nin both the class docstring and __init__ docstring.",
            "insertions": 303,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 881,
        "deletions": 188,
        "date": "2016-05-20",
        "commitResults": [
          {
            "hash": "05eb7fd20e279b5616bea237d0effcbd598a9583",
            "messageTitle": "Added a new extension for checking documented exceptions raised (#904)",
            "messageBody": "Add check_raises_docs\r\n\r\nCloses #904",
            "insertions": 881,
            "deletions": 188
          }
        ]
      },
      {
        "insertions": 332,
        "deletions": 3,
        "date": "2016-05-25",
        "commitResults": [
          {
            "hash": "21424f2faa8c1126d648f6136f6f22812ed29a64",
            "messageTitle": "Added return docstring checking to check_docs (#914)",
            "messageBody": "Added return docstring checking to check_docs\r\n",
            "insertions": 332,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 251,
        "deletions": 3,
        "date": "2016-05-30",
        "commitResults": [
          {
            "hash": "3d0478132e10428bdca9727fb955ea036afc29c1",
            "messageTitle": "Check docs improvements (#918)",
            "messageBody": "Fixed linting docstring when function has args or kwargs and fixed missing-param-doc with leading asterisks in Google docstring\r\n\r\nLeading asterisks are allowed on the name of args and kwargs in a Google docstring but we weren\u0027t checking for these.\r\n",
            "insertions": 251,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 240,
        "deletions": 103,
        "date": "2016-06-03",
        "commitResults": [
          {
            "hash": "147b6b977929c2c00c747a8c40c479a5c29ae0b8",
            "messageTitle": "Improved docstring matching in check_docs (#927)",
            "messageBody": "The common section parsing code has been merged into a single method.\nFixed matching of complex types (eg mymodule.MyClass),\nreferences (eg :class:`AClass`),\nand container types (eg list(:class:`AClass`) or tuple(str, int)).\nFixed numpy docs not requiring descriptions.\n",
            "insertions": 233,
            "deletions": 96
          },
          {
            "hash": "b3eda4369f5b217840bc8911fdf2725e8f1408c8",
            "messageTitle": "Fixed some comment whitespacing",
            "messageBody": "",
            "insertions": 7,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 138,
        "deletions": 3,
        "date": "2016-06-05",
        "commitResults": [
          {
            "hash": "5df3bf1a8fa7f454ab7d20e3fa79b5af0782bbfd",
            "messageTitle": "check_docs warns for redundant return docstring (#929)",
            "messageBody": "Fixes #734",
            "insertions": 138,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 69,
        "deletions": 41,
        "date": "2016-06-25",
        "commitResults": [
          {
            "hash": "deaedd4309309d2e53cdef2362896dddda780a1f",
            "messageTitle": "Fixed qualified type detection in sphinx docstrings",
            "messageBody": "Fixes #949\n",
            "insertions": 27,
            "deletions": 18
          },
          {
            "hash": "0d170658efbdf8da0128a45780df6ca9193d35b2",
            "messageTitle": "Fixed our docstring lint errors",
            "messageBody": "",
            "insertions": 42,
            "deletions": 23
          }
        ]
      },
      {
        "insertions": 504,
        "deletions": 13,
        "date": "2016-07-09",
        "commitResults": [
          {
            "hash": "42c97b3bf7b808a6fb2d253c1603ec71c2171198",
            "messageTitle": "Added checks for yield documentation",
            "messageBody": "",
            "insertions": 504,
            "deletions": 13
          }
        ]
      },
      {
        "insertions": 15,
        "deletions": 1,
        "date": "2016-07-13",
        "commitResults": [
          {
            "hash": "caa89359ad9ce957f54d3ae144cca5c5e78a3a33",
            "messageTitle": "possible_exc_types checks for Uninferables",
            "messageBody": "Fixes #998\n",
            "insertions": 15,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 125,
        "deletions": 9,
        "date": "2016-07-15",
        "commitResults": [
          {
            "hash": "19573a0d90e21523000aeefd31d06d05e8743709",
            "messageTitle": "Added check for an inner loop reusing an outer loop\u0027s target(s)",
            "messageBody": "Closes #999\n",
            "insertions": 125,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 3,
        "date": "2016-07-23",
        "commitResults": [
          {
            "hash": "05c5c86f56504921427a97fcc69f6be47a80ba99",
            "messageTitle": "Added some missing changes to the docs",
            "messageBody": "",
            "insertions": 10,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 78,
        "deletions": 12,
        "date": "2017-01-27",
        "commitResults": [
          {
            "hash": "8e7501a8ee51a6fce6b1a093c90f89f002f533a9",
            "messageTitle": "Can detect multiple types in docstring type fields (#1294)",
            "messageBody": "Fixes #1137",
            "insertions": 78,
            "deletions": 12
          }
        ]
      },
      {
        "insertions": 23,
        "deletions": 1,
        "date": "2017-03-31",
        "commitResults": [
          {
            "hash": "f7da70e1cbe785e423657fe4991338ef8e21deaa",
            "messageTitle": "docparams now ignores \"optional\" specifier on parameter docs (#1391)",
            "messageBody": "Fixes #1383",
            "insertions": 23,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 627,
        "deletions": 69,
        "date": "2017-07-08",
        "commitResults": [
          {
            "hash": "3cf28e95c087107f108f9d1ae5451e4682f7a2bb",
            "messageTitle": "docparams checks for errors in a setters property docstring",
            "messageBody": "Fixes #1125\n",
            "insertions": 84,
            "deletions": 0
          },
          {
            "hash": "1f31968f0f0d74d89bad74aca9305483c935d0c3",
            "messageTitle": "docparams can find property return types",
            "messageBody": "",
            "insertions": 28,
            "deletions": 3
          },
          {
            "hash": "a6fc9c8fe78d406b946dd3a5345acfa4bbb04b1e",
            "messageTitle": "Added docparams property tests",
            "messageBody": "",
            "insertions": 366,
            "deletions": 7
          },
          {
            "hash": "2e7423c962dcbd81fcf32d22779518dffbd665c4",
            "messageTitle": "fixup! Added docparams property tests",
            "messageBody": "",
            "insertions": 149,
            "deletions": 59
          }
        ]
      },
      {
        "insertions": 456,
        "deletions": 110,
        "date": "2017-07-12",
        "commitResults": [
          {
            "hash": "9f7797ae15bd5e4e5c4ad320afcc15eeb4cdae82",
            "messageTitle": "Expanded documentation for new contributors (#1569)",
            "messageBody": "",
            "insertions": 456,
            "deletions": 110
          }
        ]
      },
      {
        "insertions": 36,
        "deletions": 9,
        "date": "2017-11-11",
        "commitResults": [
          {
            "hash": "e100ce48ebb096fd46bb5f2b515f784ebe686d6b",
            "messageTitle": "Fixed masking of docparam test failures",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "ff45b2d06262be02274a959f9d6feda63bc9dd3a",
            "messageTitle": "Fixed false positive for compact argument docs with container types",
            "messageBody": "",
            "insertions": 32,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 46,
        "deletions": 6,
        "date": "2018-02-16",
        "commitResults": [
          {
            "hash": "bd38d67ab5cba0d850c54753677c8f5f40b38004",
            "messageTitle": "Fixed false positive when a numpy Attributes section follows a Parameters section (#1878)",
            "messageBody": "Fixes #1867",
            "insertions": 46,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2018-05-05",
        "commitResults": [
          {
            "hash": "d426cd6992047c8be5045a6fd15126cef84c7f6a",
            "messageTitle": "Fixed a lint error",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 2,
        "date": "2018-05-06",
        "commitResults": [
          {
            "hash": "f7fc8ec032daacb8102865d496b09fb023c63344",
            "messageTitle": "Can ignore arguments that cause redefined-outer-name (#2054)",
            "messageBody": "Fixes #1535",
            "insertions": 1,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 208,
        "deletions": 12,
        "date": "2018-05-07",
        "commitResults": [
          {
            "hash": "0748e3e162f3326be55f1f123d68f05b604a49af",
            "messageTitle": "Enum classes no longer trigger too-few-methods",
            "messageBody": "Fixes #605\n",
            "insertions": 78,
            "deletions": 10
          },
          {
            "hash": "938c72fe18857af2598c066bc6e7fd330bf5784c",
            "messageTitle": "Relaxed docstring checks for abstract methods",
            "messageBody": "Abstract methods are allowed to document returns documentation even\nif the default implementation does not return something.\nThis is so that an abstract method can document what an implementation\nshould return.\n\nAbstract methods also do not need to document that they raise a\nNotImplementedError. This is because a docstring author may choose to\nindicate that the method is abstract in the docstring description,\nwhich is something that we cannot detect.\n\nCloses #2044\n",
            "insertions": 130,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 103,
        "deletions": 7,
        "date": "2018-05-15",
        "commitResults": [
          {
            "hash": "9b2ecb6e63d07dfe4b3fc2d91b3236f8a6c1bf8a",
            "messageTitle": "Updated release documentation",
            "messageBody": "",
            "insertions": 5,
            "deletions": 7
          },
          {
            "hash": "ecced5afb28228d71d60b921dc620b030879adf9",
            "messageTitle": "Added 1.9.0 release to changelog",
            "messageBody": "",
            "insertions": 6,
            "deletions": 0
          },
          {
            "hash": "2ebd2616e948a68f8d9c1b1a22f20df13cc1c0c0",
            "messageTitle": "Added 1.9 whatsnew documentation",
            "messageBody": "",
            "insertions": 92,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 7,
        "date": "2018-05-16",
        "commitResults": [
          {
            "hash": "2a317ecf523cf1a1cbcf01c56e968e559207182a",
            "messageTitle": "Refixed old-raise-syntax not looking for traceback",
            "messageBody": "",
            "insertions": 1,
            "deletions": 2
          },
          {
            "hash": "6fe1b8f83f64925133fe921cadc33698084d9057",
            "messageTitle": "Fixed up a couple of docstrings",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2018-05-28",
        "commitResults": [
          {
            "hash": "33f7250ef7d0bc0bf17dcece0a80ba9b9d501351",
            "messageTitle": "Prepare 2.0.0-dev1",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 33,
        "deletions": 0,
        "date": "2018-06-01",
        "commitResults": [
          {
            "hash": "db63b4928c4210e24b11c87624376fc55b01e09c",
            "messageTitle": "Fixed method-hidden raised when assigned to data descriptors",
            "messageBody": "Closes #1061\n",
            "insertions": 33,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 20,
        "deletions": 6,
        "date": "2018-06-02",
        "commitResults": [
          {
            "hash": "53b9ccaea9c351eb46f3ba7d39cfdad2e466df29",
            "messageTitle": "Fixed emitting ``useless-super-delegation`` when changing the default value of keyword arguments",
            "messageBody": "Closes #2022\n",
            "insertions": 20,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 41,
        "deletions": 7,
        "date": "2018-07-24",
        "commitResults": [
          {
            "hash": "16eb1bfd885a2e807912e657cfc79d2ee82b587b",
            "messageTitle": "Can specify a default docstring type for when the check cannot guess the type (#2340)",
            "messageBody": "Close #1169",
            "insertions": 41,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 25,
        "deletions": 0,
        "date": "2019-05-20",
        "commitResults": [
          {
            "hash": "b38a7c80211123bcc732f97da32b77002f2bde96",
            "messageTitle": "Fixed false positive for `undefined-loop-variable`",
            "messageBody": "Closes #202\n",
            "insertions": 25,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 31,
        "deletions": 0,
        "date": "2019-05-21",
        "commitResults": [
          {
            "hash": "5d0c0fa73bfc1c95f59b8d6e746117777681b260",
            "messageTitle": "Fixed pragmas on their own line after a backlash being ignored (#2923)",
            "messageBody": "Closes #199",
            "insertions": 31,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 54,
        "deletions": 0,
        "date": "2019-05-23",
        "commitResults": [
          {
            "hash": "f90b223a5ea70a0b9a52034280fe22638e6ef14d",
            "messageTitle": "Can choose decorators that mutate a function\u0027s signature (#2926)",
            "messageBody": "Close #259",
            "insertions": 54,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 127,
        "deletions": 35,
        "date": "2019-05-26",
        "commitResults": [
          {
            "hash": "1669bc3868b198a1e97fae4fa60e0d6cfaed53d9",
            "messageTitle": "Fixed false positives for function stubs (#2927)",
            "messageBody": "Close #1581",
            "insertions": 127,
            "deletions": 35
          }
        ]
      },
      {
        "insertions": 36,
        "deletions": 60,
        "date": "2019-06-20",
        "commitResults": [
          {
            "hash": "33b8185a455c1686d038258697bb93005f2441c2",
            "messageTitle": "Stopped installing tests with package",
            "messageBody": "",
            "insertions": 36,
            "deletions": 60
          }
        ]
      },
      {
        "insertions": 122,
        "deletions": 59,
        "date": "2019-09-10",
        "commitResults": [
          {
            "hash": "eeca6cf0baa7263ff46598f06e4eda0f3072262b",
            "messageTitle": "Allow f-strings as a valid logging string formatting choice",
            "messageBody": "Closes #2395\n",
            "insertions": 122,
            "deletions": 59
          }
        ]
      },
      {
        "insertions": 166,
        "deletions": 34,
        "date": "2019-10-09",
        "commitResults": [
          {
            "hash": "3fc8c98d0fa64723a6671424bb6f0ccd30cef11a",
            "messageTitle": "Can read setup.cfg and pyproject.toml files",
            "messageBody": "Closes #617\n",
            "insertions": 166,
            "deletions": 34
          }
        ]
      },
      {
        "insertions": 104,
        "deletions": 25,
        "date": "2019-10-17",
        "commitResults": [
          {
            "hash": "e1f8fdef9d5438701e852f285f0ac537203881e6",
            "messageTitle": "Fixed ``missing-yield-type-doc`` ignoring type annotation (#3195)",
            "messageBody": "Closes #3185",
            "insertions": 42,
            "deletions": 17
          },
          {
            "hash": "183dcc4cb134d3dab2696e2d28c51c5a3577e358",
            "messageTitle": "docparams can identify multiple types in raises sections",
            "messageBody": "Closes #2729\n",
            "insertions": 62,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 33,
        "deletions": 0,
        "date": "2019-10-30",
        "commitResults": [
          {
            "hash": "a4c257486c28bf19dd301fd7ba9b4de1267f2836",
            "messageTitle": "Fixed method-hidden when subclass defines the method (#3206)",
            "messageBody": "",
            "insertions": 33,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 16,
        "deletions": 5,
        "date": "2020-01-03",
        "commitResults": [
          {
            "hash": "bcc57067246488364e6d72453b801f5bb9bf1505",
            "messageTitle": "Fixed undefined-variable and unused-import flase positives when using a metaclass via an attribute",
            "messageBody": "Closes #1603\n",
            "insertions": 16,
            "deletions": 5
          }
        ]
      }
    ],
    "Daniel Balparda": [
      {
        "insertions": 5,
        "deletions": 6,
        "date": "2013-11-20",
        "commitResults": [
          {
            "hash": "5c4bbbdadc912c23e310c13c972fe7d31485e3e3",
            "messageTitle": "Do not try to create the PYLINTHOME directory on import of pylint.config, since it might fail and lead to spurious warnings. Instead, create it when it is needed.",
            "messageBody": "",
            "insertions": 5,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 0,
        "date": "2013-11-21",
        "commitResults": [
          {
            "hash": "d3b3b6c9976960de979b0a92622db3d5729c129a",
            "messageTitle": "Always call the reporter\u0027s on_close method, even if no file could be analyzed. Some reporters still need to flush their state.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 49,
        "deletions": 6,
        "date": "2013-12-04",
        "commitResults": [
          {
            "hash": "ffd9fa5d4d549949ebf25c58e9a703a08c80fc11",
            "messageTitle": "Adding a new message for pylint (I0022, deprecated-pragma) that warns on the deprecated pragma disable-msg and enable-msg suppressions.",
            "messageBody": "",
            "insertions": 49,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 28,
        "deletions": 18,
        "date": "2015-03-17",
        "commitResults": [
          {
            "hash": "00a32658c211f42cbddd808575c5afbf01c93391",
            "messageTitle": "Add an extra hint (ex: \"add 3 spaces\") to bad-continuation message.",
            "messageBody": "",
            "insertions": 28,
            "deletions": 18
          }
        ]
      }
    ],
    "Michal Nowikowski": [
      {
        "insertions": 249,
        "deletions": 59,
        "date": "2014-07-25",
        "commitResults": [
          {
            "hash": "8019ea82b73163fafa386d0e029db5c9b2b7bdbe",
            "messageTitle": "Added two checkers for mixed line endings and for unexpected line endings.",
            "messageBody": "",
            "insertions": 37,
            "deletions": 3
          },
          {
            "hash": "e7788ff3dfe544b5663ba5d1a6164316f34301bf",
            "messageTitle": "Added two checkers for mixed line endings and for unexpected line endings.",
            "messageBody": "--HG--\nbranch : line-ending-checks\n",
            "insertions": 37,
            "deletions": 3
          },
          {
            "hash": "47d30f5451727c68634afebcd48b302023039d2b",
            "messageTitle": "Fixed tests for line ending checks.",
            "messageBody": "--HG--\nbranch : line-ending-checks\n",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "ad2b445b4afcaf423af7c23bbfbcf6b5eb61ac59",
            "messageTitle": "Added a spelling checker.",
            "messageBody": "New messages:\n- wrong-spelling-in-comment\n- wrong-spelling-in-docstring\nNew options:\n- spelling-dict\n- spelling-ignore-words\nNew dependency: python-enchant (added as suggested in deb package).\n\n--HG--\nbranch : spelling-checker\n",
            "insertions": 151,
            "deletions": 1
          },
          {
            "hash": "da005ad4967a02b39e20f3bd76fb0b91c2b42140",
            "messageTitle": "Tweaked spelling checker msg ids and removed them from exhaustivity tests.",
            "messageBody": "--HG--\nbranch : spelling-checker\n",
            "insertions": 4,
            "deletions": 2
          },
          {
            "hash": "a404c506a2e2eba9ec3f315db98d282191c37cbc",
            "messageTitle": "Added in connection to spelling checker a suggestion for python-enchant to also debian.sid",
            "messageBody": "--HG--\nbranch : spelling-checker\n",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "4aa89161fdea8ba9bbb6cf27a2bbf11b29a093d2",
            "messageTitle": "Updated ChangeLog about spelling checker.",
            "messageBody": "--HG--\nbranch : spelling-checker\n",
            "insertions": 6,
            "deletions": 5
          },
          {
            "hash": "9ea5eeabca88a33eb746b6f5fdd862913eef0511",
            "messageTitle": "Updated ChangeLog about line ending checks",
            "messageBody": "--HG--\nbranch : line-ending-checks\n",
            "insertions": 6,
            "deletions": 5
          },
          {
            "hash": "99b6afcd40ea4ba91795a179d4cedaead2c913e4",
            "messageTitle": "backout of  85a5e49",
            "messageBody": "",
            "insertions": 3,
            "deletions": 37
          }
        ]
      },
      {
        "insertions": 218,
        "deletions": 139,
        "date": "2014-07-26",
        "commitResults": [
          {
            "hash": "bb695592fa468bea9d93a7cbacb2cdb8b09fed90",
            "messageTitle": "Refactored code of spelling checker.",
            "messageBody": "--HG--\nbranch : spelling-checker\n",
            "insertions": 18,
            "deletions": 22
          },
          {
            "hash": "0f94fbdeb8f0fcfb8e9e0e9ab8d021e3be39d1dd",
            "messageTitle": "Removed sign word from description of message.",
            "messageBody": "--HG--\nbranch : line-ending-checks\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "554fd861d45a8e631b3845ee2e9de744ba0b6dcc",
            "messageTitle": "Fixed tests for line endings checker.",
            "messageBody": "--HG--\nbranch : line-ending-checks\n",
            "insertions": 94,
            "deletions": 94
          },
          {
            "hash": "472e2f3645f13ba99f4dbcef1283556a136954ff",
            "messageTitle": "Added initial Makefile",
            "messageBody": "--HG--\nbranch : make\n",
            "insertions": 49,
            "deletions": 0
          },
          {
            "hash": "62bf347768e6fe0d4c90140b9f97c9a26b8f702c",
            "messageTitle": "Improved generating docs from Makefile.",
            "messageBody": "--HG--\nbranch : make\n",
            "insertions": 4,
            "deletions": 1
          },
          {
            "hash": "57595931ebe4d13ee34e9580fef9177ae293b681",
            "messageTitle": "Fixed generating docs from Makefile",
            "messageBody": "--HG--\nbranch : make\n",
            "insertions": 4,
            "deletions": 2
          },
          {
            "hash": "8104d137e0a3baefa1d7d1703adb998029b3e7a7",
            "messageTitle": "Another fix for generating docs from Makefile - added install sphinx.",
            "messageBody": "--HG--\nbranch : make\n",
            "insertions": 2,
            "deletions": 4
          },
          {
            "hash": "01fc0815d79d5fa22592f9bcbbbdf3037fb09f71",
            "messageTitle": "Disabled cleaning debian folder.",
            "messageBody": "--HG--\nbranch : make\n",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "0f79335e64f9be6e44585ea4d49d406e25384553",
            "messageTitle": "Improved building packages.",
            "messageBody": "--HG--\nbranch : make\n",
            "insertions": 29,
            "deletions": 7
          },
          {
            "hash": "b50d6948d668a804731cc9918f35dda0b8fe668e",
            "messageTitle": "Added missing deps for building deb package.",
            "messageBody": "--HG--\nbranch : make\n",
            "insertions": 6,
            "deletions": 3
          },
          {
            "hash": "95d32ed9985d520e1f2b9d91b1b94de89bc2f4b8",
            "messageTitle": "Fixed syntax error in Makefile.",
            "messageBody": "--HG--\nbranch : make\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "6dd4e111381f9b04659f27632b9755980e2dee23",
            "messageTitle": "Added sub-version to deb package.",
            "messageBody": "--HG--\nbranch : make\n",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "b3809a55b9a6dbc62d4fe059b2104c2b3b33ba66",
            "messageTitle": "Updated help and added clobber target to Makefile.",
            "messageBody": "--HG--\nbranch : make\n",
            "insertions": 7,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 33,
        "deletions": 33,
        "date": "2014-07-28",
        "commitResults": [
          {
            "hash": "eeeb3b48de509d0fe1d954a09b0dacaac0f7e850",
            "messageTitle": "Renamed line_endings.arg to line_endings.rc.",
            "messageBody": "--HG--\nbranch : line-ending-checks\n",
            "insertions": 0,
            "deletions": 0
          },
          {
            "hash": "13a3c5f333e60dcd3e3709babd8c56b612764ec4",
            "messageTitle": "Fixed tests for line endings checks.",
            "messageBody": "--HG--\nbranch : line-ending-checks\n",
            "insertions": 33,
            "deletions": 33
          }
        ]
      },
      {
        "insertions": 11,
        "deletions": 11,
        "date": "2014-07-29",
        "commitResults": [
          {
            "hash": "2fb7c6b89bb6f6baa208dc3d0bfdbd14ebf04f6e",
            "messageTitle": "Fixed merge problem.",
            "messageBody": "--HG--\nbranch : line-ending-checks\n",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "7ce52e5d1e5462854c82831c24c7a72a1aaa7475",
            "messageTitle": "Moved changelog entry to the top.",
            "messageBody": "--HG--\nbranch : line-ending-checks\n",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "c0b6ed19e14bfc46675bce8e74f9a7adacc86dd2",
            "messageTitle": "Review fixes - added comment.",
            "messageBody": "--HG--\nbranch : spelling-checker\n",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 23,
        "date": "2014-07-30",
        "commitResults": [
          {
            "hash": "f1d8b435f7e3e0babac8b203b455c3a39d57737b",
            "messageTitle": "Tweaked the Makefile to make it distro independent.",
            "messageBody": "--HG--\nbranch : make\n",
            "insertions": 4,
            "deletions": 3
          },
          {
            "hash": "dd8a9e5d26f22ba5a146b3ae04412d609b68f67d",
            "messageTitle": "Fixed merge.",
            "messageBody": "--HG--\nbranch : spelling-checker\n",
            "insertions": 0,
            "deletions": 20
          }
        ]
      },
      {
        "insertions": 150,
        "deletions": 19,
        "date": "2014-07-31",
        "commitResults": [
          {
            "hash": "ca2da267335c95faaf6d2b68f0bd4342d8a7d1e0",
            "messageTitle": "Added to new options to spell checker: spelling-private-dict-file and spelling-store-unknown-words. Improved handling variable or class names in comments and docstrings. Added unit tests for spell checker.",
            "messageBody": "--HG--\nbranch : spelling-checker\n",
            "insertions": 144,
            "deletions": 18
          },
          {
            "hash": "693f511d975b61871378ee398dfbe66979fa0dbf",
            "messageTitle": "Fixed calling maketrans on Py3k.",
            "messageBody": "--HG--\nbranch : spelling-checker\n",
            "insertions": 6,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 31,
        "deletions": 11,
        "date": "2014-08-01",
        "commitResults": [
          {
            "hash": "93de96b067538c8d6a56f388c1a679c3c5ef4e05",
            "messageTitle": "Improved presenting unused-import message. Closes issue #293.",
            "messageBody": "--HG--\nbranch : fix-293\n",
            "insertions": 13,
            "deletions": 8
          },
          {
            "hash": "0f9ecef7c9e4616989ad0efec77a027013fa2270",
            "messageTitle": "Added entry to changelog about closing issue 293.",
            "messageBody": "--HG--\nbranch : fix-293\n",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "b64d76684cc423c4cecdf7a955d2671b0b8afe97",
            "messageTitle": "Fixes after review.",
            "messageBody": "--HG--\nbranch : spelling-checker\n",
            "insertions": 17,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 18,
        "deletions": 4,
        "date": "2014-08-02",
        "commitResults": [
          {
            "hash": "5ea88678edaa2768dfebfcd4b7a07a933d8e8e6f",
            "messageTitle": "Improved messages text for unused imports.",
            "messageBody": "--HG--\nbranch : fix-293\n",
            "insertions": 15,
            "deletions": 3
          },
          {
            "hash": "13c7ed858ad76b858047f2bdc296c4deb2ac5770",
            "messageTitle": "Fixed preparing unused-import message.",
            "messageBody": "--HG--\nbranch : fix-293\n",
            "insertions": 3,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 18,
        "deletions": 10,
        "date": "2014-08-04",
        "commitResults": [
          {
            "hash": "5ad40ab704e2f2351374b4a8ab8aa0bbd494eecb",
            "messageTitle": "Review fixes.",
            "messageBody": "--HG--\nbranch : fix-293\n",
            "insertions": 13,
            "deletions": 7
          },
          {
            "hash": "05126f2c2247eca98cdc8877b24f9bc6d71c5e69",
            "messageTitle": "Fix for wired case with import from stmt.",
            "messageBody": "--HG--\nbranch : fix-293\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "389c53b4794f9fe0f583138ae9742b316bb61a3b",
            "messageTitle": "Improved comments.",
            "messageBody": "--HG--\nbranch : fix-293\n",
            "insertions": 4,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 33,
        "deletions": 4,
        "date": "2014-08-06",
        "commitResults": [
          {
            "hash": "53491403222d1e7a122e798ca73b930d6c85a8e9",
            "messageTitle": "Fixed checking a list of imported names from a module in unused-import case.",
            "messageBody": "--HG--\nbranch : fix-293\n",
            "insertions": 33,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 83,
        "deletions": 6,
        "date": "2014-09-22",
        "commitResults": [
          {
            "hash": "f332e71e015e31cfbfe3de5de2b1baa03f45212e",
            "messageTitle": "Fixed problems with functional tests on Windows on Py3",
            "messageBody": "--HG--\nbranch : test-fix-for-win\n",
            "insertions": 12,
            "deletions": 6
          },
          {
            "hash": "5221292de59d091ea396f8d20b62a98f92c0ae1f",
            "messageTitle": "Added support for AppVeroy for CI on Windows",
            "messageBody": "--HG--\nbranch : win-ci-5\n",
            "insertions": 71,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 249,
        "deletions": 177,
        "date": "2014-11-04",
        "commitResults": [
          {
            "hash": "5f5fd075db5ba7dbbed1e536dfcb1088ded99fb9",
            "messageTitle": "Documentation improvements",
            "messageBody": "- added intros to features page,\n- fixed PyLint to Pylint in text,\n- improved ide-integration doc page,\n- updated pylintrc in examples and\n- regenerated pylint manual\n\n--HG--\nbranch : docs-improvements-2\n",
            "insertions": 249,
            "deletions": 177
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2014-11-27",
        "commitResults": [
          {
            "hash": "6504af07773b818161502c527c71e78fb7fa899c",
            "messageTitle": "fixed reading list of ignored words for spelling checker",
            "messageBody": "--HG--\nbranch : issue-398\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 20,
        "deletions": 22,
        "date": "2015-01-07",
        "commitResults": [
          {
            "hash": "8656a2211959edd01bbfd24a7855e4e7b4a8f7b6",
            "messageTitle": "Fixed passing configuration from master linter to sublinters. Closes issue #374.",
            "messageBody": "--HG--\nbranch : fix-374\n",
            "insertions": 20,
            "deletions": 22
          }
        ]
      },
      {
        "insertions": 23,
        "deletions": 26,
        "date": "2015-01-14",
        "commitResults": [
          {
            "hash": "d838676acc78f3dbd683b3853aab8816872278f4",
            "messageTitle": "improved filtering out opts for ignoring in sublinters",
            "messageBody": "--HG--\nbranch : fix-374\n",
            "insertions": 13,
            "deletions": 8
          },
          {
            "hash": "d0de2e3303eab8cda226376e6d7faa10a997c762",
            "messageTitle": "one more improvement for passing configuration to sublinters",
            "messageBody": "--HG--\nbranch : fix-374\n",
            "insertions": 10,
            "deletions": 18
          }
        ]
      },
      {
        "insertions": 100,
        "deletions": 48,
        "date": "2015-02-27",
        "commitResults": [
          {
            "hash": "fe9dbd9f35776db5900ca1ce066a9feb9bc3840f",
            "messageTitle": "Various changes related to docs",
            "messageBody": "- added Changelog to docs\n- added list of contributors to docs\n- updated CONTRIBUTORS info\n- slight formating changes in Changelog\n- updated auto-generated man page and example pylintrc\n",
            "insertions": 50,
            "deletions": 24
          },
          {
            "hash": "c0d3f6964a537094fa2fff32f0be6e653438b09e",
            "messageTitle": "Various changes related to docs",
            "messageBody": "- added Changelog to docs\n- added list of contributors to docs\n- updated CONTRIBUTORS info\n- slight formating changes in Changelog\n- updated auto-generated man page and example pylintrc\n\n--HG--\nbranch : docs-improvements2\n",
            "insertions": 50,
            "deletions": 24
          }
        ]
      },
      {
        "insertions": 24,
        "deletions": 50,
        "date": "2015-02-28",
        "commitResults": [
          {
            "hash": "59bf1e35e1fa32cbcb92ad139a329e1332cefd8d",
            "messageTitle": "Backed out changeset 406c23c24795",
            "messageBody": "",
            "insertions": 24,
            "deletions": 50
          }
        ]
      }
    ],
    "achernetz": [
      {
        "insertions": 5,
        "deletions": 5,
        "date": "2013-11-01",
        "commitResults": [
          {
            "hash": "e52a2d857902a77c665b418e898a242d0f11f42d",
            "messageTitle": "Fix line ending issues causing GUI to error out on Windows",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          }
        ]
      }
    ],
    "Mr. Senko": [
      {
        "insertions": 71,
        "deletions": 20,
        "date": "2018-01-25",
        "commitResults": [
          {
            "hash": "95269d7eb71d678940525a3eff521d15ff6b034d",
            "messageTitle": "Add new checker useless-return",
            "messageBody": "warns about a single \"return\" or \"return None\" statement at the\nend of functions or methods\n",
            "insertions": 71,
            "deletions": 20
          }
        ]
      },
      {
        "insertions": 341,
        "deletions": 327,
        "date": "2019-11-04",
        "commitResults": [
          {
            "hash": "3633b94e367eca9dbffb00a9dafefecf7b4f49d2",
            "messageTitle": "Move classes to testutils to help 3rd party plugin tests",
            "messageBody": "as proposed in\nhttps://github.com/PyCQA/pylint-django/pull/252#issuecomment-547931027\n",
            "insertions": 323,
            "deletions": 316
          },
          {
            "hash": "61c5c6085c8e9fbea82e34f5dfc8513e6f629dc1",
            "messageTitle": "Install pytest when running pylint against itself",
            "messageBody": "will help resolve\nE0401: Unable to import \u0027pytest\u0027 (import-error)\n",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "ee8bd98579d1387a5e592ad42f87c80e536ad457",
            "messageTitle": "Make pylint happy with itself",
            "messageBody": "see https://travis-ci.org/PyCQA/pylint/jobs/605392803\n",
            "insertions": 17,
            "deletions": 11
          }
        ]
      }
    ],
    "Andrzej Klajnert": [
      {
        "insertions": 14,
        "deletions": 3,
        "date": "2019-07-05",
        "commitResults": [
          {
            "hash": "0eeb67749b6aa016db61d87e55a1f7a7e459b352",
            "messageTitle": "Fix - add `__post_init__` into `defining-attr-methods` to avoid `attribute-defined-outside-init` in dataclasses.",
            "messageBody": "",
            "insertions": 14,
            "deletions": 3
          }
        ]
      }
    ],
    "Bruno P. Kinoshita": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2019-01-07",
        "commitResults": [
          {
            "hash": "1ef849fcf9b14e309ba6998a018d565e4ed1826b",
            "messageTitle": "Expose/export BaseTokenChecker in __all__ as well?",
            "messageBody": "Hi,\r\n\r\nI was using `BaseTokenChecker` when my IDE complained it wasn\u0027t in the `__init__`\u0027s `__all__` variable. Any reason for not having it there? Learned about `BaseTokenChecker` after finding it in [another checker that uses it too](https://github.com/PyCQA/pylint/blob/master/pylint/extensions/check_elif.py).\r\n\r\nCheers\r\nBruno",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "John Kirkham": [
      {
        "insertions": 2,
        "deletions": 0,
        "date": "2015-05-27",
        "commitResults": [
          {
            "hash": "a9d2933d9ef49b488860f1e7e15fd15fb4c6f5df",
            "messageTitle": "pylint/config.py: Check for `.pylintrc`, as well.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 0,
        "date": "2015-12-02",
        "commitResults": [
          {
            "hash": "0a4a01d1a8ce0098055d5a864e4610b7b0a23af9",
            "messageTitle": "pylint/config.py: Add another check of the current working directory for `.pylintrc`.",
            "messageBody": "--HG--\nbranch : issue_538_pt2\n",
            "insertions": 2,
            "deletions": 0
          }
        ]
      }
    ],
    "Nicolas Dickreuter": [
      {
        "insertions": 10,
        "deletions": 23,
        "date": "2019-01-20",
        "commitResults": [
          {
            "hash": "9cd65bd081b5d41a7d70e33c4ec4024e4d556813",
            "messageTitle": "avoid popping __main__ for python version \u003e\u003d 3.3",
            "messageBody": "",
            "insertions": 7,
            "deletions": 1
          },
          {
            "hash": "8a3560ab406e91647c326c29536b6da9798cb08d",
            "messageTitle": "remove popping for all versions",
            "messageBody": "",
            "insertions": 2,
            "deletions": 6
          },
          {
            "hash": "090691c9ef3ff5ac827bc8c32a453e239c8782b9",
            "messageTitle": "remove entire _patch_submodules",
            "messageBody": "",
            "insertions": 1,
            "deletions": 16
          }
        ]
      }
    ],
    "Radostin Stoyanov": [
      {
        "insertions": 6,
        "deletions": 11,
        "date": "2018-03-03",
        "commitResults": [
          {
            "hash": "f7d0bc87bca63f7aad6fc46b6c8731e376e4fbe3",
            "messageTitle": "user-guide: Change pylint call from python example",
            "messageBody": "Closes  #1870",
            "insertions": 6,
            "deletions": 5
          },
          {
            "hash": "d6b9b8f36a2ebd84f7bed61d2778ff0792201179",
            "messageTitle": "epylint: Remove incorrect docstring",
            "messageBody": "This example has been introduced in #5821.\r\nHowever, it does not work any more.\r\nCloses #1870",
            "insertions": 0,
            "deletions": 6
          }
        ]
      }
    ],
    "Mike Bryant": [
      {
        "insertions": 40,
        "deletions": 2,
        "date": "2012-12-06",
        "commitResults": [
          {
            "hash": "d0d4cf53fe5914e12acc1853e6f31ff7f3ade151",
            "messageTitle": "closes #113231. logging checker now looks at instances of Logger classes in addition to the base logging module.",
            "messageBody": "",
            "insertions": 40,
            "deletions": 2
          }
        ]
      }
    ],
    "Ben James": [
      {
        "insertions": 34,
        "deletions": 2,
        "date": "2018-09-22",
        "commitResults": [
          {
            "hash": "b9e361ce83ddaf8453b11d4125102f92ca37c7c3",
            "messageTitle": "No enumerate check in __iter__ (#2505)",
            "messageBody": "Don\u0027t suggest enumerate when defining `__iter__` and operating on the underlying class \r\n\r\nCloses #2477\r\n",
            "insertions": 34,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 75,
        "deletions": 173,
        "date": "2018-09-23",
        "commitResults": [
          {
            "hash": "000c749e8843218e6ee4f2f4e744c3d2f77e135d",
            "messageTitle": "Update tutorial docs (#2511)",
            "messageBody": "Close #2118",
            "insertions": 75,
            "deletions": 173
          }
        ]
      }
    ],
    "Yuri Bochkarev": [
      {
        "insertions": 44,
        "deletions": 7,
        "date": "2016-07-23",
        "commitResults": [
          {
            "hash": "70cb4b2b028c1ee80b7dad7bd6e9fcfcaffb5963",
            "messageTitle": "Added Epytext support to docparams extension (Closes #1030)",
            "messageBody": "Fixes #1029\n",
            "insertions": 44,
            "deletions": 7
          }
        ]
      }
    ],
    "Matus Valo": [
      {
        "insertions": 111,
        "deletions": 0,
        "date": "2018-12-20",
        "commitResults": [
          {
            "hash": "291ffd026440a2f87aacf29f96c003875a99340b",
            "messageTitle": "Added load_configuration() hook for plugins",
            "messageBody": "A new optional hook for plugins is added: `load_configuration()`.\r\nThis hook is executed after configuration is loaded to allow plugins\r\nto provide a specific configuration tailored to their purpose (e.g.\r\npylint-django could set up their own set of `good_names` or blacklisted\r\ndirectories)",
            "insertions": 111,
            "deletions": 0
          }
        ]
      }
    ],
    "jpkotta": [
      {
        "insertions": 8,
        "deletions": 4,
        "date": "2016-05-05",
        "commitResults": [
          {
            "hash": "5d71b2d487402ed8ed67ca6e5df1af5a640a706b",
            "messageTitle": "fix bug in pylint-insert-ignore-comment and add it to the commentary (#892)",
            "messageBody": "",
            "insertions": 8,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 17,
        "deletions": 9,
        "date": "2016-07-15",
        "commitResults": [
          {
            "hash": "10c723e0f0ef571bd6bd639f5db01d23384fd448",
            "messageTitle": "Add alternate pylint command (#1007)",
            "messageBody": "add variable pylint-alternate-pylint-command, default pylint2\r\nadd prefix arg to pylint command, so that it uses the alternate command",
            "insertions": 17,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 14,
        "deletions": 0,
        "date": "2016-07-28",
        "commitResults": [
          {
            "hash": "97718ad7640e47dd7b5b065f4418bc0c19b36814",
            "messageTitle": "elisp: allow guessed indent string to be passed to pylint (#1051)",
            "messageBody": "Emacs tries to guess what the indent string is on a per-file basis.\r\nNow pylint.el can get this as --indent-string, so if you have\r\ndifferent indent policies on different files, pylint will not complain\r\nabout the non-PEP8 ones.",
            "insertions": 14,
            "deletions": 0
          }
        ]
      }
    ],
    "Yoichi Nakayama": [
      {
        "insertions": 1,
        "deletions": 2,
        "date": "2015-02-11",
        "commitResults": [
          {
            "hash": "f9f0cd94187994c02ae108a3a57dfc2405ba89a7",
            "messageTitle": "[doc] sync with elisp/pylint-flymake.el",
            "messageBody": "* don\u0027t append path of init file to the program name\n* don\u0027t use additional variable for the program name\n",
            "insertions": 1,
            "deletions": 2
          }
        ]
      }
    ],
    "Jim Robertson": [
      {
        "insertions": 62,
        "deletions": 25,
        "date": "2018-12-07",
        "commitResults": [
          {
            "hash": "1999e56761ae862f1daca33daaa23b8b1f7f72bc",
            "messageTitle": "Fix incorrect generation of ``no-else-raise`` warnings (R1705) (#2618)",
            "messageBody": "Fixed issue where ``if`` statements with nested ``if`` statements\r\nwere incorrectly being flagged as ``no-else-raise`` in some cases and\r\nnot being flagged as ``no-else-raise`` in other cases.  Added tests\r\nfor verification and updated pylint source files to eliminate newly\r\nexposed warnings.\r\n",
            "insertions": 62,
            "deletions": 25
          }
        ]
      },
      {
        "insertions": 157,
        "deletions": 10,
        "date": "2018-12-11",
        "commitResults": [
          {
            "hash": "1c057b0773ac3d352502f5b3526497c03ed13bd6",
            "messageTitle": "Add ``no-else-raise`` warning (R1720) (#2636)",
            "messageBody": "Close #2558",
            "insertions": 157,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 290,
        "deletions": 26,
        "date": "2018-12-28",
        "commitResults": [
          {
            "hash": "6b3f8c0e22fbb98307509f43abc9aa0c39478059",
            "messageTitle": "Fix missing-raises-doc false positive (W9006)",
            "messageBody": "Updated checking of missing Raises to check exceptions that have\nabsolute paths.  Added W9006 testcases for google, numpy, and sphinx\n\nClose #1502\n",
            "insertions": 226,
            "deletions": 14
          },
          {
            "hash": "d1226067c247ad89bf196490be7e6df2b065375f",
            "messageTitle": "Fix missing-raises-doc false positive (W9006)",
            "messageBody": "Updated checking of missing Raises to check exceptions that have\nabsolute paths.\n\nClose #1502\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "f1c6190bf47a04098307dea6f51b63a928f6be0a",
            "messageTitle": "Support optional ~ or ! prefix for docstring types",
            "messageBody": "",
            "insertions": 63,
            "deletions": 11
          }
        ]
      },
      {
        "insertions": 18,
        "deletions": 5,
        "date": "2019-03-19",
        "commitResults": [
          {
            "hash": "7b5e0e797709afcacd440cab4b326973d3397f3f",
            "messageTitle": "Fix misattribution of `unused import` (#2672)",
            "messageBody": "Fixed issue where import statements with multiple import arguments\r\nwouldn\u0027t flag the correct missing package.",
            "insertions": 18,
            "deletions": 5
          }
        ]
      }
    ],
    "Daniela Plascencia": [
      {
        "insertions": 5,
        "deletions": 2,
        "date": "2017-02-08",
        "commitResults": [
          {
            "hash": "a59a1581571c8f27708778a9ded58435c05f7703",
            "messageTitle": "epylint: corrects msg-template object (#1311)",
            "messageBody": "The way this object is defined, won\u0027t let the user modify the message\r\ntemplate when pylint is called from a python script. Rearranging the\r\norder of variables on its definition prevents this behavior.\r\n\r\nSigned-off-by: Daniela Plascencia \u003cdaniela.plascencia@linux.intel.com\u003e",
            "insertions": 5,
            "deletions": 2
          }
        ]
      }
    ],
    "Aivar Annamaa": [
      {
        "insertions": 26,
        "deletions": 2,
        "date": "2018-09-09",
        "commitResults": [
          {
            "hash": "faaaafe651699fa333cd5478745136b19b2dbeee",
            "messageTitle": "Remove wrong modules from \u0027bad-python3-import\u0027 (#2454)",
            "messageBody": "Close #2453\r\n",
            "insertions": 26,
            "deletions": 2
          }
        ]
      }
    ],
    "Anthony Sottile": [
      {
        "insertions": 50,
        "deletions": 3,
        "date": "2017-09-17",
        "commitResults": [
          {
            "hash": "2ed15ba61572844ecd2abfa8217a85d39678424e",
            "messageTitle": "Use codecs.getreader. (#1658)",
            "messageBody": "* Use codecs.getreader.\r\n\r\n* Test decoding_stream and _decoding_readline\r\n",
            "insertions": 50,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 79,
        "deletions": 69,
        "date": "2018-05-22",
        "commitResults": [
          {
            "hash": "092c6e8ad77416d189d2d1725fc719f4d876ee03",
            "messageTitle": "Use last previous assignment for comprehension-escape (#2131)",
            "messageBody": "",
            "insertions": 13,
            "deletions": 3
          },
          {
            "hash": "377cc42f9e3116ff97cddd4567d53e9a3e24ebf9",
            "messageTitle": "pyupgrade (#2136)",
            "messageBody": "",
            "insertions": 66,
            "deletions": 66
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 1,
        "date": "2018-05-23",
        "commitResults": [
          {
            "hash": "e377639de4340f422dad55b78f59bed324edd590",
            "messageTitle": "min() and max() accept iterators (#2138)",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 31,
        "deletions": 13,
        "date": "2019-04-30",
        "commitResults": [
          {
            "hash": "c26bd45edb74f1857471fcd134c8443058670790",
            "messageTitle": "fix old-division check for int(...) (#2892)",
            "messageBody": "",
            "insertions": 31,
            "deletions": 13
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 3,
        "date": "2020-01-12",
        "commitResults": [
          {
            "hash": "635e0bd789687f7450fc3cca4b3c3d89ee6c215c",
            "messageTitle": "Simplify pre-commit configuration",
            "messageBody": "- no need to quote `types`\r\n- the other keys are optional and were their defaults",
            "insertions": 1,
            "deletions": 3
          }
        ]
      }
    ],
    "Caio Carrara": [
      {
        "insertions": 44,
        "deletions": 2,
        "date": "2018-08-22",
        "commitResults": [
          {
            "hash": "1d0753b0f7ff11e29b29810e7f7aff434c286a45",
            "messageTitle": " Fix is_subclass_of when one param is not ClassDef",
            "messageBody": "Currently the function `checkers.utils.is_subclass_of()` is raising a\n`NoneType object has no attribute name` exception when only one of the\narguments (nodes) is `None`.\n\nThis change fix that updating the function to make sure all params are\nan instance of `astroid.ClassDef` before the proper check\n",
            "insertions": 44,
            "deletions": 2
          }
        ]
      }
    ],
    "Anthony Foglia": [
      {
        "insertions": 33,
        "deletions": 13,
        "date": "2016-11-24",
        "commitResults": [
          {
            "hash": "5d403d5147db9d674d23ea94c50ef8b7ae15ecf0",
            "messageTitle": "Report when __slots__ is a simple string and not a non-string container (#1171)",
            "messageBody": "* Report when __slots__ is a simple string and not a non-string container\r\n\r\n* Update ChangeLog\r\n",
            "insertions": 33,
            "deletions": 13
          }
        ]
      }
    ],
    "Don Jayamanne": [
      {
        "insertions": 68,
        "deletions": 1,
        "date": "2017-12-22",
        "commitResults": [
          {
            "hash": "3fe8966658eca53b3e0b1e6123d82068391eaede",
            "messageTitle": "Update ide-integration.rst (#1780)",
            "messageBody": "Add integration notes with the cross platform editor Visual Studio Code.",
            "insertions": 68,
            "deletions": 1
          }
        ]
      }
    ],
    "Rémi Cardona": [
      {
        "insertions": 16,
        "deletions": 14,
        "date": "2019-10-03",
        "commitResults": [
          {
            "hash": "8435a39c8f899fc5448cf31fa6201e641ffec8e7",
            "messageTitle": "expand nested ternaries in ``unnecessary-comprehension`` to proper if statements",
            "messageBody": "",
            "insertions": 6,
            "deletions": 9
          },
          {
            "hash": "05d3e15d9f6978b037943625fe09b9a384ea63c2",
            "messageTitle": "properly handle literals in ``unnecessary-comprehension`` checker, closes #3148",
            "messageBody": "",
            "insertions": 10,
            "deletions": 5
          }
        ]
      }
    ],
    "glegoux": [
      {
        "insertions": 58,
        "deletions": 10,
        "date": "2016-01-23",
        "commitResults": [
          {
            "hash": "904942ce36cec293329c05f2e30bcd489703c3fe",
            "messageTitle": "Fix #793 [MISCELLANEOUS] code tag without message doesn\u0027t track",
            "messageBody": "",
            "insertions": 58,
            "deletions": 10
          }
        ]
      }
    ],
    "paschich": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2016-03-02",
        "commitResults": [
          {
            "hash": "9d4b948393a1aa43e20ff51b00456e425fb168d4",
            "messageTitle": "Update intro.rst",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Alan Chan": [
      {
        "insertions": 146,
        "deletions": 101,
        "date": "2018-10-04",
        "commitResults": [
          {
            "hash": "0dd573faae1ad339c07f789270002f8faf2a3691",
            "messageTitle": "New option: logging-format-style for logging checker (#2521)",
            "messageBody": "logging-format-style accepts one of \u0027%\u0027 or \u0027{\u0027, (defaults to \u0027%\u0027). When \u0027{\u0027 is selected, logging\r\nchecker assumes str.format() style format strings for calls to the logging.\r\n\r\npylint was unable to count the required number of args for the format string when the\r\nformat string was using the `{` format. The new feature indirectly fixes that by allowing\r\nthe proper interpretation of that format string. ",
            "insertions": 146,
            "deletions": 101
          }
        ]
      }
    ],
    "Paul Renvoise": [
      {
        "insertions": 181,
        "deletions": 185,
        "date": "2019-03-19",
        "commitResults": [
          {
            "hash": "4714a65529a0f03cb77e3938503c131d62fdc9e0",
            "messageTitle": "Make ``len-as-condition`` only fire when a ``len(x)`` call is made without an explicit comparison",
            "messageBody": "This commit reduce the scope of `len-as-condition` to only care when a\r\n`len(SEQUENCE)` call is made without an explicit comparison, as stated\r\nin PEP8.",
            "insertions": 181,
            "deletions": 185
          }
        ]
      }
    ],
    "Alok Singh": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2018-06-21",
        "commitResults": [
          {
            "hash": "ac339df90a4c29bc840237c248b24a7534210ce8",
            "messageTitle": "fix typo (#2212)",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Dmytro Kyrychuk": [
      {
        "insertions": 14,
        "deletions": 20,
        "date": "2018-05-30",
        "commitResults": [
          {
            "hash": "5aac757a6cd1736feb6c8ed100cca1950841d7f4",
            "messageTitle": "Fix message categories table rendering glitch (#2153)",
            "messageBody": "Strings that were broken down in order to fit in table cells in rst were\r\nnot concatenated when rendered to HTML.",
            "insertions": 14,
            "deletions": 20
          }
        ]
      }
    ],
    "Hugo van Kemenade": [
      {
        "insertions": 50,
        "deletions": 447,
        "date": "2019-09-12",
        "commitResults": [
          {
            "hash": "b72c0dd9a3ee5c992f94937b58de3b2153f4624d",
            "messageTitle": "Remove redundant compatibility code (#3097)",
            "messageBody": "We no longer support Python 2 so we can remove\r\nthe compatibility code we had in place for that version.",
            "insertions": 50,
            "deletions": 447
          }
        ]
      }
    ],
    "Pete": [
      {
        "insertions": 37,
        "deletions": 9,
        "date": "2013-06-01",
        "commitResults": [
          {
            "hash": "5d23bc763026b0170c64e757229430f547b21ca0",
            "messageTitle": "Added source file viewer.",
            "messageBody": "Double-clicking on a warning/error message opens the source file and scrolls\n    to the affected line.\nAdded additional fields to gui.msgs to enable this.\n\n--HG--\nbranch : source_view\n",
            "insertions": 35,
            "deletions": 7
          },
          {
            "hash": "8394e37ed45a500b5bde544859fa79568bbbb371",
            "messageTitle": "Rename show_message to the more appropriate show_sourcefile",
            "messageBody": "--HG--\nbranch : source_view\n",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 14,
        "deletions": 30,
        "date": "2013-09-07",
        "commitResults": [
          {
            "hash": "526c6660711e8a700f8ff42e404234faa6a5abca",
            "messageTitle": "Updated GUI reporter to use Message object. Removed unused msgs[] attribute.",
            "messageBody": "--HG--\nbranch : reporter_message_fix\n",
            "insertions": 14,
            "deletions": 28
          },
          {
            "hash": "21a487cd87bbe0df78f31ae8b616407b5e8c73ff",
            "messageTitle": "Removed commented-out lines",
            "messageBody": "--HG--\nbranch : reporter_message_fix\n",
            "insertions": 0,
            "deletions": 2
          }
        ]
      }
    ],
    "vinnyrose": [
      {
        "insertions": 44,
        "deletions": 5,
        "date": "2017-04-13",
        "commitResults": [
          {
            "hash": "67b1508d91ae2983aa9b6c2ead374a6cb5ff3e3e",
            "messageTitle": "Don\u0027t emit missing-final-newline or trailing-whitespace for formfeeds. (#1283)",
            "messageBody": "Don\u0027t emit missing-final-newline or trailing-whitespace for formfeeds.\r\n\r\nKeep the builtin str.splitlines but check for the superset characters and recombine them later.\r\nClose #1218.\r\nClose #1219\r\n",
            "insertions": 44,
            "deletions": 5
          }
        ]
      }
    ],
    "Jakub Wilk": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2016-03-19",
        "commitResults": [
          {
            "hash": "18b57421c39e4aa97c985f8bff212c21ecbbc438",
            "messageTitle": "Fix the license name in README",
            "messageBody": "There\u0027s no such thing as \"GNU Public License\";\nGPL stands for \"General Public License\".\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2016-03-20",
        "commitResults": [
          {
            "hash": "caf4dca5987a9e6750acf30ea6d5724766ded05d",
            "messageTitle": "Fix typo in the symilar manpage",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2016-05-24",
        "commitResults": [
          {
            "hash": "6116d7d621cb48d9436a68596f9d4e83101bf3c1",
            "messageTitle": "Fix mailto URIs (#913)",
            "messageBody": "As per RFC 6068, there should be no slashes after \"mailto:\".",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 17,
        "deletions": 17,
        "date": "2016-05-25",
        "commitResults": [
          {
            "hash": "f7643c06f43cb8e3b81c60432d2961a56099d0a9",
            "messageTitle": "Fix typos (#916)",
            "messageBody": "* Split words that were inadvertently glued together\r\n\r\n* Fix typos in the documentation\r\n\r\n* Fix typos in message descriptions\r\n",
            "insertions": 17,
            "deletions": 17
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 7,
        "date": "2016-07-05",
        "commitResults": [
          {
            "hash": "c500705bca09838e57537fbd2fd98087422a1163",
            "messageTitle": "Fix typos (#978)",
            "messageBody": "",
            "insertions": 7,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2017-02-21",
        "commitResults": [
          {
            "hash": "d27465552a94d03936bde1c71fc8106bc3aa75b0",
            "messageTitle": "Fix typo",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 6,
        "date": "2018-01-21",
        "commitResults": [
          {
            "hash": "13ac58f4b976751e3c757bd7d47ce867c9ac27dc",
            "messageTitle": "Split words that were inadvertently glued together",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "91969b046e7aa8cfaa20e5c7e4fce925a802f1f7",
            "messageTitle": "Fix incorrect indefinite articles",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          }
        ]
      }
    ],
    "ssolanki": [
      {
        "insertions": 182,
        "deletions": 70,
        "date": "2018-06-15",
        "commitResults": [
          {
            "hash": "3e76fca8afbc0810ea82bc5d4b9185ac7f1b8989",
            "messageTitle": "Add new check `comparison-with-callable` This check warn for comparison with bare callable, without calling it.",
            "messageBody": "",
            "insertions": 123,
            "deletions": 1
          },
          {
            "hash": "2540c76771efb206a03bc66d5f626681de71b3d9",
            "messageTitle": "remove wrong test case.",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          },
          {
            "hash": "82382f551600d74e8f43e0e50bb8efdd5bf7ac60",
            "messageTitle": "fix for property being considered as callable. refactor other changes.",
            "messageBody": "",
            "insertions": 13,
            "deletions": 7
          },
          {
            "hash": "673793aea55d5e6e8161d8bb612bc99865d1d040",
            "messageTitle": "Add new check `comparison-with-callable` This check warn for comparison with bare callable, without calling it.",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "10fd4f71eaf942b88a758e8d857ba5dbd9f25b24",
            "messageTitle": "use safe_infer as suggested in review comments. also add two more test cases.",
            "messageBody": "fix indentation while rebasing.\n",
            "insertions": 23,
            "deletions": 29
          },
          {
            "hash": "c421fdd8aa4fff92dfb1d402193a6328cf1c5cf8",
            "messageTitle": "incorporate review comments.",
            "messageBody": "",
            "insertions": 20,
            "deletions": 29
          }
        ]
      },
      {
        "insertions": 81,
        "deletions": 36,
        "date": "2018-06-20",
        "commitResults": [
          {
            "hash": "3cf841a6a22360b28938b7e18116066a18f59532",
            "messageTitle": "Add new checker useless-object-inheritance. Close #2177",
            "messageBody": "",
            "insertions": 72,
            "deletions": 27
          },
          {
            "hash": "5d32878d01db8e46a98f8473a4b9725f388425ca",
            "messageTitle": "fix lint issue w.r.t useless-object-inheritance.",
            "messageBody": "",
            "insertions": 9,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 154,
        "deletions": 144,
        "date": "2018-06-21",
        "commitResults": [
          {
            "hash": "5673ffe2d83282e79d958b9bd84f47245a201127",
            "messageTitle": "adapt existing test cases for useless-object-inheritance.",
            "messageBody": "adapt existing test/input test cases to new check.\n\nadd some more positive test case for useless-object-inheritance\n\nmsg code was in conflict with existing msg.\n\nadapt existing test cases for new checker.\n",
            "insertions": 154,
            "deletions": 144
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 0,
        "date": "2018-07-17",
        "commitResults": [
          {
            "hash": "7515c45ecd3db20c8a8196fdbfc696c4b56a9897",
            "messageTitle": "add mypy_cache in gitignore",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 76,
        "deletions": 8,
        "date": "2018-07-19",
        "commitResults": [
          {
            "hash": "13ffa8d312ee1d2315825300472227ac08ff803d",
            "messageTitle": "`try-except-raise` should consider parent class handlers. fix for #2284",
            "messageBody": "",
            "insertions": 76,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 1,
        "date": "2018-08-01",
        "commitResults": [
          {
            "hash": "13db78bc500e4f24818bcb76ae04bfda67b81e8b",
            "messageTitle": "move rstlint job under prechecks stage",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2018-08-05",
        "commitResults": [
          {
            "hash": "d574174c4d4a7fd0cf1cb69b26b62ecae537703d",
            "messageTitle": "fix typos in docstring",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 28,
        "deletions": 2,
        "date": "2018-08-06",
        "commitResults": [
          {
            "hash": "40a305e83d27b4821ff2b6556b4bb18271f0adb8",
            "messageTitle": "fix pylint crash due to misplaced-format-function",
            "messageBody": "",
            "insertions": 28,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 107,
        "deletions": 39,
        "date": "2018-08-09",
        "commitResults": [
          {
            "hash": "7a304df6579cb3ad996ae30b70feaa73448fdb25",
            "messageTitle": "add new case for `unnecessary-pass` `unnecessary-pass` is now also emitted when a function or class contains only docstring and pass statement, in which case, docstring is enough for empty definition.",
            "messageBody": "fix sphinx-build error\n",
            "insertions": 57,
            "deletions": 2
          },
          {
            "hash": "d7580c648c8fe688fad16cf76126c07e4871f4d7",
            "messageTitle": "adapt existing test cases with new condition for unnecessary-pass",
            "messageBody": "fix lint issues\n\nfix existing test case\n\nmodify changeLog\n",
            "insertions": 27,
            "deletions": 34
          },
          {
            "hash": "917dee78926f2b905717274beab2f52806fd8634",
            "messageTitle": "add whatsnew/2.2.rst",
            "messageBody": "",
            "insertions": 23,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 78,
        "deletions": 78,
        "date": "2018-08-14",
        "commitResults": [
          {
            "hash": "29cacf3c5a09f08aa91dfd7d45f508088ce9317b",
            "messageTitle": "remove backslash for continuation from checker msg",
            "messageBody": "",
            "insertions": 78,
            "deletions": 78
          }
        ]
      },
      {
        "insertions": 19,
        "deletions": 5,
        "date": "2018-08-15",
        "commitResults": [
          {
            "hash": "3176bbbb6af1f31a6b0408376ceaf07752d9533e",
            "messageTitle": "Ignore import x.y.z as z cases for checker `useless-import-alias`",
            "messageBody": "",
            "insertions": 19,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 80,
        "deletions": 34,
        "date": "2018-08-17",
        "commitResults": [
          {
            "hash": "d8e7840f5b6f9c9dd9e5e1c38a8c3ec9f05f4a52",
            "messageTitle": "refactor is_defined_before. add a new function is_defined_in_scope which can be used independently. is_defined_before also uses this function.",
            "messageBody": "",
            "insertions": 39,
            "deletions": 32
          },
          {
            "hash": "28a2690021d23dc4adfa4a9b5aec0b3004c922c1",
            "messageTitle": "fix false positive ``undefined-variable`` and ``used-before-assignment`` with nonlocal keyword usage.",
            "messageBody": "incorporate review comments\n\nfix existing test case\n",
            "insertions": 41,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 186,
        "deletions": 108,
        "date": "2018-08-21",
        "commitResults": [
          {
            "hash": "55ddf8d4a9d548e7b0c353869c8f13c306598d29",
            "messageTitle": "annotations changes on new branch.",
            "messageBody": "",
            "insertions": 10,
            "deletions": 0
          },
          {
            "hash": "438218ac4141899341acb57e5591e992c6aabfef",
            "messageTitle": "fix issue of mypy failing if used from tox",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "8b2e7b9c9e7bfa9449970a8f4ab020b9afcc592c",
            "messageTitle": "disable some type checking and annotate simple one",
            "messageBody": "",
            "insertions": 18,
            "deletions": 18
          },
          {
            "hash": "4d2fcfb5f44fecd1bda2d28174e67a47f10336a5",
            "messageTitle": "first make mypy pass by ignoring type",
            "messageBody": "",
            "insertions": 14,
            "deletions": 11
          },
          {
            "hash": "d37e2b7423dbd2db0f2d132b20d40800bf9a3ead",
            "messageTitle": "annotate checkers/utils.py fix mypy and lint issues after annotating",
            "messageBody": "",
            "insertions": 92,
            "deletions": 69
          },
          {
            "hash": "15336694542664b4d8eff61afc607cfbb4c0054d",
            "messageTitle": "Consider tuples in exc handler for ``try-except-raise``",
            "messageBody": "change code to ignore not-an-iterable\n\nincorporate review comments\n",
            "insertions": 51,
            "deletions": 9
          }
        ]
      }
    ],
    "Eric Froemling": [
      {
        "insertions": 14,
        "deletions": 3,
        "date": "2019-08-22",
        "commitResults": [
          {
            "hash": "827181602716f64ae226761bf36328cdf67ef782",
            "messageTitle": "useless-suppression detection now ignores cyclic-import (#3071)",
            "messageBody": "Tweaked useless-suppression detection to ignore cyclic-import since cycles may not be detected until after it fires.\r\n",
            "insertions": 14,
            "deletions": 3
          }
        ]
      }
    ],
    "Natalie Serebryakova": [
      {
        "insertions": 31,
        "deletions": 140,
        "date": "2018-08-15",
        "commitResults": [
          {
            "hash": "41d47dd024a3fe6a1c67ebf32c8dc6ee24a44f66",
            "messageTitle": "Remove a couple of Python 2 specific checks",
            "messageBody": "The Removed Python 2 specific checks are: deprecated-lambda, nonstandard-exception,\nlowercase-l-suffix, slots-on-old-class, super-on-old-class, property-on-old-class,\nold-style-class.\n\nClose #1896\n",
            "insertions": 31,
            "deletions": 140
          }
        ]
      }
    ],
    "frost-nzcr4": [
      {
        "insertions": 3,
        "deletions": 3,
        "date": "2014-09-15",
        "commitResults": [
          {
            "hash": "4441a30c8fa5bb1e1a59ec02ab6c1d3f79539e10",
            "messageTitle": "Add max_module_lines to warning message. Other length warnings already have this format.",
            "messageBody": "--HG--\nbranch : frost-nzcr4/add-max_module_lines-to-warning-message--1410770503809\n",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "260e6adca0ebfcd7306aa780df24840a25cf5792",
            "messageTitle": "func_w0302.txt",
            "messageBody": "--HG--\nbranch : frost-nzcr4/add-max_module_lines-to-warning-message--1410770503809\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "pyves@crater.logilab.fr": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2008-05-13",
        "commitResults": [
          {
            "hash": "0a8086c7024a8f3cdb80e92aca8f56628b633e71",
            "messageTitle": "typo",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Harut": [
      {
        "insertions": 27,
        "deletions": 9,
        "date": "2015-07-25",
        "commitResults": [
          {
            "hash": "7a4b967a5c379c591e15e1f12737619a66bd0de2",
            "messageTitle": "help fix for no-space-check option",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "9af613cd1ec3690f1f4a039a996a3753f9841d0f",
            "messageTitle": "add a no-space-check option for empty lines",
            "messageBody": "",
            "insertions": 24,
            "deletions": 8
          }
        ]
      }
    ],
    "Gary Tyler McLeod": [
      {
        "insertions": 19,
        "deletions": 5,
        "date": "2018-05-17",
        "commitResults": [
          {
            "hash": "49eae8a9d6e713323cf1a6d6a469ff340255fd6b",
            "messageTitle": "Expose quiet mode to command line",
            "messageBody": "The quiet option is parsed in Run.preprocess_options. This was necessary due to the call order in the Run class constructor. The quiet flag was also moved from OptionsManagerMixIn.init() to OptionsManagerMixin.read_config_file() because it wasn\u0027t used anywhere else in the class. Currently, quiet mode only manipulates the display of the config file path (\"Using config file \").\r\n\r\nCloses #1863",
            "insertions": 19,
            "deletions": 5
          }
        ]
      }
    ],
    "Anentropic": [
      {
        "insertions": 4,
        "deletions": 4,
        "date": "2015-11-18",
        "commitResults": [
          {
            "hash": "5b9a8c20186ab0fd80e09ca3db495840b81937de",
            "messageTitle": "error E0201 is obsolete - now E1101",
            "messageBody": "--HG--\nbranch : remove-E0201-references\n",
            "insertions": 4,
            "deletions": 4
          }
        ]
      }
    ],
    "yory8": [
      {
        "insertions": 63,
        "deletions": 3,
        "date": "2019-03-20",
        "commitResults": [
          {
            "hash": "a138a1a8f4bd1ff4ff5718c8b23a9b82c27aef3c",
            "messageTitle": "Add new linter: dict-iter-missing-items",
            "messageBody": "Add a new linter to check against forgotten calls to `.items()` when\r\niterating through a dictionary in a `for` loop.\r\n\r\nClose #2761 \r\n",
            "insertions": 63,
            "deletions": 3
          }
        ]
      }
    ],
    "Cezar": [
      {
        "insertions": 414,
        "deletions": 35,
        "date": "2015-09-19",
        "commitResults": [
          {
            "hash": "adc1711a62debcfc75224e5a443fe61be6cf0fa1",
            "messageTitle": "Raise \u0027reimported\u0027 on duplice import on single line",
            "messageBody": "",
            "insertions": 7,
            "deletions": 0
          },
          {
            "hash": "44f5dd6c40971bea07ac980ba88702ecfa8ccd56",
            "messageTitle": "Use enumarete() instead of range()",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "97c7a241c58c7efbd6f52d60beab7b7ef9e9043d",
            "messageTitle": "Add test for reimports on single line",
            "messageBody": "",
            "insertions": 11,
            "deletions": 1
          },
          {
            "hash": "803406d79365f8ee3f53d0570aafd48992a7f3e1",
            "messageTitle": "Add check for deprecated unittest aliases",
            "messageBody": "",
            "insertions": 25,
            "deletions": 2
          },
          {
            "hash": "4442fd9d6fde9ab44e8463b8a7186b1c9dbabbf3",
            "messageTitle": "Document the checker method",
            "messageBody": "",
            "insertions": 4,
            "deletions": 0
          },
          {
            "hash": "fad2b32740098c3482083a5c96ccb02dd59f0f78",
            "messageTitle": "Add checker for method deprecation",
            "messageBody": "",
            "insertions": 61,
            "deletions": 2
          },
          {
            "hash": "ecc8064bd41aaca1e76a3d3811b3d67d989c7ea3",
            "messageTitle": "Add tests for method deprecation",
            "messageBody": "",
            "insertions": 122,
            "deletions": 0
          },
          {
            "hash": "0b5a007a1bfb62783d6c344024db53aba7eff4ab",
            "messageTitle": "Add deprecation checkers",
            "messageBody": "",
            "insertions": 59,
            "deletions": 27
          },
          {
            "hash": "9a120caee757dfa327a877c02db6a8254e630fce",
            "messageTitle": "Add tests for deprecation",
            "messageBody": "",
            "insertions": 122,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 205,
        "deletions": 256,
        "date": "2015-09-20",
        "commitResults": [
          {
            "hash": "c47ec6e35f714ff2ce9d43c329ed75d698e7886e",
            "messageTitle": "Add checker for method deprecation",
            "messageBody": "",
            "insertions": 67,
            "deletions": 50
          },
          {
            "hash": "beb8c535728c653142c5aa58d5704f775fa48f2d",
            "messageTitle": "Update functional tests for deprecated methods",
            "messageBody": "",
            "insertions": 30,
            "deletions": 8
          },
          {
            "hash": "08737cbe482e8d4afa513553c25c3ac15f53a0df",
            "messageTitle": "Remove old test for deprecated methods",
            "messageBody": "",
            "insertions": 0,
            "deletions": 122
          },
          {
            "hash": "bb2bef6220c6307b5cbd57b63cb9f63d7a378b03",
            "messageTitle": "Fix some errors",
            "messageBody": "",
            "insertions": 6,
            "deletions": 6
          },
          {
            "hash": "6c226d0298dd48a1c8ece58aec291f69cf5836da",
            "messageTitle": "Deprecation check based on Python version",
            "messageBody": "",
            "insertions": 100,
            "deletions": 70
          },
          {
            "hash": "1f4f2a8de50cf40d90a92cd0a4061f7bd036a21e",
            "messageTitle": "Update contributors",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 13,
        "deletions": 1,
        "date": "2015-10-04",
        "commitResults": [
          {
            "hash": "96046bcf6ce9a7934d9dd4370a20b8f820f26d1e",
            "messageTitle": "Add functional tests for PEP 448",
            "messageBody": "",
            "insertions": 9,
            "deletions": 0
          },
          {
            "hash": "2dd49c31140270448eb85a2fdc155ffe8de36dc4",
            "messageTitle": "More PEP 448 tests",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          }
        ]
      }
    ],
    "Grant Welch": [
      {
        "insertions": 2,
        "deletions": 1,
        "date": "2016-08-14",
        "commitResults": [
          {
            "hash": "2f1f112136e31eda7ecb3ac41ff0076fbed8e8e8",
            "messageTitle": "Allow underscores in unused-variables. (#1058) (#1059)",
            "messageBody": "Allow underscores in unused-variables\r\n\r\nPylint should ignore dummy variables that contain underscores. This test\r\ndemonstrates that the default value for dummy-variables-rgx fails in\r\nthis regard.\r\n\r\nCloses #1058",
            "insertions": 2,
            "deletions": 1
          }
        ]
      }
    ],
    "Renat Galimov": [
      {
        "insertions": 224,
        "deletions": 4,
        "date": "2018-03-27",
        "commitResults": [
          {
            "hash": "15328d62257d99a1f4f6833d155f526e0b0a1adc",
            "messageTitle": "Added support for getenv function",
            "messageBody": "",
            "insertions": 224,
            "deletions": 4
          }
        ]
      }
    ],
    "thernstig": [
      {
        "insertions": 4,
        "deletions": 2,
        "date": "2018-03-01",
        "commitResults": [
          {
            "hash": "3dd4df4b7aa104f5940db06b6d8d218cb915085f",
            "messageTitle": "Update contribute documentation with correct test path (#1901)",
            "messageBody": "",
            "insertions": 4,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2018-03-16",
        "commitResults": [
          {
            "hash": "0a9ccfe748db2a03180557cc6c05a63b9a4e1e45",
            "messageTitle": "Fix shlex parsing error on Windows in epylint (#1941)",
            "messageBody": "* Fix shlex parsing error on Windows in epylint\r\n\r\nCloses #1940\r\n\r\n* Change py_run\u0027s shlex posix sys.platform\r\n\r\nsys.platform mistakenly included darwin as not posix compliant\r\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Brett Cannon": [
      {
        "insertions": 172,
        "deletions": 141,
        "date": "2014-08-29",
        "commitResults": [
          {
            "hash": "11ee6d66390dbf4376aa7bf7d3340d025dd1b96e",
            "messageTitle": "Allow specifying test module names for tox",
            "messageBody": "--HG--\nbranch : tox_test_control\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "29bb89fe46c7b65df777e626cac5611961a9d325",
            "messageTitle": "Modernize to the point of working for Python 2.7 still",
            "messageBody": "--HG--\nbranch : python_6\n",
            "insertions": 124,
            "deletions": 109
          },
          {
            "hash": "1414d20453f513acba2b8039823865c2138dd93b",
            "messageTitle": "Also modernize pyreverse",
            "messageBody": "--HG--\nbranch : python_6\n",
            "insertions": 6,
            "deletions": 4
          },
          {
            "hash": "69246b081384898ac770b871d4ae5d93136a2ed9",
            "messageTitle": "Fix a missed print statement",
            "messageBody": "--HG--\nbranch : python_6\n",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "a09fa4a4117b00a23a6e826dbce9754f107faa7e",
            "messageTitle": "Use absolute imports",
            "messageBody": "--HG--\nbranch : python_6\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "8b9fc0af40addd94959a2676825f5605e8d6fecc",
            "messageTitle": "Don\u0027t call unicode() directly",
            "messageBody": "--HG--\nbranch : python_6\n",
            "insertions": 4,
            "deletions": 2
          },
          {
            "hash": "14e42b6f6658ad6417d042efb418f541cf77fa99",
            "messageTitle": "Don\u0027t use itertools.izip",
            "messageBody": "--HG--\nbranch : python_6\n",
            "insertions": 3,
            "deletions": 2
          },
          {
            "hash": "28073bf450ad20692d02d5af62c008b1ee90905b",
            "messageTitle": "Don\u0027t use cStringIO",
            "messageBody": "--HG--\nbranch : python_6\n",
            "insertions": 3,
            "deletions": 2
          },
          {
            "hash": "08fdeb80dcdf4c38b3cf012b6b9dd746fde46dac",
            "messageTitle": "Wrap dict.items() et. al. in list()",
            "messageBody": "--HG--\nbranch : python_6\n",
            "insertions": 10,
            "deletions": 9
          },
          {
            "hash": "29445fb9c72847be677b819475bfb7a3a950cbee",
            "messageTitle": "Fix a incorrect use of sys.maxint by using sys.maxsize",
            "messageBody": "--HG--\nbranch : python_6\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "91dfa1ca00a40fd6063bd4736f3e1de5843adfa6",
            "messageTitle": "Change basestring to six.string_types",
            "messageBody": "--HG--\nbranch : python_6\n",
            "insertions": 12,
            "deletions": 6
          },
          {
            "hash": "6eb99391f900ad8a69772620ad1806e140955f4c",
            "messageTitle": "Test against the latest releases",
            "messageBody": "--HG--\nbranch : python_6\n",
            "insertions": 0,
            "deletions": 1
          },
          {
            "hash": "e57267e07d236ad7221b68cd489722d80798071f",
            "messageTitle": "Make sure tox.ini uses versions that drone.io supports",
            "messageBody": "--HG--\nbranch : python_6\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "c8685642cb6f7770bde8011619b08e0eb91d7ea8",
            "messageTitle": "Add a ChangeLog entry about porting",
            "messageBody": "--HG--\nbranch : python_6\n",
            "insertions": 3,
            "deletions": 0
          },
          {
            "hash": "d1ea75cbf03185b316046c35c23ec401e476db95",
            "messageTitle": "Deal with a merge conflict",
            "messageBody": "--HG--\nbranch : python_6\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 312,
        "deletions": 19,
        "date": "2014-10-03",
        "commitResults": [
          {
            "hash": "9d299f8b1d1ff3937601551a318ec220306e2798",
            "messageTitle": "Introduce a Python 3 checker.",
            "messageBody": "Start with checking for built-ins that are not available in Python 3\nand magic methods which have no equivalent.\n\nPart of issue #20.\n",
            "insertions": 312,
            "deletions": 19
          }
        ]
      },
      {
        "insertions": 238,
        "deletions": 225,
        "date": "2014-10-10",
        "commitResults": [
          {
            "hash": "dc25a1bbd06a7e2d2d7917a1e8aa62dbb543c688",
            "messageTitle": "Emit an error when a print statement is used.",
            "messageBody": "Part of issue #20.\n",
            "insertions": 238,
            "deletions": 225
          }
        ]
      },
      {
        "insertions": 169,
        "deletions": 80,
        "date": "2014-10-24",
        "commitResults": [
          {
            "hash": "578ef6dcc040a959c8966fe5f9559af1d0b36f4e",
            "messageTitle": "Warn when an import is performed without `from __future__ import absolute_import`.",
            "messageBody": "Part of issue #20\n",
            "insertions": 112,
            "deletions": 70
          },
          {
            "hash": "748944060909fd9193e301852845e5ec12df4e8b",
            "messageTitle": "Warn when division is performed without `from __future__ import division`.",
            "messageBody": "Part of issue #20\n",
            "insertions": 38,
            "deletions": 0
          },
          {
            "hash": "56f4b2abc332627ef8602bcc7b47e092f9bd12ae",
            "messageTitle": "Address PR comments",
            "messageBody": "",
            "insertions": 19,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 155,
        "deletions": 31,
        "date": "2014-10-31",
        "commitResults": [
          {
            "hash": "71bcb0ce4fa4e55535e4f4b2ccda6e443a0a45ef",
            "messageTitle": "Update Python 3 README",
            "messageBody": "",
            "insertions": 3,
            "deletions": 7
          },
          {
            "hash": "2ee3c11eea1d5d6e70890640d6aede8a9bf137b9",
            "messageTitle": "Warn when calling dict.iter*(), dict.view*() or .next() on any object. These methods either do not exist in Python 3 or are never used.",
            "messageBody": "",
            "insertions": 78,
            "deletions": 3
          },
          {
            "hash": "69942b78ed548ee1bea687bffa5ee32f641b47a1",
            "messageTitle": "Warn when assigning to __metaclass__ in a class scope for Python 2.",
            "messageBody": "",
            "insertions": 32,
            "deletions": 4
          },
          {
            "hash": "196e8925890ff443d9f44cabce658d5b16052d20",
            "messageTitle": "Simplify the check for assigning to __metaclass__",
            "messageBody": "",
            "insertions": 8,
            "deletions": 10
          },
          {
            "hash": "52a3e46dd89cff42ba698cdfd67509bd93751fdd",
            "messageTitle": "Tighten up the checking for iter*() and view*() methods by bailing out if the type can be inferred and it is something that isn\u0027t a dict.",
            "messageBody": "",
            "insertions": 34,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 22,
        "deletions": 1,
        "date": "2014-11-14",
        "commitResults": [
          {
            "hash": "daf0bc12987da259f903a7e4ce51c89e64e2b060",
            "messageTitle": "Warn when parameter unpacking is used as it is not supported in Python 3.",
            "messageBody": "Part of issue #20.\n",
            "insertions": 22,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 23,
        "deletions": 7,
        "date": "2014-12-12",
        "commitResults": [
          {
            "hash": "15b9cf73ecfbc4c477ebd580ef5d2ed4e3bd871e",
            "messageTitle": "Have the python3 checker warn for round() and input().",
            "messageBody": "Both built-ins have changed semantics in Python 3 that you cannot make\ncompatible inline.\n\nCloses issue #411.\n",
            "insertions": 17,
            "deletions": 4
          },
          {
            "hash": "3e08fe4a5d25c4ca7b30d20398c68ce1be128e17",
            "messageTitle": "Update ChangeLog",
            "messageBody": "",
            "insertions": 6,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 186,
        "deletions": 48,
        "date": "2015-01-30",
        "commitResults": [
          {
            "hash": "a922c8c34867b0fb3a5187d512c902f7b7de8df5",
            "messageTitle": "Check for uses of map() in --py3k which are not in an iterating context.",
            "messageBody": "",
            "insertions": 117,
            "deletions": 18
          },
          {
            "hash": "ae258313da3364c04e7d1d5dfb1d0025c2506094",
            "messageTitle": "Check zip, filter, and range are used in iterating contexts",
            "messageBody": "",
            "insertions": 69,
            "deletions": 30
          }
        ]
      },
      {
        "insertions": 50,
        "deletions": 27,
        "date": "2015-02-13",
        "commitResults": [
          {
            "hash": "5b9a47748c79029179de347aec59fd55c2ede78f",
            "messageTitle": "Also consider the builtins module as a single something is a builtin",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "48e6de25d85d13c360f45ba159bb6b95da4547cb",
            "messageTitle": "Refactor iterable tests",
            "messageBody": "",
            "insertions": 45,
            "deletions": 15
          },
          {
            "hash": "85fed8267f8e0e8a113eec198b6568f530bb315f",
            "messageTitle": "Remove implicit-map-evaluation in favour of map-builtin-not-iterating",
            "messageBody": "",
            "insertions": 4,
            "deletions": 11
          }
        ]
      },
      {
        "insertions": 11,
        "deletions": 9,
        "date": "2015-02-20",
        "commitResults": [
          {
            "hash": "c970ee435a6388a9441fd737ce38a404a8733aaf",
            "messageTitle": "Set old_names for map-builtin-not-iterating since it replaced implicit-map-evaluation",
            "messageBody": "",
            "insertions": 3,
            "deletions": 2
          },
          {
            "hash": "eb0f19754163d0caacada207525339b61cd1b673",
            "messageTitle": "Use __() in tests to extract the node instead of #@ plus some fidgeting",
            "messageBody": "",
            "insertions": 2,
            "deletions": 7
          },
          {
            "hash": "3091abc2c26963d3a1e93e184d3dfd1bd06d0072",
            "messageTitle": "Add a ChangeLog entry for *-not-iterating checks",
            "messageBody": "",
            "insertions": 6,
            "deletions": 0
          }
        ]
      }
    ],
    "Pascal Corpet": [
      {
        "insertions": 53,
        "deletions": 3,
        "date": "2019-02-04",
        "commitResults": [
          {
            "hash": "03b4d035203c750908e197debdbb3f8161d51666",
            "messageTitle": "Take into account `__class_getitem__`",
            "messageBody": "Take into account `__class_getitem__` from PEP 560 and fixes some false\r\npositives for `no-self-argument` and `unsubscriptable-object`\r\n\r\nPEP: https://www.python.org/dev/peps/pep-0560/\r\n\r\nClose #2416",
            "insertions": 53,
            "deletions": 3
          }
        ]
      }
    ],
    "Peter Dawyndt": [
      {
        "insertions": 14,
        "deletions": 1,
        "date": "2016-10-31",
        "commitResults": [
          {
            "hash": "a5343e43782fff006b0263bd54495d44eccb7d1b",
            "messageTitle": "Avoid pylint crash on ill-formatted template strings",
            "messageBody": "",
            "insertions": 14,
            "deletions": 1
          }
        ]
      }
    ],
    "carl": [
      {
        "insertions": 52,
        "deletions": 5,
        "date": "2014-07-27",
        "commitResults": [
          {
            "hash": "6e0457a6ec75f326f707ebecaf30cf4ab46e4599",
            "messageTitle": "[refs #282] dangerous-default-values are now not evaluated to get their type/name, as this would dump the entire contents of the list or dictionary into the error message. This is not desirable for large defaults, or for sensitive information such as os.environ.",
            "messageBody": "",
            "insertions": 52,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 950,
        "deletions": 944,
        "date": "2014-07-29",
        "commitResults": [
          {
            "hash": "358790f0506a918a82f79efbeba1be469ba86f8f",
            "messageTitle": "[refs #282] Updating changelog to include information about the change to dangerous-default-value behaviour",
            "messageBody": "",
            "insertions": 8,
            "deletions": 262
          },
          {
            "hash": "192c9d5a7c672dbdb128039919fe567bd772bd13",
            "messageTitle": "[refs #282] Various improvements based on feedback on pull-request #138",
            "messageBody": "",
            "insertions": 256,
            "deletions": 430
          },
          {
            "hash": "028ce9c1e52cb9759483048b79c46ddd09d22643",
            "messageTitle": "[refs #282] Backing-out the previous changelog commit (59019717487e) as a broken merge deleted half of the file. This commit also includes the correct addition to ChangeLog.",
            "messageBody": "",
            "insertions": 263,
            "deletions": 5
          },
          {
            "hash": "4ae68ac2be65f22d77307dc363b5e2b086e09c26",
            "messageTitle": "[refs #282] A previous failed merge meant the fixes got applied to a very old version of base.py. This commit uses the correct up-to-date version of base.py instead!",
            "messageBody": "",
            "insertions": 423,
            "deletions": 247
          }
        ]
      },
      {
        "insertions": 11,
        "deletions": 0,
        "date": "2014-08-21",
        "commitResults": [
          {
            "hash": "2e802e8af72f7511b54b98436419471f4749d77e",
            "messageTitle": "Notes (TODO, XXX etc) are now searched for using a simple `in` before resorting to the regular expression, in order to avoid using the regexp on every line and to prevent a pathological problem for extremely long lines (50k+ characters)",
            "messageBody": "",
            "insertions": 11,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 23,
        "deletions": 3,
        "date": "2014-09-27",
        "commitResults": [
          {
            "hash": "0040963b0edb73fc4751076fcbe41379233ae6c5",
            "messageTitle": "[refs #351] Handling assignment of the string format method to a variable",
            "messageBody": "",
            "insertions": 21,
            "deletions": 1
          },
          {
            "hash": "0f6da5729cbc47d22cfc18b9b19f31bc5d0e8436",
            "messageTitle": "[refs #351] Fixing functional test after a previous misunderstanding of why it was broken. It requires the symbol of the message in a comment on the same line.",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      }
    ],
    "Pierre-Yves David": [
      {
        "insertions": 10,
        "deletions": 10,
        "date": "2008-05-15",
        "commitResults": [
          {
            "hash": "6db694e08a1957c62cdd44a6776378f752ad9680",
            "messageTitle": "escaping some special ReST character into the Pylint doc",
            "messageBody": "",
            "insertions": 10,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 11,
        "deletions": 0,
        "date": "2008-06-05",
        "commitResults": [
          {
            "hash": "2aa3ec701c1ff301951cd7d75c7e4bdb22076bdc",
            "messageTitle": "adds apycot config file",
            "messageBody": "",
            "insertions": 11,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 0,
        "date": "2008-06-09",
        "commitResults": [
          {
            "hash": "a69b0021cb84c3d86180c30bda6988daf382571d",
            "messageTitle": "adds \u0027a generation notice\u0027",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 11,
        "date": "2008-06-13",
        "commitResults": [
          {
            "hash": "eb630097c594f72cd551e4f33459addb0f62fb26",
            "messageTitle": "remove apycot.ini",
            "messageBody": "",
            "insertions": 0,
            "deletions": 11
          }
        ]
      },
      {
        "insertions": 173,
        "deletions": 29,
        "date": "2009-11-25",
        "commitResults": [
          {
            "hash": "dd6c0498343747dbca580dddfa02185ef241cc1e",
            "messageTitle": "fix test suite when user have a pylintrc.",
            "messageBody": "",
            "insertions": 24,
            "deletions": 6
          },
          {
            "hash": "7c28d93e9ccd8f8f75e57d2efbb4758972328313",
            "messageTitle": "minor renaming and tagginf of TestTests.test testcase",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "5b08273c446a97ed25efb7783c531261bebd91b5",
            "messageTitle": "tag smoke test",
            "messageBody": "",
            "insertions": 14,
            "deletions": 2
          },
          {
            "hash": "2481d613620f7f61dcb559ea6cf14c28e5c0ee0d",
            "messageTitle": "update changelog",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "c5f74e1ebd0da0cfffbcaf20e7b1a87bea3c4159",
            "messageTitle": "applied James Lingar patch for ++ operator and duplicate dict key. add management of -- as welle",
            "messageBody": "",
            "insertions": 71,
            "deletions": 2
          },
          {
            "hash": "fdbd124e751f331a92177cf1811f1f5a493f3004",
            "messageTitle": "Merge two ++ and -- messages in a single one",
            "messageBody": "",
            "insertions": 4,
            "deletions": 9
          },
          {
            "hash": "6a6b5383377e2930ba1249bf21db1f3db536fe27",
            "messageTitle": "add description au tags to suite generated in test_func.py",
            "messageBody": "",
            "insertions": 25,
            "deletions": 1
          },
          {
            "hash": "2558f951fd4032e6bdaf2e7e4ae758b6e0bc6802",
            "messageTitle": "fix garbage commited by mistake",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          },
          {
            "hash": "31ef7c4955d71885e0e40854575af43d89f0843e",
            "messageTitle": "fix #17958 (pylint -e must not silence Fatal messages)",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "db08f7fac01ac0500b5d71595068dabaa338837b",
            "messageTitle": "fix fulltest.sh (#18308)",
            "messageBody": "",
            "insertions": 6,
            "deletions": 2
          },
          {
            "hash": "1e48d7aca0ad29ca219a51f15ccba1f46d868f89",
            "messageTitle": "python2.4 compatibility for typechecker",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          },
          {
            "hash": "80971a44405f9b20c59ac33922bab6d84d642674",
            "messageTitle": "auto-tag for input file",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "89d89c743418b95b2440961ad6caa4bad8f79c13",
            "messageTitle": "add testcase for #9334",
            "messageBody": "",
            "insertions": 17,
            "deletions": 0
          },
          {
            "hash": "38038da6b50cff9779d80575a7d2ce7124a31497",
            "messageTitle": "remove pyreverse print",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2010-02-26",
        "commitResults": [
          {
            "hash": "037592313a37ae24a1e6b5f017727767a15befce",
            "messageTitle": "Improve error handling for persistent options.",
            "messageBody": "Add IOError\nAdd the exception message\n",
            "insertions": 2,
            "deletions": 2
          }
        ]
      }
    ],
    "Patrik": [
      {
        "insertions": 23,
        "deletions": 1,
        "date": "2016-09-17",
        "commitResults": [
          {
            "hash": "e83d50da12642cbd8e18472e04a828516142fa45",
            "messageTitle": "Add how to build the docs to the development guide (#1096)",
            "messageBody": "* Add how to build the docs to the development guide\r\n* Update documentation.rst\r\n",
            "insertions": 23,
            "deletions": 1
          }
        ]
      }
    ],
    "Antonio Ossa": [
      {
        "insertions": 14,
        "deletions": 6,
        "date": "2017-04-27",
        "commitResults": [
          {
            "hash": "3b3bfb18498611353e5b1c86a924f9d6526e1a94",
            "messageTitle": "consider-using-enumerate: New case added (#1427)",
            "messageBody": "Catch range with two arguments\r\n\r\nWith this changes `range(0, len(seq))` will be caught by \u0027consider-using-enumerate\u0027 checker\r\n\r\nSigned-off-by: Antonio Ossa \u003caaossa@uc.cl\u003e\r\n\r\n",
            "insertions": 14,
            "deletions": 6
          }
        ]
      }
    ],
    "Chris Murray": [
      {
        "insertions": 3,
        "deletions": 3,
        "date": "2016-10-18",
        "commitResults": [
          {
            "hash": "9e9f89ae56452f4f18d39b0a6e06541d8f68dafb",
            "messageTitle": "Fix description of E1205 \u0026 E1206",
            "messageBody": "These two checks had their descriptions reversed.",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "36e85b2da19c759162d9a6aea3efe06665bbd426",
            "messageTitle": "Fix description of E1205",
            "messageBody": "Add full stop to E1205 to make it more consistent with other descriptions.",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Yann Dirson": [
      {
        "insertions": 24,
        "deletions": 13,
        "date": "2015-01-04",
        "commitResults": [
          {
            "hash": "27bda210e7a848aed4d018f002b440022ffcad21",
            "messageTitle": "Dispatch the GUI widgets in 3 resizable panes.",
            "messageBody": "",
            "insertions": 24,
            "deletions": 13
          }
        ]
      }
    ],
    "Adrian Chirieac": [
      {
        "insertions": 22,
        "deletions": 0,
        "date": "2018-04-24",
        "commitResults": [
          {
            "hash": "f717cad17fce3cbcbd70818d362488618971f559",
            "messageTitle": "Ignore \u0027optional\u0027 type specifier for google docstring (#2023)",
            "messageBody": "",
            "insertions": 22,
            "deletions": 0
          }
        ]
      }
    ],
    "Hornwitser": [
      {
        "insertions": 47,
        "deletions": 49,
        "date": "2018-09-04",
        "commitResults": [
          {
            "hash": "f06ffb045002254bc13ef42bfae066c3ec747c8b",
            "messageTitle": "Fix wildcard imports missing in import graph",
            "messageBody": "This looks like an oversight in the graph adding code.  \u0027*\u0027 was\nexplicitly checked for, but nothing was done on \u0027*\u0027 imports.\n",
            "insertions": 7,
            "deletions": 1
          },
          {
            "hash": "5b0bc777e8688879226274f63775b3c2aa5a10de",
            "messageTitle": "Fix internal/external distinction being broken",
            "messageBody": "Partially introduced by a3d56dd, the logic for distinguishing internal\nand external dependences is broken due to a failure to account for\nmultiple modules and packages being tested at once by pylint.\n\nAdd a mapping of module to package it belongs to in the import checker\nand use this mapping to determine if an import is internal.  An import\nis considered internal if the module imported is a submodule of the\npackage it was imported from.\n\nAlso consolidate filter logic to one function and replace the manual\ncaching with astroid.decorators.cached.\n",
            "insertions": 26,
            "deletions": 16
          },
          {
            "hash": "d7688d3c3ae64b491e1183a9067b066de69cb3cb",
            "messageTitle": "Revert \"Don\u0027t emit import-self and cyclic-import...\"",
            "messageBody": "Reverts commit bcf801f \"Don\u0027t emit import-self and cyclic-import for\nrelative imports of modules with the same name as the package itself.\"\n\nThe value from astroid.modutils.get_module_part no longer returns just\nthe package from a module import, as indicated by the unit tests passing\nwithout the filtering code.\n",
            "insertions": 0,
            "deletions": 9
          },
          {
            "hash": "c45c792c9095d66d61840aa6c350d968de46557a",
            "messageTitle": "Clean up imports in import checker unit tests",
            "messageBody": "Use astroid.MANAGER.ast_from_module_name instead of trying to manually\nbuild the module object.  Rename awesome_module.py to wildcard.py to\nbetter reflect what\u0027s being tested, add empty.py and and do wildcard\nimport tests importing it.\n\nFixes incorrect module name passed in the test_wildcard_import_init unit\ntest, as well as removing a self import, both of which were introduced\nat the creation of the test in 9c551b0.\n",
            "insertions": 9,
            "deletions": 21
          },
          {
            "hash": "03bda7cad07e4ab12649bf26f6f385790bb2f80b",
            "messageTitle": "Fix incorrect package check for wildcard imports",
            "messageBody": "The root node name is the name of the package for __init__.py modules,\nremove incorect check for the name being equal to \"__init__\" leaving\nonly the astdroid.Module.package attribute check.\n\nFixes #2430\n",
            "insertions": 5,
            "deletions": 2
          }
        ]
      }
    ],
    "Roy Williams": [
      {
        "insertions": 101,
        "deletions": 0,
        "date": "2016-09-26",
        "commitResults": [
          {
            "hash": "64208c76b55dfc14ff33e0a138eae4f182296593",
            "messageTitle": "Add a Python 3 warning for implementing `__eq__` without also implementing `__hash__`",
            "messageBody": "I\u0027ve been exploring transitioning our codebase to Python 3, and I\u0027ve been using the immensely helpful `-3` flag\nwhen running tests as described here:\n\nhttps://docs.python.org/3/howto/pyporting.html#prevent-compatibility-regressions\n\nUnfortunately, one of the most common issues I\u0027m finding is around classes implementing `__eq__` but not\n`__hash__`.  The behavior around this changed in Python 3.  See below:\n\n```python\nclass JustEq(object):\n   def __init__(self, x):\n     self.x \u003d x\n   def __eq__(self, other):\n     return self.x \u003d\u003d other.x\n\nclass Neither(object):\n  def __init__(self, x):\n    self.x \u003d x\n\nclass HashAndEq(object):\n   def __init__(self, x):\n     self.x \u003d x\n   def __eq__(self, other):\n     return self.x \u003d\u003d other.x\n   def __hash__(self):\n     return hash(self.x)\n\n{Neither(1), Neither(2)}  # OK\n{HashAndEq(1), HashAndEq(2)}  # OK\n{JustEq(1), JustEq(2)}  # Works in Python 2, throws in Python 3\n\nas_set \u003d {JustEq(1), JustEq(2)}\nprint(JustEq(1) in as_set)  # prints False\nprint(JustEq(1) in list(as_set))  # prints True\n```\n\nIn general this is bad practice for the reasons above, so I\u0027d actually love to havet this warn\nboth as a general warning and as a Python 3 warning, but I don\u0027t see a clean way to have the same\nrule apply in multiple contexts.\n",
            "insertions": 42,
            "deletions": 0
          },
          {
            "hash": "05cc9a7dc82afeb32a315f5cbe2a132a2dac513e",
            "messageTitle": "Added documentation",
            "messageBody": "",
            "insertions": 59,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 42,
        "deletions": 0,
        "date": "2016-10-05",
        "commitResults": [
          {
            "hash": "ad717acd4fb594b57aa893ecb30304604f650955",
            "messageTitle": "Add a warning when declaring `__div__` or `__idiv__` in Python 2. (#1121)",
            "messageBody": "* Add a warning when declaring `__div__` or `__idiv__` in Python 2.\r\n\r\nThese methods are removed in Python 3 in favor of `__floordiv__` and `__truediv__`\r\n",
            "insertions": 42,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 17,
        "deletions": 7,
        "date": "2016-10-22",
        "commitResults": [
          {
            "hash": "bbffb9b1d160f4d7aacdfe5d3d729abd06766371",
            "messageTitle": "Issue a warning on methods implementing `__rdiv__` as well.",
            "messageBody": "Unfortunately I forgot about this in f194bcd5b989ea03bf264572bac25326e7db1fe7\n",
            "insertions": 17,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 102,
        "deletions": 1,
        "date": "2016-10-31",
        "commitResults": [
          {
            "hash": "946c5b454e5ee69589bdea19505cb09707f7861d",
            "messageTitle": "Add a checker for accessing `Exception.message` in Python 2. (#1147)",
            "messageBody": "This attribute has been removed in Python 3.\r\n",
            "insertions": 102,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 100,
        "deletions": 3,
        "date": "2016-11-23",
        "commitResults": [
          {
            "hash": "23e59c80cfcba5878b7f634464a203017ab91187",
            "messageTitle": "Add a Python 3 checker for calls to `encode` or `decode` with non-text codecs. (#1172)",
            "messageBody": "These codecs were removed from the type restricted convenience methods on\r\n`str`, `bytes`, and `bytearray` in Python 3.4 and produce inconsistent output\r\nwith their counterparts in `codecs`",
            "insertions": 100,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 47,
        "deletions": 3,
        "date": "2016-11-29",
        "commitResults": [
          {
            "hash": "b84ed3d16ea83e554381b2e9d97660d42d5ede1b",
            "messageTitle": "Add a Python 3 warning about accessing sys.maxint (#1180)",
            "messageBody": "",
            "insertions": 47,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 156,
        "deletions": 6,
        "date": "2016-11-30",
        "commitResults": [
          {
            "hash": "76677b4118c5201f0aa8e96af26f60e2fc2a3da6",
            "messageTitle": "Add a Python 3 Checker to find invalid imports in Python 3 (#1182)",
            "messageBody": "",
            "insertions": 156,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 143,
        "deletions": 37,
        "date": "2016-12-02",
        "commitResults": [
          {
            "hash": "97ab7787be55370a6669494df146a4fd5f54f59b",
            "messageTitle": "Add Python 3 checker for accessing deprecated functions on the `string` module. (#1185)",
            "messageBody": "This also triggered a \"Rule of 3\" refactoring for me to generalize warning about\r\naccessing a given attribute on a module.",
            "insertions": 143,
            "deletions": 36
          },
          {
            "hash": "63c17ccb30a92255c4bd4da05db9bf3003f0e618",
            "messageTitle": "Remove errant print statement. (#1186)",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 169,
        "deletions": 18,
        "date": "2016-12-05",
        "commitResults": [
          {
            "hash": "1c29c5156e954ec43be210b9521b92f987bf48fa",
            "messageTitle": "Add a Python 3 checker for finding deprecated calls to `str.translate`. (#1188)",
            "messageBody": "* Add a Python 3 checker for finding deprecated calls to `str.translate`.\r\n\r\nThis checker could possibly have some false positives, but after checking our codebase\r\nand several other large codebases using this implementation, I did not find any false\r\npositives.\r\n\r\n* Add filter for types proven not to be strings\r\n",
            "insertions": 124,
            "deletions": 2
          },
          {
            "hash": "38c652c17ad76e15a9da2f17f11f632e1027a76d",
            "messageTitle": "Add confidence to error messages about `str.translate` and `str.encode/decode` (#1197)",
            "messageBody": "",
            "insertions": 45,
            "deletions": 16
          }
        ]
      },
      {
        "insertions": 17,
        "deletions": 5,
        "date": "2016-12-06",
        "commitResults": [
          {
            "hash": "dcebae55d3b3246078658cd3a2f100f80a8cff32",
            "messageTitle": "Only check system modules during imports.",
            "messageBody": "Without this change there could be a false-positive with the following code:\n\n```python\nimport six.moves.configparser\nconfigparser.ConfigParser()\n```\n",
            "insertions": 17,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 124,
        "deletions": 2,
        "date": "2017-01-03",
        "commitResults": [
          {
            "hash": "c002c48a9b8d98b43262e045243af2a80cb8a1f3",
            "messageTitle": "Respect checks for Python 2 (#1196)",
            "messageBody": "Frequently 2and3 code will gate some Python 3 specific code with something like:\r\n\r\n```python\r\nif six.PY2:\r\n  #  something python 2 only\r\n```\r\n\r\nThis PR will respect those branches.\r\n\r\nOne thing I wasn\u0027t able to do was handle `else` branches here.  e.g.:\r\n\r\n```python\r\nif six.PY3:\r\n  # something python 3 only\r\nelse:\r\n  # something python 2 only\r\n```\r\n",
            "insertions": 124,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 48,
        "deletions": 13,
        "date": "2017-05-25",
        "commitResults": [
          {
            "hash": "664903afdd75d1e8aa17f7f2b98a17ac47a9efb0",
            "messageTitle": "Add a warning for accessing itertools functions that have been removed. (#1500)",
            "messageBody": "",
            "insertions": 48,
            "deletions": 13
          }
        ]
      },
      {
        "insertions": 40,
        "deletions": 0,
        "date": "2017-05-29",
        "commitResults": [
          {
            "hash": "6f2b4ccf5542be7243db1b679c6f52e2e4acf504",
            "messageTitle": "Add a warning for bad imports from the types module (#1501)",
            "messageBody": "",
            "insertions": 40,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 98,
        "deletions": 5,
        "date": "2017-06-02",
        "commitResults": [
          {
            "hash": "5587eefeb240b92f451b070b059a800974f08cef",
            "messageTitle": "Implement a Python3 warning for declaring a method `next` method that would implement the Iterator protocol in Python 2 but not in Python 3. (#1509)",
            "messageBody": "In Python 2 implementing a no argument instance method `next` would implement the Iterator protocol, allowing the class to be used\r\nwith `next()` or a `for` loop.  In Python 3 this is now `__next__`.",
            "insertions": 98,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2017-07-11",
        "commitResults": [
          {
            "hash": "6794b421d0004c593748df850083914049f11a98",
            "messageTitle": "Flag sets module as having moved in Python 3 (#1570)",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      }
    ],
    "Alex Hearn": [
      {
        "insertions": 17,
        "deletions": 15,
        "date": "2017-07-08",
        "commitResults": [
          {
            "hash": "d8c6920912377f26a9613a15c6b3937d89f138ec",
            "messageTitle": "Update message from len-as-condition checker to provide more detailed information.",
            "messageBody": "",
            "insertions": 17,
            "deletions": 15
          }
        ]
      }
    ],
    "Brian C. Lane": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2016-02-03",
        "commitResults": [
          {
            "hash": "53f6805a9deb6fa06b737c96c99cfc9b3325e655",
            "messageTitle": "Add __div__ to special methods",
            "messageBody": "__div__ is used in python2 decimal and numbers packages as well as 3rd\nparty modules so treat it like the other special methods.\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Kraig Brockschmidt": [
      {
        "insertions": 3,
        "deletions": 7,
        "date": "2017-03-08",
        "commitResults": [
          {
            "hash": "89d766ef8bea922cfacf55f8a8adbbf783955d4a",
            "messageTitle": "Updating Visual Studio references (#1363)",
            "messageBody": "VS documentation has a dedicated page for its PyLint integration; also removing obsolete references to VS 2003.\r\n",
            "insertions": 3,
            "deletions": 7
          }
        ]
      }
    ],
    "Christopher Zurcher": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2017-06-20",
        "commitResults": [
          {
            "hash": "45597361e41c94261e6fed17766c1fdf57c570a4",
            "messageTitle": "Un-deprecate inspect.getfullargspec (#1541)",
            "messageBody": "The inspect.getfullargspec() command was un-deprecated in Python 3.6 so it should be removed from the deprecated list.\r\nhttps://docs.python.org/3/library/inspect.html#inspect.getfullargspec",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Fureigh": [
      {
        "insertions": 3,
        "deletions": 1,
        "date": "2018-05-14",
        "commitResults": [
          {
            "hash": "349906d7669d4fc09785986259a03c351011697e",
            "messageTitle": "Fix typo in base checker unit test (#2093)",
            "messageBody": "This commit does two things:\r\n * Change `it\u0027s name should` to `its name should`\r\n * Update CONTRIBUTORS.txt\r\n\r\nThanks for holding a sprint at PyCon!",
            "insertions": 3,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 27,
        "deletions": 25,
        "date": "2018-05-15",
        "commitResults": [
          {
            "hash": "e50a15e2e79c6cc907bae37588d0ecfc5ee532a2",
            "messageTitle": "Update style guide link",
            "messageBody": "...to avoid a 404 error. The style guide itself has been split\ninto PEP 8 and PEP 257, but keeping this URL seems simplest.\n",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "52adb925e9db57146a51c5ca28befaa795a3f4a2",
            "messageTitle": "Adjust format.py whitespace for PEP 8",
            "messageBody": "",
            "insertions": 22,
            "deletions": 20
          },
          {
            "hash": "37537d64e73c5ab5e78e067f6ef5c122d0001eb0",
            "messageTitle": "Change \u0027much\u0027 to \u0027many\u0027 for consistency",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "2acaa2767378609aa3d65557761143258c67c053",
            "messageTitle": "Change \u0027http\u0027 to \u0027https\u0027 in a few more places",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      }
    ],
    "Andreas Freimuth": [
      {
        "insertions": 173,
        "deletions": 67,
        "date": "2018-03-25",
        "commitResults": [
          {
            "hash": "01ff866b87b91399eb7bb76a4f56cc31fc11074a",
            "messageTitle": "Add testcases for tab indentation",
            "messageBody": "",
            "insertions": 54,
            "deletions": 0
          },
          {
            "hash": "d66efa81b82caa2584223e4729118e86b8b6c16a",
            "messageTitle": "Fix indentation handling with tabs (Issue: #1148)",
            "messageBody": "A Tab is not equal to 8 spaces. So just counting tabs as 8 spaces is wrong.\n\nUse the whole \u0027tabs\u0027 and/or \u0027spaces\u0027 string for indentation checks\ninstead of some imaginary number of whitespaces.\n",
            "insertions": 77,
            "deletions": 50
          },
          {
            "hash": "dec91fb9296c72fbe5f8e0475a304058bf1b2831",
            "messageTitle": "Fix closing brace/bracket/parenthesis on multi-line constructs (Issue: #638)",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "b6661cafa647e0789e87a47959bd0d5bd0756202",
            "messageTitle": "Add some documentation",
            "messageBody": "",
            "insertions": 30,
            "deletions": 15
          },
          {
            "hash": "18f9131ccfac5eaf9380210d31823c8625ac962e",
            "messageTitle": "Changelog entry for indentation handling",
            "messageBody": "",
            "insertions": 11,
            "deletions": 1
          }
        ]
      }
    ],
    "Dan Garrette": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2017-06-07",
        "commitResults": [
          {
            "hash": "2e820672609c489458dc2cf39d811e8c10255fe4",
            "messageTitle": "Fixed grammatical mistake in error message. (#1517)",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Mike Frysinger": [
      {
        "insertions": 22,
        "deletions": 36,
        "date": "2016-01-09",
        "commitResults": [
          {
            "hash": "f63bacb373bd98e4cbf01ed64d8a71b6df6a19ea",
            "messageTitle": "format: check for \u0026 warn about trailing newlines",
            "messageBody": "The new tests also catch a lot of files in the pylint code base\nthat have trailing newlines, so clean them all up as well.\n\nClose #682\n",
            "insertions": 22,
            "deletions": 36
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2018-06-19",
        "commitResults": [
          {
            "hash": "aa54123f12a9e245f5914fd56c0cafd4cdf9802a",
            "messageTitle": "Makefile: fix version look up for python 3 (#2205)",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 79,
        "deletions": 79,
        "date": "2018-06-20",
        "commitResults": [
          {
            "hash": "341ce90b6b175386ef40494a653be8fb8f502224",
            "messageTitle": "standardize help strings a bit (#2207)",
            "messageBody": "A number of help strings are inconsistent in trailing periods, or\r\nspaces after them in the middle of text, or add a large amount of\r\nwhitespace by using \\ to continue the string.  Standardize a lot\r\nof these so all help messages end in a period and there is normal\r\nwhitespace in the middle.",
            "insertions": 79,
            "deletions": 79
          }
        ]
      }
    ],
    "Sergei Lebedev": [
      {
        "insertions": 21,
        "deletions": 3,
        "date": "2018-11-23",
        "commitResults": [
          {
            "hash": "bc25da2681ceef9560c13d1e412aa79c49c67a57",
            "messageTitle": "Fixed literal-comparison for the case of 0 and 1 (#2601)",
            "messageBody": "Prior to this commit literal-comparison did not fire for the following\r\ncomparisons\r\n\r\n    x is 0\r\n    x is 1\r\n\r\ndue to a subtle bug in the checker implementation. The skip condition\r\nin the ``ComparisonChecker._check_literal_comparison`` was\r\n\r\n    literal.value in (True, False, None)\r\n\r\nwhich holds for True/False/None _as well as_ 0 and 1, since 0 \u003d\u003d False\r\nand 1 \u003d\u003d True.",
            "insertions": 21,
            "deletions": 3
          }
        ]
      }
    ],
    "SergeyKosarchuk": [
      {
        "insertions": 25,
        "deletions": 19,
        "date": "2018-07-17",
        "commitResults": [
          {
            "hash": "0581d30e6297b3080ce12b2fc75a2f5283392e20",
            "messageTitle": "Remove the maximum length from the style regular expressions (#2290)",
            "messageBody": "Close #2047 ",
            "insertions": 25,
            "deletions": 19
          }
        ]
      }
    ],
    "Tim Gates": [
      {
        "insertions": 6,
        "deletions": 1,
        "date": "2019-11-11",
        "commitResults": [
          {
            "hash": "15f63e29f0fd7b912c5f639311d1caf153b34f5e",
            "messageTitle": "Fix simple typo: tenrary -\u003e ternary (#3238)",
            "messageBody": "",
            "insertions": 6,
            "deletions": 1
          }
        ]
      }
    ],
    "Mikhail Fesenko": [
      {
        "insertions": 29,
        "deletions": 6,
        "date": "2017-05-22",
        "commitResults": [
          {
            "hash": "f515f28601e6ac2409d098affb913ed758d87a16",
            "messageTitle": "Fix crash if bad encoding goes after docstring (#1443)",
            "messageBody": "",
            "insertions": 29,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 8,
        "deletions": 4,
        "date": "2019-10-03",
        "commitResults": [
          {
            "hash": "beab1555b4b9aa8548c9968b08ca2e940fb59c2a",
            "messageTitle": "Removed duplicates of code, changed default to common default value",
            "messageBody": "",
            "insertions": 8,
            "deletions": 4
          }
        ]
      }
    ],
    "Pedro Algarvio": [
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2014-11-28",
        "commitResults": [
          {
            "hash": "fee62650901a2f444ee7c1537f411f355dfa5dbe",
            "messageTitle": "New style tuple syntax is only supported on Python \u003e\u003d 2.7",
            "messageBody": "--HG--\nbranch : hotfix/py26-compat\n",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2014-12-04",
        "commitResults": [
          {
            "hash": "14cc8ada1344f68c00135751321754c6cda07054",
            "messageTitle": "Fix typo.",
            "messageBody": "--HG--\nbranch : hotfix/py26-compat\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 9,
        "deletions": 0,
        "date": "2016-12-30",
        "commitResults": [
          {
            "hash": "d7ee7d809294685ffb293ed2de909480b38b086a",
            "messageTitle": "Ignore shebang\u0027s, coding lines and pylint comments (#1250)",
            "messageBody": "",
            "insertions": 9,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 125,
        "deletions": 51,
        "date": "2017-01-19",
        "commitResults": [
          {
            "hash": "211e384b85af0595c3fc45d445c47702970a730d",
            "messageTitle": "Add various improvements to the spelling checker",
            "messageBody": "",
            "insertions": 125,
            "deletions": 51
          }
        ]
      },
      {
        "insertions": 181,
        "deletions": 35,
        "date": "2017-07-23",
        "commitResults": [
          {
            "hash": "9946d8b846f83de06ba9b017de2ea6b7f7439fd3",
            "messageTitle": "Improve the spelling checker with a couple of new changes:",
            "messageBody": " - Removed dead code\n\n - Do not lowercase words prior to spell checking them, \"unicode\" is a spelling\n   mistake, \"Unicode\" is not.\n\n - Add a \"camelCaseWord\" filter because some projects use those as parameter\n   names and we should throw a spelling mistake on those if commented out for\n   example.\n",
            "insertions": 181,
            "deletions": 35
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 9,
        "date": "2017-12-14",
        "commitResults": [
          {
            "hash": "d42e74bb9428f895f36808d30bd8a1fe31e28f63",
            "messageTitle": "Fix `camelCase` spelling regex. (#1767)",
            "messageBody": "This is a more permissive regex which also allows digits.",
            "insertions": 6,
            "deletions": 9
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 0,
        "date": "2019-07-16",
        "commitResults": [
          {
            "hash": "48330429666f5d5591b12c6a034542d622c335d4",
            "messageTitle": "Start hosting `.pre-commit-hooks.yaml`. Refs #2692",
            "messageBody": "",
            "insertions": 7,
            "deletions": 0
          }
        ]
      }
    ],
    "John Gabriele": [
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2018-08-02",
        "commitResults": [
          {
            "hash": "8567ba10eabbd5d39c017440f24bb704dc586103",
            "messageTitle": "intro.rst, pychecker the only one defunct?",
            "messageBody": "If PyChecker is the only one in the list that is defuct, this clarifies that. Otherwise it looks like you\u0027re listing all of them as defunct.",
            "insertions": 2,
            "deletions": 2
          }
        ]
      }
    ],
    "ahirnish": [
      {
        "insertions": 81,
        "deletions": 3,
        "date": "2017-09-15",
        "commitResults": [
          {
            "hash": "3691a25bc5f4c6692508042656e0e936954034e5",
            "messageTitle": "Adding a warning about keyword argument appearing before variable args list in the function definition (#1636)",
            "messageBody": "",
            "insertions": 81,
            "deletions": 3
          }
        ]
      }
    ],
    "Konstantin Manna": [
      {
        "insertions": 4,
        "deletions": 0,
        "date": "2018-07-05",
        "commitResults": [
          {
            "hash": "255b6be4dccef7d29678cb54b5d7ffcb45b23fe6",
            "messageTitle": "Check Slice is type index (fix #2252)",
            "messageBody": "",
            "insertions": 4,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 28,
        "deletions": 26,
        "date": "2018-08-01",
        "commitResults": [
          {
            "hash": "9cb0e3aa04de095ab50ec7b54bad46f2f9aa2eb6",
            "messageTitle": "check rst files with rst-linter",
            "messageBody": "",
            "insertions": 27,
            "deletions": 0
          },
          {
            "hash": "1dffc589bbcad0bde33de0c486ca73f3c683b11d",
            "messageTitle": "use sphinx-build instead of rstlint",
            "messageBody": "",
            "insertions": 1,
            "deletions": 26
          }
        ]
      }
    ],
    "laike9m": [
      {
        "insertions": 4,
        "deletions": 2,
        "date": "2019-10-15",
        "commitResults": [
          {
            "hash": "2f43a6cc113a93c502801458e5a7183fa210a231",
            "messageTitle": "Move inspect.getargvalues and inspect.formatargvalues out of deprecated functions (#3189)",
            "messageBody": "inspect.getargvalues was inadvertently marked as deprecated in Python 3.5, and was deprecated in Python 3.6. See https://bugs.python.org/issue28814 for details.\r\n",
            "insertions": 4,
            "deletions": 2
          }
        ]
      }
    ],
    "PHeanEX": [
      {
        "insertions": 147,
        "deletions": 30,
        "date": "2019-07-16",
        "commitResults": [
          {
            "hash": "18d9e992b341312e22a956a7eb1ea49e0f8f4a06",
            "messageTitle": "Add new checker (unnecessary-comprehension) (close #2905)",
            "messageBody": "",
            "insertions": 111,
            "deletions": 13
          },
          {
            "hash": "0a6b0c54a042d8f9156ed4077951dfbd67ecdbb5",
            "messageTitle": "blacken the code",
            "messageBody": "I mean its ugly now, but if you want it like that: Here you go\n",
            "insertions": 36,
            "deletions": 17
          }
        ]
      }
    ],
    "vtemian": [
      {
        "insertions": 2,
        "deletions": 1,
        "date": "2014-11-04",
        "commitResults": [
          {
            "hash": "0824661a9e56fe590d1a63d0e92dc288fe4bc8bf",
            "messageTitle": "Update ChangeLog",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          }
        ]
      }
    ],
    "C.A.M. Gerlach": [
      {
        "insertions": 4,
        "deletions": 3,
        "date": "2018-07-30",
        "commitResults": [
          {
            "hash": "1e03ef9b6f692ac1c0004b76e430c0c96351d554",
            "messageTitle": "Update Spyder links and short description in IDE integration doc (#2361)",
            "messageBody": "",
            "insertions": 4,
            "deletions": 3
          }
        ]
      }
    ],
    "agutole": [
      {
        "insertions": 74,
        "deletions": 3,
        "date": "2019-05-14",
        "commitResults": [
          {
            "hash": "eb3761504b86d6caf06feae2072f00f846e70435",
            "messageTitle": "Correct word pointed when the same word has more than one error in the same line",
            "messageBody": "Fixes #2895\r\n",
            "insertions": 74,
            "deletions": 3
          }
        ]
      }
    ],
    "Skip Montanaro": [
      {
        "insertions": 30,
        "deletions": 0,
        "date": "2013-07-04",
        "commitResults": [
          {
            "hash": "eae28ad1d9ea225163529a926387eef001d0f24e",
            "messageTitle": "Describe a more workable unit test setup.",
            "messageBody": "",
            "insertions": 30,
            "deletions": 0
          }
        ]
      }
    ],
    "Grygorii Iermolenko": [
      {
        "insertions": 26,
        "deletions": 2,
        "date": "2019-08-16",
        "commitResults": [
          {
            "hash": "8a89cbb7a6a7cfa03913719a78fecf9a1ea0f16b",
            "messageTitle": "Typing module since Python 3.5 (#3056)",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "153a187949ab21e9f8bbf1c62fa0f4e840718a10",
            "messageTitle": "Don\u0027t require super call from `typing.overload`-ed __init__",
            "messageBody": "Close #3020\n",
            "insertions": 25,
            "deletions": 1
          }
        ]
      }
    ],
    "Jason Owen": [
      {
        "insertions": 24,
        "deletions": 1,
        "date": "2018-05-17",
        "commitResults": [
          {
            "hash": "49c0f249065c1029a73e588518dd544e3b0c7b27",
            "messageTitle": "Add `--exit-zero` option (#2099)",
            "messageBody": "Add a new command-line option for the use of continuous integration\r\nscripts which abort if a command returns a non-zero status code.  If the\r\noption is specified, and Pylint runs successfully, it will exit with 0\r\nregardless of the number of lint issues detected.\r\n\r\nConfiguration errors, parse errors, and calling Pylint with invalid\r\ncommand-line options all still return a non-zero error code, even if\r\n`--exit-zero` is specified.\r\n\r\nThanks for hosting a sprint at PyCon 2018!\r\n\r\nClose #2042",
            "insertions": 24,
            "deletions": 1
          }
        ]
      }
    ],
    "Trevor Bekolay": [
      {
        "insertions": 77,
        "deletions": 6,
        "date": "2019-09-12",
        "commitResults": [
          {
            "hash": "20e432ebc0c7f760ca80e3700e64c00afb56236e",
            "messageTitle": "Add a command to list enabled/disabled messages",
            "messageBody": "When enabling/disabling several messages and groups in a config\nfile, it can be unclear which messages are actually enabled and\nwhich are disabled. This new command produces the final resolved\nlists of enabled/disabled messages, sorted by symbol but with the\nID provided for use with `--help-msg`.\n\nThis commit includes a test, documentation, and adding myself to\nthe contributors list, as this is my first contribution.\n",
            "insertions": 77,
            "deletions": 6
          }
        ]
      }
    ],
    "Cosmin Poieana": [
      {
        "insertions": 42,
        "deletions": 2,
        "date": "2014-11-22",
        "commitResults": [
          {
            "hash": "b449d24abc6509f89a306d05faf451fed8ccc872",
            "messageTitle": "Proper opening mode checking for files",
            "messageBody": "--HG--\nbranch : open_mode\n",
            "insertions": 42,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 43,
        "deletions": 2,
        "date": "2014-12-05",
        "commitResults": [
          {
            "hash": "71a57315275cbc4f8f6a1eb3504735add10f3130",
            "messageTitle": "Fix 2.x open mode check; Add more tests",
            "messageBody": "--HG--\nbranch : open_mode\n",
            "insertions": 43,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 8,
        "deletions": 1,
        "date": "2015-02-14",
        "commitResults": [
          {
            "hash": "e7f5be71084a6203d8b6beecd0f19f08c70343d5",
            "messageTitle": "Add warning for \"unichr\" in Python 3 Closes issue #472",
            "messageBody": "--HG--\nbranch : unichr\n",
            "insertions": 7,
            "deletions": 0
          },
          {
            "hash": "13f808a6ea04fa2819520f2cd31ee5d8c99507e5",
            "messageTitle": "Fix char typo",
            "messageBody": "--HG--\nbranch : unichr\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 1,
        "date": "2015-04-20",
        "commitResults": [
          {
            "hash": "5a4a9b56562f63da0fb56475d945540a5dcdffdb",
            "messageTitle": "Improve method regexp for those that require docstrings",
            "messageBody": "--HG--\nbranch : function_regexp\n",
            "insertions": 10,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2015-05-08",
        "commitResults": [
          {
            "hash": "31800caf1b5c8e8bdc85a34ae3b675a7eb7d92d4",
            "messageTitle": "Use a simpler/faster private/special method regexp",
            "messageBody": "--HG--\nbranch : function_regexp\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Maarten ter Huurne": [
      {
        "insertions": 17,
        "deletions": 0,
        "date": "2009-11-25",
        "commitResults": [
          {
            "hash": "ff61bb9e028724356c72e52db66dc3204fabe448",
            "messageTitle": "Added test case that triggers false positive in the current code when a function is used as a method.",
            "messageBody": "",
            "insertions": 17,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 13,
        "deletions": 3,
        "date": "2010-03-02",
        "commitResults": [
          {
            "hash": "44fc24c6f51f1a025960cfb1dd6272a599b93667",
            "messageTitle": "Fix and test case for W0233 false positive: if the same superclass constructor was called twice, the second time was reported as a call to a non-existing superclass constructor.",
            "messageBody": "",
            "insertions": 13,
            "deletions": 3
          }
        ]
      }
    ],
    "Oisín Moran": [
      {
        "insertions": 6,
        "deletions": 4,
        "date": "2019-07-07",
        "commitResults": [
          {
            "hash": "68b1d720dacca07aa5282b1d118d5ab873c5ed15",
            "messageTitle": "Grammar Fixes (#2974)",
            "messageBody": "",
            "insertions": 6,
            "deletions": 4
          }
        ]
      }
    ],
    "Janne Rönkkö": [
      {
        "insertions": 290,
        "deletions": 256,
        "date": "2019-10-18",
        "commitResults": [
          {
            "hash": "8babeffde54a696e7ba84d69f8fc1f871e432950",
            "messageTitle": "Refactor file checking for a simpler parallel API (#3016)",
            "messageBody": "This change prepares the code for enabling Prospector to take advantage\r\nof running PyLint parallel.\r\n\r\nIterating files is moved into generator (_iterate_file_descrs) so that\r\nparallel checking can use the same implementation (_check_file) just\r\nby providing different kind of generator that reads the files from parent\r\nprocess.\r\n\r\nThe refactoring removes code duplication that existed in PyLinter._do_check\r\nmethod; checking module content from stdin had identical implementation to\r\nchecking content from a source file.\r\n\r\nMade PyLinter.expand_files a private method.\r\n\r\nThe previous implementation of parallel linting created new PyLinter\r\nobjects in the worker (child) process causing failure when running under\r\nProspector because Prospector uses a custom PyLinter class\r\n(a class inherited from PyLinter)\r\nand PyLint naturally just creates PyLinter object. This caused linting to\r\nfail because there is options for Prospector\u0027s IndentChecker which was not\r\ncreated in the worker process.\r\n\r\nThe new implementation passes the original PyLinter object into workers\r\nwhen the workers are created. See https://docs.python.org/3/library/multiprocessing.html#contexts-and-start-methods\r\n\r\nNote that as Windows uses spawn method by default, PyLinter object (and\r\nits) members need to be pickleable from now on with the exception being\r\nPyLinter.reporter which is not passed to child processes.\r\n\r\nThe performance has remained about the same based on quick tests done with\r\nDjango project containing about 30 000 lines of code; with the old\r\nimplementation linting took 26-28 seconds with 8 jobs on quad core i7 and\r\n24-27 seconds with the new implementation.",
            "insertions": 290,
            "deletions": 256
          }
        ]
      }
    ],
    "Martin Pool": [
      {
        "insertions": 278,
        "deletions": 43,
        "date": "2012-09-19",
        "commitResults": [
          {
            "hash": "399d5890db634594ff9462e42822f92bc388c9a4",
            "messageTitle": "Closes #104572: symbolic warning names in output (by Martin Pool)",
            "messageBody": "triggered whatever the format using a command line option\n",
            "insertions": 278,
            "deletions": 43
          }
        ]
      },
      {
        "insertions": 32,
        "deletions": 2,
        "date": "2013-01-08",
        "commitResults": [
          {
            "hash": "5824d2fca1fde84120b6e74c4f1af1a3023a9fe6",
            "messageTitle": "erroneous W0212 (access to protected member) on super call. Closes #115580",
            "messageBody": "--HG--\nbranch : stable\n",
            "insertions": 32,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 19,
        "deletions": 6,
        "date": "2013-02-25",
        "commitResults": [
          {
            "hash": "5b63e55160977a6c9ddbb79e32feb21197f0a915",
            "messageTitle": "string check: don\u0027t warn about octal escape sequence, warn about \\o (not octal in python). Closes #111799",
            "messageBody": "",
            "insertions": 19,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 65,
        "deletions": 2,
        "date": "2013-02-26",
        "commitResults": [
          {
            "hash": "b4e221395733240b6e45861433e2d0bec1a2a615",
            "messageTitle": "give [deprecated-lambda] when a map/filter of a lambda could be a comprehension. Closes #120657",
            "messageBody": "",
            "insertions": 65,
            "deletions": 2
          }
        ]
      }
    ],
    "Anubhav": [
      {
        "insertions": 28,
        "deletions": 3,
        "date": "2020-01-14",
        "commitResults": [
          {
            "hash": "be87624a4831162b0ae68f69af986b1597a2d78b",
            "messageTitle": "BasicChecker: fix typo in \u0027visit_with\u0027 method (#3345)",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "f2f4e6f42416644471ab003d4df7ecf052c3c411",
            "messageTitle": "Add a check for asserts on string literals (#3346)",
            "messageBody": "This check is emitted whenever **pylint** finds an assert statement\r\nwith a string literal as its first argument. Such assert statements\r\nare probably unintended as they will always pass.\r\n\r\nClose #3284",
            "insertions": 25,
            "deletions": 2
          }
        ]
      }
    ],
    "Justin Li": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2018-04-06",
        "commitResults": [
          {
            "hash": "63eb8c4663a77d0caf2a842b716e4161f9763a16",
            "messageTitle": "fix typo (#1996)",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 87,
        "deletions": 52,
        "date": "2018-12-21",
        "commitResults": [
          {
            "hash": "5a86fddcb815ebd08fbc3ffcbaf7b11c2ba2e107",
            "messageTitle": "Generalize `chained-comparison` (#2655)",
            "messageBody": "`chained-comparison` detects boolean expressions such as `a \u003c b and b \u003c c` and suggests\r\nit should be rewritten as `a \u003c b \u003c c`.\r\n\r\nThe current implementation is limited in two ways. First, cannot deal with existing chain\r\ncomparisons, so it would not detect the following:\r\n    `a \u003c b \u003c c and c \u003c d` # should be a \u003c b \u003c c \u003c d\r\n\r\nSecond, the algorithm for detecting possible chains is simplistic, and would falsely\r\ndetect the following:\r\n\r\n    `a \u003c b \u003c c and b \u003c d` # no simplification possible\r\n\r\nThis change fixes both of these issues.",
            "insertions": 87,
            "deletions": 52
          }
        ]
      }
    ],
    "Mads Kiilerich": [
      {
        "insertions": 31,
        "deletions": 5,
        "date": "2009-01-18",
        "commitResults": [
          {
            "hash": "5fd83a50a5d0fe036aa1aa78dabcbb0d700299be",
            "messageTitle": "Decorators of methods should see the class namespace - just like default values does but the body doesn\u0027t.",
            "messageBody": "Fixes\nhttps://www.logilab.net/elo/ticket/3711 - bug finding decorator arguments\nhttps://www.logilab.net/elo/ticket/5626 - name resolution bug inside classes\n",
            "insertions": 31,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 0,
        "date": "2009-01-28",
        "commitResults": [
          {
            "hash": "25f7172c2bbe2a22ffa104c6bcf9ea0fd751e6ba",
            "messageTitle": "Let pylint exit code indicate result of checks",
            "messageBody": "If _any_ messages are shown the exitcode will be set to 2.\n(Exitcode 1 already indicates that no files were specified.)\n\nThis implements what is requested on https://www.logilab.net/elo/ticket/4691 .\nThe approach taken in this patch is however that any message is an error. If a\nmessage shouldn\u0027t count as an error it should be disabled.\n\nThere is a risk that some tool tools which call pylint could interprete the\nexit code as if _pylint_ failed, and not that pylint completed its job and\nconcluded that the checked _files_ failed.\n\nSome smoketests fails with this change - how do I change them to accept exitcode 2?\n",
            "insertions": 5,
            "deletions": 0
          }
        ]
      }
    ],
    "fahhem": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2014-12-16",
        "commitResults": [
          {
            "hash": "5869ef94c831e0777876a152f5f41a111e901e2a",
            "messageTitle": "FAQ typo fix (\"minimum\" vs \"maximum\")",
            "messageBody": "--HG--\nbranch : fahhem/faq-typo-fix-minimum-vs-maximum-1418754998842\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Zeb Nicholls": [
      {
        "insertions": 35,
        "deletions": 1,
        "date": "2019-04-29",
        "commitResults": [
          {
            "hash": "b1ee3854ab89786bdfb53b062ffc3e56080ec4a2",
            "messageTitle": "Add \u0027of\u0027 to GoogleDocstring multiple type (#2884)",
            "messageBody": "A docstring of the following form should pass (see https://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_numpy.html, search for \u0027:obj:list of :obj:str\u0027)\r\n\r\ndef my_func(self):\r\n    \"\"\"This is a docstring.\r\n\r\n    Returns\r\n    -------\r\n    :obj:`list` of :obj:`str`\r\n        List of strings\r\n    \"\"\"\r\n    return [\"hi\", \"bye\"] #@",
            "insertions": 35,
            "deletions": 1
          }
        ]
      }
    ],
    "Damien Nozay": [
      {
        "insertions": 4,
        "deletions": 2,
        "date": "2014-01-14",
        "commitResults": [
          {
            "hash": "fe8056767b6307475b3f69fe2aa339dd57a859da",
            "messageTitle": "fix error with message reports when custom checker uses old-style messages",
            "messageBody": "when register_messages is called, it allows messages that are in the form\nof 2-tuples, which means a symbol is not necessary. however, when doing\nreport_message_stats is called, it does not handle the case where there is\nno symbol.\n\nsolution: when collecting message, use the message id as the key if the\nsymbol is None.\n\ne.g.\n```\nMessages\n--------\n\n+------------------+------------+\n|message id        |occurrences |\n+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d+\n|missing-docstring |6           |\n+------------------+------------+\n|W9901             |4           |\n+------------------+------------+\n|invalid-name      |1           |\n+------------------+------------+\n```\n",
            "insertions": 4,
            "deletions": 2
          }
        ]
      }
    ],
    "Roberto Leinardi": [
      {
        "insertions": 18,
        "deletions": 0,
        "date": "2018-08-23",
        "commitResults": [
          {
            "hash": "b3dc683b83fef78bef9774ad26bc44647beb2457",
            "messageTitle": "added pylint-PyCharm-plugin to the ide integration docs",
            "messageBody": "",
            "insertions": 18,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 10,
        "deletions": 8,
        "date": "2018-09-03",
        "commitResults": [
          {
            "hash": "f6ebe10357a0de69a1bc27cefb89782a1916531d",
            "messageTitle": "Updated pylint-pycharm plugin documentation",
            "messageBody": "",
            "insertions": 10,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 0,
        "date": "2018-09-04",
        "commitResults": [
          {
            "hash": "2d21a408e1a581c5f9aed52c50c991ebe429d6d2",
            "messageTitle": "Added missin Info type to doc",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      }
    ],
    "Kevin Jing Qiu": [
      {
        "insertions": 25,
        "deletions": 3,
        "date": "2012-09-20",
        "commitResults": [
          {
            "hash": "9af24049c7f5fb6c45b92fa9c0dac1f55553c9d3",
            "messageTitle": "Added the ability to specify reporter class name as report\u0027s \u0027output-format\u0027.",
            "messageBody": "This allows a custom reporter to be used to format reports.\nBackwards-compatibility is maintained, so a user can still specify\nthe named reporters such as \u0027text\u0027 or \u0027parseable\u0027.\n",
            "insertions": 25,
            "deletions": 3
          }
        ]
      }
    ],
    "Ioana Tagirta": [
      {
        "insertions": 10,
        "deletions": 2,
        "date": "2018-02-10",
        "commitResults": [
          {
            "hash": "0c29b5b0c54b150e3dc7c4c96596bb703e2646ba",
            "messageTitle": "Fix bad thread instantiation check",
            "messageBody": "",
            "insertions": 4,
            "deletions": 2
          },
          {
            "hash": "63020a802c84f55150536e5cd3e2ef184d20579b",
            "messageTitle": "Add entry in changelog",
            "messageBody": "",
            "insertions": 6,
            "deletions": 0
          }
        ]
      }
    ],
    "JT Olds": [
      {
        "insertions": 16,
        "deletions": 1,
        "date": "2012-05-15",
        "commitResults": [
          {
            "hash": "9dbd13ca8eef18052a22687eb6fd66bcb366b0f7",
            "messageTitle": "Make pythonpath behaviour closer to python\u0027s (closes #88218)",
            "messageBody": "When pylint is called with a single filename as argument, walk its path\nbackwards to find the first directory that doesn\u0027t have a __init__.py,\nand add that to sys.path instead of the cwd.\n",
            "insertions": 16,
            "deletions": 1
          }
        ]
      }
    ],
    "Mike Miller": [
      {
        "insertions": 3,
        "deletions": 1,
        "date": "2018-10-11",
        "commitResults": [
          {
            "hash": "9734baebfa3faf90e41f6ae41f80c379953fa56b",
            "messageTitle": "Fix typo in msg description (#2548)",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          }
        ]
      }
    ],
    "bdanielby": [],
    "Daniel Draper": [
      {
        "insertions": 86,
        "deletions": 2,
        "date": "2019-10-30",
        "commitResults": [
          {
            "hash": "96b3892506de6033ecb4f6e288bd4f5b211d894c",
            "messageTitle": "Add regexs for bad- and good-names to enable better white- or blacklisting (#3186)",
            "messageBody": "To enable better handling of whitelisting/blacklisting names, we added two new\r\nconfig options: `good-names-rgxs` and `bad-names-rgxs`. They both\r\nare a comma-separated list of regexes, where the former is used for exempting\r\nnames from name checking while the latter is used for always marking a name\r\nas blacklisted.\r\n",
            "insertions": 86,
            "deletions": 2
          }
        ]
      }
    ],
    "cezarelnazli": [],
    "John McGehee": [
      {
        "insertions": 30,
        "deletions": 11,
        "date": "2013-10-10",
        "commitResults": [
          {
            "hash": "3bd11ec677c5e68ae5bb29fd3f8deee77ee910d6",
            "messageTitle": "Correct documentation for the manner in which Pylint finds its pylintrc configuration file.  No functional changes.",
            "messageBody": "",
            "insertions": 30,
            "deletions": 11
          }
        ]
      }
    ],
    "Petr Pulc": [
      {
        "insertions": 52,
        "deletions": 1,
        "date": "2016-12-27",
        "commitResults": [
          {
            "hash": "ddf066f8e7436110fceb542454cc41ebf18e7c05",
            "messageTitle": "Omit convention warnings on assignment with type hints (#1229)",
            "messageBody": "Require spaces around default value assignment with type hints, such as in the following example:\r\n\r\nExample:\r\n\r\ndef my_function(variable: str \u003d \u0027\u0027): # this should not emit bad-whitespace\r\n  print(variable)\r\n",
            "insertions": 52,
            "deletions": 1
          }
        ]
      }
    ],
    "palazzem": [
      {
        "insertions": 12,
        "deletions": 4,
        "date": "2015-09-21",
        "commitResults": [
          {
            "hash": "10fd6e93976bfc44b50e13aa242bfbad84c2045f",
            "messageTitle": "fixed _check_deprecated_method during pylint linting",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "10752e669ef809cc37ecc4f599b2026b66207ba8",
            "messageTitle": "deprecated method names are shown correctly",
            "messageBody": "",
            "insertions": 10,
            "deletions": 2
          }
        ]
      }
    ],
    "Nathaniel Manista": [
      {
        "insertions": 125,
        "deletions": 0,
        "date": "2009-06-10",
        "commitResults": [
          {
            "hash": "875513fa77c765e6f12ba01f182ce33a0992272f",
            "messageTitle": "A checker for use (and misuse) of the standard logging module.",
            "messageBody": "",
            "insertions": 125,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 3,
        "date": "2009-06-14",
        "commitResults": [
          {
            "hash": "8f833c7973ba5622f41936acae07e05797a9bb1e",
            "messageTitle": "Added a few words explaining *why* delayed interpolation of logging format strings is preferred.",
            "messageBody": "",
            "insertions": 7,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 17,
        "deletions": 4,
        "date": "2017-03-07",
        "commitResults": [
          {
            "hash": "bd7d48e0ab74449a4767cc76fb1e42b2898c82ad",
            "messageTitle": "Add ignored_ and unused_ to unused-* inspections (#1357)",
            "messageBody": "",
            "insertions": 17,
            "deletions": 4
          }
        ]
      }
    ],
    "Adrien Di Mascio": [
      {
        "insertions": 89,
        "deletions": 34,
        "date": "2006-08-09",
        "commitResults": [
          {
            "hash": "e182e23b6aa7627bef823bac24f9af8f4263daa9",
            "messageTitle": "find pylintrc in parent directory until we\u0027re not in a package anymore",
            "messageBody": "",
            "insertions": 85,
            "deletions": 31
          },
          {
            "hash": "3ad9fca5b77f5c49ee0a0d548c946a67d748fdf3",
            "messageTitle": "load default values",
            "messageBody": "",
            "insertions": 4,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 1876,
        "deletions": 1170,
        "date": "2006-08-10",
        "commitResults": [
          {
            "hash": "9afbc0b1adec76ec4e0bd7ddc9eb49991c893635",
            "messageTitle": "updated dependencies",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "dc921f5b61eedd2c88e612c5e013e395b5eca548",
            "messageTitle": "updating tests / tested messages",
            "messageBody": "",
            "insertions": 30,
            "deletions": 35
          },
          {
            "hash": "65f0c2bb25a790623080076814da9f227bd2e5d6",
            "messageTitle": "updated doc",
            "messageBody": "",
            "insertions": 683,
            "deletions": 138
          },
          {
            "hash": "9e58c30036a83fbacecd0faf62fd9e363e9132bd",
            "messageTitle": "fixed packaging",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "2fd60ad41b783a1b82a7d3bba051b0a5e91c778c",
            "messageTitle": "use lineno 1 for C0302",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "ca12ce5e3ff712f4feeb203428c14e34b59f3ea2",
            "messageTitle": "load defaults options at registration time",
            "messageBody": "",
            "insertions": 5,
            "deletions": 1
          },
          {
            "hash": "9a5b95085ca2469c4e0a36a0055ba190ad196ba8",
            "messageTitle": "updated announce template",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "99a0a91c910d48b1d60859be3d3b3f26ca366b2f",
            "messageTitle": "prepared new version",
            "messageBody": "",
            "insertions": 471,
            "deletions": 299
          },
          {
            "hash": "90139d91a6728e8e6dc750c4f95dda9a98b5dd95",
            "messageTitle": "updated pylint.el",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "10c6c05afbc20f802b57e80478c4d436c9635233",
            "messageTitle": "changed line 0 into line 1",
            "messageBody": "",
            "insertions": 9,
            "deletions": 9
          },
          {
            "hash": "9911a21e2c1172389e52d865080e9d867f9a232d",
            "messageTitle": "module_msgs_state needs to be initialized as an empty dict (not None)",
            "messageBody": "",
            "insertions": 3,
            "deletions": 2
          },
          {
            "hash": "63eb519a8736a119e718e16814952a4b3405befc",
            "messageTitle": "improved documentation",
            "messageBody": "",
            "insertions": 666,
            "deletions": 678
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 5,
        "date": "2006-08-11",
        "commitResults": [
          {
            "hash": "e222f4ea0eced38b470f7c65e9ff6c5f2fef016b",
            "messageTitle": "use logilab.testlib",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "8e5de5b73b81f8b735834526c81af5b15741f9d4",
            "messageTitle": "set reporter after loading default values",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2006-11-21",
        "commitResults": [
          {
            "hash": "dd42dae7f6c0c15497c906ce7e6336295183004e",
            "messageTitle": "updated urls for debian package",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 56,
        "deletions": 1,
        "date": "2006-11-24",
        "commitResults": [
          {
            "hash": "bd23a8500feb18007021c07f4265b0b84d869240",
            "messageTitle": "- detect return statements outside functions - catch SyntaxError at visit time also (not only parse time)",
            "messageBody": "",
            "insertions": 10,
            "deletions": 1
          },
          {
            "hash": "50dbf7a0282d97de6c6c1dd546acecd1e206ff4d",
            "messageTitle": "added return/yield mix detection",
            "messageBody": "",
            "insertions": 46,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 0,
        "date": "2006-11-28",
        "commitResults": [
          {
            "hash": "5542a26b3ff9f1244823b32a453e1bb2d150af32",
            "messageTitle": "fixed 2.3 compat bug reported by Uwe Tapper",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 211,
        "deletions": 37,
        "date": "2007-02-15",
        "commitResults": [
          {
            "hash": "e21c6cd36be76573fac6a460e31ad2dc85643881",
            "messageTitle": "commit work as it is right now",
            "messageBody": "",
            "insertions": 211,
            "deletions": 37
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 1,
        "date": "2007-08-16",
        "commitResults": [
          {
            "hash": "f5e7431eedcda365681a3093bc301bc76147481f",
            "messageTitle": "fix module inference bug",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2007-08-21",
        "commitResults": [
          {
            "hash": "460a7875f8660c901c3adbfadf9c8f7ffaf00ea1",
            "messageTitle": "NameError",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 8,
        "deletions": 7,
        "date": "2007-11-19",
        "commitResults": [
          {
            "hash": "2507ec4f1f79da3553b3c50788cddf1c6bd24dd0",
            "messageTitle": "avoid crash when linting a directory that is not a package",
            "messageBody": "",
            "insertions": 8,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 35,
        "deletions": 29,
        "date": "2009-08-31",
        "commitResults": [
          {
            "hash": "8a23d031eeb1e2b79832dcc8bef14db468dba8b3",
            "messageTitle": "[elisp] integration of Yuen Ho Wong\u0027s patches",
            "messageBody": "",
            "insertions": 35,
            "deletions": 29
          }
        ]
      },
      {
        "insertions": 17,
        "deletions": 2,
        "date": "2010-02-25",
        "commitResults": [
          {
            "hash": "ba38bd50b12c4d653cab0faf6857bf3d3655393e",
            "messageTitle": "fix #20991: class scope definitions ignored in a genexpr",
            "messageBody": "When checking for variable existence in a method definition, pylint\nsimply skips the class scope in the scope consumer chain. This technique\nworks fine with classic methods but doesn\u0027t work when analyzing genexprs\ndefined at class level : for genexprs, we do want the class scope to\nbe considered.\n",
            "insertions": 17,
            "deletions": 2
          }
        ]
      }
    ],
    "James Lingard": [
      {
        "insertions": 198,
        "deletions": 4,
        "date": "2009-11-25",
        "commitResults": [
          {
            "hash": "d70e6d49959fcef0a447ecb57e8d31c68a99e912",
            "messageTitle": "Add a checker verifying that the arguments passed to a function call match the function\u0027s formal parameters",
            "messageBody": "",
            "insertions": 198,
            "deletions": 4
          }
        ]
      }
    ],
    "gaurikholkar": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2018-01-18",
        "commitResults": [
          {
            "hash": "cffe9ab3e4d8a18f8bd1593ab71810a9f8146eeb",
            "messageTitle": "fixes zip-builtin-not-iterating false positive when used as reversed function argument",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Tomer Chachamu": [
      {
        "insertions": 72,
        "deletions": 1,
        "date": "2018-09-20",
        "commitResults": [
          {
            "hash": "9c35a56906221b7f766f8a160f4fdd0f286232e2",
            "messageTitle": "Added check simplifiable-if-expression (#2502)",
            "messageBody": "Similar to simplifiable-if-statement, it finds trivial ternary\r\nstatements and suggested replacing them.\r\n\r\nPaired-with: Richard Goodman \u003crichardg@brandwatch.com\u003e",
            "insertions": 72,
            "deletions": 1
          }
        ]
      }
    ],
    "Niko Wenselowski": [
      {
        "insertions": 8,
        "deletions": 3,
        "date": "2019-08-06",
        "commitResults": [
          {
            "hash": "3b18105c7bc98544fb864cb2e53c1bf25869ce96",
            "messageTitle": "W0199: Change description to use the term 2-item-tuple (#3033)",
            "messageBody": "",
            "insertions": 8,
            "deletions": 3
          }
        ]
      }
    ],
    "Ricardo Gemignani": [
      {
        "insertions": 28,
        "deletions": 8,
        "date": "2014-03-06",
        "commitResults": [
          {
            "hash": "9383d144f87247dcdb6419ff2c1b70977d0ed656",
            "messageTitle": "except as replaced by commas, one with_statement future import added and StringFormat used to replace string.format when python \u003c 2.6",
            "messageBody": "",
            "insertions": 21,
            "deletions": 7
          },
          {
            "hash": "486aa114d52afcd5e12f8ef3ec166833326f5005",
            "messageTitle": "code commented and import moved so it won\u0027t run when python\u003e2.5",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          },
          {
            "hash": "bc96e922e13e302c36aee65446081c1dcc5b4444",
            "messageTitle": "Changelog line about python 2.5 support being restored was added",
            "messageBody": "",
            "insertions": 3,
            "deletions": 0
          }
        ]
      }
    ],
    "FELD Boris": [
      {
        "insertions": 7,
        "deletions": 0,
        "date": "2012-03-09",
        "commitResults": [
          {
            "hash": "3531d91b029c1a2ca509666cdade2a8119645da6",
            "messageTitle": "Add \u0027on_set_current_module\u0027 event trigerring and event callback for reporters.",
            "messageBody": "",
            "insertions": 7,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 0,
        "date": "2012-05-03",
        "commitResults": [
          {
            "hash": "1a481908c8a45588cb65f4f8f49f576505c7b022",
            "messageTitle": "Add \u0027on_close\u0027 event trigerring and event callback for reporters.",
            "messageBody": "",
            "insertions": 6,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 15,
        "deletions": 0,
        "date": "2012-06-07",
        "commitResults": [
          {
            "hash": "457809efa2e4c0c55c933d4e9a8360b9acd03009",
            "messageTitle": "Fix tests which failed on tempfile file comparaison due to Mac OS X which make /tmp a symlink to /private/tmp",
            "messageBody": "",
            "insertions": 15,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 290,
        "deletions": 255,
        "date": "2012-07-04",
        "commitResults": [
          {
            "hash": "ee1a5b1e0e3c68b3747f88c8f82b2d9544408ae5",
            "messageTitle": "Refactor test_func in order to extract common part for reutilization in pylint-brain",
            "messageBody": "",
            "insertions": 290,
            "deletions": 255
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 3,
        "date": "2012-07-09",
        "commitResults": [
          {
            "hash": "30ea2492e86523e21f940f0ae09a1366b6070600",
            "messageTitle": "Fix checkers.utils for other implementations (use of __builtins__). Closes #99139. Closes #89838. Theses fixes need fixes on logilab-astng and logilab-common",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 3,
        "date": "2012-07-17",
        "commitResults": [
          {
            "hash": "3e0151d22439c1b92bab406ff910e9153da97638",
            "messageTitle": "Call reporter.set_output before reporter.on_set_current_module in order to ease reporter work",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 8,
        "date": "2012-07-26",
        "commitResults": [
          {
            "hash": "6d1252aaa96154dfcc6e2660e959c86b44056b4d",
            "messageTitle": "Do not include tests files for installation in setup.py. Clean setup.py for python3. Closes #72022. Closes #82417. Closes #76910.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 210,
        "deletions": 65,
        "date": "2012-09-19",
        "commitResults": [
          {
            "hash": "1a8aa86961dd5d7a03066d81a7a44d17939ecb61",
            "messageTitle": "Improve checking of metaclass methods\u0027s first arg. Closes #4014.",
            "messageBody": "* Add C0204 for __new__ method of metaclass.\n* Add valid-metaclass-classmethod-first-arg config option.\n* Move a test, improve it and fix another one.\n",
            "insertions": 123,
            "deletions": 55
          },
          {
            "hash": "2c2d985aab13c3359c72fb04172ebe8e9a23e776",
            "messageTitle": "Add test and code for handling __all__ with pylint. Closes #4685.",
            "messageBody": "",
            "insertions": 71,
            "deletions": 5
          },
          {
            "hash": "31b1088b7d9a00de4078cf44d3af9bbb29bfaa05",
            "messageTitle": "Fix false positive W0231 for missing call to object.__init__. Closes #103656",
            "messageBody": "",
            "insertions": 16,
            "deletions": 5
          }
        ]
      }
    ],
    "Michael Hudson-Doyle": [
      {
        "insertions": 8,
        "deletions": 1,
        "date": "2018-10-01",
        "commitResults": [
          {
            "hash": "2698cbe56b44df7974de1c3374db8700296c6fad",
            "messageTitle": "fix compatibility with unreleased changes to stdlib tokenizer",
            "messageBody": "https://github.com/python/cpython/commit/c4ef4896eac86a6759901c8546e26de4695a1389\n(not yet in any released version, but it\u0027s been backported to all\nversions of Python in git, even 2.7!) changed the behaviour in the\nstdlib\u0027s tokenize module to emit a synthetic NEWLINE token even if the\nfile does not end with a newline. This was causing a spurious\n\"mixed-line-endings\" warning to be emitted, but luckily the synthetic\ntoken is easy to test for (the token text is \"\").\n",
            "insertions": 8,
            "deletions": 1
          }
        ]
      }
    ],
    "Vlad Temian": [
      {
        "insertions": 111,
        "deletions": 0,
        "date": "2014-11-04",
        "commitResults": [
          {
            "hash": "3abf9f4fc5e4e56b9358ee62cbcd3829f5f1edd3",
            "messageTitle": "Added json reporter",
            "messageBody": "",
            "insertions": 111,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 73,
        "deletions": 24,
        "date": "2014-11-22",
        "commitResults": [
          {
            "hash": "6d1f8c32840a2a066df5054b5bd9ed8c77d0daee",
            "messageTitle": "Added JSONReporter to test_self.py.RunTC.test_all",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          },
          {
            "hash": "c9e0bbe53e82fe7fe4c641275ec098dc3dee46e2",
            "messageTitle": "Fix pull request comments",
            "messageBody": "",
            "insertions": 4,
            "deletions": 2
          },
          {
            "hash": "734211b6a52e4d7bbd62d3bc9e4755a0bcd14eb2",
            "messageTitle": "Added check for redundant assert in unittest",
            "messageBody": "--HG--\nbranch : redundant-assert\n",
            "insertions": 21,
            "deletions": 6
          },
          {
            "hash": "f8c691c5d9468abf93e6c32fa1ab3efb5c3ba358",
            "messageTitle": "Test redundant unittest assert",
            "messageBody": "--HG--\nbranch : redundant-assert\n",
            "insertions": 13,
            "deletions": 0
          },
          {
            "hash": "1c97e6bb8442363393e0d0d42df444bdc6f4eec9",
            "messageTitle": "Fix code style and naming convention issues after review",
            "messageBody": "--HG--\nbranch : redundant-assert\n",
            "insertions": 22,
            "deletions": 11
          },
          {
            "hash": "1198872bef0b9de1b8d26d340fb18797317a05e8",
            "messageTitle": "Improve tests",
            "messageBody": "--HG--\nbranch : redundant-assert\n",
            "insertions": 10,
            "deletions": 4
          }
        ]
      }
    ],
    "Marco Forte": [
      {
        "insertions": 4,
        "deletions": 5,
        "date": "2014-08-14",
        "commitResults": [
          {
            "hash": "e222308733e4a3a13dac338415456176b1956ec4",
            "messageTitle": "Updated bullet points in Notes for Windows users to follow http://www.oxforddictionaries.com/words/bullet-points , I updated them since they are full sentences and so generally start with a capital. Tiny fix :)",
            "messageBody": "",
            "insertions": 3,
            "deletions": 4
          },
          {
            "hash": "5c0d015fe764db62cff7c9f9016541c8a617fedb",
            "messageTitle": "tiny typo fix",
            "messageBody": "--HG--\nbranch : marcoyolos/tiny-1408025599195\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "4ec91d5c12807e2a1326ef3af777b04ac9657969",
            "messageTitle": "Close branch marcoyolos/tiny-1408025599195",
            "messageBody": "--HG--",
            "insertions": 0,
            "deletions": 0
          }
        ]
      }
    ],
    "spaceone": [
      {
        "insertions": 16,
        "deletions": 2,
        "date": "2015-10-12",
        "commitResults": [
          {
            "hash": "0c173062046fe2cdfd6226d5a78e6c0330ba02bb",
            "messageTitle": "display properties as attributes in pyreverse class diagram",
            "messageBody": "",
            "insertions": 16,
            "deletions": 2
          }
        ]
      }
    ],
    "Kylian": [
      {
        "insertions": 14,
        "deletions": 9,
        "date": "2019-03-02",
        "commitResults": [
          {
            "hash": "694617dc510de87c96b4f8391a7ecc019b4dc39b",
            "messageTitle": "Added method arguments to the dot file writer",
            "messageBody": "",
            "insertions": 11,
            "deletions": 3
          },
          {
            "hash": "c892e04cf25670128064aae6fdf590183c698ed2",
            "messageTitle": "Changed quotes to pass the format check",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "946657c399d13ca30ed0489099c964b0163e98a4",
            "messageTitle": "Replaced args loop with comprehension",
            "messageBody": "",
            "insertions": 1,
            "deletions": 4
          }
        ]
      }
    ],
    "Reverb C": [
      {
        "insertions": 34,
        "deletions": 7,
        "date": "2018-03-01",
        "commitResults": [
          {
            "hash": "5cbb8c9aef29d6a091538642b2ee1466b7b4bb9d",
            "messageTitle": "Correctly strip the path prefix from the report paths  (#1883)",
            "messageBody": "Closes #1120\r\n",
            "insertions": 34,
            "deletions": 7
          }
        ]
      }
    ],
    "James M. Allen": [
      {
        "insertions": 3,
        "deletions": 0,
        "date": "2017-04-27",
        "commitResults": [
          {
            "hash": "2561f539d60a3563d6507e7a22e226fb10b58210",
            "messageTitle": "bad-whitespace checking around dotted type hint (#1430)",
            "messageBody": "",
            "insertions": 3,
            "deletions": 0
          }
        ]
      }
    ],
    "Wes Turner": [
      {
        "insertions": 205,
        "deletions": 4,
        "date": "2020-01-05",
        "commitResults": [
          {
            "hash": "06d52873188df2e27934da6bac3b67cea008b9a9",
            "messageTitle": "Adds a new check \u0027inconsistent-quotes\u0027.",
            "messageBody": "Quoting PEP-8:\n\nIn Python, single-quoted strings and double-quoted strings are the same. This PEP does not make a recommendation for this. Pick a rule and stick to it. When a string contains single or double quote characters, however, use the other one to avoid backslashes in the string. It improves readability.\n\nFor triple-quoted strings, always use double quote characters to be consistent with the docstring convention in PEP 257.\n\nFeatures:\n\nAccounts for strings where the delimiter is swapped so an internal quote doesn\u0027t need to be escaped\nOnly errors on those lines that represent the module\u0027s minority delimiter.\nIgnores longstrings (they could be docstrings, and checking those delimiters is someone else\u0027s responsibility)\n",
            "insertions": 204,
            "deletions": 3
          },
          {
            "hash": "3c09c846eeeddd21d5755f1220331d744863348e",
            "messageTitle": "Makes type hints Python 3.5 compatible.",
            "messageBody": "Changing the syntax of a variable\u0027s type hint from PEP-526 syntax to the\nsyntax introduced in PEP-484.\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "buck@yelp.com": [
      {
        "insertions": 60,
        "deletions": 26,
        "date": "2013-10-14",
        "commitResults": [
          {
            "hash": "d9607b714b3b87c587c75cb8e67a74570d1b6e48",
            "messageTitle": "fix dos line endings.",
            "messageBody": "--HG--\nbranch : w0401_package\n",
            "insertions": 9,
            "deletions": 9
          },
          {
            "hash": "2a5c3231e843bca01490ca2d97900410dd899e95",
            "messageTitle": "ignore vim temp files",
            "messageBody": "--HG--\nbranch : w0401_package\n",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "f2779159865c967786152976e0e7ecd8bca17e53",
            "messageTitle": "Improve cyclic import detection in the case of packages. Also, added support for input package in functional test.",
            "messageBody": "--HG--\nbranch : w0401_package\n",
            "insertions": 39,
            "deletions": 17
          },
          {
            "hash": "2082cbaf3a98258ba2d224710c4e4515f728b766",
            "messageTitle": "A regression test for namedtuple attributes.",
            "messageBody": "Currently broken under astroid on pyPI (1.0.0),\nbut works for hg tip atroid (9cf54b49a2d4).\n\n--HG--\nbranch : fix_namedtuple\n",
            "insertions": 11,
            "deletions": 0
          }
        ]
      }
    ],
    "Enji Cooper": [
      {
        "insertions": 19,
        "deletions": 8,
        "date": "2019-11-16",
        "commitResults": [
          {
            "hash": "1b15abbc5a995d57abe5f2a7016d6088355a2b91",
            "messageTitle": "Fix pylint reported issues",
            "messageBody": "* Sort imports per PEP8\n* Rename globally allocated symbol to avoid variable shadowing issue.\n* Remove squelching of W0704, since recent versions of pylint do not support\n  the warning, resulting in an error with `pylint -E`.\n* Add `pylint: disable\u003dunused-import` to seemingly unused imports which\n  actually affect build behavior.\n\nSigned-off-by: Enji Cooper \u003cyaneurabeya@gmail.com\u003e\n",
            "insertions": 7,
            "deletions": 7
          },
          {
            "hash": "ed5f9363a2e53fe98709a8a4ff4cfc1660c8dbda",
            "messageTitle": "Make installing pytest-runner contingent on running tests",
            "messageBody": "This monkeypatches several changes from [PyCQA/mccabe](https://github.com/PyCQA/mccabe/blob/master/setup.py)\nover to the pylint repo, since the pattern was equivalent between\nthe two projects.\n\nSigned-off-by: Enji Cooper \u003cyaneurabeya@gmail.com\u003e\n",
            "insertions": 5,
            "deletions": 1
          },
          {
            "hash": "b2b19972bbd6c678d0a98e4c90c22dda602525b9",
            "messageTitle": "Do book keeping related to changes on branch",
            "messageBody": "* Add a CONTRIBUTORS.txt entry for myself since I am a new contributor to\n  the project.\n* Add a ChangeLog entry that summarizes the proposed change.\n",
            "insertions": 7,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 70,
        "deletions": 68,
        "date": "2020-01-13",
        "commitResults": [
          {
            "hash": "b97ceb1f0ef338a1a997d2cde3bab5d81ea15da0",
            "messageTitle": "Run dos2unix on plugins.rst",
            "messageBody": "This will help ensure there are consistent (Unix) file endings.\n\nSigned-off-by: Enji Cooper \u003cyaneurabeya@gmail.com\u003e\n",
            "insertions": 65,
            "deletions": 65
          },
          {
            "hash": "8fa14a93ce351942a5c2a6a15306730c2b56baca",
            "messageTitle": "Refine plugin howto",
            "messageBody": "* Fix grammar in section describing `load_configuration`.\n* Make the code python 3 compatible by providing examples with\n  `print` as a function, as opposed to a built-in.\n\nSigned-off-by: Enji Cooper \u003cyaneurabeya@gmail.com\u003e\n",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "a4136c14b98e65e1fe0bab4ec28564700ef983ed",
            "messageTitle": "Add ChangeLog entry for changes made to `doc/how_tos/plugins.rst`",
            "messageBody": "Signed-off-by: Enji Cooper \u003cyaneurabeya@gmail.com\u003e\n",
            "insertions": 2,
            "deletions": 0
          }
        ]
      }
    ],
    "Randall Leeds": [
      {
        "insertions": 21,
        "deletions": 14,
        "date": "2018-07-10",
        "commitResults": [
          {
            "hash": "7e999d609c53e82be51bb91ae0d2163c63b904a0",
            "messageTitle": "Filter with should_analyze_file in parallel mode (#2264)",
            "messageBody": "Each ChildLinter receives a file path and instantiates a linter to check\r\nthat file. As such, all files are arguments to child linters in parallel\r\nmode. Therefore, the check for should_analyze_file must happen in the\r\nparent linter, where knowledge of the original arguments is available.\r\n\r\nExpand the custom should_analyze_file test to exercise parallel mode.\r\n\r\nClose #1885",
            "insertions": 21,
            "deletions": 14
          }
        ]
      }
    ],
    "Andres Perez Hortal": [
      {
        "insertions": 26,
        "deletions": 0,
        "date": "2019-07-29",
        "commitResults": [
          {
            "hash": "41c95225fe398dd3f62f48d777080dc8827b145c",
            "messageTitle": "Fix number of statements in by_module stats (#3023)",
            "messageBody": "Previously, self.stats[\u0027by_module\u0027][modname][\"statement\"] was\r\ninitialized to 0 and never updated once the module was processed.\r\n",
            "insertions": 26,
            "deletions": 0
          }
        ]
      }
    ],
    "Mariatta": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2016-07-21",
        "commitResults": [
          {
            "hash": "e53451d229b995e7ff9244dbe60741a8c98b697f",
            "messageTitle": "update instruction to install pylint",
            "messageBody": "should be pip install pylint",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2018-05-14",
        "commitResults": [
          {
            "hash": "1f275a7359deccbc725ae981be1eb76cc70cef82",
            "messageTitle": "Fix weird indentation in contributing guide (#2092)",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 4,
        "date": "2018-06-05",
        "commitResults": [
          {
            "hash": "3acb4a9feb1617e619cd01614c6fbb12ca8bafab",
            "messageTitle": "Update links in readme.rst to http://pylint.pycqa.org/ (#2169)",
            "messageBody": "I saw on Twitter that http://pylint.pycqa.org/ is the preferred url over pylint.org.",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "00e7309375aa599f1a898c165535b1acb26437ad",
            "messageTitle": "Link to pycqa meta",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Pablo Galindo": [
      {
        "insertions": 19,
        "deletions": 3,
        "date": "2018-12-11",
        "commitResults": [
          {
            "hash": "4c61d151d9eb20d5a667d0f03783f860da68ce07",
            "messageTitle": "Fix false positive Non-iterable value with async comprehensions (#2638)",
            "messageBody": "",
            "insertions": 19,
            "deletions": 3
          }
        ]
      }
    ],
    "Federico Bond": [
      {
        "insertions": 23,
        "deletions": 1,
        "date": "2019-02-14",
        "commitResults": [
          {
            "hash": "5b2354306e7e608ca02479edd99e5255d13bd0fa",
            "messageTitle": "Fix not-callable false positive on uninferable property (#2748)",
            "messageBody": "",
            "insertions": 23,
            "deletions": 1
          }
        ]
      }
    ],
    "Obscuron": [],
    "James Broadhead": [
      {
        "insertions": 5,
        "deletions": 3,
        "date": "2013-09-24",
        "commitResults": [
          {
            "hash": "9c395af8c3150c9f5113dae9084b6aca780fc42a",
            "messageTitle": "Update help docs for msg-format to include {msg_id}",
            "messageBody": "",
            "insertions": 5,
            "deletions": 3
          }
        ]
      }
    ],
    "Julien Jehannet": [
      {
        "insertions": 13,
        "deletions": 6,
        "date": "2010-05-25",
        "commitResults": [
          {
            "hash": "9d6a6bca17cdc003f37e2aff37716bea6bbcb5c9",
            "messageTitle": "pkginfo: minor changes to stick to new policy",
            "messageBody": "",
            "insertions": 5,
            "deletions": 4
          },
          {
            "hash": "6619664c618ed69d9f684c75d946057733e599de",
            "messageTitle": "debian: can now retrieve pristine tarball thanks to optional get-orig-source target",
            "messageBody": "",
            "insertions": 8,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2010-05-26",
        "commitResults": [
          {
            "hash": "292e249d966dbedeed05dda0d026d27d157af6b4",
            "messageTitle": "debian: permit symlink creation by get-orig-source target in debian/rules",
            "messageBody": "This behaviour is expected by dpkg-source utility.\nLgp will check Debian orig.tar.gz names only for now.\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 15,
        "deletions": 55,
        "date": "2010-11-16",
        "commitResults": [
          {
            "hash": "2d75ffe58cbd7549cbdc08c2165daf94aba22808",
            "messageTitle": "[debian] update debian rules with new debhelper API",
            "messageBody": "",
            "insertions": 13,
            "deletions": 53
          },
          {
            "hash": "fa2663382894d00a678d4626f3bb0239f47167f0",
            "messageTitle": "[debian] fix maintainer field",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 24,
        "deletions": 8,
        "date": "2010-11-19",
        "commitResults": [
          {
            "hash": "72a46e3435010fd0cb47f93b069b20ea111833a5",
            "messageTitle": "[pkginfo] make setup.py py3k compatible",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "22f3f75cc80d8bb5f6c488dd6484f907d66f6243",
            "messageTitle": "[debian] py3k: update debian rules with new debhelper API",
            "messageBody": "",
            "insertions": 21,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 5,
        "date": "2010-11-22",
        "commitResults": [
          {
            "hash": "c360bd808b378abca2f12e68d0c626784f5e2a0d",
            "messageTitle": "[debian] py3k: fix renaming of manpages",
            "messageBody": "",
            "insertions": 7,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 3,
        "date": "2010-12-01",
        "commitResults": [
          {
            "hash": "0fd3f731136fe45b8a68c001757f278de6bf2973",
            "messageTitle": "config: kill some text in environment section of the man page",
            "messageBody": "",
            "insertions": 2,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 30,
        "deletions": 7,
        "date": "2010-12-06",
        "commitResults": [
          {
            "hash": "f338645e491104f0200f3ab87b18ad1a779f965e",
            "messageTitle": "[debian] py3k: override build_py command with filtering some test files",
            "messageBody": "",
            "insertions": 30,
            "deletions": 7
          }
        ]
      }
    ],
    "Kári Tristan Helgason": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2017-03-11",
        "commitResults": [
          {
            "hash": "ff4f0847b844a46afdddc018f46e2cb3cd6c5dda",
            "messageTitle": "Replace getdefaultlocale with getpreferredencoding (#1362)",
            "messageBody": "This PR fixes an issue for users of macOS, where by default LC_CTYPE\r\nis set to an invalid locale. See https://bugs.python.org/issue18378\r\nfurther discussion on this issue.",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Alexandre Fayolle": [
      {
        "insertions": 13,
        "deletions": 4,
        "date": "2006-05-22",
        "commitResults": [
          {
            "hash": "3dc3c095a5f4c18a7304756258b89024b409ed3e",
            "messageTitle": "close pending debian bug before uploading",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "0ed54c6555eea58e7a58a68aa23c4f7817d19717",
            "messageTitle": "use same encoding as changelog for Maintainer field to avoid uploads being flagged as NMUs",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "72706c9a72a38c515645ea5ef88daac2a8a9fa97",
            "messageTitle": "packaging updates",
            "messageBody": "",
            "insertions": 10,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 20,
        "deletions": 20,
        "date": "2006-05-27",
        "commitResults": [
          {
            "hash": "ba8eebffff2bba4ac9ddc4763279f8ef5a3f5f2a",
            "messageTitle": "fix spelling mistake pointed out by skip@pobox.com",
            "messageBody": "",
            "insertions": 20,
            "deletions": 20
          }
        ]
      },
      {
        "insertions": 14,
        "deletions": 48,
        "date": "2006-06-15",
        "commitResults": [
          {
            "hash": "501bda0132e3912f5ecd2c2edbcfe47a2084239e",
            "messageTitle": "new python policy",
            "messageBody": "",
            "insertions": 13,
            "deletions": 48
          },
          {
            "hash": "ecb26562e24c94bff8229b46fe643a16c4efd5ab",
            "messageTitle": "forgotten file",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 6,
        "date": "2006-09-07",
        "commitResults": [
          {
            "hash": "75c17933c3f3ebbf558260aeee97f09ba3dff6a4",
            "messageTitle": "removed strange merge residue",
            "messageBody": "",
            "insertions": 0,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 9,
        "deletions": 2,
        "date": "2006-09-19",
        "commitResults": [
          {
            "hash": "7e5398918ab5ff2f7cb9c87d2c8bae1d94f0d23e",
            "messageTitle": "debian packaging update",
            "messageBody": "",
            "insertions": 9,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 58,
        "deletions": 23,
        "date": "2007-07-04",
        "commitResults": [
          {
            "hash": "94d92b267e8d0d03c5c06f0284542e6a093134df",
            "messageTitle": "updated for upload of 0.13.2-1 to debian",
            "messageBody": "",
            "insertions": 39,
            "deletions": 9
          },
          {
            "hash": "c6fe780ec72b53c1e531b1876dd6063c531795ea",
            "messageTitle": "actually upload 0.13.2-2",
            "messageBody": "",
            "insertions": 9,
            "deletions": 6
          },
          {
            "hash": "1d1b42f4cec9ca37c672402cc62510c7528d0424",
            "messageTitle": "dh_python is deprecated",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          },
          {
            "hash": "47fc73c56fdeec6e26453f854fc096e71d4262f9",
            "messageTitle": "disable keyboard shortcuts, don\u0027t use my- as a prefix for a function name",
            "messageBody": "",
            "insertions": 5,
            "deletions": 5
          },
          {
            "hash": "7b1b2744078e31932b75bdaf2c25af6313cbb825",
            "messageTitle": "print error message if tkinter is not available",
            "messageBody": "",
            "insertions": 5,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 3,
        "date": "2007-07-09",
        "commitResults": [
          {
            "hash": "f118d0146a5e5702e2b99e82383e3bb1fb6504ef",
            "messageTitle": "added NEWS.Debian",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "a6e654e961626cc2107beb22b4bb9ba3c4816317",
            "messageTitle": "include Dave Borowitz \u003cdborowitz@google.com\u003e\u0027s patch",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 28,
        "deletions": 2,
        "date": "2008-02-13",
        "commitResults": [
          {
            "hash": "3caa689a943d5ea287ba63b67e2726234eb69378",
            "messageTitle": "purge emacs compiled files in postrm",
            "messageBody": "",
            "insertions": 8,
            "deletions": 0
          },
          {
            "hash": "78284272bb632b1b3f28714c4de54c2fae12669e",
            "messageTitle": "prepare debian upload",
            "messageBody": "",
            "insertions": 20,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 0,
        "date": "2008-03-27",
        "commitResults": [
          {
            "hash": "66fad97fb8bcb76a5032ffc295f065907671a75e",
            "messageTitle": "prepare NMU ack",
            "messageBody": "",
            "insertions": 7,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 40,
        "deletions": 0,
        "date": "2008-04-14",
        "commitResults": [
          {
            "hash": "ac1c59f540333054cab8e9765a3d096936f107d6",
            "messageTitle": "added pylint/flymake related files",
            "messageBody": "",
            "insertions": 40,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 3,
        "date": "2008-05-13",
        "commitResults": [
          {
            "hash": "c183313d0315c00c7ec8d556eb5b11c36fb5ca4c",
            "messageTitle": "epylint integration",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "ebf3a9a05b3b5233f0da049d9f4f5f67f67d0353",
            "messageTitle": "use homepage header",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2008-06-05",
        "commitResults": [
          {
            "hash": "a5b53a2b76b6b68e5be5e0a5103c388a27bd3334",
            "messageTitle": "fix typo",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 0,
        "date": "2008-06-24",
        "commitResults": [
          {
            "hash": "ccd08a40bf68f8ab800a2c7506ae8b03072b5143",
            "messageTitle": "added epylint to MANIFEST.in",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2008-09-01",
        "commitResults": [
          {
            "hash": "9ea82c130bb6ada49b573d33af51b9deb8d5ac5f",
            "messageTitle": "fixed broken test",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "559c2c0df87acf21103b9d489b648dc6e8359a3d",
            "messageTitle": "remove duplicate assertion in test",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2008-11-19",
        "commitResults": [
          {
            "hash": "ba41f1b94198a4277c832df30c3d4f7a8977b6c9",
            "messageTitle": "do not keep Info messages (triggered e.g. by disable-msg directives in source code)",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 81,
        "deletions": 41,
        "date": "2009-02-03",
        "commitResults": [
          {
            "hash": "c789f356ea0f4d42cf9f8740770f59d8307d0c17",
            "messageTitle": "Sandro Tosi\u0027s packaging enhancements",
            "messageBody": "",
            "insertions": 77,
            "deletions": 41
          },
          {
            "hash": "ec04b91cf9914f1efc1aa6ef1481cf20803aaf2b",
            "messageTitle": "added README.source",
            "messageBody": "",
            "insertions": 4,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 39,
        "deletions": 22,
        "date": "2009-07-02",
        "commitResults": [
          {
            "hash": "0fab0326c6d51395fff46e03b02d3a38343b82a0",
            "messageTitle": "backported Debian packaging stuff from Debian",
            "messageBody": "",
            "insertions": 39,
            "deletions": 22
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 0,
        "date": "2009-07-21",
        "commitResults": [
          {
            "hash": "c2d2f50eb10588c84b4923415ce820a7b55e6ad5",
            "messageTitle": "added patch by Okko.Willeboordse at imtech.nl fixing the lack of error status on Windows",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 316,
        "deletions": 0,
        "date": "2009-08-27",
        "commitResults": [
          {
            "hash": "d877066a07a013e36b089c25af3f9b41f838271d",
            "messageTitle": "tries to get to compile on ubuntu",
            "messageBody": "",
            "insertions": 316,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2010-01-27",
        "commitResults": [
          {
            "hash": "01fb20871467e4edd517a65ae4434538c3f4a980",
            "messageTitle": "update dependency information about logilab-common for debian and setuptools",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2010-06-03",
        "commitResults": [
          {
            "hash": "eb71f20cb36f41ed3b93b692c2b8c7b266d0ac4f",
            "messageTitle": "revert wrong change in bd55301fc4b1",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 67,
        "deletions": 10,
        "date": "2012-10-03",
        "commitResults": [
          {
            "hash": "ad31c0cc9dcd4dc190da7c397819cd4c009d9b57",
            "messageTitle": "add support for --disable\u003dall option (closes: #105327)",
            "messageBody": "updated the documentation accordingly\ndeprecate \u0027disable-all\u0027 as an inline directive in favor of \u0027skip-file\u0027\n",
            "insertions": 67,
            "deletions": 10
          }
        ]
      }
    ],
    "Fabio Natali": [
      {
        "insertions": 15,
        "deletions": 2,
        "date": "2015-09-21",
        "commitResults": [
          {
            "hash": "0f8990daa102a1fb9850c46df99f4a2217eec523",
            "messageTitle": "Fix issue #314: bad-whitespace looks weird when the line does not end with newline",
            "messageBody": "",
            "insertions": 15,
            "deletions": 2
          }
        ]
      }
    ],
    "Noam Yorav-Raphael": [
      {
        "insertions": 8,
        "deletions": 8,
        "date": "2015-06-29",
        "commitResults": [
          {
            "hash": "7a718309595295a740a93bd59dc6000eb57ea891",
            "messageTitle": "Rename F0401 (import-error) to E0401 as it is not a fatal pylint error",
            "messageBody": "--HG--\nbranch : rename-F0401-to-E0401\n",
            "insertions": 8,
            "deletions": 8
          }
        ]
      }
    ],
    "Rene Zhang": [
      {
        "insertions": 31,
        "deletions": 4,
        "date": "2015-08-20",
        "commitResults": [
          {
            "hash": "3b98cd7ae29812ab1d9210824be1e2ca5c4a5b3f",
            "messageTitle": "Fix inference error on string format",
            "messageBody": "",
            "insertions": 6,
            "deletions": 0
          },
          {
            "hash": "3d429a00f8c9168efd3cf8b67ee4394ca64a8250",
            "messageTitle": "Fix crash when handling generator inside with context",
            "messageBody": "",
            "insertions": 19,
            "deletions": 3
          },
          {
            "hash": "3db80ba79af11ea6d3677ad3b79270d033ca86fc",
            "messageTitle": "Fix index out of range when handling raise()",
            "messageBody": "",
            "insertions": 6,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 2,
        "date": "2015-08-21",
        "commitResults": [
          {
            "hash": "b3559ea5dd0d87bd1531373242ee660fa6683842",
            "messageTitle": "More idiomatic python",
            "messageBody": "",
            "insertions": 1,
            "deletions": 2
          }
        ]
      }
    ],
    "Bryce Guinta": [
      {
        "insertions": 15,
        "deletions": 1,
        "date": "2017-10-12",
        "commitResults": [
          {
            "hash": "067ac29b42e2d283c60456a863631a531c6e241b",
            "messageTitle": "Fix rst warning about missing indent after comment",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "d7761264e6c409067d9e73d067c51e3c40d77d13",
            "messageTitle": "Explain what \u0027#@\u0027 does since the astroid docs do not have any info about astroid.extract_node",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          },
          {
            "hash": "af79045faaac93aa9f3dda29ba8e54b7bc74ee1f",
            "messageTitle": "Explain how to make a plugin findable by pylint",
            "messageBody": "",
            "insertions": 8,
            "deletions": 0
          },
          {
            "hash": "ded9adef95487c572f4f6aaf1481aa5fd70bee23",
            "messageTitle": "Fix documentation reference to write_a_checker",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "81638cd3deccb7689502446a8ad38bc52152aca8",
            "messageTitle": "Add documentation link to location of transform plugins",
            "messageBody": "",
            "insertions": 3,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 0,
        "date": "2017-11-02",
        "commitResults": [
          {
            "hash": "6df6ff8a23e79f24968a781f87c41a893f5929d8",
            "messageTitle": "Fix test from failing when user has ~/.pylintrc (#1720)",
            "messageBody": "",
            "insertions": 4,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 53,
        "deletions": 22,
        "date": "2017-11-05",
        "commitResults": [
          {
            "hash": "12c954eef9ff3764fb3c281ba0ffd7ff85c7f3ca",
            "messageTitle": "Extend trailing-comma-tuple check to more complex assignments (#1721)",
            "messageBody": "* Extend trailing-comma-tuple check to more complex assignments\r\n\r\nThe previous implementation was too conservative with looking for\r\nprevious tokens associated with assignment: It looked only\r\nat the immediately previous token, causing \u0027a \u003d (5),\u0027 to not be\r\ncaught.\r\n\r\nNow The current implementation backtracks to the start of the line\r\nto find an assignment substring.\r\n\r\nFixes issue #1713",
            "insertions": 53,
            "deletions": 22
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2017-12-27",
        "commitResults": [
          {
            "hash": "00f77bff3743d92c01aa1335b22297e06f788575",
            "messageTitle": "Ignore import-error in deprecated_module_py36.py test (#1796)",
            "messageBody": "tkinter can be unavailable in python distributions compiled without it.",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 16,
        "deletions": 8,
        "date": "2018-01-03",
        "commitResults": [
          {
            "hash": "9a40ee4768a64ba44e5ef0b155fb6d74f9241650",
            "messageTitle": "Add ability to specify message column offset independent of node for messages that rely on tokens",
            "messageBody": "",
            "insertions": 10,
            "deletions": 7
          },
          {
            "hash": "99ecc73f64fff9ef32345223148b8d5e50940411",
            "messageTitle": "Specify col_offset for bad-whitespace messages",
            "messageBody": "Previously the listed column was always 0\n",
            "insertions": 6,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 23,
        "deletions": 2,
        "date": "2018-01-18",
        "commitResults": [
          {
            "hash": "b76c96de128e48a72f018e9a62633f590f886a31",
            "messageTitle": "Fix stop-iteration-return false positive",
            "messageBody": "Fix stop-iteration-return false positive when next builtin has a default\nvalue in a generator.\n",
            "insertions": 23,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 1,
        "date": "2018-01-23",
        "commitResults": [
          {
            "hash": "0e6c32711423ac3e3cc19d4c9975d6c2c07e63f3",
            "messageTitle": "Fix bad-whitespace false-positive in default function arguments which have annotations",
            "messageBody": "",
            "insertions": 12,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 1,
        "date": "2018-02-10",
        "commitResults": [
          {
            "hash": "5e79774c5028eb492e59bed92d25088b081cf2db",
            "messageTitle": "Ignore proper new no-member error as a result of astroid changes",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 15,
        "deletions": 2,
        "date": "2018-02-14",
        "commitResults": [
          {
            "hash": "9dd34aaca46287d7eb680e3c87e14f7b737206b1",
            "messageTitle": "Fix no-context-manager test breakage in due to astroid changes",
            "messageBody": "Require no-context-manager to infer paths before walking the tree\n\nFixes #1874\n",
            "insertions": 15,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 31,
        "deletions": 2,
        "date": "2018-03-02",
        "commitResults": [
          {
            "hash": "2f77413697e5c85ee089b3556ce57411380823da",
            "messageTitle": "Fix false positive undefined-variable for lambda arguments in classes",
            "messageBody": "Close #1824\n",
            "insertions": 31,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 47,
        "deletions": 1,
        "date": "2018-03-16",
        "commitResults": [
          {
            "hash": "12e480843286108d7018f8025ce847288d70cdc9",
            "messageTitle": "Suppress false-positive not-callable messages from class descriptors (#1911)",
            "messageBody": "This is a holdover until astroid can be fixed. Astroid needs to\r\nunderstand descriptors or at least raise Uninferable instead\r\nof allowing the descriptor instance through\r\n\r\nClose #1699",
            "insertions": 47,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 16,
        "deletions": 1,
        "date": "2018-07-02",
        "commitResults": [
          {
            "hash": "9c1812b712481bd3cf7340dbd4781b8f7d0e1d3d",
            "messageTitle": "Acknowledge that ellipses are allowed in typing annotations (#2236)",
            "messageBody": "Prevents false-positive bad-whitespace message",
            "insertions": 16,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 30,
        "deletions": 2,
        "date": "2018-07-03",
        "commitResults": [
          {
            "hash": "24a3758a9804b386c70e12646fcfc16c5cd18705",
            "messageTitle": "Expand ignored-argument-names include starred arguments and keyword arguments (#2237)",
            "messageBody": "",
            "insertions": 30,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 11,
        "deletions": 0,
        "date": "2018-07-04",
        "commitResults": [
          {
            "hash": "bceb1d6d6590ec02ebcd51f3203784a94a07482e",
            "messageTitle": "Add note about prerelease in readme and github template (#2248)",
            "messageBody": "* Add note about preview release in github template\r\n\r\n* Add note about preview release supporting 3.7 in readme\r\n",
            "insertions": 11,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 12,
        "date": "2018-07-06",
        "commitResults": [
          {
            "hash": "fd0cee483a7485a37ba9c84ef1f432766f0c7b02",
            "messageTitle": "Fix test errors from fixing astroid.as_string()",
            "messageBody": "",
            "insertions": 12,
            "deletions": 12
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 5,
        "date": "2018-07-11",
        "commitResults": [
          {
            "hash": "916324b45792014bda01ee3e27f6e1a0aaaef58e",
            "messageTitle": "Refactor duplicate code in is_defined_before",
            "messageBody": "isinstance can take multiple tuples\n",
            "insertions": 1,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 35,
        "deletions": 8,
        "date": "2018-07-12",
        "commitResults": [
          {
            "hash": "db01112f7e4beadf7cd99c5f9237d580309f0494",
            "messageTitle": "Fix false-postive undefined-variable in nested lambda. (#2274)",
            "messageBody": "Remove unnecessary break in checker utils for lambdas causing parent lambdas to be ignored.\r\n\r\nClose #760",
            "insertions": 19,
            "deletions": 1
          },
          {
            "hash": "5c03f0e348f235dee0754d820c5c1ae6b078fc32",
            "messageTitle": "Fix false positive unused-variable in lambda default arguments (#2276)",
            "messageBody": "The NameConsumer to_consume frame needed to be backed out by one so that\r\nfor lambda bound default argument variables (closure) could consume the\r\nname in a higher scope (just like function default arguments)\r\n\r\nClose #1921\r\nClose #1552\r\nClose #1099\r\nClose #210",
            "insertions": 16,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 2,
        "date": "2018-07-13",
        "commitResults": [
          {
            "hash": "e502a7f5f4a4fba7bdaf463bdddb5d588ca0e8cf",
            "messageTitle": "Do not try to lower checker name if not set",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "ebf7011701bd5d3d64cd453692b90f25aad5ceb2",
            "messageTitle": "Disable false-positive test message from changes in astroid",
            "messageBody": "",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "e76e9f77f2762e344e8aeb2419ee91b884c99c52",
            "messageTitle": "Fix lint error",
            "messageBody": "astroid incorrectly inferring NoneType because of name reassignment\n",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 36,
        "deletions": 10,
        "date": "2018-07-15",
        "commitResults": [
          {
            "hash": "5b316f936edc2e60a85bec82a2d3a3abab4c14b0",
            "messageTitle": "Rename pos to position to keep naming consistent",
            "messageBody": "",
            "insertions": 6,
            "deletions": 6
          },
          {
            "hash": "25ffb2f3dee11854ec7a50203c62e230df085001",
            "messageTitle": "Add docstring to _hanging_indent_after_bracket",
            "messageBody": "",
            "insertions": 10,
            "deletions": 1
          },
          {
            "hash": "49e7a2ad9cf3636968a4612ad08bdc4126fcba73",
            "messageTitle": "Fix incorrect hanging indent detection for with statements",
            "messageBody": "Add with statement to recognized token keywords for format checker.\nAlso recognize with statement as the start of a block\nto allow deeper indentation for hanging continuation\n\nClose #461\n",
            "insertions": 20,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 19,
        "deletions": 1,
        "date": "2018-07-19",
        "commitResults": [
          {
            "hash": "5e5a8d6500acf78a1249caa142b7cd98069efa96",
            "messageTitle": "Fix format checker inconsistency for start of first line (#2312)",
            "messageBody": "The format checker was ignoring block opener tokens on the first line\r\nbecause the encoding token is the always the first value of the first line.\r\n\r\nClose #2281",
            "insertions": 19,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 38,
        "deletions": 1,
        "date": "2018-07-24",
        "commitResults": [
          {
            "hash": "9f0ef30b13500ecba6f1b9f5c71981df976e7e6e",
            "messageTitle": "Fix not being able to disable certain messages on the last line (#2342)",
            "messageBody": "Allow messages to be disabled that occur in ``file_state._msgs_state`` after the end\r\nof the ast (but not of the tokens)\r\n\r\nClose #2278",
            "insertions": 38,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 77,
        "deletions": 1,
        "date": "2018-07-31",
        "commitResults": [
          {
            "hash": "edceee93babcc8479889b1b28da44922b3e2b99b",
            "messageTitle": "Suppress undefined-variable for self referential class in lamdbas (#2362)",
            "messageBody": "This works because execution of the lambda code is\r\ntypically deferred until the class definition is built.\r\n\r\nAlso avoid suppression for default arguments of lambda\u0027s\r\nif the class scope is the immediate parent scope\r\nof the lambda.\r\n\r\nClose #704",
            "insertions": 77,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 40,
        "deletions": 28,
        "date": "2018-08-01",
        "commitResults": [
          {
            "hash": "31f7a7dfe0f3c6cd759b4cdfe3dbd666dea84e67",
            "messageTitle": "Fix rst Changelog errors",
            "messageBody": "",
            "insertions": 8,
            "deletions": 8
          },
          {
            "hash": "accf8c8313e2fcb08841e4c00c9c6ad99a49c341",
            "messageTitle": "Add 2.1 whatsnew to toctree",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          },
          {
            "hash": "8bb11f33f3a17fb518f129cd80a11df35aeaaffd",
            "messageTitle": "Fix rst italics of generated pylint help",
            "messageBody": "rst expects no space before the \u0027*\u0027 end marker\n",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "d1dadeaec8f81e6326fe70cc631ca47f4aae78c6",
            "messageTitle": "Prefix rst autolabels with filename to prevent collisions from include",
            "messageBody": "Fix cross reference labels\n",
            "insertions": 8,
            "deletions": 0
          },
          {
            "hash": "d03d60aabdee9075067caefd44c776ebce0d5c4b",
            "messageTitle": "Fix rst section header formatting",
            "messageBody": "",
            "insertions": 3,
            "deletions": 2
          },
          {
            "hash": "14209499957022cbb9f417074f25da582c271c38",
            "messageTitle": "Escape quote to fix rst sourcecode directive highlight for bash",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          },
          {
            "hash": "13330bccd97cac5905ff414805b69b279920a62e",
            "messageTitle": "Fix rst python sourcecode directive lexing error",
            "messageBody": "",
            "insertions": 4,
            "deletions": 4
          },
          {
            "hash": "4ae1ef66cf62781fd3c1ce7b4cc35fb1e1cd393e",
            "messageTitle": "Escape the star in \u0027*args\u0027 for rst",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "913d176a3e38582bff7b2638f0349ee6d52703ee",
            "messageTitle": "Remove hanging rst substitution",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "d0f13426deafc8c5344a8af05469cab0e0d17d91",
            "messageTitle": "Make generated rst section names unique",
            "messageBody": "This prevents autolabeling issues where these sections can\u0027t be linked to properly\n",
            "insertions": 8,
            "deletions": 7
          },
          {
            "hash": "cbe0870a5c153d1e666383d59bc6578cab068e8d",
            "messageTitle": "Fix error in changelog",
            "messageBody": "aterisks in text need to be escaped for the rst format\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 1,
        "date": "2018-08-02",
        "commitResults": [
          {
            "hash": "8577c54e07d699d697ca19b6f11005db68b9cda7",
            "messageTitle": "Remove uneeded dependency in tox",
            "messageBody": "We decided to use -W on sphinx-build instead of the rst linter.\n",
            "insertions": 0,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 30,
        "deletions": 0,
        "date": "2018-08-08",
        "commitResults": [
          {
            "hash": "be83fa0b797795d2598c41561b49c8a5916455e2",
            "messageTitle": "Fix latest release record in Changelog",
            "messageBody": "",
            "insertions": 6,
            "deletions": 0
          },
          {
            "hash": "aad50d9b6ff72f6f1c27e76ffd1c6c5d8ac5462d",
            "messageTitle": "Stop protected-access exception for missing class attributes",
            "messageBody": "Skip Uninferable values from getattr\n",
            "insertions": 24,
            "deletions": 0
          }
        ]
      }
    ],
    "Peter Hammond": [
      {
        "insertions": 108,
        "deletions": 2,
        "date": "2012-09-28",
        "commitResults": [
          {
            "hash": "4e6fa0d70949012614ea7adcf9a3ca0d43006895",
            "messageTitle": "integrate patch from Peter Hammond to check protocol completness and avoid false R0903. Closes #104420",
            "messageBody": "",
            "insertions": 108,
            "deletions": 2
          }
        ]
      }
    ],
    "kapsh": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2018-01-18",
        "commitResults": [
          {
            "hash": "709b313bf7c731fb1afe9136a1ae6af6b3973e81",
            "messageTitle": "Fixed typo in help message.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "jpkotta@shannon": [
      {
        "insertions": 144,
        "deletions": 57,
        "date": "2012-11-12",
        "commitResults": [
          {
            "hash": "3c42bad4a87ae4445732c2e0f2c23b52c4399bbf",
            "messageTitle": "Replace pylint.el with Ian Eure\u0027s version. Closes #20693",
            "messageBody": "Changes:\n\nNo longer unconditionally adds a function to python-mode-hook.\nSplit the hook functions into a key binding one and a menu one.\nAdded to the Tools customization group.\npylint-options is now a list of strings.  This makes it easier to add and remove individual options.\nTurn off reports by default.\nAllow for a nonstandard pylint executable name with pylint-command.\nAllow for unconditionally saving files before running (default is ask).\nPrettier colors in the output buffer.\nMake it work well with tramp.\nMake it compatible with package.el.\n",
            "insertions": 144,
            "deletions": 57
          }
        ]
      }
    ],
    "John Paraskevopoulos": [
      {
        "insertions": 104,
        "deletions": 34,
        "date": "2017-03-11",
        "commitResults": [
          {
            "hash": "541aca92212f8e1010b56af26b9761cb30b69165",
            "messageTitle": "Split missing+differing docstring param checks (#1344)",
            "messageBody": "Add 2 different error codes for different params defined\r\nSplit param name checking in two functions, one for missing checks\r\nand another for different names checks\r\nCheck for missing params and then check for differing params\r\nMinor fix in type of found_argument_names [list --\u003e set]\r\nFixes #1342\r\n",
            "insertions": 104,
            "deletions": 34
          }
        ]
      }
    ],
    "thinwybk": [
      {
        "insertions": 23,
        "deletions": 0,
        "date": "2016-07-03",
        "commitResults": [
          {
            "hash": "5066d86002e718965340be0979f4e98f181dba26",
            "messageTitle": "Add documentation of exit codes (#974)",
            "messageBody": "",
            "insertions": 23,
            "deletions": 0
          }
        ]
      }
    ],
    "Daniel Miller": [
      {
        "insertions": 82,
        "deletions": 14,
        "date": "2017-11-11",
        "commitResults": [
          {
            "hash": "d2841e1d2fc9aae2cfcc74199f86dc4aa79beea3",
            "messageTitle": "Do not warn no-absolute-import multiple times per file (#1725)",
            "messageBody": "",
            "insertions": 17,
            "deletions": 2
          },
          {
            "hash": "996b3fb51597379ad6170056ce445f9f52da52e6",
            "messageTitle": "Respect disable\u003d... in config with --py3k (#1726)",
            "messageBody": "",
            "insertions": 65,
            "deletions": 12
          }
        ]
      }
    ],
    "emile@crater.logilab.fr": [
      {
        "insertions": 27,
        "deletions": 20,
        "date": "2008-07-22",
        "commitResults": [
          {
            "hash": "68ac5341cdf2ac0805e75481b9d5fa6af28ea2a8",
            "messageTitle": "correct regular expressions for attribute matching ; __reduce_ex__ and __34__ are now captured as special",
            "messageBody": "",
            "insertions": 27,
            "deletions": 20
          }
        ]
      },
      {
        "insertions": 57,
        "deletions": 44,
        "date": "2008-07-23",
        "commitResults": [
          {
            "hash": "e3e83e1cf0a79af26514013f5b4085eda023dad5",
            "messageTitle": "test and fix get_visibility regexp",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "5429df7ed2139b9049236764bf3bfaae2e4622b3",
            "messageTitle": "remove undesired node.locals in visit_module and visit_class inserted by the astng builder",
            "messageBody": "",
            "insertions": 33,
            "deletions": 22
          },
          {
            "hash": "c90428fc420b4427043c1e597a7e0399ace1c49a",
            "messageTitle": "remove a print",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          },
          {
            "hash": "46189fe44a6df45caa350a621c23b5f8d6f572ce",
            "messageTitle": "modified test files for Interface handling and NotImplementedError",
            "messageBody": "",
            "insertions": 9,
            "deletions": 12
          },
          {
            "hash": "fce7ea216e299be65f0b2583885429f0fe2fc17c",
            "messageTitle": "show help message if no arguments",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "1e0d7d6eeeb826007c62680d69e3512ce2a2b7c0",
            "messageTitle": "add try ... / except KeyError for correct unittest_vcg.py",
            "messageBody": "",
            "insertions": 13,
            "deletions": 7
          }
        ]
      }
    ],
    "Anthony VEREZ": [
      {
        "insertions": 7,
        "deletions": 6,
        "date": "2012-09-19",
        "commitResults": [
          {
            "hash": "59c4fa85078ce0d6c46c0cb417e5947f72459e39",
            "messageTitle": "fix R0801 similarities bug. Closes #63424",
            "messageBody": "",
            "insertions": 7,
            "deletions": 6
          }
        ]
      }
    ],
    "Michael Scott Cuthbert": [
      {
        "insertions": 6,
        "deletions": 2,
        "date": "2019-03-19",
        "commitResults": [
          {
            "hash": "383c2a9dd4409a3bfeeb206722bb78045e976143",
            "messageTitle": "Add reference to R0916 to max-bool-expr",
            "messageBody": "",
            "insertions": 6,
            "deletions": 2
          }
        ]
      }
    ],
    "Vincent": [
      {
        "insertions": 38,
        "deletions": 5,
        "date": "2009-11-25",
        "commitResults": [
          {
            "hash": "8d2aa9527d094e80bb97dff57c7940e498a3e6dd",
            "messageTitle": "fix #9791 https://www.logilab.net/elo/ticket/9791",
            "messageBody": "In lint.py:\n\n* rename \"--list-msgs\" option into \"--full-documentation\",\n* add a specific \"--list-msgs\" option ant its callback,\n\nand in MessagesHandlerMixIn in utils.py:\n\n* rename list_messages() method into print_full_documentation(),\n* add list_checkers_messages() method,\n* add list_messages() method,\n*add list_sorted_messages().\n",
            "insertions": 38,
            "deletions": 5
          }
        ]
      }
    ],
    "Jakob Normark": [
      {
        "insertions": 8,
        "deletions": 8,
        "date": "2014-11-06",
        "commitResults": [
          {
            "hash": "962ade12d29eb714b344613a65b086029a8152e9",
            "messageTitle": "Fixed \"standart\" typos",
            "messageBody": "",
            "insertions": 8,
            "deletions": 8
          }
        ]
      }
    ],
    "Anthony Truchet": [
      {
        "insertions": 49,
        "deletions": 22,
        "date": "2013-06-18",
        "commitResults": [
          {
            "hash": "9de5d9f8f5a70382a054d959c776a7ad3b1f1671",
            "messageTitle": "Minor typo, stylistic improvements and comments.",
            "messageBody": "",
            "insertions": 11,
            "deletions": 7
          },
          {
            "hash": "6fcc8189f053eb837b9d371d1c180bf3abf442e5",
            "messageTitle": "Add @check_messages(...) annotations to help not to spend time on unneeded checks.",
            "messageBody": "We only add such annotations is reasonably simple cases.\nSome visit methods are quite involved and build a checker\u0027s state ;\nsuch methods are skipped in the first phase.\n",
            "insertions": 38,
            "deletions": 15
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2013-06-19",
        "commitResults": [
          {
            "hash": "28033aa02aea268be014fe4057a2f8dee5107fff",
            "messageTitle": "Fix a breaking typo appeared during the merge.",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 192,
        "deletions": 104,
        "date": "2013-07-30",
        "commitResults": [
          {
            "hash": "188e7dde3aa7b7422d2328d789572c0b62dee711",
            "messageTitle": "Templating mecanism for text reporters.",
            "messageBody": "This changeset introduces a reporters.Message class to represent\nmessages with their attached data. Those messages object can then\nbe formatted accordingto some template.\n\nA template can be specified on the command line through the\nmsg-template option.\n\nThis deprecates parseable and msvc output format, and kill --symbols\nand --include-ids option.\n",
            "insertions": 192,
            "deletions": 104
          }
        ]
      },
      {
        "insertions": 28,
        "deletions": 1,
        "date": "2014-04-11",
        "commitResults": [
          {
            "hash": "79f5fb18bbb36c5f266b36f62bbcb7b7cdc35c69",
            "messageTitle": "[variable checker] Fix unused import false positive with augment assignment. Closes #78",
            "messageBody": "",
            "insertions": 28,
            "deletions": 1
          }
        ]
      }
    ],
    "Nick Drozd": [
      {
        "insertions": 75,
        "deletions": 75,
        "date": "2018-01-04",
        "commitResults": [
          {
            "hash": "58fe81cf71e43542f2205dc2f0564358bb4ab971",
            "messageTitle": "Get rid of old pylintrc disable redefined-variable-type",
            "messageBody": "",
            "insertions": 0,
            "deletions": 2
          },
          {
            "hash": "170fa13e22039797faf51957d3e2c5d07a3ed0aa",
            "messageTitle": "Organize disabled pylint messages",
            "messageBody": "Design messages are organized by length, others alphabetically\n",
            "insertions": 20,
            "deletions": 7
          },
          {
            "hash": "e45dcf33bfe0445e0fb7dd80539d52f4aa7c3f62",
            "messageTitle": "Set max-returns to 11",
            "messageBody": "Previously, the greatest number of return statements in a function was\n15 (checkers.typecheck). 11 is the lowest I could get it without\naggressive rewriting.\n",
            "insertions": 24,
            "deletions": 33
          },
          {
            "hash": "5fdf5e45c5bb9965449200566749c2bd542a9896",
            "messageTitle": "Set max-public-methods to 25",
            "messageBody": "The greatest number of public methods at present is\n24 (checkers.variables). 25 seems likes a reasonable cap.\n",
            "insertions": 1,
            "deletions": 2
          },
          {
            "hash": "aee59b9d8577f2eb60d92accb6b5516eac993e38",
            "messageTitle": "Set max-module-lines to 2000",
            "messageBody": "The greatest number of lines in a module at present is\n1829 (checkers.base). 2000 seems like a reasonable cap.\n",
            "insertions": 1,
            "deletions": 2
          },
          {
            "hash": "b8a617b37d2994703c107ed17a513d39c7b6adc8",
            "messageTitle": "Enable broad-except check",
            "messageBody": "This was globally disabled, which is not a great idea, and also\nlocally disabled in a few places. I enabled it globally and\nconsolidated the local disables.\n",
            "insertions": 5,
            "deletions": 3
          },
          {
            "hash": "3ff7a95da3cdbb6d6931cbd2d67feeb71362288f",
            "messageTitle": "Set max-branches to 26",
            "messageBody": "checkers.typecheck has a function with 43 branches, which is comically\nmany. The next-branchiest has 26 (with no obvious way to reduce that\nnumber), so that\u0027s the max.\n",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "5f22e3e0444c4c7d8db3fbaa46f289a4851f8222",
            "messageTitle": "Set max-locals to 25",
            "messageBody": "",
            "insertions": 1,
            "deletions": 2
          },
          {
            "hash": "c6f92c56a46ba3fd331be7011e729b927f06e92f",
            "messageTitle": "Set max-attributes to 11",
            "messageBody": "The greatest number of instance attributes is 21. The next greatest is\n11, which is more reasonable.\n",
            "insertions": 2,
            "deletions": 2
          },
          {
            "hash": "9c367535c89538e19e8ea08d9c2ecba5e658d997",
            "messageTitle": "Enable import-error",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "4210ef9b8c5d9e7b33ff0542683f18b8031193fa",
            "messageTitle": "Enable redefined-builtin",
            "messageBody": "",
            "insertions": 13,
            "deletions": 14
          },
          {
            "hash": "64731ad5ed66841dc43cfe4d9244b0d9109ab3c9",
            "messageTitle": "Set max-args to 10",
            "messageBody": "Although as Alan Perlis said, \"if you have a procedure with ten\nparameters, you probably missed some.\"\n\nhttp://cpsc.yale.edu/epigrams-programming\n",
            "insertions": 1,
            "deletions": 2
          },
          {
            "hash": "3f738bc9d76d6a18ea7af6e5dd91db94426f5bb2",
            "messageTitle": "Set max-statements to 100",
            "messageBody": "Currently the greatest number of statements is\n83 (checkers.typecheck). 100 seems like a reasonable cap.\n",
            "insertions": 1,
            "deletions": 2
          },
          {
            "hash": "975e08148c0faa79958b459303c47be1a2e1500a",
            "messageTitle": "Enable no-member",
            "messageBody": "",
            "insertions": 3,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 3,
        "date": "2018-01-18",
        "commitResults": [
          {
            "hash": "998b2ff4207ffe2be0ddd3e8b75d7d988b6a7eda",
            "messageTitle": "Don\u0027t print stacktrace on keyboard interrupt",
            "messageBody": "",
            "insertions": 5,
            "deletions": 2
          },
          {
            "hash": "97382e5ce0d006109a382c2952b98812c260ed35",
            "messageTitle": "Get rid of trailing `, ` in --version output",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 4,
        "deletions": 1,
        "date": "2018-06-18",
        "commitResults": [
          {
            "hash": "8b3b3d9d186a702bfcf8914fe447ca4e1e55e4ab",
            "messageTitle": "Update .gitignore",
            "messageBody": "",
            "insertions": 3,
            "deletions": 0
          },
          {
            "hash": "fb0be2dfc2990995b61e21516bba92096c5bac43",
            "messageTitle": "Cut astroid.Repr",
            "messageBody": "This type of node doesn\u0027t exist in Python 3.\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 38,
        "deletions": 22,
        "date": "2018-07-13",
        "commitResults": [
          {
            "hash": "f422696d39d904f1b80b7c0f87c875b8b3732c9a",
            "messageTitle": "Return early to avoid some nodes_of_class calls",
            "messageBody": "",
            "insertions": 7,
            "deletions": 0
          },
          {
            "hash": "b4a3b03cb05cb7fdbfd392275caf28fbe9ccc187",
            "messageTitle": "Avoid ancestors call in ABC check if possible",
            "messageBody": "",
            "insertions": 10,
            "deletions": 3
          },
          {
            "hash": "5f9b46c0d45aa1fef67283a96062ff5de25a1263",
            "messageTitle": "Return early when possible in typecheck call visitor",
            "messageBody": "This avoids doing unnecessary work in many cases.\n",
            "insertions": 21,
            "deletions": 19
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 4,
        "date": "2018-07-27",
        "commitResults": [
          {
            "hash": "436508032373c9c6a876a042c0ab36ede8fc8f63",
            "messageTitle": "Change refactoring nodes_of_class call to use skip_klass (#2351)",
            "messageBody": "Calling nodes_of_class without a skip_klass and then filtering\r\nafterwards is slightly inefficient, but more importantly it\u0027s an\r\nunusual use of the function (this is the only example in Pylint where\r\nReturn nodes are extracted without skipping FunctionDef).",
            "insertions": 2,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 128,
        "deletions": 16,
        "date": "2019-09-17",
        "commitResults": [
          {
            "hash": "8bf8fe1d2a68db880fee76e8fe964c5f28f10723",
            "messageTitle": "New check: import-outside-toplevel (close #3067) (#3079)",
            "messageBody": "",
            "insertions": 128,
            "deletions": 16
          }
        ]
      },
      {
        "insertions": 12,
        "deletions": 5,
        "date": "2019-10-21",
        "commitResults": [
          {
            "hash": "97f4f2ae187df933f072d74fd8347ec14213f5de",
            "messageTitle": "import-outside-toplevel: Show full names for ImportFrom nodes (#3207)",
            "messageBody": "This is a little more informative than just showing the module name.",
            "insertions": 12,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 50,
        "deletions": 59,
        "date": "2019-12-24",
        "commitResults": [
          {
            "hash": "d128c276435c379325ad89d0680f889e16364d1f",
            "messageTitle": "Enable else-if-used extension (#3316)",
            "messageBody": "After all, if we don\u0027t use this, why should anybody else?",
            "insertions": 50,
            "deletions": 59
          }
        ]
      }
    ],
    "cordis-dev": [
      {
        "insertions": 1,
        "deletions": 0,
        "date": "2018-08-21",
        "commitResults": [
          {
            "hash": "135e8c28464e20f5b9b1bee44a82eefc15254767",
            "messageTitle": "Update backlinks.rst",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      }
    ],
    "Ry4an Brase": [
      {
        "insertions": 156,
        "deletions": 61,
        "date": "2012-09-29",
        "commitResults": [
          {
            "hash": "468da1ceac36ce829ecc423be2173ff6b178dcdb",
            "messageTitle": "Add --ignore-imports option to similarity checking. Closes #106534.",
            "messageBody": "Additionally:\n - add access to existing --ignore-docstrings option to symilar command line\n - add access to new --ignore-imports option to symilar command line\n - add test for existing --ignore-docstring feature\n - add test for new --ignore-imports feature\n",
            "insertions": 156,
            "deletions": 61
          }
        ]
      }
    ],
    "Steven Myint": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2014-05-08",
        "commitResults": [
          {
            "hash": "25b36d9a36080f1dd39076cc92ce622c5853b193",
            "messageTitle": "Fix spelling error",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 40,
        "deletions": 5,
        "date": "2015-03-13",
        "commitResults": [
          {
            "hash": "e77b1e01f27a2f503deba734b795369c19999a8f",
            "messageTitle": "Add \"duplicate-except\" checker",
            "messageBody": "It checks if an exception type was already caught previously in the same\ntry/except. This fixes #485.\n",
            "insertions": 39,
            "deletions": 2
          },
          {
            "hash": "cb54cf21b1f90512322af5666078cb98d5a394ba",
            "messageTitle": "Remove unused import",
            "messageBody": "",
            "insertions": 0,
            "deletions": 1
          },
          {
            "hash": "48d89a8f292303fab074f8b78b407a1e29884878",
            "messageTitle": "Remove unnecessary loop",
            "messageBody": "",
            "insertions": 1,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 14,
        "deletions": 28,
        "date": "2015-03-14",
        "commitResults": [
          {
            "hash": "a9cd1a1687f52b099d180f660abb00543e065788",
            "messageTitle": "Revert",
            "messageBody": "",
            "insertions": 0,
            "deletions": 11
          },
          {
            "hash": "243e893f50a4f0d29e7d8c04417575dcd512b67b",
            "messageTitle": "Disable irrelevant check",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "129bce24172c1f141e5a55bac22a03cd79380aa2",
            "messageTitle": "Move to functional per Claudiu\u0027s note",
            "messageBody": "",
            "insertions": 13,
            "deletions": 16
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2015-03-15",
        "commitResults": [
          {
            "hash": "540fc4c7935cc1c63008a5deeee1e541d2e40231",
            "messageTitle": "Remove unnecessary change",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 17,
        "date": "2015-03-30",
        "commitResults": [
          {
            "hash": "d4ff0fb082cd5b5e9e86effc2e5393a7d8cb7417",
            "messageTitle": "Remove \"pointless-except\" checker",
            "messageBody": "This fixes #506.\n",
            "insertions": 2,
            "deletions": 17
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 3,
        "date": "2015-12-10",
        "commitResults": [
          {
            "hash": "2066c0b6a4d7746aaeee73fb6730993bbbd29598",
            "messageTitle": "Use new repository URLs",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          }
        ]
      }
    ],
    "moxian": [
      {
        "insertions": 4,
        "deletions": 1,
        "date": "2013-08-29",
        "commitResults": [
          {
            "hash": "7dc3cfddb7801840870c5be9d01a95bb8db3cc79",
            "messageTitle": "Fix issue #55 (false-positive trailing-whitespace on Windows)",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          }
        ]
      }
    ],
    "buck": [
      {
        "insertions": 1,
        "deletions": 0,
        "date": "2014-09-26",
        "commitResults": [
          {
            "hash": "5794c0dde4e9042d7c03100e37feac71c9678bce",
            "messageTitle": "the unittest_checker_format suite wasn\u0027t running",
            "messageBody": "",
            "insertions": 1,
            "deletions": 0
          }
        ]
      }
    ],
    "Adam Parkin": [
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2018-07-26",
        "commitResults": [
          {
            "hash": "3c3731225f3d5cf30ed173c51f1e978a4b22ffdf",
            "messageTitle": "Correct sentence in FAQ around Python version support (#2346)",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 33,
        "deletions": 37,
        "date": "2018-10-10",
        "commitResults": [
          {
            "hash": "04cf3f8298fa1c718f950c90c34ee99a17f3c503",
            "messageTitle": "Make some minor revisions/corrections to the docs (#2542)",
            "messageBody": "Makes some minor revisions \u0026 grammatical corrections to the docs.  Some\r\nnotable items:\r\n\r\n- tries to make references to PEP 8 consistent (rather than PEP-8, PEP 8,\r\n  PEP-08, etc)\r\n- general typos",
            "insertions": 33,
            "deletions": 37
          }
        ]
      }
    ],
    "Nikita Sobolev": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2019-07-10",
        "commitResults": [
          {
            "hash": "c85b8d50564a59b536dba13bb15882ff607df773",
            "messageTitle": "Refactors `and ... or` expression to ternary (#2994)",
            "messageBody": "That\u0027s what `pylint` teaches us to do according to its own styleguide.",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Roman Ivanov": [
      {
        "insertions": 5,
        "deletions": 3,
        "date": "2017-08-09",
        "commitResults": [
          {
            "hash": "2bab015753c99fea11a06dcb0098e93a2f287ca1",
            "messageTitle": "Do not start more jobs than needed (#1614)",
            "messageBody": "pylint always starts all jobs even when analyzing a single file\r\n\r\nClose #1613",
            "insertions": 5,
            "deletions": 3
          }
        ]
      }
    ],
    "Stephen Longofono": [
      {
        "insertions": 4,
        "deletions": 1,
        "date": "2018-11-06",
        "commitResults": [
          {
            "hash": "6e37ca37a78024dcc79ceb2431b0dfebd526f3ad",
            "messageTitle": "Update README.rst (#2580)",
            "messageBody": "As given, the install instructions gather a version of PyLint which does not support all the features of Python 3.6.  For example, as of 11/3/2018, f-strings are not supported, and pyreverse3 will fail reporting a syntax error.  After running upgrade as prescribed in the new instructions, this problem is solved.",
            "insertions": 4,
            "deletions": 1
          }
        ]
      }
    ],
    "Marcus Näslund": [
      {
        "insertions": 5,
        "deletions": 3,
        "date": "2018-08-08",
        "commitResults": [
          {
            "hash": "39d80c9579ec3d62c1d6bdaf3fcca0c0c2bb0bb9",
            "messageTitle": "Removed extra space from format.py",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "452b560e18ecce5ee417f10823b212c1e00ad2e1",
            "messageTitle": "Removed double space from man page",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "adc4d0ce669ced185672eb66cc2d2c55207d1767",
            "messageTitle": "Removed double space from pylintrc example",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "7caabb871dcf8ac4000a26a4557dc9c7b0759337",
            "messageTitle": "Added myself to contributor list",
            "messageBody": "",
            "insertions": 2,
            "deletions": 0
          }
        ]
      }
    ],
    "xmo-odoo": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2016-02-02",
        "commitResults": [
          {
            "hash": "264d2903de58591aec522e1d5e30f366a14663cb",
            "messageTitle": "Remove pointless slicing in build_message_def",
            "messageBody": "Tuples of length 4+ will match the preceding case.",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2016-02-04",
        "commitResults": [
          {
            "hash": "849f8d3304c098080f7615472d763d536cc7d372",
            "messageTitle": "Allow UnittestLinter.is_message_enabled to take kwargs",
            "messageBody": "External examples of custom linters (e.g. @nedbat\u0027s edx_lint[0]) and some \r\ninternal pylint code[1] pass is_message_enabled\u0027s `line` parameter by keyword.\r\n\r\nHowever this does not work when trying to test those lints using the \r\nUnittestLinter mock object, as its is_message_enabled only takes positional\r\nparameters.\r\n\r\n[0] https://github.com/edx/edx-lint/blob/master/edx_lint/pylint/getattr_check.py#L63\r\n[1] https://github.com/PyCQA/pylint/blob/master/pylint/test/unittest_lint.py#L261",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "Jürgen Hermann": [
      {
        "insertions": 10,
        "deletions": 7,
        "date": "2016-06-24",
        "commitResults": [
          {
            "hash": "1fa9a57361841c7b64b4ac0796af497cc365b1a6",
            "messageTitle": "Added threading.local to ignored classes default list (#946)",
            "messageBody": "Added threading.local to ignored classes default list\r\n\r\nNote that the implementation names for Python 2/3 are used (threading.local is an alias).\r\nAlso changed related places for consistency.\r\n",
            "insertions": 10,
            "deletions": 7
          }
        ]
      }
    ],
    "Benedikt Morbach": [
      {
        "insertions": 2,
        "deletions": 8,
        "date": "2013-10-03",
        "commitResults": [
          {
            "hash": "1dfc495f5c28392616304c82a79d5b6ccd8be015",
            "messageTitle": "setup.py: don\u0027t call 2to3 directly",
            "messageBody": "",
            "insertions": 2,
            "deletions": 8
          }
        ]
      }
    ],
    "Radu Ciorba": [
      {
        "insertions": 156,
        "deletions": 1,
        "date": "2015-03-22",
        "commitResults": [
          {
            "hash": "35ff1ca0775b64c3fb0c1fb7cfd7462d94b56d92",
            "messageTitle": "add \u0027not-context-manager\u0027 error",
            "messageBody": "Checks that whatever you use in a with statement implements __enter__ and\n__exit__ or is decorated with contextlib.contextmanager.\n\n--HG--\nbranch : not-context-manager\n",
            "insertions": 86,
            "deletions": 1
          },
          {
            "hash": "9970d76a0a27a171bdf4e0d504c709119b38f119",
            "messageTitle": "add warning for confusing usage of with statement",
            "messageBody": "Emitted when an ambiguous looking with statement is used.\nFor example `with open() as first, second` which looks like a\ntuple assignment but is actually 2 context managers.\n\n--HG--\nbranch : confusing-with-statement\n",
            "insertions": 70,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 2,
        "date": "2015-03-28",
        "commitResults": [
          {
            "hash": "2c933470b87a6eccf28090b2160dabf0e4d38af4",
            "messageTitle": "add functional tests for unsed import false positive #475",
            "messageBody": "--HG--\nbranch : unused-import\n",
            "insertions": 5,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 20,
        "deletions": 10,
        "date": "2015-03-30",
        "commitResults": [
          {
            "hash": "8f7ac60b5ef15018308d355df5f28e1424f31a11",
            "messageTitle": "update the test",
            "messageBody": "--HG--\nbranch : unused-import\n",
            "insertions": 3,
            "deletions": 2
          },
          {
            "hash": "1d31653e0fe70c593d836f9fd4a567d0a91d4af4",
            "messageTitle": "fix unused-import false positive when the import is used in a class assignment",
            "messageBody": "don\u0027t consume from current scope if it\u0027s defined in the same statement\n\n--HG--\nbranch : unused-import\n",
            "insertions": 11,
            "deletions": 5
          },
          {
            "hash": "28b666f1ab5b25e15ea35fa1c357e9272a672cee",
            "messageTitle": "add another test case + fixed an import error",
            "messageBody": "--HG--\nbranch : unused-import\n",
            "insertions": 5,
            "deletions": 2
          },
          {
            "hash": "cdd5a0420388543e12105c10e9452d6a475bf65c",
            "messageTitle": "fix comment",
            "messageBody": "--HG--\nbranch : unused-import\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 3,
        "date": "2015-03-31",
        "commitResults": [
          {
            "hash": "45c540e8e65908e950986a70d74b66d1f8e0bea0",
            "messageTitle": "fix indentation, add changelog entry",
            "messageBody": "--HG--\nbranch : unused-import\n",
            "insertions": 6,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 1,
        "date": "2015-04-02",
        "commitResults": [
          {
            "hash": "40751941567ec663b223cdae4539cf69810f3f61",
            "messageTitle": "Update test for not-context-manager when context node is a Name",
            "messageBody": "Adds the case that caused the crash, a contextlib.contextmanager\nreferenced by name.\n",
            "insertions": 3,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 5,
        "deletions": 7,
        "date": "2015-05-09",
        "commitResults": [
          {
            "hash": "2b0838c5bc0b5e8646cf395cd48be48d7a0eafdb",
            "messageTitle": "#518 fix unused-argument false positive when +\u003d is used",
            "messageBody": "--HG--\nbranch : augassign_unused_argument\n",
            "insertions": 2,
            "deletions": 7
          },
          {
            "hash": "b124139a75fc45500d8eb7bc251c7eabd914bd6d",
            "messageTitle": "#518 add changelog entry",
            "messageBody": "--HG--\nbranch : augassign_unused_argument\n",
            "insertions": 3,
            "deletions": 0
          }
        ]
      }
    ],
    "Tomasz Magulski": [
      {
        "insertions": 3,
        "deletions": 3,
        "date": "2016-05-09",
        "commitResults": [
          {
            "hash": "b7a9b803cb269323de7aeec667805d9434517972",
            "messageTitle": "Update of documentation\u0027s part describing regexp default values for symbol names (#896)",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          }
        ]
      }
    ],
    "Scott Worley": [
      {
        "insertions": 33,
        "deletions": 45,
        "date": "2018-08-22",
        "commitResults": [
          {
            "hash": "49f47b5b2a32b13d9b0dfef8de82b1510a3ae28d",
            "messageTitle": "Use contextlib.redirect_stdout",
            "messageBody": "",
            "insertions": 33,
            "deletions": 45
          }
        ]
      },
      {
        "insertions": 93,
        "deletions": 5,
        "date": "2018-09-29",
        "commitResults": [
          {
            "hash": "76ce7c13b4a3059cdad08ccd9264c3d52a6683c2",
            "messageTitle": "Use ast to handle PEP 328 multi-line imports",
            "messageBody": "Closes #1422\nCloses #2019\n\nThis fixes #1422 and fixes #2019.\n",
            "insertions": 93,
            "deletions": 5
          }
        ]
      }
    ],
    "Tyler Thieding": [
      {
        "insertions": 131,
        "deletions": 0,
        "date": "2019-04-29",
        "commitResults": [
          {
            "hash": "8d237a0ae3e28fb64b7867a4c61f8365fe7bbd5b",
            "messageTitle": "Add broad try clause extension. (#2890)",
            "messageBody": "Add an extension checker (pylint.extensions.broad_try_clause) that enforces a\r\nconfigurable maximum number of statements inside of a try clause.\r\nThis facilitates enforcing PEP 8\u0027s guidelines about try/except statements and\r\nthe amount of code in the try clause:\r\n\r\n\"Additionally, for all try/except clauses, limit the try clause to the absolute minimum\r\namount of code necessary. Again, this avoids masking bugs.\"",
            "insertions": 131,
            "deletions": 0
          }
        ]
      }
    ],
    "Drew": [
      {
        "insertions": 8,
        "deletions": 6,
        "date": "2018-09-15",
        "commitResults": [
          {
            "hash": "926db51e55901db856fa7b55265428fd9a448f6a",
            "messageTitle": "Grammar fixes to docs (#2492)",
            "messageBody": "Fix grammar error in pylintrc files and CONTRIBUTORS.txt.",
            "insertions": 8,
            "deletions": 6
          }
        ]
      }
    ],
    "Edgemaster": [
      {
        "insertions": 1,
        "deletions": 0,
        "date": "2014-07-29",
        "commitResults": [
          {
            "hash": "128936c6962d817f6083b8e7f524d1a5a2ce3da1",
            "messageTitle": "pylint.el: Missing dependency on tramp",
            "messageBody": "--HG--\nbranch : Edgemaster/pylintel-missing-dependency-on-tramp-1406657844364\n",
            "insertions": 1,
            "deletions": 0
          }
        ]
      }
    ],
    "Laura Médioni": [
      {
        "insertions": 95,
        "deletions": 32,
        "date": "2015-10-15",
        "commitResults": [
          {
            "hash": "c2ce68547ea37c4421b8d5c9a6151ee23269a6c5",
            "messageTitle": "add a new rule looking for yoda conditions",
            "messageBody": "",
            "insertions": 95,
            "deletions": 32
          }
        ]
      },
      {
        "insertions": 126,
        "deletions": 18,
        "date": "2015-10-26",
        "commitResults": [
          {
            "hash": "8d84822d494c32df05ee4b07df08990c3a280d46",
            "messageTitle": "Check for nots too many in comparison expressions",
            "messageBody": "",
            "insertions": 86,
            "deletions": 2
          },
          {
            "hash": "487c83db4b9e8cf568808c1df56fcc5a20956c11",
            "messageTitle": "Explicitely check for const to const comparison",
            "messageBody": "Also add a check for comparison to a method, a function or an attribute and improve the functional test accordingly.\n",
            "insertions": 40,
            "deletions": 16
          }
        ]
      },
      {
        "insertions": 22,
        "deletions": 19,
        "date": "2015-10-27",
        "commitResults": [
          {
            "hash": "fe6d56233242526fec12571dbed93fdb0d320321",
            "messageTitle": "improve unneeded-not messages",
            "messageBody": "- warning \u003d\u003e convention\n- \"One not too many\" \u003d\u003e \"consider changing..\"\n",
            "insertions": 14,
            "deletions": 14
          },
          {
            "hash": "a4d4301e8e1e76eca8a3102f4d2833dc3d5e8395",
            "messageTitle": "improve NotChecker",
            "messageBody": "- move reverse_op declaration out of visit_unaryop\n- build message out of operand, instead of using replace() on node.as_string()\n",
            "insertions": 8,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 233,
        "deletions": 31,
        "date": "2015-10-29",
        "commitResults": [
          {
            "hash": "b24ada1cc8c2b2886a09501c2e08c98d511167e6",
            "messageTitle": "check for class methods declared without a decorator",
            "messageBody": "related to the issue #675\n",
            "insertions": 76,
            "deletions": 6
          },
          {
            "hash": "ef6cf028ebf27b00fc6884f03313e13ca89125c3",
            "messageTitle": "Fix crash with \u0027in\u0027 operator on unneeded-not",
            "messageBody": "",
            "insertions": 9,
            "deletions": 2
          },
          {
            "hash": "f1d1b02dd4279d54e8b11e508fd8e4f554392478",
            "messageTitle": "check for static methods declared without a decorator",
            "messageBody": "closes issue #675\n",
            "insertions": 46,
            "deletions": 9
          },
          {
            "hash": "913a32cb0fcf91f58f80c5d1aa9fbe23751af5de",
            "messageTitle": "check the number of boolean expressions in if statement is reasonnable",
            "messageBody": "--max-bool-expr option allows to configure it (by default, up to 5 are\ntolerated)\n\ncloses issue #677\n",
            "insertions": 73,
            "deletions": 3
          },
          {
            "hash": "5d34bbb1694862df673b42a8f87e33d188efdb31",
            "messageTitle": "improve style and fix typos regarding no_class/staticmethod_decorator",
            "messageBody": "",
            "insertions": 5,
            "deletions": 4
          },
          {
            "hash": "7bde0d648d718ae6a8ee73746adea86d82ddac06",
            "messageTitle": "no-static/class-method: enhance the tests and fix the code accordingly",
            "messageBody": "",
            "insertions": 24,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 352,
        "deletions": 8,
        "date": "2015-10-30",
        "commitResults": [
          {
            "hash": "c27e4542ef155ae1ccf6c7b1cf1676209abed3d0",
            "messageTitle": "check if the type of a variable is redefined (at a function, class or module scope)",
            "messageBody": "related to issue #674\n",
            "insertions": 149,
            "deletions": 5
          },
          {
            "hash": "1427e5ae5df7bf78088603557ad6e78ee1609f4f",
            "messageTitle": "check if the number of nested block in a function or a method isn\u0027t too high",
            "messageBody": "related to issue #668\n",
            "insertions": 203,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 0,
        "date": "2015-11-02",
        "commitResults": [
          {
            "hash": "00d47b9f5eb5c6d25076c689818bdbd5e8d99211",
            "messageTitle": "also count if nodes from ifexp and list comprehension",
            "messageBody": "related to the issue #668\n",
            "insertions": 7,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 9,
        "deletions": 1,
        "date": "2015-11-03",
        "commitResults": [
          {
            "hash": "b869a6050f7c534d12706cbe6343379542f5ba08",
            "messageTitle": "add an extra sentence saying why blocks nesting is a bad pattern",
            "messageBody": "related to the issue #668\n",
            "insertions": 2,
            "deletions": 1
          },
          {
            "hash": "af8d3a772764a38269a9e384caceacf3c3ee6d15",
            "messageTitle": "some more comments for too-many-nested-blocks rule implementation",
            "messageBody": "related to the issue #668\n",
            "insertions": 7,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2015-11-06",
        "commitResults": [
          {
            "hash": "cd5ad0987487cfe45a53f9d120b160ee2630f287",
            "messageTitle": "fix get_type()",
            "messageBody": "It returned erroneous number of comment lines.\ntok_type is set just once, here one must look at the current token\n",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 132,
        "deletions": 10,
        "date": "2015-11-09",
        "commitResults": [
          {
            "hash": "99acea9d36f2f46a7a699eaef4027fdbc6224e37",
            "messageTitle": "Check imports are ordered (standard, 3rd party, local) and grouped by package",
            "messageBody": "related to issue #692\n",
            "insertions": 132,
            "deletions": 10
          }
        ]
      },
      {
        "insertions": 104,
        "deletions": 63,
        "date": "2015-11-10",
        "commitResults": [
          {
            "hash": "23e8fdc206e5db2c19b0cd19d749bc5947226183",
            "messageTitle": "Check imports are located at the top of the module (right after docstring and comments)",
            "messageBody": "related to issue #692\n",
            "insertions": 104,
            "deletions": 63
          }
        ]
      },
      {
        "insertions": 26,
        "deletions": 2,
        "date": "2015-11-12",
        "commitResults": [
          {
            "hash": "aec80d50484ab4eb956f5d1824863244131bb2b3",
            "messageTitle": "slightly change wrong-import-position message and add forgotten functional test",
            "messageBody": "related to issue #692\n",
            "insertions": 26,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 13,
        "deletions": 12,
        "date": "2015-11-23",
        "commitResults": [
          {
            "hash": "d719c55f6759e94dfa43ee3a41d507c99d65bfe7",
            "messageTitle": "Factorize code in _record_import method",
            "messageBody": "related to issue #692\n",
            "insertions": 13,
            "deletions": 9
          },
          {
            "hash": "b652a05a4d23994c38b9916f70be9c2423bbf3d7",
            "messageTitle": "Remove a chunk of code that was never executed",
            "messageBody": "related to issue #692\n",
            "insertions": 0,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 63,
        "deletions": 66,
        "date": "2015-11-24",
        "commitResults": [
          {
            "hash": "365d8f9d8ea131690b45e987ce14dfd78d336e69",
            "messageTitle": "Remove test on str.split() since there is no support for inference on split for now",
            "messageBody": "related to issue #674\n",
            "insertions": 5,
            "deletions": 11
          },
          {
            "hash": "a840c2e958bdf2461b897cf0be788cfa7d001b46",
            "messageTitle": "Use a stack of dictionaries instead of 3 dicts",
            "messageBody": "- This way it works with embedded classes and functions\n- Update the tests accordingly\n\nrelated to issue #674\n",
            "insertions": 25,
            "deletions": 30
          },
          {
            "hash": "c1fee0b3e0ce6746d1850f7f913bde9daf546ee9",
            "messageTitle": "Drop print",
            "messageBody": "related to issue #674\n",
            "insertions": 0,
            "deletions": 2
          },
          {
            "hash": "1c63a0f314441600d241258ecf3d3119f03a8f25",
            "messageTitle": "Add some more comments about the limitations of this rule",
            "messageBody": "related to issue #674\n",
            "insertions": 10,
            "deletions": 3
          },
          {
            "hash": "f1564436af88f33e2a333926de7d93f8c5890fc7",
            "messageTitle": "Add is to the checked operators",
            "messageBody": "",
            "insertions": 4,
            "deletions": 1
          },
          {
            "hash": "1fa9bdae1c3a12d33b38e49daf94be43571c3ead",
            "messageTitle": "Simplify a bit the algorithm checking for ungrouped imports",
            "messageBody": "related to issue #692\n",
            "insertions": 8,
            "deletions": 12
          },
          {
            "hash": "8674d9a2ede3ade953a639f376ef65282d9aa876",
            "messageTitle": "Improve a bit wrong-import-position code and add comments",
            "messageBody": "related to issue #692\n",
            "insertions": 11,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 7,
        "deletions": 0,
        "date": "2015-11-25",
        "commitResults": [
          {
            "hash": "697f45d6effffca0c243b2d6d05728691c8716cf",
            "messageTitle": "Ignore multiple comparisons in unneeded-not rule",
            "messageBody": "related to issue #703\n",
            "insertions": 7,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 76,
        "deletions": 0,
        "date": "2015-11-27",
        "commitResults": [
          {
            "hash": "75e22239edc0f190643be142f4b91cc2839a3c31",
            "messageTitle": "pylint extension to check for use of \"else if\" instead of \"elsif\"",
            "messageBody": "related to issue #673\n",
            "insertions": 76,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 79,
        "deletions": 18,
        "date": "2015-11-30",
        "commitResults": [
          {
            "hash": "729215fb56e0104ed949f8b3f3fd55b1aff2840d",
            "messageTitle": "fix elif-used rule",
            "messageBody": "The bug was introduced when porting the rule from pylint core to an extension\n",
            "insertions": 4,
            "deletions": 18
          },
          {
            "hash": "0bf7b3ed9a7e3f47e09ec157ff0605b027cdf191",
            "messageTitle": "Add else-if-used rule functional test",
            "messageBody": "",
            "insertions": 75,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 39,
        "deletions": 8,
        "date": "2015-12-02",
        "commitResults": [
          {
            "hash": "1eeb3c2f71e43b9968e09f07135a0eb576d31f47",
            "messageTitle": "Allow statements in if or try blocks containing imports.",
            "messageBody": "Closes issue #714\n",
            "insertions": 39,
            "deletions": 8
          }
        ]
      },
      {
        "insertions": 9,
        "deletions": 7,
        "date": "2016-01-11",
        "commitResults": [
          {
            "hash": "9112b19d170bda19244ddc2066986af702c78687",
            "messageTitle": "Don\u0027t stringify nodes to check if they are None",
            "messageBody": "extract and reuse a function checking for astroid.Const or astroid.Name.\n",
            "insertions": 9,
            "deletions": 7
          }
        ]
      },
      {
        "insertions": 3,
        "deletions": 3,
        "date": "2016-01-12",
        "commitResults": [
          {
            "hash": "da11ebb155d9ec671acbd850104310f6f0b51458",
            "messageTitle": "Fix indentation",
            "messageBody": "",
            "insertions": 3,
            "deletions": 3
          }
        ]
      },
      {
        "insertions": 49,
        "deletions": 19,
        "date": "2016-01-15",
        "commitResults": [
          {
            "hash": "e3d49c1bf1a718b613ff2631db7d27e4727bfb8e",
            "messageTitle": "Don\u0027t apply unneeded-not rule on sets",
            "messageBody": "Closes issue #717\n",
            "insertions": 49,
            "deletions": 19
          }
        ]
      },
      {
        "insertions": 57,
        "deletions": 8,
        "date": "2016-02-16",
        "commitResults": [
          {
            "hash": "6d31776454b5e308e4b869a1893b39083dca3146",
            "messageTitle": "Allow variables to be set to different types in if statements",
            "messageBody": "related to issue #710\n",
            "insertions": 57,
            "deletions": 8
          }
        ]
      }
    ],
    "Filipe Brandenburger": [
      {
        "insertions": 17,
        "deletions": 2,
        "date": "2016-02-02",
        "commitResults": [
          {
            "hash": "a280b7613c6c88622313513097c2536724ef7e4b",
            "messageTitle": "Make list of contextmanager decorators configurable.",
            "messageBody": "This makes it possible to configure pylint to recognize backports of\ncontextlib or other decorators similar to @contextmanager without the\nneed for an explicit #pylint disable\u003dnot-context-manager\n\nTested with a backport of contextlib from Python 3 onto Python 2\nimported under a different name.\n",
            "insertions": 17,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 17,
        "deletions": 0,
        "date": "2016-02-03",
        "commitResults": [
          {
            "hash": "57f7c080f423ef5faa34dcb2462247bb598c8236",
            "messageTitle": "Add unit test for contextmanager-decorators config.",
            "messageBody": "Create a new custom context manager decorator and use it in a test\nfunction. Without the @set_config override, this triggers a\nnot-context-manager warning.\n",
            "insertions": 17,
            "deletions": 0
          }
        ]
      }
    ],
    "Mark Miller": [
      {
        "insertions": 87,
        "deletions": 9,
        "date": "2018-05-17",
        "commitResults": [
          {
            "hash": "7b3bb28294a0b756d9846048ae9b2fcd937111e9",
            "messageTitle": "Fix handling of inline scopes in too-many-statements (#1979)",
            "messageBody": "Nested scopes don\u0027t reset reset the `too-many-statements` check\r\nstate.\r\n\r\nClose #1978",
            "insertions": 87,
            "deletions": 9
          }
        ]
      }
    ],
    "Michael Giuffrida": [
      {
        "insertions": 9,
        "deletions": 1,
        "date": "2017-10-12",
        "commitResults": [
          {
            "hash": "2d1faba269418448548b451c9e73378f9ea19c2e",
            "messageTitle": "Document score section and option in output.rst",
            "messageBody": "Adds basic documentation for adjusting the evaluation output.\r\n\r\nThis option is important because it explains how to suppress all\r\noutput when the code is free of errors and warnings.",
            "insertions": 9,
            "deletions": 1
          }
        ]
      }
    ],
    "Mihai Balint": [
      {
        "insertions": 407,
        "deletions": 20,
        "date": "2015-02-28",
        "commitResults": [
          {
            "hash": "2bcd8f3294bdc70f936a9675326dc239e54fd174",
            "messageTitle": "add pylintrc generated by with pylint",
            "messageBody": "",
            "insertions": 380,
            "deletions": 0
          },
          {
            "hash": "dd8d92b072640b243c74590b4be33baee2adf8c2",
            "messageTitle": "add all pylint codes to the disable list, runnint pylint pylint will now rate the pylint code at 10.0",
            "messageBody": "",
            "insertions": 1,
            "deletions": 2
          },
          {
            "hash": "e0f2c50566a2d18383e31d0fe1ff57096bf56c50",
            "messageTitle": "start removing checks from disabled list, fix code to make sure these pass: C0102,C0112,C0121,C0202,C0203,C0204,C0301",
            "messageBody": "",
            "insertions": 25,
            "deletions": 16
          },
          {
            "hash": "5c1f0447b904acd07cb72143a84358f6d53788fb",
            "messageTitle": "remove more checks from disabled list, fix code to pass these: C0303,C0304,C0321,C0325,C0326,C0327,C0328",
            "messageBody": "",
            "insertions": 1,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 9,
        "deletions": 0,
        "date": "2015-03-03",
        "commitResults": [
          {
            "hash": "a052d27bf8d27a6b6d476184ccb6fc3eb6cbf59b",
            "messageTitle": "Add tox.ini bootstrap (stolen from astroid)",
            "messageBody": "",
            "insertions": 9,
            "deletions": 0
          }
        ]
      }
    ],
    "Sylvain Thenault": [
      {
        "insertions": 0,
        "deletions": 7,
        "date": "2016-01-19",
        "commitResults": [
          {
            "hash": "07e56cdc9635b7e36f2055ba6dbb5719162310f9",
            "messageTitle": "remove @check_message decorator from [visit|leave]_classdef methods of the ClassChecker",
            "messageBody": "Those methods are actually not only emitting the listed messages but also updating\nsome internal state that is used from other, unrestricted, messages. We should\nwork on separating responsabilities if we want to restrict method entries upon\nmessages restriction.\n\nCloses issue #789\n",
            "insertions": 0,
            "deletions": 7
          }
        ]
      }
    ],
    "Lucas Cimon": [
      {
        "insertions": 186,
        "deletions": 52,
        "date": "2018-10-10",
        "commitResults": [
          {
            "hash": "fcc01516ae176ad3fdedc4497328105f3314e376",
            "messageTitle": "Adding implicit-str-concat-in-sequence check (#1655)",
            "messageBody": "``implicit-str-concat-in-sequence`` detects string concatenation inside lists, sets \u0026 tuples.\r\nIt would warn on code such as `(\u0027a\u0027, \u0027b\u0027 \u0027c\u0027)`.\r\n",
            "insertions": 186,
            "deletions": 52
          }
        ]
      },
      {
        "insertions": 24,
        "deletions": 4,
        "date": "2018-11-26",
        "commitResults": [
          {
            "hash": "f4ebdce59f7043eb612d3363244f3c3cb7b7b8ce",
            "messageTitle": "implicit-str-concat-in-sequence: Handling lines with multi-bytes characters - fix #2610 (#2611)",
            "messageBody": "",
            "insertions": 24,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 40,
        "deletions": 9,
        "date": "2019-01-31",
        "commitResults": [
          {
            "hash": "72fd895f636f7d0c62569c39dd74227ed28c8c8b",
            "messageTitle": "Add a new option \u0027check-str-concat-over-line-jumps\u0027 to check \u0027implicit-str-concat-in-sequence\u0027",
            "messageBody": "",
            "insertions": 40,
            "deletions": 9
          }
        ]
      }
    ],
    "Paul Renvoisé": [
      {
        "insertions": 61,
        "deletions": 0,
        "date": "2019-03-27",
        "commitResults": [
          {
            "hash": "3228bc4184c43c2d96f9360b4adfc39c151a00df",
            "messageTitle": "Add preferred-modules option and check",
            "messageBody": "This allow users to specify a set of preferred modules that\nshould be used instead of other modules.\n",
            "insertions": 61,
            "deletions": 0
          }
        ]
      }
    ],
    "Martin": [
      {
        "insertions": 116,
        "deletions": 2,
        "date": "2017-11-11",
        "commitResults": [
          {
            "hash": "99abc893e4374e3695ca29a0f474decf4f837f52",
            "messageTitle": "New warning: shallow copy of os.environ (#1733)",
            "messageBody": "Shallow copy of os.environ doesn\u0027t work as people may expect. os.environ\r\nis not a dict object but rather a proxy object, so any changes made\r\non the copy may have unexpected effects on os.environ\r\n\r\nInstead of copy.copy(os.environ) method os.environ.copy() should be\r\nused.\r\n\r\nMessage id is: `shallow-copy-environ`\r\n\r\nSee https://bugs.python.org/issue15373 for details.\r\n\r\nResolves: #1301",
            "insertions": 116,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2017-11-13",
        "commitResults": [
          {
            "hash": "019dd8af97f5850c6a5a8649d5ac366ea9d80bc6",
            "messageTitle": "Remove forgotten TODO (#1735)",
            "messageBody": "This TODO was resolved in: https://github.com/PyCQA/pylint/pull/1733#pullrequestreview-75930778\r\n\r\nResolves: #1301",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 13,
        "deletions": 0,
        "date": "2017-11-14",
        "commitResults": [
          {
            "hash": "6ef5895e7d8dd54a12f5e2a37239806ac3ef0a71",
            "messageTitle": "Add back accidentally removed changelog entry (#1737)",
            "messageBody": "Change log entry added in #1733 was accidentally removed in commit\r\n996b3fb51597379ad6170056ce445f9f52da52e6 in PR #1726\r\n\r\nAdding changelog entry back.\r\n\r\nFixes: #1301",
            "insertions": 13,
            "deletions": 0
          }
        ]
      }
    ],
    "Yuval Langer": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2018-02-16",
        "commitResults": [
          {
            "hash": "3474c122aa31fce813c4427bd79097ee8099d0ee",
            "messageTitle": "Minor corrections in command\u0027s `--help` text (#1882)",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ],
    "y2kbugger": [
      {
        "insertions": 8,
        "deletions": 3,
        "date": "2016-12-14",
        "commitResults": [
          {
            "hash": "5936066d92363451f80283e01b212e9b5332452e",
            "messageTitle": "update the check for ansi terminals",
            "messageBody": "Check for \u0027xterm-16color\u0027 and \u0027xterm-256color\u0027\n",
            "insertions": 8,
            "deletions": 3
          }
        ]
      }
    ],
    "cosven": [
      {
        "insertions": 7,
        "deletions": 0,
        "date": "2018-04-02",
        "commitResults": [
          {
            "hash": "c695a2e1afcc4abf37641b4d49a5f4ce8f3b4863",
            "messageTitle": "add doc for --py3k option. (#1985)",
            "messageBody": "",
            "insertions": 7,
            "deletions": 0
          }
        ]
      }
    ],
    "Dmitry Pribysh": [
      {
        "insertions": 39,
        "deletions": 6,
        "date": "2015-10-01",
        "commitResults": [
          {
            "hash": "0872f3ff879da09cb549f518f205f1e2c5a2f397",
            "messageTitle": "Add checker to identify multiple imports on one line.",
            "messageBody": "Fixes issue #598. Had to modify some functional tests to ignore new message.\n\n--HG--\nbranch : multiple-imports-checker\n",
            "insertions": 36,
            "deletions": 5
          },
          {
            "hash": "f5c1d18aad040db48e5390bed7ff29065ccbb9f8",
            "messageTitle": "Change multiple-imports message type to `convention` with code C0410",
            "messageBody": "--HG--\nbranch : multiple-imports-checker\n",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "450bb999f596544aec52a99e74cd918ac13bc229",
            "messageTitle": "Update contributors list",
            "messageBody": "--HG--\nbranch : multiple-imports-checker\n",
            "insertions": 2,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 101,
        "deletions": 0,
        "date": "2015-10-03",
        "commitResults": [
          {
            "hash": "72ff5af89044d3e7bd6ff01c32a2c41177d8475f",
            "messageTitle": "Add initial version of comparison checker",
            "messageBody": "It checks for expressions like \u0027x \u003d\u003d True\u0027, \u0027x \u003d\u003d False\u0027 and \u0027x \u003d\u003d None\u0027 and\nsuggests the correct usage (\u0027x\u0027, \u0027not x\u0027, \u0027x is None\u0027).\n\n--HG--\nbranch : comparison-checker\n",
            "insertions": 101,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 201,
        "deletions": 0,
        "date": "2015-10-05",
        "commitResults": [
          {
            "hash": "1e59a5f7be2075836116e4f5f1bf74e54cc5b1b0",
            "messageTitle": "Add initial version of checker for iterables/mappings.",
            "messageBody": "It checks for the following things:\n- for-statement should contain an iterable value\n- `yield from`-statement should contain an iterable value\n- function call with star args should contain iterable value\n  (e.g. in `foo(*bar)` bar should be an iterable)\n- function call with kwargs should contain a mapping\n  (e.g. in `foo(**bar)` bar should be a dict)\n\nIdea came from issue #563.\n\n--HG--\nbranch : iterable-checker\n",
            "insertions": 165,
            "deletions": 0
          },
          {
            "hash": "8139897bf4d3bb68a856ea93bc6b4e6a0242314f",
            "messageTitle": "Add iterable checking for all types of comprehensions.",
            "messageBody": "Specifically, list, dict and set comprehensions along with generator\nexpressions.\n\n--HG--\nbranch : iterable-checker\n",
            "insertions": 36,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 62,
        "deletions": 11,
        "date": "2015-10-06",
        "commitResults": [
          {
            "hash": "c47c44ce534fc437e5dfeb971b2a69bcddf6c87c",
            "messageTitle": "Improve iterable inference and add more unit tests for iterable checker",
            "messageBody": "--HG--\nbranch : iterable-checker\n",
            "insertions": 62,
            "deletions": 11
          }
        ]
      },
      {
        "insertions": 83,
        "deletions": 52,
        "date": "2015-10-07",
        "commitResults": [
          {
            "hash": "2ec71299f17708090549cab79fca948ddaabefe4",
            "messageTitle": "Alter inference strategy in iterable/mapping checker",
            "messageBody": "--HG--\nbranch : iterable-checker\n",
            "insertions": 22,
            "deletions": 52
          },
          {
            "hash": "f5dcc8d7a213f53558f2553e6dd085855bc763b3",
            "messageTitle": "Add functional tests for iterable hecker",
            "messageBody": "--HG--\nbranch : iterable-checker\n",
            "insertions": 56,
            "deletions": 0
          },
          {
            "hash": "fd36d9dec8c62301e19e60d2354c756f5cff25f6",
            "messageTitle": "Update changelog",
            "messageBody": "--HG--\nbranch : iterable-checker\n",
            "insertions": 5,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 509,
        "deletions": 445,
        "date": "2015-10-08",
        "commitResults": [
          {
            "hash": "1e68f419b82738b9b82c1ed941446e0f8bb9ae84",
            "messageTitle": "Move iterable checker to typecheck module and alter inference strategy",
            "messageBody": "--HG--\nbranch : iterable-checker\n",
            "insertions": 264,
            "deletions": 223
          },
          {
            "hash": "0d592dc9c89e5a3d3cab35c73434687bca135678",
            "messageTitle": "Refactor iterable context checker",
            "messageBody": "--HG--\nbranch : iterable-checker\n",
            "insertions": 57,
            "deletions": 29
          },
          {
            "hash": "c71a657cd3697c910ae4796e6d373139c309151f",
            "messageTitle": "Add more positive functional tests for the iterable context checker",
            "messageBody": "--HG--\nbranch : iterable-checker\n",
            "insertions": 79,
            "deletions": 25
          },
          {
            "hash": "162888733f964187be1433df1bae2633048b6354",
            "messageTitle": "Handle more corner cases in iterable/mapping checker",
            "messageBody": "--HG--\nbranch : iterable-checker\n",
            "insertions": 109,
            "deletions": 33
          },
          {
            "hash": "f5e5f06fa49a1955101419faf65864cc5c32c685",
            "messageTitle": "Remove redundant unittests for iterable checker",
            "messageBody": "--HG--\nbranch : iterable-checker\n",
            "insertions": 0,
            "deletions": 135
          }
        ]
      },
      {
        "insertions": 211,
        "deletions": 81,
        "date": "2015-10-15",
        "commitResults": [
          {
            "hash": "83668668e7b6410c9eeaeca05e99a2e691df30f5",
            "messageTitle": "Make iterable/mapping checker more smart and refactor it.",
            "messageBody": "Now it ignores errors inside mixins declarations and is able to recognize\niterable/mapping metaclasses.\n\n--HG--\nbranch : iterable-checker\n",
            "insertions": 211,
            "deletions": 81
          }
        ]
      },
      {
        "insertions": 25,
        "deletions": 1,
        "date": "2015-10-17",
        "commitResults": [
          {
            "hash": "e5b8cffdd2ff3cf92896dcd23677c778be2d6e6a",
            "messageTitle": "Make `no-self-use` checker not throw a warning if method has a `super()` call.",
            "messageBody": "This is only enabled for python 3.0+ and only for `super` calls with no\narguments.\n\nFixes issue #667.\n\n--HG--\nbranch : fix-667\n",
            "insertions": 25,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 2,
        "date": "2015-10-18",
        "commitResults": [
          {
            "hash": "65a711f514425bce72bf5cf8d9b289a7c86a9785",
            "messageTitle": "Rename checking function for \u0027super()\u0027 call checking and update Changelog.",
            "messageBody": "--HG--\nbranch : fix-667\n",
            "insertions": 6,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 228,
        "deletions": 0,
        "date": "2015-10-19",
        "commitResults": [
          {
            "hash": "797aa3463f5f5050796e889e935b05df37ca5a9e",
            "messageTitle": "Add checker for membership rules and tests",
            "messageBody": "Idea of checking is very simple: value used to the right of the \u0027in\u0027 operator\nshould support membership test protocol (i.e. define either __contains__ or\n__iter__ or __getitem__).\n\nFixes issue #589.\n\n--HG--\nbranch : membership-test-checker\n",
            "insertions": 228,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 11,
        "deletions": 11,
        "date": "2015-10-22",
        "commitResults": [
          {
            "hash": "fd66e82303932b8cf08873a0d527babda9029b97",
            "messageTitle": "Fix documentation build warnings and errors",
            "messageBody": "Errors fixed:\n- unqouted emphasis character usage (*)\n- missing list index\n\nFixes #481.\n\n--HG--\nbranch : doc-emphasis-fix\n",
            "insertions": 6,
            "deletions": 6
          },
          {
            "hash": "f36e8cc446a0054cd565b668eba7eca8a86f7b83",
            "messageTitle": "Remove trailing whitespace from ChangeLog",
            "messageBody": "--HG--\nbranch : doc-emphasis-fix\n",
            "insertions": 5,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 222,
        "deletions": 109,
        "date": "2015-10-27",
        "commitResults": [
          {
            "hash": "2dc6bd120c119b614018bca22ef96ff497ff5102",
            "messageTitle": "Skip not-an-iterable and similar checks for Base/Abstract classes",
            "messageBody": "And refactor iterable checker.\n\nFixes issue #685.\n\n--HG--\nbranch : fix-685\n",
            "insertions": 101,
            "deletions": 84
          },
          {
            "hash": "db975e2a316d41d52b46e0f7dcdcd2182530c213",
            "messageTitle": "Make iterable checker skip classes that are inferred to be abstract",
            "messageBody": "--HG--\nbranch : fix-685\n",
            "insertions": 121,
            "deletions": 25
          }
        ]
      },
      {
        "insertions": 187,
        "deletions": 155,
        "date": "2015-10-29",
        "commitResults": [
          {
            "hash": "b776ef88e7251155e9bf3b0e77b60306442bb31e",
            "messageTitle": "Make tuple unpacking checker emit less false negatives",
            "messageBody": "By reusing functions from iterable checker.\n\n--HG--\nbranch : enhance-unpacking-checker\n",
            "insertions": 151,
            "deletions": 142
          },
          {
            "hash": "959aba3af1700906e1b9b904a7f3b358cc2b611c",
            "messageTitle": "Add a few functional tests for enhanced unpacking checker",
            "messageBody": "--HG--\nbranch : enhance-unpacking-checker\n",
            "insertions": 36,
            "deletions": 13
          }
        ]
      },
      {
        "insertions": 179,
        "deletions": 39,
        "date": "2015-11-03",
        "commitResults": [
          {
            "hash": "26a40a35c8d1aece9f191b83cc13f3b88b1128a8",
            "messageTitle": "Add checker for unsubscriptable values used in subscript expression.",
            "messageBody": "Fixes issue #561.\n",
            "insertions": 144,
            "deletions": 2
          },
          {
            "hash": "90d32374a9a790b5ace164ee0e62872f23d50058",
            "messageTitle": "Rename \u0027unsubscriptable-value\u0027 message to \u0027unsubscriptable-object\u0027",
            "messageBody": "",
            "insertions": 33,
            "deletions": 33
          },
          {
            "hash": "9d78cfc79bb98f97a76b6d6ac5857934c801741f",
            "messageTitle": "Fix pylint warning by rewriting part of BasicChecker",
            "messageBody": "",
            "insertions": 2,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 6,
        "deletions": 0,
        "date": "2015-11-04",
        "commitResults": [
          {
            "hash": "8b094d37be3cee955da29302f3d7bea700cfb17b",
            "messageTitle": "Add test for deques to `unsubscriptable-object` functional tests",
            "messageBody": "",
            "insertions": 6,
            "deletions": 0
          }
        ]
      },
      {
        "insertions": 29,
        "deletions": 21,
        "date": "2015-11-07",
        "commitResults": [
          {
            "hash": "66c1d7ea3b40b1bb95e46b96f503aca9b23cec64",
            "messageTitle": "Reduce number of false positives emitted by non-iterator-returned checker",
            "messageBody": "By disabling checker for cases when there\u0027re multiple possible values infered\nfor node. This way we lose some of the inference power, but throw a lot less\nfalse positives.\n\nFixes issue #695.\n",
            "insertions": 27,
            "deletions": 19
          },
          {
            "hash": "e0e90e5d4472834c6d21c06ab764ad66c7710568",
            "messageTitle": "Revert accidentally updated tox.ini file",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          },
          {
            "hash": "7bad9bc800fdcd8e0a52dc539401260cfe02484f",
            "messageTitle": "Remove pudb from test dependencies",
            "messageBody": "",
            "insertions": 1,
            "deletions": 1
          }
        ]
      },
      {
        "insertions": 61,
        "deletions": 35,
        "date": "2015-11-09",
        "commitResults": [
          {
            "hash": "3b92bc8ca821a73369fc78bb6d68b983d3c8b67d",
            "messageTitle": "Refactor non-iterator-returned checker to use safe inference",
            "messageBody": "This way it won\u0027t infer all possibles values of a node, only two at most.\n",
            "insertions": 24,
            "deletions": 8
          },
          {
            "hash": "40bb7e7ae67c3eac10c6287df579982194f81c72",
            "messageTitle": "Use safe inference in unpacking-non-sequence checker",
            "messageBody": "Unfortunately, this fix means that we won\u0027t be able to emit an error for\ncases like this one:\n```\ndef foo():\n    if True:\n        return [1, 2]\n    return [3, 4, 5]\na, b \u003d foo()\n```\nWell, not unless we get flow-sensitive inference. But we still need this fix to\nreduce the number of false-positive errors.\n\nFixes issue #695.\n",
            "insertions": 37,
            "deletions": 27
          }
        ]
      }
    ],
    "Thomas Hisch": [
      {
        "insertions": 10,
        "deletions": 2,
        "date": "2017-08-14",
        "commitResults": [
          {
            "hash": "8b4c0717fe6b73d329532ca74d408790c64a2b6e",
            "messageTitle": "Comma separated values in the configuration file appear one item per line",
            "messageBody": "This change makes list-like output in all sections more readable (one item per line).",
            "insertions": 10,
            "deletions": 2
          }
        ]
      },
      {
        "insertions": 176,
        "deletions": 23,
        "date": "2019-03-02",
        "commitResults": [
          {
            "hash": "fb5a2a6dd70f4f8dae84c92c10d88dbe29c20dd6",
            "messageTitle": "Add support for reading from stdin (#2746)",
            "messageBody": "pylint gained a new `--from-stdin` flag which activates stdin linting, useful for editors and similar use cases.\r\n\r\nCloses: #1187",
            "insertions": 176,
            "deletions": 23
          }
        ]
      },
      {
        "insertions": 25,
        "deletions": 4,
        "date": "2019-03-05",
        "commitResults": [
          {
            "hash": "56eaf23ddc65381048212b9ae990056e2da81a54",
            "messageTitle": "Fix output in python -m pylint --version (#2788)",
            "messageBody": "Close #2764",
            "insertions": 25,
            "deletions": 4
          }
        ]
      },
      {
        "insertions": 36,
        "deletions": 12,
        "date": "2019-11-17",
        "commitResults": [
          {
            "hash": "08e81626ed665b77b1fcd069b34e4825d9de2938",
            "messageTitle": "Fix problem with syntaxerrors in file from stdin",
            "messageBody": "Exceptions raised in _ast_from_string were not properly handled in\nPylint.check. Therefore, the output of `echo for | pylint --disable\u003dall\n--enable\u003dsyntax-error --from-stdin module.py` contained a traceback.\n\nThis issue is fixed by integrating the code from _ast_from_string into\nPylint.get_ast.\n",
            "insertions": 36,
            "deletions": 12
          }
        ]
      },
      {
        "insertions": 1,
        "deletions": 6,
        "date": "2019-11-18",
        "commitResults": [
          {
            "hash": "b6d7e156915c7ac463d04e7ab972f9d7bcbbf939",
            "messageTitle": "CLeanup tmpdir related code in test",
            "messageBody": "py.path.as_cwd is a nice ctx manager that can be used in one test\ninstead of a try/finally block.\n",
            "insertions": 1,
            "deletions": 6
          }
        ]
      },
      {
        "insertions": 0,
        "deletions": 4,
        "date": "2019-11-21",
        "commitResults": [
          {
            "hash": "fbaf0ee3064d8d14ef5d600f7f1ebd8ff1d25814",
            "messageTitle": "Remove dead code (#3257)",
            "messageBody": "This code is not needed, since get_ast with `data` !\u003d None is only\r\nneeded for the --from-stdin feature, where get_ast is only called\r\nonce. Therefore, a cache is not needed.",
            "insertions": 0,
            "deletions": 4
          }
        ]
      }
    ],
    "David Pursehouse": [
      {
        "insertions": 5,
        "deletions": 5,
        "date": "2012-10-25",
        "commitResults": [
          {
            "hash": "4b322badb81a08e70b96481e1993fb22687b8b53",
            "messageTitle": "Fix some typos and grammatical errors in the help text",
            "messageBody": "--HG--\nbranch : stable\n",
            "insertions": 5,
            "deletions": 5
          }
        ]
      },
      {
        "insertions": 2,
        "deletions": 2,
        "date": "2014-01-21",
        "commitResults": [
          {
            "hash": "ed29284e8a60cdaba7a312a73c50cadb48ad3930",
            "messageTitle": "Better message for E0202",
            "messageBody": "",
            "insertions": 2,
            "deletions": 2
          }
        ]
      }
    ],
    "Maik Röder": [
      {
        "insertions": 1,
        "deletions": 1,
        "date": "2016-08-17",
        "commitResults": [
          {
            "hash": "7fc8fab9c101ad9f71715ac412fc75b33393759f",
            "messageTitle": "Sorted output of dependent files (#1074)",
            "messageBody": "Sort the dependent files so that the order is predictable. Humans can more easily find names in an alphabetically ordered list. Also makes diff happy because the output is always going to be the same unless there is a new dependent file.",
            "insertions": 1,
            "deletions": 1
          }
        ]
      }
    ]
  },
  "authorFinalContributionMap": {
    "Holger Peters": 25,
    "Ryan McGuire": 1,
    "Carey Metcalfe": 6,
    "Derek Harland": 0,
    "jab": 0,
    "Manuel Vázquez Acosta": 8,
    "Elias Dorneles": 37,
    "Moisés López": 175,
    "Alexandru Coman": 13,
    "Kevin Phillips": 4,
    "Nick Smith": 5,
    "Pavel Roskin": 12,
    "Viorel Stirbu": 0,
    "Simu Toni": 0,
    "mattlbeck": 123,
    "Denis Laxalde": 2,
    "Jacques Kvam": 17,
    "Julien Palard": 1,
    "Yury Gribov": 69,
    "John Leach": 0,
    "Calin Don": 0,
    "Taewon D. Kim": 27,
    "mar-chi-pan": 32,
    "Mariatta Wijaya": 32,
    "Martin von Gagern": 73,
    "Bruno Daniel": 510,
    "Ionel Cristian Maries": 7,
    "Cameron Olechowski": 0,
    "Emile Anclin": 997,
    "Paul Cochrane": 7,
    "Alan Evangelista": 1,
    "Buck Golemon": 0,
    "Adam Dangoor": 14,
    "Dan Hemberger": 5,
    "Jace Browning": 9,
    "carlio": 0,
    "Brian Shaginaw": 15,
    "Matej Marušák": 5,
    "grizzly.nyo@gmail.com": 0,
    "Julien Cristau": 69,
    "Claudiu Popa": 34402,
    "Gabriel R Sezefredo": 19,
    "Yannack": 29,
    "David Douard": 826,
    "LCD 47": 2,
    "Ben Green": 58,
    "Moises Lopez - https://www.vauxoo.com/": 678,
    "Danny Hermes": 23,
    "Hugues Bruant": 22,
    "Steven M. Vascellaro": 4,
    "Tim Hatch": 5,
    "fadedDexofan": 31,
    "Svet": 54,
    "Omega Weapon": 4,
    "sbagan": 4,
    "Łukasz Sznuk": 18,
    "daniel_goldsmith": 0,
    "Łukasz Rogalski": 1463,
    "Glenn Matthews": 678,
    "Andy Palmer": 113,
    "Fabrice Douchant": 0,
    "hippo91": 1967,
    "Pierre Sassoulas": 4574,
    "Daniel Harding": 25,
    "ludal@logilab.fr": 2,
    "anatoly techtonik": 4,
    "ttenhoeve-aa": 39,
    "Krzysztof Czapla": 15,
    "Hugo": 3,
    "Ionel Maries Cristian": 6,
    "Craig Citro": 14,
    "Fantix King": 21,
    "Alex Jurkiewicz": 4,
    "Sylvain Thénault": 4068,
    "Torsten Marek": 2883,
    "BioGeek": 1,
    "mihai_stan": 6,
    "Brandon W Maister": 3,
    "Athos Ribeiro": 7,
    "T.Rzepka": 0,
    "Alexander Pervakov": 5,
    "Charles Hebert": 75,
    "Xi Shen": 0,
    "bluesheeptoken": 2,
    "Michael Kefeder": 21,
    "Nathan Marrow": 25,
    "Erik": 148,
    "Peter Kolbus": 441,
    "Benjamin Drung": 12,
    "Robert Schweizer": 337,
    "Chris Lamb": 2,
    "David Shea": 303,
    "Djailla": 41,
    "Jared Garst": 25,
    "glmdgrielson": 20,
    "Arun Persaud": 2,
    "Hugues": 14,
    "danields": 23,
    "Ville Skyttä": 429,
    "Chris Rebert": 100,
    "Michka Popoff": 14,
    "Derek Gustafson": 799,
    "Luis Escobar": 92,
    "Mitar": 38,
    "Marianna Polatoglou": 85,
    "Banjamin Freeman": 28,
    "Dan Goldsmith": 0,
    "Santiago Castro": 1,
    "James Morgensen": 32,
    "Erik Eriksson": 1,
    "Nir Soffer": 1,
    "craig-sh": 928,
    "Daniele Procida": 59,
    "Matthijs Blom": 11,
    "Sandro Tosi": 1,
    "Konstantin": 482,
    "Mitchell T.H. Young": 6,
    "Martin Vielsmaier": 22,
    "Ned Batchelder": 4,
    "Alexander Todorov": 480,
    "Aru Sahni": 82,
    "Jared Deckard": 1,
    "Nicolas Chauvat": 723,
    "amdev@AMDEV-WS01.cisco.com": 15,
    "Stephane Wirtel": 37,
    "root": 4924,
    "Erik Wright": 42,
    "Sardorbek Imomaliev": 5,
    "sdet_liang": 1,
    "Jonathan Kotta": 74,
    "Sushobhit": 685,
    "Arthur Lutz": 0,
    "Rogalski, Lukasz": 56,
    "guillaume2": 42,
    "moylop260": 11,
    "David Lindquist": 23,
    "Aurelien Campeas": 3,
    "root@clnstor.am.local": 0,
    "syutbai": 50,
    "Florian Bruhin": 315,
    "Nick Bastin": 9,
    "Alain Leufroy": 63,
    "Ashley Whetter": 3879,
    "Daniel Balparda": 43,
    "Michal Nowikowski": 328,
    "achernetz": 0,
    "Mr. Senko": 387,
    "Andrzej Klajnert": 14,
    "Bruno P. Kinoshita": 1,
    "John Kirkham": 0,
    "Nicolas Dickreuter": 6,
    "Radostin Stoyanov": 3,
    "Mike Bryant": 24,
    "Ben James": 101,
    "Yuri Bochkarev": 31,
    "Matus Valo": 102,
    "jpkotta": 39,
    "Yoichi Nakayama": 1,
    "Jim Robertson": 476,
    "Daniela Plascencia": 3,
    "Aivar Annamaa": 18,
    "Anthony Sottile": 55,
    "Caio Carrara": 30,
    "Anthony Foglia": 28,
    "Don Jayamanne": 46,
    "Rémi Cardona": 15,
    "glegoux": 21,
    "paschich": 1,
    "Alan Chan": 111,
    "Paul Renvoise": 180,
    "Alok Singh": 1,
    "Dmytro Kyrychuk": 14,
    "Hugo van Kemenade": 19,
    "Pete": 0,
    "vinnyrose": 15,
    "Jakub Wilk": 13,
    "ssolanki": 672,
    "Eric Froemling": 11,
    "Natalie Serebryakova": 7,
    "frost-nzcr4": 0,
    "pyves@crater.logilab.fr": 0,
    "Harut": 9,
    "Gary Tyler McLeod": 4,
    "Anentropic": 1,
    "yory8": 61,
    "Cezar": 49,
    "Grant Welch": 1,
    "Renat Galimov": 90,
    "thernstig": 4,
    "Brett Cannon": 415,
    "Pascal Corpet": 52,
    "Peter Dawyndt": 10,
    "carl": 125,
    "Pierre-Yves David": 39,
    "Patrik": 0,
    "Antonio Ossa": 14,
    "Chris Murray": 0,
    "Yann Dirson": 0,
    "Adrian Chirieac": 20,
    "Hornwitser": 32,
    "Roy Williams": 756,
    "Alex Hearn": 0,
    "Brian C. Lane": 0,
    "Kraig Brockschmidt": 3,
    "Christopher Zurcher": 0,
    "Fureigh": 8,
    "Andreas Freimuth": 132,
    "Dan Garrette": 0,
    "Mike Frysinger": 15,
    "Sergei Lebedev": 20,
    "SergeyKosarchuk": 13,
    "Tim Gates": 6,
    "Mikhail Fesenko": 10,
    "Pedro Algarvio": 194,
    "John Gabriele": 1,
    "ahirnish": 62,
    "Konstantin Manna": 5,
    "laike9m": 4,
    "PHeanEX": 117,
    "vtemian": 0,
    "C.A.M. Gerlach": 3,
    "agutole": 73,
    "Skip Montanaro": 2,
    "Grygorii Iermolenko": 26,
    "Jason Owen": 13,
    "Trevor Bekolay": 73,
    "Cosmin Poieana": 66,
    "Maarten ter Huurne": 24,
    "Oisín Moran": 3,
    "Janne Rönkkö": 260,
    "Martin Pool": 38,
    "Anubhav": 28,
    "Justin Li": 69,
    "Mads Kiilerich": 13,
    "fahhem": 1,
    "Zeb Nicholls": 32,
    "Damien Nozay": 0,
    "Roberto Leinardi": 21,
    "Kevin Jing Qiu": 3,
    "Ioana Tagirta": 10,
    "JT Olds": 10,
    "Mike Miller": 3,
    "bdanielby": 0,
    "Daniel Draper": 85,
    "cezarelnazli": 0,
    "John McGehee": 3,
    "Petr Pulc": 24,
    "palazzem": 6,
    "Nathaniel Manista": 54,
    "Adrien Di Mascio": 404,
    "James Lingard": 91,
    "gaurikholkar": 0,
    "Tomer Chachamu": 71,
    "Niko Wenselowski": 8,
    "Ricardo Gemignani": 3,
    "FELD Boris": 195,
    "Michael Hudson-Doyle": 8,
    "Vlad Temian": 64,
    "Marco Forte": 0,
    "spaceone": 12,
    "Kylian": 8,
    "Reverb C": 27,
    "James M. Allen": 1,
    "Wes Turner": 197,
    "buck@yelp.com": 19,
    "Enji Cooper": 24,
    "Randall Leeds": 3,
    "Andres Perez Hortal": 20,
    "Mariatta": 2,
    "Pablo Galindo": 19,
    "Federico Bond": 23,
    "Obscuron": 0,
    "James Broadhead": 4,
    "Julien Jehannet": 13,
    "Kári Tristan Helgason": 0,
    "Alexandre Fayolle": 196,
    "Fabio Natali": 8,
    "Noam Yorav-Raphael": 0,
    "Rene Zhang": 19,
    "Bryce Guinta": 385,
    "Peter Hammond": 4,
    "kapsh": 0,
    "jpkotta@shannon": 124,
    "John Paraskevopoulos": 14,
    "thinwybk": 20,
    "Daniel Miller": 37,
    "emile@crater.logilab.fr": 7,
    "Anthony VEREZ": 2,
    "Michael Scott Cuthbert": 5,
    "Vincent": 4,
    "Jakob Normark": 8,
    "Anthony Truchet": 63,
    "Nick Drozd": 211,
    "cordis-dev": 1,
    "Ry4an Brase": 106,
    "Steven Myint": 18,
    "moxian": 0,
    "buck": 0,
    "Adam Parkin": 35,
    "Nikita Sobolev": 1,
    "Roman Ivanov": 0,
    "Stephen Longofono": 3,
    "Marcus Näslund": 2,
    "xmo-odoo": 1,
    "Jürgen Hermann": 4,
    "Benedikt Morbach": 0,
    "Radu Ciorba": 117,
    "Tomasz Magulski": 0,
    "Scott Worley": 90,
    "Tyler Thieding": 129,
    "Drew": 6,
    "Edgemaster": 1,
    "Laura Médioni": 736,
    "Filipe Brandenburger": 18,
    "Mark Miller": 86,
    "Michael Giuffrida": 9,
    "Mihai Balint": 343,
    "Sylvain Thenault": 0,
    "Lucas Cimon": 205,
    "Paul Renvoisé": 53,
    "Martin": 89,
    "Yuval Langer": 0,
    "y2kbugger": 1,
    "cosven": 1,
    "Dmitry Pribysh": 1013,
    "Thomas Hisch": 156,
    "David Pursehouse": 0,
    "Maik Röder": 0
  },
  "authorFileTypeContributionMap": {
    "Holger Peters": {
      "py": 1,
      "py": 24
    },
    "Ryan McGuire": {
      "py": 1
    },
    "Carey Metcalfe": {
      "txt": 2,
      "ChangeLog": 4
    },
    "Derek Harland": {},
    "jab": {},
    "Manuel Vázquez Acosta": {
      "ChangeLog": 3,
      "py": 5
    },
    "Elias Dorneles": {
      "txt": 2,
      "rst": 8,
      "rst": 6,
      "py": 21
    },
    "Moisés López": {
      "txt": 1,
      "ChangeLog": 7,
      "rst": 4,
      "py": 2,
      "py": 22,
      "py": 4,
      "py": 1,
      "py": 35,
      "py": 37,
      "txt": 7,
      "py": 55
    },
    "Alexandru Coman": {
      "ChangeLog": 3,
      "py": 3,
      "py": 1,
      "py": 6
    },
    "Kevin Phillips": {
      "bat": 1,
      "bat": 1,
      "bat": 1,
      "bat": 1
    },
    "Nick Smith": {
      "txt": 2,
      "ChangeLog": 1,
      "py": 1,
      "py": 1
    },
    "Pavel Roskin": {
      "py": 1,
      "py": 5,
      "py": 5,
      "py": 1
    },
    "Viorel Stirbu": {},
    "Simu Toni": {},
    "mattlbeck": {
      "ChangeLog": 8,
      "rst": 8,
      "py": 48,
      "py": 53,
      "txt": 4,
      "py": 1,
      "py": 1
    },
    "Denis Laxalde": {
      "rst": 2
    },
    "Jacques Kvam": {
      "txt": 2,
      "py": 1,
      "py": 12,
      "txt": 2
    },
    "Julien Palard": {
      "py": 1
    },
    "Yury Gribov": {
      "txt": 2,
      "ChangeLog": 2,
      "rst": 1,
      "py": 34,
      "py": 5,
      "py": 25
    },
    "John Leach": {},
    "Calin Don": {},
    "Taewon D. Kim": {
      "txt": 2,
      "ChangeLog": 2,
      "py": 3,
      "similar1": 8,
      "similar2": 8,
      "py": 4
    },
    "mar-chi-pan": {
      "ChangeLog": 4,
      "rst": 8,
      "py": 5,
      "py": 6,
      "txt": 1,
      "py": 8
    },
    "Mariatta Wijaya": {
      "txt": 4,
      "ChangeLog": 5,
      "Makefile": 1,
      "py": 5,
      "py": 1,
      "py": 13,
      "rc": 2,
      "ini": 1
    },
    "Martin von Gagern": {
      "txt": 2,
      "ChangeLog": 3,
      "rst": 21,
      "py": 1,
      "py": 46
    },
    "Bruno Daniel": {
      "ChangeLog": 6,
      "py": 85,
      "py": 419
    },
    "Ionel Cristian Maries": {
      "py": 7
    },
    "Cameron Olechowski": {},
    "Emile Anclin": {
      "ChangeLog": 40,
      "rst": 6,
      "bat": 3,
      "bat": 3,
      "bat": 4,
      "bat": 3,
      "changelog": 49,
      "control": 4,
      "manpages": 1,
      "rules": 4,
      "rst": 1,
      "py": 1,
      "py": 1,
      "pylintrc": 4,
      "1": 12,
      "1": 11,
      "1": 106,
      "1": 36,
      "py": 3,
      "py": 23,
      "py": 22,
      "py": 2,
      "py": 6,
      "py": 3,
      "py": 17,
      "py": 1,
      "py": 7,
      "py": 10,
      "py": 5,
      "py": 9,
      "py": 1,
      "py": 5,
      "py": 29,
      "py": 94,
      "py": 66,
      "py": 60,
      "py": 31,
      "py": 115,
      "py": 10,
      "dot": 4,
      "py": 1,
      "dot": 4,
      "py": 5,
      "py": 8,
      "py": 8,
      "py": 7,
      "py": 1,
      "py": 36,
      "py": 7,
      "py": 6,
      "py": 1,
      "txt": 1,
      "txt": 2,
      "txt": 1,
      "txt": 3,
      "py": 4,
      "py": 1,
      "py": 7,
      "py": 2,
      "py": 10,
      "py": 2,
      "py": 4,
      "py": 51,
      "py": 13
    },
    "Paul Cochrane": {
      "1": 7
    },
    "Alan Evangelista": {
      "py": 1
    },
    "Buck Golemon": {},
    "Adam Dangoor": {
      "txt": 2,
      "ChangeLog": 2,
      "py": 10
    },
    "Dan Hemberger": {
      "rst": 1,
      "py": 4
    },
    "Jace Browning": {
      "txt": 2,
      "ChangeLog": 2,
      "rst": 2,
      "py": 3
    },
    "carlio": {},
    "Brian Shaginaw": {
      "txt": 2,
      "ChangeLog": 2,
      "py": 1,
      "py": 10
    },
    "Matej Marušák": {
      "txt": 2,
      "ChangeLog": 1,
      "py": 2
    },
    "grizzly.nyo@gmail.com": {},
    "Julien Cristau": {
      "ChangeLog": 6,
      "1": 1,
      "py": 1,
      "py": 3,
      "py": 8,
      "py": 1,
      "py": 16,
      "py": 2,
      "py": 4,
      "py": 15,
      "py": 2,
      "txt": 3,
      "txt": 6,
      "py": 1
    },
    "Claudiu Popa": {
      "copyrite_aliases": 60,
      "yml": 3,
      "md": 26,
      "md": 22,
      "md": 7,
      "md": 37,
      "yaml": 9,
      "yml": 39,
      "txt": 83,
      "ChangeLog": 2260,
      "DEPENDS": 1,
      "in": 1,
      "Makefile": 1,
      "rst": 100,
      "yml": 22,
      "control": 1,
      "rules": 1,
      "Makefile": 8,
      "rst": 8,
      "py": 5,
      "rst": 82,
      "rst": 9,
      "py": 16,
      "rst": 40,
      "rst": 14,
      "rst": 103,
      "rst": 14,
      "rst": 22,
      "bat": 198,
      "txt": 44,
      "txt": 1,
      "rst": 17,
      "rst": 29,
      "rst": 1,
      "rst": 12,
      "rst": 4,
      "rst": 14,
      "rst": 9,
      "rst": 112,
      "rst": 7,
      "rst": 33,
      "rst": 199,
      "rst": 472,
      "rst": 72,
      "rst": 136,
      "rst": 59,
      "rst": 20,
      "rst": 65,
      "rst": 86,
      "rst": 19,
      "rst": 1,
      "rst": 24,
      "py": 2,
      "py": 2,
      "1": 1,
      "1": 1,
      "py": 26,
      "py": 4,
      "py": 54,
      "py": 14,
      "py": 85,
      "py": 1449,
      "py": 3,
      "py": 1274,
      "py": 326,
      "py": 455,
      "py": 567,
      "py": 515,
      "py": 146,
      "py": 85,
      "py": 70,
      "py": 1146,
      "py": 33,
      "py": 804,
      "py": 169,
      "py": 179,
      "py": 306,
      "py": 479,
      "py": 1230,
      "py": 678,
      "py": 1591,
      "py": 810,
      "py": 65,
      "py": 8,
      "py": 160,
      "py": 68,
      "py": 1,
      "py": 23,
      "py": 25,
      "py": 15,
      "py": 279,
      "py": 49,
      "py": 14,
      "py": 61,
      "py": 30,
      "py": 113,
      "py": 62,
      "py": 30,
      "py": 921,
      "py": 1,
      "py": 3,
      "py": 52,
      "py": 63,
      "py": 347,
      "py": 145,
      "py": 128,
      "py": 147,
      "py": 82,
      "py": 22,
      "py": 34,
      "py": 85,
      "py": 93,
      "py": 184,
      "py": 94,
      "py": 104,
      "py": 40,
      "py": 4,
      "py": 4,
      "py": 2,
      "pylintrc": 7,
      "ini": 2,
      "py": 40,
      "py": 25,
      "py": 6,
      "py": 4,
      "py": 4,
      "py": 1,
      "py": 17,
      "py": 1,
      "py": 64,
      "py": 8,
      "py": 7,
      "py": 68,
      "py": 13,
      "py": 5,
      "py": 5,
      "py": 8,
      "py": 8,
      "py": 5,
      "py": 31,
      "py": 15,
      "py": 19,
      "py": 127,
      "rc": 2,
      "txt": 5,
      "py": 19,
      "rc": 2,
      "txt": 1,
      "py": 86,
      "rc": 2,
      "txt": 15,
      "py": 17,
      "txt": 2,
      "py": 6,
      "py": 11,
      "txt": 2,
      "py": 1,
      "rc": 2,
      "py": 161,
      "rc": 1,
      "txt": 19,
      "py": 209,
      "txt": 8,
      "py": 36,
      "rc": 2,
      "py": 2,
      "py": 174,
      "txt": 4,
      "py": 56,
      "txt": 2,
      "py": 36,
      "rc": 2,
      "py": 61,
      "rc": 2,
      "txt": 10,
      "py": 79,
      "txt": 2,
      "py": 41,
      "txt": 21,
      "py": 8,
      "rc": 2,
      "py": 13,
      "txt": 5,
      "py": 23,
      "rc": 2,
      "txt": 3,
      "py": 19,
      "txt": 2,
      "rc": 1,
      "py": 78,
      "txt": 8,
      "py": 15,
      "txt": 2,
      "py": 6,
      "txt": 1,
      "py": 5,
      "txt": 11,
      "py": 6,
      "txt": 1,
      "py": 4,
      "txt": 1,
      "py": 29,
      "rc": 2,
      "txt": 8,
      "py": 8,
      "txt": 2,
      "py": 1,
      "py": 7,
      "txt": 6,
      "py": 62,
      "rc": 2,
      "txt": 1,
      "py": 13,
      "rc": 2,
      "py": 21,
      "txt": 4,
      "py": 4,
      "rc": 2,
      "py": 3,
      "py": 27,
      "txt": 5,
      "py": 16,
      "py": 3,
      "py": 43,
      "txt": 1,
      "py": 7,
      "py": 7,
      "py": 8,
      "txt": 1,
      "py": 5,
      "py": 5,
      "py": 24,
      "txt": 1,
      "py": 19,
      "py": 17,
      "py": 28,
      "txt": 7,
      "py": 41,
      "rc": 2,
      "txt": 14,
      "py": 7,
      "py": 39,
      "rc": 2,
      "txt": 16,
      "py": 45,
      "rc": 2,
      "txt": 13,
      "py": 4,
      "rc": 2,
      "txt": 1,
      "py": 1,
      "py": 10,
      "txt": 1,
      "py": 3,
      "txt": 4,
      "py": 1,
      "py": 15,
      "txt": 1,
      "py": 4,
      "txt": 2,
      "py": 15,
      "txt": 2,
      "py": 10,
      "txt": 4,
      "py": 1,
      "py": 18,
      "py": 10,
      "rc": 2,
      "txt": 4,
      "py": 9,
      "rc": 2,
      "txt": 4,
      "py": 9,
      "rc": 2,
      "txt": 1,
      "py": 10,
      "py": 5,
      "rc": 2,
      "txt": 2,
      "py": 9,
      "txt": 6,
      "py": 27,
      "txt": 5,
      "py": 9,
      "rc": 2,
      "rc": 1,
      "py": 12,
      "rc": 1,
      "py": 5,
      "py": 11,
      "txt": 5,
      "py": 1,
      "txt": 1,
      "py": 27,
      "rc": 3,
      "txt": 3,
      "py": 9,
      "txt": 1,
      "py": 12,
      "py": 13,
      "rc": 5,
      "txt": 3,
      "py": 79,
      "txt": 9,
      "py": 4,
      "txt": 1,
      "py": 8,
      "py": 15,
      "rc": 2,
      "py": 6,
      "txt": 3,
      "py": 34,
      "txt": 31,
      "py": 94,
      "txt": 12,
      "py": 58,
      "txt": 12,
      "py": 6,
      "py": 33,
      "py": 19,
      "rc": 2,
      "py": 38,
      "py": 60,
      "txt": 2,
      "py": 53,
      "txt": 20,
      "py": 11,
      "py": 4,
      "rc": 2,
      "txt": 1,
      "py": 50,
      "txt": 14,
      "py": 14,
      "py": 38,
      "py": 27,
      "rc": 2,
      "txt": 2,
      "py": 4,
      "py": 20,
      "txt": 6,
      "py": 37,
      "txt": 10,
      "py": 20,
      "txt": 3,
      "py": 4,
      "rc": 2,
      "py": 2,
      "py": 6,
      "txt": 4,
      "py": 13,
      "py": 12,
      "py": 163,
      "txt": 14,
      "py": 26,
      "rc": 3,
      "txt": 5,
      "py": 7,
      "rc": 2,
      "txt": 1,
      "py": 11,
      "py": 26,
      "rc": 2,
      "txt": 5,
      "py": 12,
      "rc": 2,
      "txt": 1,
      "py": 19,
      "rc": 2,
      "txt": 1,
      "py": 1,
      "py": 24,
      "py": 82,
      "txt": 1,
      "py": 5,
      "txt": 5,
      "py": 6,
      "txt": 1,
      "py": 26,
      "py": 36,
      "rc": 2,
      "txt": 3,
      "py": 2,
      "txt": 2,
      "py": 2,
      "py": 1,
      "py": 1,
      "py": 6,
      "py": 2,
      "py": 5,
      "txt": 6,
      "py": 1,
      "txt": 7,
      "txt": 7,
      "py": 12,
      "txt": 3,
      "py": 6,
      "rc": 2,
      "py": 47,
      "txt": 7,
      "py": 25,
      "txt": 1,
      "py": 1,
      "py": 81,
      "py": 34,
      "rc": 2,
      "txt": 6,
      "py": 15,
      "txt": 6,
      "py": 11,
      "rc": 2,
      "txt": 1,
      "py": 23,
      "txt": 3,
      "py": 70,
      "rc": 2,
      "txt": 5,
      "py": 12,
      "rc": 2,
      "py": 102,
      "txt": 8,
      "py": 88,
      "txt": 3,
      "py": 53,
      "py": 3,
      "rc": 3,
      "py": 3,
      "rc": 3,
      "py": 28,
      "rc": 2,
      "py": 14,
      "rc": 2,
      "txt": 2,
      "rc": 1,
      "py": 7,
      "txt": 1,
      "py": 13,
      "rc": 2,
      "txt": 2,
      "py": 12,
      "rc": 2,
      "py": 12,
      "rc": 2,
      "txt": 1,
      "py": 10,
      "py": 9,
      "py": 18,
      "py": 9,
      "py": 9,
      "py": 14,
      "py": 7,
      "py": 26,
      "py": 12,
      "py": 9,
      "py": 13,
      "py": 10,
      "py": 4,
      "py": 9,
      "txt": 3,
      "py": 67,
      "txt": 7,
      "py": 3,
      "txt": 2,
      "py": 21,
      "rc": 2,
      "py": 15,
      "txt": 6,
      "py": 12,
      "py": 28,
      "rc": 2,
      "py": 20,
      "py": 6,
      "py": 15,
      "py": 21,
      "rc": 2,
      "py": 40,
      "py": 23,
      "py": 18,
      "py": 15,
      "py": 22,
      "py": 15,
      "txt": 4,
      "py": 13,
      "txt": 1,
      "py": 2,
      "txt": 1,
      "py": 1,
      "txt": 1,
      "py": 27,
      "txt": 2,
      "py": 14,
      "txt": 1,
      "py": 21,
      "txt": 1,
      "py": 145,
      "py": 23,
      "txt": 5,
      "py": 23,
      "txt": 5,
      "py": 4,
      "txt": 6,
      "py": 86,
      "txt": 3,
      "py": 4,
      "rc": 2,
      "txt": 1,
      "py": 4,
      "txt": 1,
      "py": 39,
      "py": 17,
      "rc": 2,
      "txt": 1,
      "py": 46,
      "txt": 1,
      "py": 181,
      "txt": 37,
      "py": 1,
      "rc": 3,
      "txt": 1,
      "py": 1,
      "py": 6,
      "rc": 2,
      "py": 22,
      "rc": 3,
      "txt": 15,
      "py": 1,
      "py": 96,
      "txt": 16,
      "py": 1,
      "py": 1,
      "rc": 2,
      "txt": 1,
      "py": 1,
      "rc": 2,
      "txt": 1,
      "py": 4,
      "rc": 3,
      "txt": 2,
      "py": 11,
      "txt": 6,
      "py": 1,
      "rc": 1,
      "txt": 1,
      "py": 1,
      "rc": 2,
      "txt": 1,
      "py": 37,
      "rc": 2,
      "txt": 6,
      "py": 9,
      "txt": 3,
      "py": 1,
      "py": 25,
      "txt": 1,
      "py": 21,
      "py": 37,
      "rc": 2,
      "py": 23,
      "txt": 2,
      "py": 32,
      "txt": 1,
      "py": 13,
      "rc": 2,
      "py": 38,
      "py": 69,
      "txt": 1,
      "py": 2,
      "txt": 1,
      "py": 2,
      "txt": 1,
      "py": 1018,
      "py": 60,
      "txt": 3,
      "py": 2,
      "py": 10,
      "txt": 1,
      "py": 27,
      "txt": 1,
      "py": 7,
      "rc": 2,
      "txt": 2,
      "py": 47,
      "txt": 1,
      "py": 101,
      "txt": 4,
      "py": 11,
      "rc": 2,
      "py": 75,
      "txt": 3,
      "py": 134,
      "txt": 28,
      "py": 79,
      "rc": 2,
      "txt": 6,
      "py": 119,
      "txt": 16,
      "py": 2,
      "py": 7,
      "rc": 2,
      "txt": 1,
      "py": 2,
      "rc": 2,
      "txt": 1,
      "py": 17,
      "txt": 7,
      "py": 6,
      "txt": 1,
      "rc": 3,
      "py": 11,
      "py": 29,
      "rc": 2,
      "txt": 6,
      "py": 95,
      "py": 22,
      "txt": 4,
      "py": 3,
      "txt": 1,
      "py": 38,
      "txt": 1,
      "py": 92,
      "txt": 16,
      "py": 65,
      "rc": 2,
      "txt": 21,
      "py": 92,
      "txt": 16,
      "py": 33,
      "txt": 2,
      "py": 4,
      "rc": 2,
      "txt": 2,
      "py": 21,
      "txt": 7,
      "py": 85,
      "rc": 3,
      "py": 52,
      "txt": 8,
      "py": 13,
      "rc": 2,
      "py": 9,
      "py": 47,
      "rc": 2,
      "txt": 6,
      "py": 39,
      "rc": 2,
      "txt": 1,
      "py": 4,
      "py": 117,
      "py": 23,
      "rc": 2,
      "py": 11,
      "rc": 2,
      "txt": 1,
      "py": 123,
      "txt": 5,
      "py": 5,
      "txt": 2,
      "py": 9,
      "py": 18,
      "txt": 3,
      "py": 6,
      "txt": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 12,
      "py": 4,
      "rc": 2,
      "txt": 1,
      "py": 12,
      "rc": 2,
      "txt": 2,
      "py": 2,
      "py": 2,
      "py": 3,
      "py": 1,
      "py": 13,
      "py": 1,
      "py": 2,
      "py": 7,
      "py": 1,
      "py": 1,
      "py": 2,
      "py": 3,
      "py": 3,
      "py": 3,
      "py": 8,
      "py": 20,
      "py": 15,
      "py": 1,
      "py": 5,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 4,
      "py": 17,
      "py": 2,
      "py": 4,
      "txt": 1,
      "txt": 1,
      "txt": 11,
      "txt": 2,
      "txt": 3,
      "txt": 2,
      "txt": 1,
      "txt": 4,
      "txt": 6,
      "txt": 2,
      "txt": 2,
      "txt": 3,
      "txt": 3,
      "pylintrc": 4,
      "py": 1,
      "py": 2,
      "py": 5,
      "py": 6,
      "py": 1,
      "comments_pylintrc": 7,
      "py": 13,
      "py": 3,
      "py": 3,
      "py": 2,
      "py": 32,
      "py": 4,
      "py": 3,
      "py": 1,
      "py": 3,
      "py": 2,
      "py": 11,
      "py": 1,
      "py": 2,
      "py": 6,
      "py": 11,
      "py": 107,
      "py": 13,
      "py": 32,
      "py": 62,
      "py": 389,
      "py": 242,
      "py": 84,
      "py": 38,
      "py": 323,
      "py": 74,
      "py": 69,
      "py": 42,
      "py": 645,
      "py": 64,
      "py": 174,
      "py": 72,
      "py": 33,
      "py": 207,
      "py": 152,
      "py": 83,
      "py": 20,
      "py": 364,
      "py": 79,
      "py": 90,
      "py": 65,
      "py": 29,
      "py": 52,
      "py": 24,
      "ini": 44
    },
    "Gabriel R Sezefredo": {
      "txt": 4,
      "ChangeLog": 5,
      "py": 4,
      "py": 6
    },
    "Yannack": {
      "txt": 2,
      "py": 16,
      "pylintrc": 3,
      "py": 8
    },
    "David Douard": {
      "ChangeLog": 1,
      "rst": 13,
      "copyright": 456,
      "svg": 267,
      "py": 4,
      "py": 6,
      "py": 11,
      "py": 1,
      "py": 2,
      "py": 1,
      "py": 3,
      "py": 4,
      "py": 3,
      "py": 5,
      "py": 4,
      "py": 6,
      "py": 8,
      "py": 2,
      "py": 6,
      "py": 3,
      "py": 4,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 12,
      "py": 1
    },
    "LCD 47": {
      "ChangeLog": 2
    },
    "Ben Green": {
      "txt": 2,
      "ChangeLog": 8,
      "rst": 5,
      "py": 10,
      "py": 7,
      "py": 10,
      "txt": 3,
      "py": 13
    },
    "Moises Lopez - https://www.vauxoo.com/": {
      "coveragerc": 9,
      "gitignore": 2,
      "yml": 4,
      "txt": 3,
      "ChangeLog": 6,
      "rst": 7,
      "rst": 1,
      "py": 2,
      "py": 3,
      "py": 40,
      "py": 1,
      "py": 2,
      "py": 131,
      "py": 205,
      "py": 22,
      "py": 4,
      "rc": 4,
      "txt": 2,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 10,
      "py": 28,
      "py": 14,
      "py": 1,
      "txt": 1,
      "py": 14,
      "py": 3,
      "txt": 1,
      "py": 4,
      "txt": 1,
      "py": 3,
      "txt": 1,
      "py": 4,
      "txt": 1,
      "py": 9,
      "py": 9,
      "py": 2,
      "py": 4,
      "py": 3,
      "py": 6,
      "py": 8,
      "py": 3,
      "py": 8,
      "py": 1,
      "rc": 6,
      "py": 30,
      "py": 15,
      "ini": 35
    },
    "Danny Hermes": {
      "txt": 2,
      "ChangeLog": 2,
      "py": 1,
      "py": 18
    },
    "Hugues Bruant": {
      "ChangeLog": 2,
      "py": 20
    },
    "Steven M. Vascellaro": {
      "py": 4
    },
    "Tim Hatch": {
      "ChangeLog": 4,
      "py": 1
    },
    "fadedDexofan": {
      "txt": 1,
      "ChangeLog": 4,
      "rst": 4,
      "py": 13,
      "py": 6,
      "rc": 2,
      "txt": 1
    },
    "Svet": {
      "txt": 2,
      "ChangeLog": 6,
      "py": 8,
      "py": 11,
      "py": 27
    },
    "Omega Weapon": {
      "ChangeLog": 4
    },
    "sbagan": {
      "txt": 2,
      "py": 1,
      "py": 1
    },
    "Łukasz Sznuk": {
      "py": 8,
      "py": 8,
      "rc": 2
    },
    "daniel_goldsmith": {},
    "Łukasz Rogalski": {
      "md": 1,
      "yml": 5,
      "ChangeLog": 87,
      "yml": 3,
      "rst": 9,
      "rst": 2,
      "rst": 80,
      "rst": 78,
      "rst": 35,
      "py": 1,
      "py": 97,
      "py": 24,
      "py": 3,
      "py": 2,
      "py": 27,
      "py": 26,
      "py": 2,
      "py": 41,
      "py": 3,
      "py": 1,
      "py": 2,
      "py": 18,
      "py": 39,
      "py": 41,
      "py": 9,
      "py": 3,
      "py": 9,
      "py": 1,
      "py": 7,
      "ini": 1,
      "py": 29,
      "py": 15,
      "txt": 1,
      "py": 53,
      "rc": 2,
      "py": 5,
      "py": 10,
      "txt": 10,
      "py": 15,
      "rc": 2,
      "py": 6,
      "rc": 2,
      "txt": 1,
      "rc": 2,
      "py": 57,
      "txt": 3,
      "txt": 3,
      "rc": 1,
      "py": 12,
      "py": 4,
      "txt": 2,
      "rc": 1,
      "py": 22,
      "rc": 13,
      "txt": 1,
      "py": 22,
      "rc": 13,
      "txt": 1,
      "py": 1,
      "txt": 16,
      "py": 21,
      "txt": 1,
      "py": 4,
      "txt": 7,
      "py": 52,
      "rc": 3,
      "py": 52,
      "rc": 3,
      "py": 19,
      "rc": 2,
      "txt": 2,
      "py": 20,
      "txt": 1,
      "py": 2,
      "py": 2,
      "rc": 2,
      "txt": 1,
      "py": 6,
      "py": 3,
      "rc": 2,
      "txt": 2,
      "py": 39,
      "txt": 7,
      "py": 23,
      "py": 4,
      "rc": 2,
      "txt": 2,
      "py": 9,
      "txt": 1,
      "txt": 1,
      "py": 3,
      "py": 89,
      "py": 34,
      "py": 9,
      "py": 45,
      "py": 5,
      "ini": 1
    },
    "Glenn Matthews": {
      "txt": 3,
      "ChangeLog": 24,
      "Makefile": 8,
      "py": 64,
      "py": 13,
      "rst": 1,
      "rst": 51,
      "py": 2,
      "py": 1,
      "py": 13,
      "py": 66,
      "rst": 9,
      "py": 15,
      "rst": 152,
      "rst": 37,
      "py": 1,
      "py": 4,
      "py": 47,
      "py": 76,
      "py": 62,
      "py": 12,
      "py": 16,
      "py": 1
    },
    "Andy Palmer": {
      "txt": 2,
      "ChangeLog": 4,
      "rst": 2,
      "py": 44,
      "py": 53,
      "txt": 8
    },
    "Fabrice Douchant": {},
    "hippo91": {
      "txt": 1,
      "ChangeLog": 107,
      "rst": 107,
      "rst": 42,
      "rst": 9,
      "rst": 13,
      "py": 59,
      "py": 103,
      "py": 76,
      "py": 20,
      "py": 33,
      "py": 2,
      "py": 121,
      "py": 16,
      "py": 30,
      "py": 79,
      "py": 2,
      "py": 1,
      "py": 6,
      "py": 1,
      "py": 38,
      "py": 2,
      "py": 134,
      "py": 37,
      "py": 42,
      "txt": 3,
      "py": 2,
      "txt": 1,
      "py": 4,
      "py": 9,
      "py": 246,
      "rc": 2,
      "txt": 13,
      "py": 41,
      "txt": 5,
      "py": 7,
      "py": 1,
      "py": 8,
      "py": 10,
      "txt": 5,
      "py": 95,
      "txt": 15,
      "py": 2,
      "txt": 1,
      "py": 2,
      "py": 78,
      "rc": 2,
      "py": 2,
      "txt": 1,
      "py": 1,
      "py": 7,
      "py": 34,
      "txt": 4,
      "py": 124,
      "txt": 17,
      "py": 9,
      "txt": 19,
      "py": 1,
      "txt": 5,
      "py": 1,
      "py": 2,
      "txt": 1,
      "txt": 1,
      "txt": 1,
      "txt": 4,
      "py": 94,
      "py": 5,
      "py": 1
    },
    "Pierre Sassoulas": {
      "cfg": 7,
      "yaml": 5,
      "txt": 6,
      "ChangeLog": 18,
      "rst": 19,
      "epylint": 1,
      "pylint": 1,
      "pyreverse": 1,
      "symilar": 1,
      "py": 38,
      "rst": 2,
      "py": 49,
      "py": 8,
      "rst": 12,
      "py": 15,
      "py": 14,
      "py": 5,
      "py": 2,
      "py": 39,
      "py": 184,
      "py": 17,
      "py": 4,
      "py": 1,
      "py": 5,
      "py": 18,
      "py": 1,
      "py": 3,
      "py": 2,
      "py": 10,
      "py": 4,
      "py": 4,
      "py": 4,
      "py": 5,
      "py": 2,
      "py": 4,
      "py": 14,
      "py": 5,
      "py": 7,
      "py": 2,
      "py": 43,
      "py": 2,
      "py": 1,
      "py": 2,
      "py": 1,
      "py": 6,
      "py": 1,
      "py": 1,
      "py": 3,
      "py": 1,
      "py": 1,
      "py": 2,
      "py": 31,
      "py": 54,
      "py": 53,
      "py": 82,
      "py": 90,
      "py": 392,
      "py": 128,
      "py": 1,
      "py": 2,
      "py": 1,
      "py": 2,
      "py": 1,
      "py": 7,
      "py": 66,
      "py": 21,
      "py": 1,
      "py": 79,
      "py": 2,
      "py": 9,
      "py": 20,
      "py": 75,
      "py": 131,
      "py": 365,
      "py": 51,
      "py": 2,
      "py": 5,
      "py": 477,
      "py": 73,
      "py": 7,
      "py": 200,
      "py": 200,
      "py": 129,
      "py": 7,
      "py": 16,
      "py": 2,
      "py": 9,
      "py": 47,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 5,
      "txt": 5,
      "py": 1,
      "txt": 1,
      "txt": 1,
      "py": 3,
      "txt": 3,
      "py": 47,
      "txt": 5,
      "py": 5,
      "txt": 2,
      "py": 1,
      "txt": 2,
      "py": 7,
      "py": 6,
      "py": 1,
      "txt": 2,
      "py": 77,
      "py": 56,
      "py": 112,
      "py": 269,
      "py": 92,
      "py": 2,
      "py": 24,
      "py": 2,
      "py": 2,
      "py": 19,
      "py": 67,
      "py": 1,
      "py": 3,
      "py": 2,
      "py": 1,
      "py": 1,
      "py": 2,
      "py": 2,
      "py": 1,
      "py": 1,
      "py": 2,
      "py": 193,
      "py": 1,
      "py": 15,
      "py": 2,
      "py": 2,
      "py": 3,
      "py": 2,
      "py": 4,
      "py": 69,
      "py": 1,
      "ini": 3
    },
    "Daniel Harding": {
      "ChangeLog": 3,
      "py": 20,
      "py": 2
    },
    "ludal@logilab.fr": {
      "rst": 2
    },
    "anatoly techtonik": {
      "ChangeLog": 1,
      "py": 3
    },
    "ttenhoeve-aa": {
      "ChangeLog": 3,
      "py": 18,
      "py": 18
    },
    "Krzysztof Czapla": {
      "ChangeLog": 4,
      "rst": 2,
      "py": 1,
      "py": 8
    },
    "Hugo": {
      "gitignore": 1,
      "py": 1,
      "rc": 1
    },
    "Ionel Maries Cristian": {
      "changelog": 6
    },
    "Craig Citro": {
      "py": 1,
      "py": 13
    },
    "Fantix King": {
      "txt": 2,
      "ChangeLog": 3,
      "py": 1,
      "py": 14,
      "txt": 1
    },
    "Alex Jurkiewicz": {
      "txt": 4
    },
    "Sylvain Thénault": {
      "txt": 22,
      "ChangeLog": 730,
      "DEPENDS": 1,
      "in": 5,
      "rst": 6,
      "epylint": 2,
      "bat": 1,
      "pylint": 2,
      "pyreverse": 3,
      "symilar": 2,
      "changelog": 165,
      "control": 14,
      "rules": 5,
      "Makefile": 1,
      "py": 1,
      "rst": 21,
      "rst": 131,
      "rst": 175,
      "rst": 1,
      "rst": 1,
      "rst": 9,
      "rst": 12,
      "rst": 29,
      "el": 4,
      "el": 9,
      "startup": 1,
      "pylintrc": 37,
      "1": 36,
      "1": 1,
      "py": 12,
      "py": 3,
      "py": 9,
      "py": 178,
      "py": 96,
      "py": 25,
      "py": 4,
      "py": 23,
      "py": 22,
      "py": 57,
      "py": 3,
      "py": 9,
      "py": 59,
      "py": 27,
      "py": 121,
      "py": 52,
      "py": 6,
      "py": 106,
      "py": 119,
      "py": 11,
      "py": 9,
      "py": 5,
      "py": 6,
      "py": 11,
      "py": 1,
      "py": 22,
      "py": 16,
      "py": 10,
      "ascript": 2,
      "dot": 6,
      "dot": 4,
      "py": 15,
      "py": 22,
      "py": 8,
      "py": 1,
      "py": 2,
      "py": 14,
      "py": 3,
      "py": 3,
      "txt": 1,
      "py": 5,
      "py": 1,
      "py": 6,
      "py": 11,
      "py": 5,
      "py": 26,
      "py": 36,
      "py": 14,
      "py": 1,
      "py": 24,
      "py": 8,
      "py": 25,
      "py": 1,
      "py": 1,
      "py": 7,
      "py": 6,
      "py": 2,
      "py": 30,
      "py": 23,
      "py": 4,
      "py": 37,
      "py": 19,
      "py": 1,
      "py": 6,
      "py": 16,
      "py": 23,
      "py": 18,
      "py": 8,
      "py": 3,
      "py": 2,
      "py": 8,
      "py": 8,
      "py": 23,
      "py": 6,
      "txt": 1,
      "txt": 2,
      "txt": 1,
      "txt": 1,
      "txt": 4,
      "txt": 1,
      "txt": 1,
      "txt": 1,
      "txt": 5,
      "txt": 1,
      "txt": 2,
      "txt": 4,
      "txt": 9,
      "txt": 1,
      "txt": 3,
      "txt": 8,
      "py": 4,
      "py": 5,
      "py": 7,
      "py": 936,
      "py": 5,
      "py": 1,
      "py": 1,
      "py": 5,
      "py": 3,
      "py": 5,
      "py": 4,
      "py": 1,
      "py": 17,
      "py": 1,
      "py": 12,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 11,
      "py": 17,
      "py": 2,
      "py": 35,
      "py": 1,
      "ini": 3
    },
    "Torsten Marek": {
      "txt": 7,
      "ChangeLog": 180,
      "rst": 88,
      "py": 2,
      "py": 75,
      "py": 439,
      "py": 7,
      "py": 51,
      "py": 10,
      "py": 3,
      "py": 20,
      "py": 5,
      "py": 28,
      "py": 31,
      "py": 6,
      "py": 14,
      "py": 59,
      "py": 3,
      "py": 18,
      "py": 58,
      "py": 1,
      "py": 1,
      "py": 1,
      "txt": 2,
      "py": 9,
      "py": 3,
      "txt": 3,
      "py": 55,
      "txt": 20,
      "py": 180,
      "txt": 42,
      "py": 2,
      "rc": 2,
      "py": 111,
      "txt": 6,
      "py": 12,
      "rc": 2,
      "py": 74,
      "txt": 17,
      "py": 13,
      "py": 3,
      "py": 23,
      "txt": 2,
      "py": 7,
      "py": 3,
      "txt": 4,
      "py": 1,
      "py": 6,
      "txt": 1,
      "py": 5,
      "rc": 3,
      "txt": 1,
      "py": 21,
      "py": 13,
      "txt": 3,
      "py": 39,
      "py": 45,
      "py": 3,
      "txt": 5,
      "py": 12,
      "py": 7,
      "py": 7,
      "txt": 5,
      "py": 1,
      "py": 2,
      "txt": 1,
      "py": 20,
      "txt": 2,
      "py": 114,
      "rc": 5,
      "py": 15,
      "py": 4,
      "py": 15,
      "txt": 3,
      "py": 3,
      "py": 8,
      "py": 8,
      "py": 4,
      "py": 18,
      "txt": 54,
      "txt": 1,
      "py": 4,
      "py": 13,
      "py": 9,
      "rc": 2,
      "txt": 3,
      "py": 9,
      "rc": 2,
      "txt": 3,
      "py": 5,
      "py": 6,
      "py": 2,
      "py": 35,
      "py": 9,
      "py": 8,
      "rc": 2,
      "txt": 4,
      "py": 32,
      "txt": 1,
      "py": 2,
      "txt": 2,
      "py": 2,
      "txt": 1,
      "py": 38,
      "py": 11,
      "py": 1,
      "py": 1,
      "py": 8,
      "py": 11,
      "py": 8,
      "py": 12,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 2,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 7,
      "py": 2,
      "py": 19,
      "py": 1,
      "py": 3,
      "txt": 4,
      "txt": 1,
      "txt": 1,
      "txt": 1,
      "txt": 6,
      "txt": 1,
      "txt": 1,
      "txt": 1,
      "txt": 1,
      "txt": 3,
      "py": 1,
      "py": 7,
      "py": 2,
      "py": 5,
      "py": 40,
      "py": 1,
      "py": 38,
      "py": 128,
      "py": 1,
      "py": 102,
      "py": 24,
      "py": 9,
      "py": 1,
      "py": 2,
      "py": 5,
      "py": 50,
      "py": 1,
      "ini": 1
    },
    "BioGeek": {
      "py": 1
    },
    "mihai_stan": {
      "py": 3,
      "py": 3
    },
    "Brandon W Maister": {
      "rst": 1,
      "rst": 2
    },
    "Athos Ribeiro": {
      "txt": 3,
      "ChangeLog": 2,
      "py": 1,
      "py": 1
    },
    "T.Rzepka": {},
    "Alexander Pervakov": {
      "rst": 2,
      "1": 3
    },
    "Charles Hebert": {
      "ChangeLog": 3,
      "py": 60,
      "txt": 12
    },
    "Xi Shen": {},
    "bluesheeptoken": {
      "txt": 1,
      "py": 1
    },
    "Michael Kefeder": {
      "py": 2,
      "py": 19
    },
    "Nathan Marrow": {
      "txt": 2,
      "ChangeLog": 4,
      "py": 4,
      "py": 15
    },
    "Erik": {
      "ChangeLog": 3,
      "py": 2,
      "py": 1,
      "py": 55,
      "py": 45,
      "py": 18,
      "py": 23,
      "py": 1
    },
    "Peter Kolbus": {
      "txt": 2,
      "ChangeLog": 2,
      "pylintrc": 248,
      "1": 176,
      "py": 6,
      "py": 7
    },
    "Benjamin Drung": {
      "txt": 2,
      "Makefile": 3,
      "py": 7
    },
    "Robert Schweizer": {
      "txt": 2,
      "ChangeLog": 7,
      "rst": 7,
      "py": 1,
      "py": 32,
      "py": 1,
      "py": 1,
      "py": 1,
      "txt": 2,
      "py": 137,
      "py": 137,
      "py": 1,
      "txt": 8
    },
    "Chris Lamb": {
      "py": 1,
      "py": 1
    },
    "David Shea": {
      "ChangeLog": 1,
      "py": 62,
      "py": 184,
      "py": 56
    },
    "Djailla": {
      "yaml": 2,
      "yml": 5,
      "txt": 2,
      "ChangeLog": 6,
      "py": 1,
      "py": 5,
      "py": 6,
      "py": 5,
      "py": 7,
      "ini": 2
    },
    "Jared Garst": {
      "py": 4,
      "rc": 3,
      "txt": 1,
      "py": 1,
      "py": 6,
      "rc": 2,
      "txt": 1,
      "rc": 1,
      "py": 3,
      "rc": 2,
      "txt": 1
    },
    "glmdgrielson": {
      "txt": 1,
      "py": 3,
      "py": 7,
      "py": 9
    },
    "Arun Persaud": {
      "el": 2
    },
    "Hugues": {
      "txt": 3,
      "ChangeLog": 4,
      "py": 5,
      "py": 2
    },
    "danields": {
      "py": 5,
      "py": 1,
      "txt": 1,
      "py": 4,
      "txt": 4,
      "py": 4,
      "rc": 2,
      "txt": 2
    },
    "Ville Skyttä": {
      "copyrite_aliases": 8,
      "yml": 1,
      "ChangeLog": 11,
      "changelog": 1,
      "Makefile": 2,
      "rst": 1,
      "rst": 1,
      "rst": 3,
      "rst": 2,
      "el": 2,
      "pylintrc": 215,
      "1": 58,
      "py": 26,
      "py": 1,
      "py": 1,
      "py": 2,
      "py": 4,
      "py": 1,
      "py": 1,
      "py": 3,
      "py": 8,
      "py": 1,
      "py": 2,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 3,
      "py": 1,
      "py": 1,
      "py": 1,
      "txt": 1,
      "py": 1,
      "py": 29,
      "txt": 7,
      "py": 1,
      "py": 1,
      "py": 3,
      "txt": 2,
      "txt": 1,
      "txt": 2,
      "py": 1,
      "py": 2,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 2,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 2,
      "py": 1,
      "py": 1
    },
    "Chris Rebert": {
      "ChangeLog": 5,
      "py": 1,
      "py": 76,
      "txt": 18
    },
    "Michka Popoff": {
      "py": 10,
      "txt": 1,
      "txt": 2,
      "txt": 1
    },
    "Derek Gustafson": {
      "ChangeLog": 9,
      "py": 2,
      "py": 1,
      "py": 5,
      "py": 13,
      "ini": 2,
      "py": 45,
      "py": 19,
      "py": 1,
      "py": 6,
      "py": 26,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 16,
      "py": 12,
      "py": 11,
      "py": 17,
      "py": 18,
      "txt": 5,
      "py": 3,
      "py": 5,
      "py": 23,
      "py": 23,
      "rc": 1,
      "py": 12,
      "rc": 2,
      "txt": 1,
      "py": 17,
      "py": 11,
      "py": 27,
      "py": 51,
      "py": 17,
      "py": 4,
      "py": 1,
      "py": 1,
      "py": 3,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 23,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 55,
      "py": 31,
      "py": 17,
      "py": 140,
      "py": 35,
      "py": 30,
      "py": 18,
      "py": 2,
      "py": 19,
      "py": 7,
      "ini": 1
    },
    "Luis Escobar": {
      "txt": 2,
      "py": 39,
      "py": 39,
      "py": 12
    },
    "Mitar": {
      "py": 1,
      "py": 37
    },
    "Marianna Polatoglou": {
      "txt": 2,
      "ChangeLog": 8,
      "rst": 11,
      "py": 3,
      "py": 12,
      "py": 32,
      "txt": 3,
      "py": 14
    },
    "Banjamin Freeman": {
      "txt": 2,
      "rst": 8,
      "py": 6,
      "py": 11,
      "txt": 1
    },
    "Dan Goldsmith": {},
    "Santiago Castro": {
      "py": 1
    },
    "James Morgensen": {
      "ChangeLog": 4,
      "py": 2,
      "py": 26
    },
    "Erik Eriksson": {
      "py": 1
    },
    "Nir Soffer": {
      "rst": 1
    },
    "craig-sh": {
      "txt": 2,
      "ChangeLog": 14,
      "py": 206,
      "py": 62,
      "txt": 3,
      "py": 64,
      "txt": 3,
      "py": 64,
      "txt": 3,
      "py": 85,
      "txt": 6,
      "py": 62,
      "txt": 3,
      "py": 71,
      "txt": 4,
      "py": 71,
      "txt": 4,
      "py": 64,
      "txt": 3,
      "py": 64,
      "txt": 3,
      "py": 64,
      "txt": 3
    },
    "Daniele Procida": {
      "rst": 59
    },
    "Matthijs Blom": {
      "txt": 2,
      "ChangeLog": 4,
      "py": 5
    },
    "Sandro Tosi": {
      "Makefile": 1
    },
    "Konstantin": {
      "txt": 1,
      "ChangeLog": 21,
      "rst": 57,
      "py": 109,
      "py": 110,
      "txt": 11,
      "py": 25,
      "txt": 2,
      "py": 9,
      "txt": 1,
      "py": 80,
      "txt": 4,
      "py": 39,
      "txt": 13
    },
    "Mitchell T.H. Young": {
      "txt": 2,
      "ChangeLog": 2,
      "py": 2
    },
    "Martin Vielsmaier": {
      "txt": 2,
      "ChangeLog": 2,
      "py": 2,
      "py": 16
    },
    "Ned Batchelder": {
      "rst": 3,
      "py": 1
    },
    "Alexander Todorov": {
      "txt": 6,
      "ChangeLog": 18,
      "rst": 124,
      "rst": 3,
      "py": 1,
      "py": 1,
      "py": 9,
      "py": 43,
      "py": 1,
      "py": 1,
      "py": 58,
      "py": 59,
      "py": 24,
      "py": 16,
      "py": 44,
      "py": 16,
      "py": 32,
      "py": 1,
      "py": 11,
      "txt": 2,
      "py": 9,
      "txt": 1
    },
    "Aru Sahni": {
      "gitignore": 18,
      "txt": 2,
      "rst": 32,
      "py": 3,
      "py": 22,
      "py": 5
    },
    "Jared Deckard": {
      "Makefile": 1
    },
    "Nicolas Chauvat": {
      "ChangeLog": 2,
      "rst": 1,
      "Makefile": 138,
      "rst": 6,
      "py": 185,
      "rst": 41,
      "rst": 16,
      "rst": 10,
      "rst": 27,
      "rst": 16,
      "rst": 79,
      "rst": 17,
      "rst": 59,
      "rst": 66,
      "rst": 58,
      "py": 2
    },
    "amdev@AMDEV-WS01.cisco.com": {
      "rst": 15
    },
    "Stephane Wirtel": {
      "py": 16,
      "py": 1,
      "py": 18,
      "rc": 2
    },
    "root": {
      "ChangeLog": 305,
      "DEPENDS": 1,
      "in": 2,
      "rst": 11,
      "pylint": 1,
      "bat": 1,
      "symilar": 1,
      "bat": 1,
      "changelog": 203,
      "control": 19,
      "copyright": 6,
      "other": 76,
      "examples": 1,
      "manpages": 1,
      "postinst": 6,
      "prerm": 6,
      "rules": 44,
      "rst": 40,
      "el": 5,
      "startup": 16,
      "py": 14,
      "py": 20,
      "pylintrc": 42,
      "pylintrc_camelcase": 24,
      "1": 62,
      "py": 1,
      "py": 16,
      "py": 29,
      "py": 88,
      "py": 157,
      "py": 87,
      "py": 26,
      "py": 106,
      "py": 114,
      "py": 16,
      "py": 40,
      "py": 72,
      "py": 214,
      "py": 47,
      "py": 39,
      "py": 105,
      "py": 21,
      "py": 36,
      "py": 213,
      "py": 5,
      "py": 63,
      "py": 114,
      "py": 46,
      "py": 1,
      "py": 46,
      "py": 4,
      "cfg": 3,
      "py": 25,
      "py": 25,
      "py": 8,
      "py": 6,
      "py": 13,
      "py": 32,
      "py": 4,
      "py": 9,
      "py": 11,
      "py": 41,
      "py": 4,
      "py": 45,
      "py": 3,
      "py": 28,
      "py": 1,
      "py": 35,
      "py": 11,
      "py": 6,
      "py": 41,
      "py": 22,
      "py": 3,
      "py": 3,
      "py": 4,
      "py": 13,
      "py": 5,
      "py": 23,
      "py": 1013,
      "py": 68,
      "py": 13,
      "py": 13,
      "py": 14,
      "py": 5,
      "py": 1,
      "py": 8,
      "py": 3,
      "py": 14,
      "py": 3,
      "py": 3,
      "py": 8,
      "py": 10,
      "py": 90,
      "py": 30,
      "py": 7,
      "py": 31,
      "py": 13,
      "py": 39,
      "py": 17,
      "py": 42,
      "py": 12,
      "py": 12,
      "py": 3,
      "py": 4,
      "py": 22,
      "py": 4,
      "py": 17,
      "py": 5,
      "py": 13,
      "py": 11,
      "noext": 4,
      "py": 3,
      "py": 11,
      "txt": 1,
      "txt": 1,
      "txt": 2,
      "txt": 6,
      "txt": 3,
      "txt": 2,
      "txt": 1,
      "txt": 2,
      "txt": 2,
      "txt": 2,
      "txt": 2,
      "txt": 10,
      "py": 15,
      "py": 20,
      "py": 50,
      "py": 35,
      "py": 4,
      "py": 6,
      "py": 2,
      "py": 10,
      "py": 1,
      "py": 1,
      "py": 18,
      "py": 16,
      "py": 9,
      "py": 18,
      "py": 10,
      "py": 1,
      "py": 8,
      "py": 4,
      "py": 39,
      "py": 19
    },
    "Erik Wright": {
      "ChangeLog": 6,
      "py": 8,
      "py": 8,
      "txt": 2,
      "py": 10,
      "txt": 1,
      "py": 7
    },
    "Sardorbek Imomaliev": {
      "txt": 2,
      "rst": 3
    },
    "sdet_liang": {
      "py": 1
    },
    "Jonathan Kotta": {
      "el": 74
    },
    "Sushobhit": {
      "yml": 9,
      "txt": 7,
      "ChangeLog": 37,
      "rst": 35,
      "rst": 12,
      "rst": 9,
      "rst": 7,
      "py": 36,
      "py": 4,
      "py": 11,
      "py": 36,
      "py": 8,
      "py": 2,
      "py": 8,
      "py": 4,
      "py": 1,
      "py": 2,
      "py": 1,
      "py": 4,
      "py": 135,
      "py": 11,
      "py": 1,
      "py": 14,
      "txt": 3,
      "py": 1,
      "py": 40,
      "txt": 12,
      "py": 38,
      "txt": 2,
      "py": 68,
      "txt": 2,
      "py": 1,
      "py": 46,
      "txt": 3,
      "py": 1,
      "py": 8,
      "txt": 5,
      "py": 16,
      "txt": 8,
      "py": 1,
      "py": 1,
      "txt": 4,
      "py": 18,
      "py": 1,
      "py": 6,
      "py": 1,
      "py": 2,
      "py": 3
    },
    "Arthur Lutz": {},
    "Rogalski, Lukasz": {
      "py": 28,
      "py": 28
    },
    "guillaume2": {
      "ChangeLog": 7,
      "rst": 19,
      "py": 8,
      "py": 5,
      "txt": 2,
      "py": 1
    },
    "moylop260": {
      "py": 2,
      "py": 5,
      "rc": 2,
      "txt": 2
    },
    "David Lindquist": {
      "ChangeLog": 3,
      "py": 6,
      "py": 14
    },
    "Aurelien Campeas": {
      "ChangeLog": 2,
      "py": 1
    },
    "root@clnstor.am.local": {},
    "syutbai": {
      "txt": 2,
      "ChangeLog": 4,
      "rst": 2,
      "py": 18,
      "py": 16,
      "py": 8
    },
    "Florian Bruhin": {
      "ChangeLog": 2,
      "py": 1,
      "py": 1,
      "py": 128,
      "py": 17,
      "py": 1,
      "py": 81,
      "py": 1,
      "py": 62,
      "py": 3,
      "txt": 2,
      "py": 16
    },
    "Nick Bastin": {
      "ChangeLog": 4,
      "py": 5
    },
    "Alain Leufroy": {
      "ChangeLog": 5,
      "py": 30,
      "py": 5,
      "py": 23
    },
    "Ashley Whetter": {
      "gitignore": 2,
      "txt": 2,
      "ChangeLog": 73,
      "in": 5,
      "py": 5,
      "rst": 19,
      "rst": 284,
      "rst": 10,
      "rst": 9,
      "rst": 2,
      "txt": 4,
      "rst": 7,
      "rst": 19,
      "rst": 22,
      "rst": 4,
      "rst": 10,
      "rst": 24,
      "rst": 92,
      "rst": 5,
      "rst": 16,
      "rst": 26,
      "rst": 2,
      "py": 37,
      "py": 5,
      "py": 11,
      "py": 11,
      "py": 1,
      "py": 6,
      "py": 4,
      "py": 34,
      "py": 18,
      "py": 19,
      "py": 30,
      "py": 72,
      "py": 507,
      "py": 131,
      "py": 3,
      "py": 17,
      "py": 9,
      "cfg": 6,
      "py": 1,
      "py": 918,
      "py": 58,
      "py": 306,
      "py": 353,
      "py": 335,
      "py": 20,
      "rc": 1,
      "py": 1,
      "txt": 1,
      "py": 6,
      "txt": 5,
      "py": 1,
      "py": 44,
      "txt": 1,
      "py": 11,
      "py": 10,
      "py": 37,
      "txt": 4,
      "py": 5,
      "rc": 2,
      "txt": 1,
      "py": 51,
      "rc": 1,
      "txt": 1,
      "py": 20,
      "txt": 1,
      "py": 5,
      "txt": 2,
      "py": 1,
      "py": 6,
      "txt": 2,
      "py": 40,
      "py": 10,
      "py": 51,
      "py": 1,
      "ini": 3
    },
    "Daniel Balparda": {
      "ChangeLog": 3,
      "py": 5,
      "py": 3,
      "py": 2,
      "py": 22,
      "txt": 2,
      "txt": 6
    },
    "Michal Nowikowski": {
      "txt": 2,
      "ChangeLog": 18,
      "Makefile": 69,
      "yml": 6,
      "ps1": 27,
      "rst": 15,
      "rst": 3,
      "pylintrc": 26,
      "1": 8,
      "py": 13,
      "py": 93,
      "py": 1,
      "py": 3,
      "py": 3,
      "rc": 2,
      "txt": 2,
      "py": 6,
      "py": 31
    },
    "achernetz": {},
    "Mr. Senko": {
      "txt": 1,
      "ChangeLog": 8,
      "rst": 2,
      "py": 25,
      "py": 320,
      "txt": 1,
      "py": 5,
      "txt": 6,
      "py": 1,
      "py": 10,
      "txt": 2,
      "py": 1,
      "py": 4,
      "ini": 1
    },
    "Andrzej Klajnert": {
      "txt": 2,
      "ChangeLog": 4,
      "pylintrc": 2,
      "py": 1,
      "pylintrc": 1,
      "py": 4
    },
    "Bruno P. Kinoshita": {
      "py": 1
    },
    "John Kirkham": {},
    "Nicolas Dickreuter": {
      "txt": 2,
      "ChangeLog": 4
    },
    "Radostin Stoyanov": {
      "rst": 3
    },
    "Mike Bryant": {
      "ChangeLog": 3,
      "py": 1,
      "py": 18,
      "txt": 2
    },
    "Ben James": {
      "txt": 2,
      "ChangeLog": 4,
      "rst": 68,
      "py": 4,
      "py": 21,
      "txt": 2
    },
    "Yuri Bochkarev": {
      "py": 31
    },
    "Matus Valo": {
      "txt": 2,
      "ChangeLog": 9,
      "rst": 23,
      "py": 12,
      "py": 6,
      "py": 50
    },
    "jpkotta": {
      "el": 39
    },
    "Yoichi Nakayama": {
      "rst": 1
    },
    "Jim Robertson": {
      "txt": 1,
      "ChangeLog": 16,
      "py": 34,
      "py": 1,
      "py": 11,
      "py": 1,
      "py": 23,
      "py": 6,
      "py": 214,
      "py": 110,
      "txt": 7,
      "py": 41,
      "txt": 4,
      "py": 5,
      "txt": 2
    },
    "Daniela Plascencia": {
      "ChangeLog": 3
    },
    "Aivar Annamaa": {
      "txt": 2,
      "ChangeLog": 4,
      "py": 12
    },
    "Anthony Sottile": {
      "yaml": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 8,
      "py": 1,
      "py": 2,
      "py": 1,
      "py": 27,
      "py": 1,
      "py": 11
    },
    "Caio Carrara": {
      "txt": 2,
      "ChangeLog": 3,
      "py": 1,
      "py": 24
    },
    "Anthony Foglia": {
      "txt": 2,
      "ChangeLog": 4,
      "py": 14,
      "txt": 8
    },
    "Don Jayamanne": {
      "rst": 46
    },
    "Rémi Cardona": {
      "txt": 2,
      "py": 8,
      "py": 1,
      "txt": 4
    },
    "glegoux": {
      "py": 21
    },
    "paschich": {
      "rst": 1
    },
    "Alan Chan": {
      "txt": 2,
      "ChangeLog": 2,
      "rst": 3,
      "py": 8,
      "py": 3,
      "py": 61,
      "py": 9,
      "py": 23
    },
    "Paul Renvoise": {
      "txt": 2,
      "ChangeLog": 8,
      "rst": 26,
      "py": 76,
      "py": 55,
      "txt": 13
    },
    "Alok Singh": {
      "ChangeLog": 1
    },
    "Dmytro Kyrychuk": {
      "rst": 14
    },
    "Hugo van Kemenade": {
      "txt": 2,
      "py": 7,
      "py": 2,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 2,
      "py": 1,
      "py": 1
    },
    "Pete": {},
    "vinnyrose": {
      "ChangeLog": 3,
      "py": 4,
      "py": 8
    },
    "Jakub Wilk": {
      "ChangeLog": 3,
      "rst": 3,
      "rst": 1,
      "1": 1,
      "1": 1,
      "1": 1,
      "py": 1,
      "py": 1,
      "py": 1
    },
    "ssolanki": {
      "gitignore": 1,
      "yml": 2,
      "txt": 2,
      "ChangeLog": 28,
      "rst": 32,
      "rst": 24,
      "rst": 1,
      "py": 1,
      "py": 20,
      "py": 3,
      "py": 33,
      "py": 4,
      "py": 6,
      "py": 2,
      "py": 2,
      "py": 2,
      "py": 12,
      "py": 87,
      "py": 5,
      "py": 3,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 2,
      "py": 1,
      "py": 2,
      "py": 1,
      "py": 2,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 2,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 60,
      "txt": 5,
      "py": 1,
      "txt": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 20,
      "txt": 2,
      "py": 1,
      "py": 1,
      "txt": 4,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 55,
      "txt": 2,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 14,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 43,
      "txt": 2,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 13,
      "py": 5,
      "txt": 1,
      "py": 27,
      "txt": 4,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "txt": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "txt": 2,
      "py": 1,
      "py": 1,
      "py": 2,
      "ini": 6
    },
    "Eric Froemling": {
      "txt": 2,
      "ChangeLog": 6,
      "py": 3
    },
    "Natalie Serebryakova": {
      "txt": 2,
      "py": 2,
      "py": 1,
      "py": 2
    },
    "frost-nzcr4": {},
    "pyves@crater.logilab.fr": {},
    "Harut": {
      "py": 5,
      "py": 4
    },
    "Gary Tyler McLeod": {
      "ChangeLog": 3,
      "py": 1
    },
    "Anentropic": {
      "pylintrc": 1
    },
    "yory8": {
      "txt": 2,
      "ChangeLog": 4,
      "rst": 5,
      "py": 26,
      "py": 23,
      "txt": 1
    },
    "Cezar": {
      "txt": 1,
      "py": 2,
      "py": 13,
      "py": 10,
      "rc": 1,
      "py": 2,
      "txt": 1,
      "py": 10,
      "rc": 2,
      "py": 7
    },
    "Grant Welch": {
      "py": 1
    },
    "Renat Galimov": {
      "py": 40,
      "py": 50
    },
    "thernstig": {
      "txt": 2,
      "rst": 2
    },
    "Brett Cannon": {
      "txt": 2,
      "ChangeLog": 35,
      "py": 2,
      "py": 3,
      "py": 2,
      "py": 3,
      "py": 1,
      "py": 76,
      "py": 7,
      "py": 3,
      "py": 2,
      "py": 2,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 3,
      "py": 1,
      "py": 2,
      "rc": 1,
      "py": 8,
      "rc": 1,
      "py": 2,
      "py": 4,
      "txt": 6,
      "py": 1,
      "py": 1,
      "py": 4,
      "py": 2,
      "py": 2,
      "py": 4,
      "txt": 2,
      "py": 2,
      "py": 2,
      "py": 2,
      "py": 3,
      "py": 1,
      "py": 2,
      "py": 1,
      "py": 7,
      "py": 3,
      "py": 1,
      "py": 1,
      "py": 4,
      "py": 1,
      "py": 1,
      "py": 3,
      "py": 1,
      "py": 2,
      "py": 5,
      "py": 3,
      "py": 1,
      "py": 3,
      "py": 1,
      "py": 1,
      "py": 2,
      "py": 5,
      "py": 3,
      "py": 2,
      "py": 1,
      "txt": 4,
      "txt": 1,
      "py": 2,
      "py": 2,
      "py": 2,
      "py": 154
    },
    "Pascal Corpet": {
      "txt": 2,
      "ChangeLog": 4,
      "py": 1,
      "py": 1,
      "py": 4,
      "py": 15,
      "rc": 2,
      "txt": 1,
      "py": 19,
      "rc": 2,
      "txt": 1
    },
    "Peter Dawyndt": {
      "ChangeLog": 3,
      "py": 6,
      "txt": 1
    },
    "carl": {
      "ChangeLog": 6,
      "py": 88,
      "py": 5,
      "py": 15,
      "py": 9,
      "txt": 2
    },
    "Pierre-Yves David": {
      "ChangeLog": 1,
      "py": 8,
      "py": 3,
      "py": 11,
      "py": 16
    },
    "Patrik": {},
    "Antonio Ossa": {
      "py": 9,
      "py": 4,
      "txt": 1
    },
    "Chris Murray": {},
    "Yann Dirson": {},
    "Adrian Chirieac": {
      "py": 1,
      "py": 19
    },
    "Hornwitser": {
      "txt": 2,
      "ChangeLog": 8,
      "py": 20,
      "py": 1,
      "py": 1
    },
    "Roy Williams": {
      "txt": 1,
      "ChangeLog": 21,
      "rst": 206,
      "rst": 49,
      "py": 129,
      "py": 12,
      "py": 23,
      "rc": 5,
      "txt": 6,
      "py": 8,
      "rc": 5,
      "txt": 1,
      "py": 290
    },
    "Alex Hearn": {},
    "Brian C. Lane": {},
    "Kraig Brockschmidt": {
      "rst": 3
    },
    "Christopher Zurcher": {},
    "Fureigh": {
      "txt": 2,
      "rst": 2,
      "py": 3,
      "py": 1
    },
    "Andreas Freimuth": {
      "txt": 2,
      "ChangeLog": 8,
      "py": 62,
      "py": 51,
      "rc": 3,
      "txt": 6
    },
    "Dan Garrette": {},
    "Mike Frysinger": {
      "txt": 2,
      "ChangeLog": 2,
      "Makefile": 1,
      "py": 6,
      "py": 3,
      "txt": 1
    },
    "Sergei Lebedev": {
      "txt": 2,
      "ChangeLog": 2,
      "py": 1,
      "py": 12,
      "txt": 3
    },
    "SergeyKosarchuk": {
      "txt": 2,
      "ChangeLog": 7,
      "pylintrc": 4
    },
    "Tim Gates": {
      "txt": 1,
      "ChangeLog": 4,
      "py": 1
    },
    "Mikhail Fesenko": {
      "txt": 2,
      "py": 2,
      "py": 6
    },
    "Pedro Algarvio": {
      "yaml": 4,
      "py": 105,
      "py": 85
    },
    "John Gabriele": {
      "rst": 1
    },
    "ahirnish": {
      "ChangeLog": 2,
      "rst": 20,
      "py": 2,
      "py": 34,
      "txt": 4
    },
    "Konstantin Manna": {
      "py": 1,
      "py": 3,
      "ini": 1
    },
    "laike9m": {
      "txt": 2,
      "ChangeLog": 2
    },
    "PHeanEX": {
      "ChangeLog": 7,
      "rst": 7,
      "py": 51,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 35,
      "txt": 4,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1
    },
    "vtemian": {},
    "C.A.M. Gerlach": {
      "rst": 3
    },
    "agutole": {
      "txt": 2,
      "ChangeLog": 4,
      "py": 10,
      "py": 57
    },
    "Skip Montanaro": {
      "rst": 2
    },
    "Grygorii Iermolenko": {
      "py": 3,
      "py": 22,
      "rc": 1
    },
    "Jason Owen": {
      "txt": 2,
      "ChangeLog": 6,
      "py": 3,
      "py": 2
    },
    "Trevor Bekolay": {
      "txt": 3,
      "ChangeLog": 1,
      "rst": 2,
      "rst": 7,
      "py": 36,
      "py": 24
    },
    "Cosmin Poieana": {
      "py": 26,
      "py": 23,
      "rc": 2,
      "txt": 6,
      "py": 9
    },
    "Maarten ter Huurne": {
      "py": 3,
      "py": 13,
      "py": 8
    },
    "Oisín Moran": {
      "txt": 2,
      "rst": 1
    },
    "Janne Rönkkö": {
      "txt": 1,
      "ChangeLog": 2,
      "py": 5,
      "py": 7,
      "py": 230,
      "py": 2,
      "py": 5,
      "py": 8
    },
    "Martin Pool": {
      "ChangeLog": 8,
      "py": 1,
      "py": 3,
      "py": 9,
      "py": 3,
      "py": 4,
      "txt": 5,
      "py": 5
    },
    "Anubhav": {
      "txt": 2,
      "ChangeLog": 4,
      "rst": 6,
      "py": 12,
      "py": 3,
      "txt": 1
    },
    "Justin Li": {
      "txt": 2,
      "ChangeLog": 5,
      "py": 25,
      "py": 21,
      "txt": 16
    },
    "Mads Kiilerich": {
      "py": 2,
      "py": 11
    },
    "fahhem": {
      "rst": 1
    },
    "Zeb Nicholls": {
      "txt": 3,
      "ChangeLog": 2,
      "rst": 14,
      "py": 13
    },
    "Damien Nozay": {},
    "Roberto Leinardi": {
      "txt": 2,
      "rst": 18,
      "rst": 1
    },
    "Kevin Jing Qiu": {
      "ChangeLog": 2,
      "py": 1
    },
    "Ioana Tagirta": {
      "txt": 2,
      "ChangeLog": 4,
      "py": 1,
      "py": 2,
      "txt": 1
    },
    "JT Olds": {
      "py": 10
    },
    "Mike Miller": {
      "txt": 2,
      "py": 1
    },
    "bdanielby": {},
    "Daniel Draper": {
      "txt": 2,
      "rst": 6,
      "py": 40,
      "py": 20,
      "rc": 15,
      "txt": 2
    },
    "cezarelnazli": {},
    "John McGehee": {
      "py": 3
    },
    "Petr Pulc": {
      "py": 16,
      "py": 8
    },
    "palazzem": {
      "py": 6
    },
    "Nathaniel Manista": {
      "py": 28,
      "py": 12,
      "py": 7,
      "txt": 1,
      "py": 5,
      "txt": 1
    },
    "Adrien Di Mascio": {
      "COPYING": 340,
      "ChangeLog": 2,
      "changelog": 6,
      "dirs": 1,
      "el": 2,
      "el": 4,
      "pylintrc": 2,
      "1": 12,
      "py": 3,
      "py": 2,
      "py": 1,
      "py": 2,
      "py": 7,
      "py": 6,
      "txt": 1,
      "txt": 1,
      "txt": 1,
      "py": 11
    },
    "James Lingard": {
      "py": 66,
      "py": 24,
      "py": 1
    },
    "gaurikholkar": {},
    "Tomer Chachamu": {
      "txt": 2,
      "ChangeLog": 4,
      "py": 33,
      "py": 1,
      "py": 27,
      "txt": 4
    },
    "Niko Wenselowski": {
      "txt": 2,
      "ChangeLog": 3,
      "py": 1,
      "txt": 2
    },
    "Ricardo Gemignani": {
      "ChangeLog": 3
    },
    "FELD Boris": {
      "ChangeLog": 9,
      "py": 21,
      "py": 2,
      "py": 2,
      "py": 64,
      "py": 9,
      "py": 36,
      "py": 39,
      "py": 3,
      "txt": 3,
      "py": 6,
      "py": 1
    },
    "Michael Hudson-Doyle": {
      "txt": 2,
      "ChangeLog": 2,
      "py": 4
    },
    "Vlad Temian": {
      "py": 2,
      "py": 23,
      "py": 23,
      "py": 16
    },
    "Marco Forte": {},
    "spaceone": {
      "ChangeLog": 3,
      "py": 9
    },
    "Kylian": {
      "txt": 2,
      "ChangeLog": 2,
      "py": 2,
      "dot": 2
    },
    "Reverb C": {
      "txt": 3,
      "ChangeLog": 4,
      "py": 1,
      "py": 1,
      "py": 14,
      "py": 4
    },
    "James M. Allen": {
      "py": 1
    },
    "Wes Turner": {
      "txt": 2,
      "ChangeLog": 2,
      "rst": 8,
      "pylintrc": 4,
      "py": 149,
      "py": 16,
      "rc": 2,
      "txt": 1,
      "py": 10,
      "rc": 2,
      "txt": 1
    },
    "buck@yelp.com": {
      "py": 1,
      "py": 2,
      "py": 7,
      "py": 3,
      "py": 5,
      "txt": 1
    },
    "Enji Cooper": {
      "txt": 2,
      "ChangeLog": 7,
      "rst": 3,
      "py": 12
    },
    "Randall Leeds": {
      "py": 3
    },
    "Andres Perez Hortal": {
      "txt": 2,
      "ChangeLog": 2,
      "py": 16
    },
    "Mariatta": {
      "rst": 2
    },
    "Pablo Galindo": {
      "txt": 3,
      "py": 3,
      "py": 13
    },
    "Federico Bond": {
      "txt": 2,
      "ChangeLog": 2,
      "py": 1,
      "py": 18
    },
    "Obscuron": {},
    "James Broadhead": {
      "rst": 4
    },
    "Julien Jehannet": {
      "changelog": 7,
      "control": 1,
      "rules": 3,
      "py": 1,
      "py": 1
    },
    "Kári Tristan Helgason": {},
    "Alexandre Fayolle": {
      "ChangeLog": 1,
      "epylint": 1,
      "Debian": 10,
      "source": 4,
      "changelog": 110,
      "compat": 1,
      "control": 2,
      "copyright": 1,
      "pycompat": 1,
      "docs": 2,
      "examples": 1,
      "postrm": 8,
      "rules": 25,
      "watch": 2,
      "el": 9,
      "py": 2,
      "py": 1,
      "py": 1,
      "py": 4,
      "py": 1,
      "py": 8,
      "txt": 1
    },
    "Fabio Natali": {
      "py": 2,
      "py": 2,
      "txt": 4
    },
    "Noam Yorav-Raphael": {},
    "Rene Zhang": {
      "py": 2,
      "py": 3,
      "py": 14
    },
    "Bryce Guinta": {
      "md": 3,
      "txt": 1,
      "ChangeLog": 71,
      "py": 3,
      "rst": 4,
      "rst": 11,
      "rst": 1,
      "rst": 3,
      "rst": 4,
      "rst": 1,
      "rst": 12,
      "rst": 2,
      "rst": 1,
      "py": 2,
      "py": 21,
      "py": 13,
      "py": 16,
      "py": 13,
      "py": 8,
      "py": 2,
      "py": 1,
      "py": 11,
      "py": 1,
      "py": 1,
      "txt": 1,
      "py": 1,
      "txt": 6,
      "py": 5,
      "py": 1,
      "txt": 1,
      "py": 34,
      "txt": 1,
      "txt": 1,
      "txt": 1,
      "py": 1,
      "py": 4,
      "py": 12,
      "py": 42,
      "py": 29,
      "py": 39
    },
    "Peter Hammond": {
      "ChangeLog": 3,
      "py": 1
    },
    "kapsh": {},
    "jpkotta@shannon": {
      "ChangeLog": 6,
      "el": 118
    },
    "John Paraskevopoulos": {
      "txt": 2,
      "ChangeLog": 6,
      "rst": 3,
      "py": 3
    },
    "thinwybk": {
      "rst": 20
    },
    "Daniel Miller": {
      "txt": 2,
      "ChangeLog": 3,
      "py": 2,
      "py": 2,
      "rc": 2,
      "py": 19,
      "py": 7
    },
    "emile@crater.logilab.fr": {
      "py": 3,
      "py": 2,
      "py": 2
    },
    "Anthony VEREZ": {
      "ChangeLog": 2
    },
    "Michael Scott Cuthbert": {
      "txt": 2,
      "pylintrc": 1,
      "py": 2
    },
    "Vincent": {
      "py": 4
    },
    "Jakob Normark": {
      "rst": 1,
      "py": 7
    },
    "Anthony Truchet": {
      "ChangeLog": 2,
      "rst": 28,
      "py": 4,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 7,
      "py": 16,
      "py": 3
    },
    "Nick Drozd": {
      "gitignore": 3,
      "ChangeLog": 5,
      "rst": 5,
      "py": 4,
      "py": 16,
      "py": 7,
      "py": 2,
      "py": 33,
      "py": 1,
      "py": 1,
      "py": 20,
      "py": 2,
      "py": 1,
      "py": 1,
      "py": 9,
      "py": 1,
      "py": 2,
      "pylintrc": 16,
      "py": 1,
      "py": 2,
      "py": 1,
      "py": 38,
      "txt": 9,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 2,
      "py": 1,
      "py": 1,
      "py": 23
    },
    "cordis-dev": {
      "rst": 1
    },
    "Ry4an Brase": {
      "ChangeLog": 3,
      "py": 15,
      "similar1": 22,
      "similar2": 22,
      "py": 44
    },
    "Steven Myint": {
      "rst": 1,
      "py": 3,
      "py": 12,
      "txt": 1,
      "py": 1
    },
    "moxian": {},
    "buck": {},
    "Adam Parkin": {
      "rst": 2,
      "rst": 4,
      "rst": 12,
      "rst": 17
    },
    "Nikita Sobolev": {
      "py": 1
    },
    "Roman Ivanov": {},
    "Stephen Longofono": {
      "rst": 3
    },
    "Marcus Näslund": {
      "txt": 2
    },
    "xmo-odoo": {
      "py": 1
    },
    "Jürgen Hermann": {
      "py": 3,
      "pylintrc": 1
    },
    "Benedikt Morbach": {},
    "Radu Ciorba": {
      "txt": 1,
      "ChangeLog": 15,
      "py": 5,
      "py": 7,
      "py": 6,
      "py": 26,
      "txt": 1,
      "py": 46,
      "txt": 2,
      "py": 1,
      "py": 7
    },
    "Tomasz Magulski": {},
    "Scott Worley": {
      "txt": 2,
      "ChangeLog": 4,
      "py": 12,
      "py": 16,
      "other": 8,
      "py": 48
    },
    "Tyler Thieding": {
      "txt": 2,
      "ChangeLog": 4,
      "py": 58,
      "py": 14,
      "py": 51
    },
    "Drew": {
      "txt": 4,
      "ChangeLog": 1,
      "pylintrc": 1
    },
    "Edgemaster": {
      "el": 1
    },
    "Laura Médioni": {
      "txt": 4,
      "ChangeLog": 8,
      "py": 1,
      "py": 9,
      "py": 26,
      "py": 28,
      "py": 65,
      "py": 1,
      "py": 48,
      "py": 26,
      "py": 83,
      "py": 10,
      "py": 1,
      "txt": 3,
      "py": 1,
      "py": 1,
      "py": 1,
      "txt": 6,
      "py": 30,
      "txt": 1,
      "py": 1,
      "py": 33,
      "txt": 3,
      "py": 33,
      "txt": 3,
      "py": 1,
      "py": 4,
      "txt": 5,
      "py": 19,
      "txt": 4,
      "py": 93,
      "txt": 1,
      "py": 17,
      "txt": 5,
      "py": 57,
      "txt": 14,
      "py": 1,
      "py": 8,
      "py": 29,
      "txt": 3,
      "py": 1,
      "py": 2,
      "py": 2,
      "py": 2,
      "py": 1,
      "py": 3,
      "py": 2,
      "py": 1,
      "py": 1,
      "py": 1,
      "py": 2,
      "py": 2,
      "txt": 1,
      "txt": 5,
      "txt": 4,
      "txt": 3,
      "txt": 5,
      "txt": 2,
      "txt": 1,
      "py": 1,
      "py": 2,
      "py": 1,
      "py": 4
    },
    "Filipe Brandenburger": {
      "py": 1,
      "pylintrc": 4,
      "py": 13
    },
    "Mark Miller": {
      "txt": 2,
      "ChangeLog": 4,
      "py": 14,
      "py": 65,
      "txt": 1
    },
    "Michael Giuffrida": {
      "rst": 9
    },
    "Mihai Balint": {
      "py": 2,
      "py": 1,
      "py": 1,
      "pylintrc": 335,
      "ini": 4
    },
    "Sylvain Thenault": {},
    "Lucas Cimon": {
      "txt": 2,
      "ChangeLog": 4,
      "rst": 9,
      "py": 9,
      "py": 9,
      "py": 1,
      "py": 3,
      "py": 1,
      "py": 3,
      "py": 5,
      "py": 4,
      "py": 2,
      "py": 91,
      "py": 1,
      "py": 2,
      "py": 1,
      "py": 20,
      "py": 4,
      "py": 3,
      "rc": 2,
      "py": 3,
      "py": 26
    },
    "Paul Renvoisé": {
      "txt": 1,
      "ChangeLog": 5,
      "rst": 9,
      "py": 30,
      "py": 5,
      "rc": 1,
      "txt": 2
    },
    "Martin": {
      "txt": 3,
      "ChangeLog": 14,
      "rst": 22,
      "py": 7,
      "py": 43
    },
    "Yuval Langer": {},
    "y2kbugger": {
      "py": 1
    },
    "cosven": {
      "rst": 1
    },
    "Dmitry Pribysh": {
      "txt": 1,
      "ChangeLog": 22,
      "rst": 1,
      "py": 18,
      "py": 22,
      "py": 3,
      "py": 68,
      "py": 58,
      "py": 2,
      "py": 1,
      "py": 1,
      "py": 177,
      "txt": 10,
      "py": 17,
      "rc": 1,
      "txt": 1,
      "py": 17,
      "rc": 3,
      "txt": 1,
      "py": 96,
      "txt": 2,
      "py": 18,
      "rc": 1,
      "txt": 1,
      "py": 19,
      "rc": 3,
      "txt": 1,
      "py": 122,
      "txt": 7,
      "py": 35,
      "rc": 3,
      "txt": 3,
      "py": 35,
      "rc": 3,
      "txt": 3,
      "py": 2,
      "txt": 1,
      "py": 12,
      "rc": 2,
      "txt": 1,
      "py": 13,
      "txt": 4,
      "py": 10,
      "txt": 2,
      "py": 5,
      "py": 40,
      "txt": 8,
      "py": 87,
      "txt": 13,
      "py": 7,
      "rc": 2,
      "txt": 1,
      "py": 16,
      "py": 9,
      "py": 1,
      "ini": 1
    },
    "Thomas Hisch": {
      "txt": 5,
      "ChangeLog": 10,
      "py": 4,
      "py": 44,
      "py": 93
    },
    "David Pursehouse": {},
    "Maik Röder": {}
  },
  "authorContributionVariance": {
    "Holger Peters": 1.6811409,
    "Ryan McGuire": 0.0049871514,
    "Carey Metcalfe": 0.07979412,
    "Derek Harland": 0.12466534,
    "jab": 7.9793046E-4,
    "Manuel Vázquez Acosta": 1.090013,
    "Elias Dorneles": 0.28264225,
    "Moisés López": 11.219558,
    "Alexandru Coman": 0.86261517,
    "Kevin Phillips": 0.019949164,
    "Nick Smith": 0.024137378,
    "Pavel Roskin": 0.047454577,
    "Viorel Stirbu": 0.009775253,
    "Simu Toni": 0.47892123,
    "mattlbeck": 3.2683122,
    "Denis Laxalde": 0.003191856,
    "Jacques Kvam": 0.07979472,
    "Julien Palard": 7.979262E-4,
    "Yury Gribov": 2.3267045,
    "John Leach": 7.9795136E-4,
    "Calin Don": 0.44062132,
    "Taewon D. Kim": 0.2042701,
    "mar-chi-pan": 0.38620135,
    "Mariatta Wijaya": 0.72202456,
    "Martin von Gagern": 1.8415091,
    "Bruno Daniel": 207.65439,
    "Ionel Cristian Maries": 1.6517869,
    "Cameron Olechowski": 7.9794053E-4,
    "Emile Anclin": 1289.0336,
    "Paul Cochrane": 0.05106949,
    "Alan Evangelista": 0.007180942,
    "Buck Golemon": 0.0,
    "Adam Dangoor": 0.07201101,
    "Dan Hemberger": 0.02572964,
    "Jace Browning": 0.25852153,
    "carlio": 0.0,
    "Brian Shaginaw": 0.096550606,
    "Matej Marušák": 0.2443589,
    "grizzly.nyo@gmail.com": 0.01994983,
    "Julien Cristau": 6.2451034,
    "Claudiu Popa": 152499.16,
    "Gabriel R Sezefredo": 0.1563939,
    "Yannack": 0.6256045,
    "David Douard": 264.32526,
    "LCD 47": 0.028723111,
    "Ben Green": 1.213615,
    "Moises Lopez - https://www.vauxoo.com/": 48.588264,
    "Danny Hermes": 0.11490056,
    "Hugues Bruant": 0.15639383,
    "Steven M. Vascellaro": 0.03191376,
    "Tim Hatch": 0.19171381,
    "fadedDexofan": 0.31917328,
    "Svet": 1.994787,
    "Omega Weapon": 0.10551462,
    "sbagan": 0.0031917267,
    "Łukasz Sznuk": 0.20427257,
    "daniel_goldsmith": 0.0,
    "Łukasz Rogalski": 106.91372,
    "Glenn Matthews": 225.33629,
    "Andy Palmer": 2.5924623,
    "Fabrice Douchant": 7.9799007E-4,
    "hippo91": 146.09052,
    "Pierre Sassoulas": 9511.461,
    "Daniel Harding": 0.25882083,
    "ludal@logilab.fr": 0.04488953,
    "anatoly techtonik": 0.004987453,
    "ttenhoeve-aa": 10.737162,
    "Krzysztof Czapla": 0.06462979,
    "Hugo": 0.3193749,
    "Ionel Maries Cristian": 0.039101012,
    "Craig Citro": 0.057647895,
    "Fantix King": 0.17953485,
    "Alex Jurkiewicz": 0.06462833,
    "Sylvain Thénault": 4251.213,
    "Torsten Marek": 1436.1063,
    "BioGeek": 7.979547E-4,
    "mihai_stan": 0.14541146,
    "Brandon W Maister": 0.28803456,
    "Athos Ribeiro": 0.012766808,
    "T.Rzepka": 0.012767389,
    "Alexander Pervakov": 0.057646994,
    "Charles Hebert": 15.090507,
    "Xi Shen": 7.979541E-4,
    "bluesheeptoken": 0.0017953104,
    "Michael Kefeder": 0.19170846,
    "Nathan Marrow": 0.36884388,
    "Erik": 11.18377,
    "Peter Kolbus": 140.75298,
    "Benjamin Drung": 18.313837,
    "Robert Schweizer": 29.721771,
    "Chris Lamb": 0.0025927734,
    "David Shea": 38.068188,
    "Djailla": 0.9223997,
    "Jared Garst": 0.35189718,
    "glmdgrielson": 0.1246726,
    "Arun Persaud": 1.7624662,
    "Hugues": 0.051067296,
    "danields": 0.60341847,
    "Ville Skyttä": 174.68193,
    "Chris Rebert": 4.1432385,
    "Michka Popoff": 0.114897184,
    "Derek Gustafson": 2652.329,
    "Luis Escobar": 6.129407,
    "Mitar": 0.440639,
    "Marianna Polatoglou": 1.7761344,
    "Banjamin Freeman": 0.47894308,
    "Dan Goldsmith": 1.4937191,
    "Santiago Castro": 7.979298E-4,
    "James Morgensen": 1.479637,
    "Erik Eriksson": 7.9794315E-4,
    "Nir Soffer": 7.979373E-4,
    "craig-sh": 186.91905,
    "Daniele Procida": 0.92234516,
    "Matthijs Blom": 0.05765001,
    "Sandro Tosi": 0.0017952047,
    "Konstantin": 16.542612,
    "Mitchell T.H. Young": 0.019948592,
    "Martin Vielsmaier": 0.10552456,
    "Ned Batchelder": 0.01615736,
    "Alexander Todorov": 25.920195,
    "Aru Sahni": 2.2942712,
    "Jared Deckard": 7.9794315E-4,
    "Nicolas Chauvat": 193.98245,
    "amdev@AMDEV-WS01.cisco.com": 3.319285,
    "Stephane Wirtel": 0.5393637,
    "root": 47672.508,
    "Erik Wright": 0.87142897,
    "Sardorbek Imomaliev": 0.019948423,
    "sdet_liang": 7.9794397E-4,
    "Jonathan Kotta": 1.2135737,
    "Sushobhit": 34.277428,
    "Arthur Lutz": 0.01276781,
    "Rogalski, Lukasz": 7.2771754,
    "guillaume2": 0.4487975,
    "moylop260": 0.16856425,
    "David Lindquist": 1.5344273,
    "Aurelien Campeas": 0.0153537,
    "root@clnstor.am.local": 0.051069576,
    "syutbai": 1.1827222,
    "Florian Bruhin": 80.19182,
    "Nick Bastin": 0.03769539,
    "Alain Leufroy": 2.1552694,
    "Ashley Whetter": 570.0947,
    "Daniel Balparda": 1.050148,
    "Michal Nowikowski": 95.98671,
    "achernetz": 0.019949783,
    "Mr. Senko": 90.660484,
    "Andrzej Klajnert": 0.057649665,
    "Bruno P. Kinoshita": 7.979313E-4,
    "John Kirkham": 0.0015954871,
    "Nicolas Dickreuter": 0.21723208,
    "Radostin Stoyanov": 0.057648547,
    "Mike Bryant": 0.3519119,
    "Ben James": 12.526783,
    "Yuri Bochkarev": 0.51882476,
    "Matus Valo": 2.4578474,
    "jpkotta": 0.2026095,
    "Yoichi Nakayama": 0.0017952034,
    "Jim Robertson": 27.089682,
    "Daniela Plascencia": 0.009774984,
    "Aivar Annamaa": 0.15639628,
    "Anthony Sottile": 5.322584,
    "Caio Carrara": 0.42209396,
    "Anthony Foglia": 0.42208323,
    "Don Jayamanne": 0.94970226,
    "Rémi Cardona": 0.17953373,
    "glegoux": 0.9223485,
    "paschich": 7.9794775E-4,
    "Alan Chan": 12.170295,
    "Paul Renvoise": 26.721403,
    "Alok Singh": 7.979344E-4,
    "Dmytro Kyrychuk": 0.23059498,
    "Hugo van Kemenade": 49.273834,
    "Pete": 0.8080995,
    "vinnyrose": 0.4789355,
    "Jakub Wilk": 0.30388817,
    "ssolanki": 63.68256,
    "Eric Froemling": 0.05764978,
    "Natalie Serebryakova": 5.8331156,
    "frost-nzcr4": 0.007180771,
    "pyves@crater.logilab.fr": 7.9799275E-4,
    "Harut": 0.258511,
    "Gary Tyler McLeod": 0.114898466,
    "Anentropic": 0.01276719,
    "yory8": 0.8689304,
    "Cezar": 82.630356,
    "Grant Welch": 0.0017952428,
    "Renat Galimov": 10.37008,
    "thernstig": 0.007978471,
    "Brett Cannon": 115.76812,
    "Pascal Corpet": 0.6255817,
    "Peter Dawyndt": 0.044884775,
    "carl": 716.41626,
    "Pierre-Yves David": 8.271904,
    "Patrik": 0.11489569,
    "Antonio Ossa": 0.07979542,
    "Chris Murray": 0.0071809897,
    "Yann Dirson": 0.27307,
    "Adrian Chirieac": 0.09655039,
    "Hornwitser": 1.8383836,
    "Roy Williams": 32.288612,
    "Alex Hearn": 0.20427263,
    "Brian C. Lane": 7.9794816E-4,
    "Kraig Brockschmidt": 0.019948892,
    "Christopher Zurcher": 7.9794024E-4,
    "Fureigh": 0.5425872,
    "Andreas Freimuth": 11.490338,
    "Dan Garrette": 7.979404E-4,
    "Mike Frysinger": 5.650959,
    "Sergei Lebedev": 0.11489934,
    "SergeyKosarchuk": 0.38620082,
    "Tim Gates": 0.0097746095,
    "Mikhail Fesenko": 0.2730631,
    "Pedro Algarvio": 15.556825,
    "John Gabriele": 0.0031917351,
    "ahirnish": 1.4075755,
    "Konstantin Manna": 0.58487374,
    "laike9m": 0.0071813017,
    "PHeanEX": 6.2495766,
    "vtemian": 0.0017951963,
    "C.A.M. Gerlach": 0.009774785,
    "agutole": 1.1827133,
    "Skip Montanaro": 0.17954521,
    "Grygorii Iermolenko": 0.15639427,
    "Jason Owen": 0.12467283,
    "Trevor Bekolay": 1.3742322,
    "Cosmin Poieana": 0.8309133,
    "Maarten ter Huurne": 0.10870814,
    "Oisín Moran": 0.019948272,
    "Janne Rönkkö": 59.46837,
    "Martin Pool": 21.801828,
    "Anubhav": 0.19170156,
    "Justin Li": 3.8548932,
    "Mads Kiilerich": 0.26354468,
    "fahhem": 7.979547E-4,
    "Zeb Nicholls": 0.25852513,
    "Damien Nozay": 0.007180701,
    "Roberto Leinardi": 0.1294354,
    "Kevin Jing Qiu": 0.15640928,
    "Ioana Tagirta": 0.028724506,
    "JT Olds": 0.057643685,
    "Mike Miller": 0.0031917307,
    "bdanielby": 0.0,
    "Daniel Draper": 1.5447863,
    "cezarelnazli": 0.0,
    "John McGehee": 0.33535334,
    "Petr Pulc": 0.5603183,
    "palazzem": 0.05106882,
    "Nathaniel Manista": 3.224496,
    "Adrien Di Mascio": 1868.0411,
    "James Lingard": 8.138437,
    "gaurikholkar": 7.9793687E-4,
    "Tomer Chachamu": 1.0630157,
    "Niko Wenselowski": 0.024137335,
    "Ricardo Gemignani": 0.2585058,
    "FELD Boris": 74.41452,
    "Michael Hudson-Doyle": 0.016157687,
    "Vlad Temian": 4.3339596,
    "Marco Forte": 0.016156714,
    "spaceone": 0.06462795,
    "Kylian": 0.105524294,
    "Reverb C": 0.3353357,
    "James M. Allen": 0.001795261,
    "Wes Turner": 8.713541,
    "buck@yelp.com": 1.4754523,
    "Enji Cooper": 3.944048,
    "Randall Leeds": 0.24435924,
    "Andres Perez Hortal": 0.13484848,
    "Mariatta": 0.0143600125,
    "Pablo Galindo": 0.09654987,
    "Federico Bond": 0.11489972,
    "Obscuron": 0.0,
    "James Broadhead": 0.0127673885,
    "Julien Jehannet": 1.5605501,
    "Kári Tristan Helgason": 7.979418E-4,
    "Alexandre Fayolle": 27.804487,
    "Fabio Natali": 0.057646494,
    "Noam Yorav-Raphael": 0.051068906,
    "Rene Zhang": 0.24613316,
    "Bryce Guinta": 6.080295,
    "Peter Hammond": 2.4134681,
    "kapsh": 7.9793687E-4,
    "jpkotta@shannon": 8.058405,
    "John Paraskevopoulos": 3.7987657,
    "thinwybk": 0.10552021,
    "Daniel Miller": 1.8383617,
    "emile@crater.logilab.fr": 2.4752731,
    "Anthony VEREZ": 0.033708755,
    "Michael Scott Cuthbert": 0.012766882,
    "Vincent": 0.3688768,
    "Jakob Normark": 0.051069144,
    "Anthony Truchet": 18.650028,
    "Nick Drozd": 11.791343,
    "cordis-dev": 1.9948337E-4,
    "Ry4an Brase": 9.392382,
    "Steven Myint": 0.83623934,
    "moxian": 0.0049874573,
    "buck": 1.9948899E-4,
    "Adam Parkin": 0.980608,
    "Nikita Sobolev": 7.9792837E-4,
    "Roman Ivanov": 0.012767031,
    "Stephen Longofono": 0.0049871127,
    "Marcus Näslund": 0.01276694,
    "xmo-odoo": 0.0015954862,
    "Jürgen Hermann": 0.05764713,
    "Benedikt Morbach": 0.019949805,
    "Radu Ciorba": 5.1535325,
    "Tomasz Magulski": 0.007180943,
    "Scott Worley": 3.128832,
    "Tyler Thieding": 3.4232638,
    "Drew": 0.039099067,
    "Edgemaster": 1.9948924E-4,
    "Laura Médioni": 65.84261,
    "Filipe Brandenburger": 0.12963986,
    "Mark Miller": 1.8383754,
    "Michael Giuffrida": 0.019948734,
    "Mihai Balint": 36.384396,
    "Sylvain Thenault": 0.009775127,
    "Lucas Cimon": 11.933196,
    "Paul Renvoisé": 0.7422757,
    "Martin": 2.8119886,
    "Yuval Langer": 7.979364E-4,
    "y2kbugger": 0.024137875,
    "cosven": 0.009774828,
    "Dmitry Pribysh": 281.04453,
    "Thomas Hisch": 8.566894,
    "David Pursehouse": 0.02313656,
    "Maik Röder": 7.979451E-4
  },
  "authorDisplayNameMap": {
    "Holger Peters": "Holger Peters",
    "Ryan McGuire": "Ryan McGuire",
    "Carey Metcalfe": "Carey Metcalfe",
    "Derek Harland": "Derek Harland",
    "jab": "jab",
    "Manuel Vázquez Acosta": "Manuel Vázquez Acosta",
    "Elias Dorneles": "Elias Dorneles",
    "Moisés López": "Moisés López",
    "Alexandru Coman": "Alexandru Coman",
    "Kevin Phillips": "Kevin Phillips",
    "Nick Smith": "Nick Smith",
    "Pavel Roskin": "Pavel Roskin",
    "Viorel Stirbu": "Viorel Stirbu",
    "Simu Toni": "Simu Toni",
    "mattlbeck": "mattlbeck",
    "Denis Laxalde": "Denis Laxalde",
    "Jacques Kvam": "Jacques Kvam",
    "Julien Palard": "Julien Palard",
    "Yury Gribov": "Yury Gribov",
    "John Leach": "John Leach",
    "Calin Don": "Calin Don",
    "Taewon D. Kim": "Taewon D. Kim",
    "mar-chi-pan": "mar-chi-pan",
    "Mariatta Wijaya": "Mariatta Wijaya",
    "Martin von Gagern": "Martin von Gagern",
    "Bruno Daniel": "Bruno Daniel",
    "Ionel Cristian Maries": "Ionel Cristian Maries",
    "Cameron Olechowski": "Cameron Olechowski",
    "Emile Anclin": "Emile Anclin",
    "Paul Cochrane": "Paul Cochrane",
    "Alan Evangelista": "Alan Evangelista",
    "Buck Golemon": "Buck Golemon",
    "Adam Dangoor": "Adam Dangoor",
    "Dan Hemberger": "Dan Hemberger",
    "Jace Browning": "Jace Browning",
    "carlio": "carlio",
    "Brian Shaginaw": "Brian Shaginaw",
    "Matej Marušák": "Matej Marušák",
    "grizzly.nyo@gmail.com": "grizzly.nyo@gmail.com",
    "Julien Cristau": "Julien Cristau",
    "Claudiu Popa": "Claudiu Popa",
    "Gabriel R Sezefredo": "Gabriel R Sezefredo",
    "Yannack": "Yannack",
    "David Douard": "David Douard",
    "LCD 47": "LCD 47",
    "Ben Green": "Ben Green",
    "Moises Lopez - https://www.vauxoo.com/": "Moises Lopez - https://www.vauxoo.com/",
    "Danny Hermes": "Danny Hermes",
    "Hugues Bruant": "Hugues Bruant",
    "Steven M. Vascellaro": "Steven M. Vascellaro",
    "Tim Hatch": "Tim Hatch",
    "fadedDexofan": "fadedDexofan",
    "Svet": "Svet",
    "Omega Weapon": "Omega Weapon",
    "sbagan": "sbagan",
    "Łukasz Sznuk": "Łukasz Sznuk",
    "daniel_goldsmith": "daniel_goldsmith",
    "Łukasz Rogalski": "Łukasz Rogalski",
    "Glenn Matthews": "Glenn Matthews",
    "Andy Palmer": "Andy Palmer",
    "Fabrice Douchant": "Fabrice Douchant",
    "hippo91": "hippo91",
    "Pierre Sassoulas": "Pierre Sassoulas",
    "Daniel Harding": "Daniel Harding",
    "ludal@logilab.fr": "ludal@logilab.fr",
    "anatoly techtonik": "anatoly techtonik",
    "ttenhoeve-aa": "ttenhoeve-aa",
    "Krzysztof Czapla": "Krzysztof Czapla",
    "Hugo": "Hugo",
    "Ionel Maries Cristian": "Ionel Maries Cristian",
    "Craig Citro": "Craig Citro",
    "Fantix King": "Fantix King",
    "Alex Jurkiewicz": "Alex Jurkiewicz",
    "Sylvain Thénault": "Sylvain Thénault",
    "Torsten Marek": "Torsten Marek",
    "BioGeek": "BioGeek",
    "mihai_stan": "mihai_stan",
    "Brandon W Maister": "Brandon W Maister",
    "Athos Ribeiro": "Athos Ribeiro",
    "T.Rzepka": "T.Rzepka",
    "Alexander Pervakov": "Alexander Pervakov",
    "Charles Hebert": "Charles Hebert",
    "Xi Shen": "Xi Shen",
    "bluesheeptoken": "bluesheeptoken",
    "Michael Kefeder": "Michael Kefeder",
    "Nathan Marrow": "Nathan Marrow",
    "Erik": "Erik",
    "Peter Kolbus": "Peter Kolbus",
    "Benjamin Drung": "Benjamin Drung",
    "Robert Schweizer": "Robert Schweizer",
    "Chris Lamb": "Chris Lamb",
    "David Shea": "David Shea",
    "Djailla": "Djailla",
    "Jared Garst": "Jared Garst",
    "glmdgrielson": "glmdgrielson",
    "Arun Persaud": "Arun Persaud",
    "Hugues": "Hugues",
    "danields": "danields",
    "Ville Skyttä": "Ville Skyttä",
    "Chris Rebert": "Chris Rebert",
    "Michka Popoff": "Michka Popoff",
    "Derek Gustafson": "Derek Gustafson",
    "Luis Escobar": "Luis Escobar",
    "Mitar": "Mitar",
    "Marianna Polatoglou": "Marianna Polatoglou",
    "Banjamin Freeman": "Banjamin Freeman",
    "Dan Goldsmith": "Dan Goldsmith",
    "Santiago Castro": "Santiago Castro",
    "James Morgensen": "James Morgensen",
    "Erik Eriksson": "Erik Eriksson",
    "Nir Soffer": "Nir Soffer",
    "craig-sh": "craig-sh",
    "Daniele Procida": "Daniele Procida",
    "Matthijs Blom": "Matthijs Blom",
    "Sandro Tosi": "Sandro Tosi",
    "Konstantin": "Konstantin",
    "Mitchell T.H. Young": "Mitchell T.H. Young",
    "Martin Vielsmaier": "Martin Vielsmaier",
    "Ned Batchelder": "Ned Batchelder",
    "Alexander Todorov": "Alexander Todorov",
    "Aru Sahni": "Aru Sahni",
    "Jared Deckard": "Jared Deckard",
    "Nicolas Chauvat": "Nicolas Chauvat",
    "amdev@AMDEV-WS01.cisco.com": "amdev@AMDEV-WS01.cisco.com",
    "Stephane Wirtel": "Stephane Wirtel",
    "root": "root",
    "Erik Wright": "Erik Wright",
    "Sardorbek Imomaliev": "Sardorbek Imomaliev",
    "sdet_liang": "sdet_liang",
    "Jonathan Kotta": "Jonathan Kotta",
    "Sushobhit": "Sushobhit",
    "Arthur Lutz": "Arthur Lutz",
    "Rogalski, Lukasz": "Rogalski, Lukasz",
    "guillaume2": "guillaume2",
    "moylop260": "moylop260",
    "David Lindquist": "David Lindquist",
    "Aurelien Campeas": "Aurelien Campeas",
    "root@clnstor.am.local": "root@clnstor.am.local",
    "syutbai": "syutbai",
    "Florian Bruhin": "Florian Bruhin",
    "Nick Bastin": "Nick Bastin",
    "Alain Leufroy": "Alain Leufroy",
    "Ashley Whetter": "Ashley Whetter",
    "Daniel Balparda": "Daniel Balparda",
    "Michal Nowikowski": "Michal Nowikowski",
    "achernetz": "achernetz",
    "Mr. Senko": "Mr. Senko",
    "Andrzej Klajnert": "Andrzej Klajnert",
    "Bruno P. Kinoshita": "Bruno P. Kinoshita",
    "John Kirkham": "John Kirkham",
    "Nicolas Dickreuter": "Nicolas Dickreuter",
    "Radostin Stoyanov": "Radostin Stoyanov",
    "Mike Bryant": "Mike Bryant",
    "Ben James": "Ben James",
    "Yuri Bochkarev": "Yuri Bochkarev",
    "Matus Valo": "Matus Valo",
    "jpkotta": "jpkotta",
    "Yoichi Nakayama": "Yoichi Nakayama",
    "Jim Robertson": "Jim Robertson",
    "Daniela Plascencia": "Daniela Plascencia",
    "Aivar Annamaa": "Aivar Annamaa",
    "Anthony Sottile": "Anthony Sottile",
    "Caio Carrara": "Caio Carrara",
    "Anthony Foglia": "Anthony Foglia",
    "Don Jayamanne": "Don Jayamanne",
    "Rémi Cardona": "Rémi Cardona",
    "glegoux": "glegoux",
    "paschich": "paschich",
    "Alan Chan": "Alan Chan",
    "Paul Renvoise": "Paul Renvoise",
    "Alok Singh": "Alok Singh",
    "Dmytro Kyrychuk": "Dmytro Kyrychuk",
    "Hugo van Kemenade": "Hugo van Kemenade",
    "Pete": "Pete",
    "vinnyrose": "vinnyrose",
    "Jakub Wilk": "Jakub Wilk",
    "ssolanki": "ssolanki",
    "Eric Froemling": "Eric Froemling",
    "Natalie Serebryakova": "Natalie Serebryakova",
    "frost-nzcr4": "frost-nzcr4",
    "pyves@crater.logilab.fr": "pyves@crater.logilab.fr",
    "Harut": "Harut",
    "Gary Tyler McLeod": "Gary Tyler McLeod",
    "Anentropic": "Anentropic",
    "yory8": "yory8",
    "Cezar": "Cezar",
    "Grant Welch": "Grant Welch",
    "Renat Galimov": "Renat Galimov",
    "thernstig": "thernstig",
    "Brett Cannon": "Brett Cannon",
    "Pascal Corpet": "Pascal Corpet",
    "Peter Dawyndt": "Peter Dawyndt",
    "carl": "carl",
    "Pierre-Yves David": "Pierre-Yves David",
    "Patrik": "Patrik",
    "Antonio Ossa": "Antonio Ossa",
    "Chris Murray": "Chris Murray",
    "Yann Dirson": "Yann Dirson",
    "Adrian Chirieac": "Adrian Chirieac",
    "Hornwitser": "Hornwitser",
    "Roy Williams": "Roy Williams",
    "Alex Hearn": "Alex Hearn",
    "Brian C. Lane": "Brian C. Lane",
    "Kraig Brockschmidt": "Kraig Brockschmidt",
    "Christopher Zurcher": "Christopher Zurcher",
    "Fureigh": "Fureigh",
    "Andreas Freimuth": "Andreas Freimuth",
    "Dan Garrette": "Dan Garrette",
    "Mike Frysinger": "Mike Frysinger",
    "Sergei Lebedev": "Sergei Lebedev",
    "SergeyKosarchuk": "SergeyKosarchuk",
    "Tim Gates": "Tim Gates",
    "Mikhail Fesenko": "Mikhail Fesenko",
    "Pedro Algarvio": "Pedro Algarvio",
    "John Gabriele": "John Gabriele",
    "ahirnish": "ahirnish",
    "Konstantin Manna": "Konstantin Manna",
    "laike9m": "laike9m",
    "PHeanEX": "PHeanEX",
    "vtemian": "vtemian",
    "C.A.M. Gerlach": "C.A.M. Gerlach",
    "agutole": "agutole",
    "Skip Montanaro": "Skip Montanaro",
    "Grygorii Iermolenko": "Grygorii Iermolenko",
    "Jason Owen": "Jason Owen",
    "Trevor Bekolay": "Trevor Bekolay",
    "Cosmin Poieana": "Cosmin Poieana",
    "Maarten ter Huurne": "Maarten ter Huurne",
    "Oisín Moran": "Oisín Moran",
    "Janne Rönkkö": "Janne Rönkkö",
    "Martin Pool": "Martin Pool",
    "Anubhav": "Anubhav",
    "Justin Li": "Justin Li",
    "Mads Kiilerich": "Mads Kiilerich",
    "fahhem": "fahhem",
    "Zeb Nicholls": "Zeb Nicholls",
    "Damien Nozay": "Damien Nozay",
    "Roberto Leinardi": "Roberto Leinardi",
    "Kevin Jing Qiu": "Kevin Jing Qiu",
    "Ioana Tagirta": "Ioana Tagirta",
    "JT Olds": "JT Olds",
    "Mike Miller": "Mike Miller",
    "bdanielby": "bdanielby",
    "Daniel Draper": "Daniel Draper",
    "cezarelnazli": "cezarelnazli",
    "John McGehee": "John McGehee",
    "Petr Pulc": "Petr Pulc",
    "palazzem": "palazzem",
    "Nathaniel Manista": "Nathaniel Manista",
    "Adrien Di Mascio": "Adrien Di Mascio",
    "James Lingard": "James Lingard",
    "gaurikholkar": "gaurikholkar",
    "Tomer Chachamu": "Tomer Chachamu",
    "Niko Wenselowski": "Niko Wenselowski",
    "Ricardo Gemignani": "Ricardo Gemignani",
    "FELD Boris": "FELD Boris",
    "Michael Hudson-Doyle": "Michael Hudson-Doyle",
    "Vlad Temian": "Vlad Temian",
    "Marco Forte": "Marco Forte",
    "spaceone": "spaceone",
    "Kylian": "Kylian",
    "Reverb C": "Reverb C",
    "James M. Allen": "James M. Allen",
    "Wes Turner": "Wes Turner",
    "buck@yelp.com": "buck@yelp.com",
    "Enji Cooper": "Enji Cooper",
    "Randall Leeds": "Randall Leeds",
    "Andres Perez Hortal": "Andres Perez Hortal",
    "Mariatta": "Mariatta",
    "Pablo Galindo": "Pablo Galindo",
    "Federico Bond": "Federico Bond",
    "Obscuron": "Obscuron",
    "James Broadhead": "James Broadhead",
    "Julien Jehannet": "Julien Jehannet",
    "Kári Tristan Helgason": "Kári Tristan Helgason",
    "Alexandre Fayolle": "Alexandre Fayolle",
    "Fabio Natali": "Fabio Natali",
    "Noam Yorav-Raphael": "Noam Yorav-Raphael",
    "Rene Zhang": "Rene Zhang",
    "Bryce Guinta": "Bryce Guinta",
    "Peter Hammond": "Peter Hammond",
    "kapsh": "kapsh",
    "jpkotta@shannon": "jpkotta@shannon",
    "John Paraskevopoulos": "John Paraskevopoulos",
    "thinwybk": "thinwybk",
    "Daniel Miller": "Daniel Miller",
    "emile@crater.logilab.fr": "emile@crater.logilab.fr",
    "Anthony VEREZ": "Anthony VEREZ",
    "Michael Scott Cuthbert": "Michael Scott Cuthbert",
    "Vincent": "Vincent",
    "Jakob Normark": "Jakob Normark",
    "Anthony Truchet": "Anthony Truchet",
    "Nick Drozd": "Nick Drozd",
    "cordis-dev": "cordis-dev",
    "Ry4an Brase": "Ry4an Brase",
    "Steven Myint": "Steven Myint",
    "moxian": "moxian",
    "buck": "buck",
    "Adam Parkin": "Adam Parkin",
    "Nikita Sobolev": "Nikita Sobolev",
    "Roman Ivanov": "Roman Ivanov",
    "Stephen Longofono": "Stephen Longofono",
    "Marcus Näslund": "Marcus Näslund",
    "xmo-odoo": "xmo-odoo",
    "Jürgen Hermann": "Jürgen Hermann",
    "Benedikt Morbach": "Benedikt Morbach",
    "Radu Ciorba": "Radu Ciorba",
    "Tomasz Magulski": "Tomasz Magulski",
    "Scott Worley": "Scott Worley",
    "Tyler Thieding": "Tyler Thieding",
    "Drew": "Drew",
    "Edgemaster": "Edgemaster",
    "Laura Médioni": "Laura Médioni",
    "Filipe Brandenburger": "Filipe Brandenburger",
    "Mark Miller": "Mark Miller",
    "Michael Giuffrida": "Michael Giuffrida",
    "Mihai Balint": "Mihai Balint",
    "Sylvain Thenault": "Sylvain Thenault",
    "Lucas Cimon": "Lucas Cimon",
    "Paul Renvoisé": "Paul Renvoisé",
    "Martin": "Martin",
    "Yuval Langer": "Yuval Langer",
    "y2kbugger": "y2kbugger",
    "cosven": "cosven",
    "Dmitry Pribysh": "Dmitry Pribysh",
    "Thomas Hisch": "Thomas Hisch",
    "David Pursehouse": "David Pursehouse",
    "Maik Röder": "Maik Röder"
  }
}
