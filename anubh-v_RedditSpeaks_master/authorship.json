[
  {
    "path": ".gitignore",
    "fileType": "gitignore",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jhengy"
        },
        "content": "#ignoring __pycache__ files"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jhengy"
        },
        "content": "__pycache__"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jhengy"
        },
        "content": "*.py.swp"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jhengy"
        },
        "content": "results.json"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jhengy"
        },
        "content": ".vscode"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jhengy"
        },
        "content": "venv"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jhengy"
        },
        "content": "node_modules"
      }
    ],
    "authorContributionMap": {
      "jhengy": 7
    }
  },
  {
    "path": ".travis.yml",
    "fileType": "yml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "# Specify language and language version to be used"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "language: python"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "python:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "  - \"3.6\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "# Specify project dependencies to be installed"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "install:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "  - pip install -r requirements.txt"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "# Specify tests / style checks to run"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "script:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anubh-v"
        },
        "content": " - flake8"
      }
    ],
    "authorContributionMap": {
      "Anubhav": 1,
      "anubh-v": 11
    }
  },
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "[![Build Status](https://travis-ci.org/anubh-v/RedditSpeaks.svg?branch\u003dmaster)](https://travis-ci.org/anubh-v/RedditSpeaks)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "# RedditSpeaks - Find out what Reddit is saying"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "RedditSpeaks is a project about extracting information from news articles shared on Reddit."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "Currently, RedditSpeaks can identify the most common names mentioned in news"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "headlines on Reddit."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "View some results [here](docs/results.md)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "## Install"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "Preferably, use a new Python environment."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "```"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "pip install -r requirements.txt"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jhengy"
        },
        "content": "```"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jhengy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "## Quick start"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "To download submissions from [r/politics](https://www.reddit.com/r/politics/) "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "between 1 March 2019 and 2 March 2019, run: "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "```"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "python cli.py pull politics --start 2019 3 1 --end 2019 3 2 --output politics.json"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "```"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "Next, to extract names, run:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "```"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "python cli.py names --input politics.json --output names.json"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "```"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "Next, to generate a wordlcoud, run:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "```"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "python cli.py view --input names.json"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "```"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "Below is the word cloud generated for this time period:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "![Word cloud from a Reddit forum about US news, over the first days of March 2018](docs/visuals/politicsEarlyMarch2018.jpg)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "`cli.py` is meant for performing NLP tasks from command line."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "Usage syntax: `python cli.py \u003ccommand\u003e \u003carguments\u003e`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "Current commands:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "1. `pull` - download Reddit submissions and save to a file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "2. `names` - extract names from Reddit submissions, loaded from a file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "3. `view` - generate a wordcloud displaying the extracted names"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "To download Reddit submissions, run:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "```"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "python cli.py pull \u003csubreddit name\u003e --start \u003cyear, month, day\u003e --end \u003cyear, month, day\u003e --output \u003cpath to output file\u003e`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "```"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "To extract names from these downloaded submissions, run:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "```"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "python cli.py names --input \u003cpath to input file\u003e --output \u003cpath to output file\u003e`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "To generate a wordcloud displaying these extracted names, run:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "python cli.py view --input \u003cpath to json file containing extracted names\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "Anubhav": 44,
      "jhengy": 2,
      "anubh-v": 19
    }
  },
  {
    "path": "cli.py",
    "fileType": "py",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "\"\"\""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "This module provides a command line interface to download reddit data"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "and perform NLP tasks on them."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "Usage syntax: python cli.py \u003ccommand\u003e \u003carguments\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "Current commands:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    1. pull - download Reddit submissions and save to a file."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    2. names - extract names from Reddit submissions, loaded from a file."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "To download Reddit submissions, run:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jhengy"
        },
        "content": "python cli.py pull \u003csubreddit name\u003e --start \u003cyear, month, day\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jhengy"
        },
        "content": "--end \u003cyear, month, day\u003e --output \u003cpath to output file\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "To extract names from these downloaded submissions, run:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "python cli.py names --input \u003cpath to input file\u003e --output \u003cpath to output file\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "\"\"\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import argparse"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "import json"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "from etl import Client, Tasks, Util, WordCloud"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jhengy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "def pull_data(context):"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    subreddit \u003d context.subreddit"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    start_date \u003d list(map(int, context.start))"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    end_date \u003d list(map(int, context.end))"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    output_path \u003d context.output"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    data_store \u003d Client.pull(subreddit, start_date, end_date)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    Client.write(data_store, output_path)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jhengy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "def extract_names(context):"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    input_path \u003d context.input"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    output_path \u003d context.output"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    data_generator \u003d Client.read(input_path)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    Tasks.perform_name_extraction(data_generator, output_path)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "def extract_action_phrases(context):"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    input_path \u003d context.input"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    output_path \u003d context.output"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    with open(input_path) as infile:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "        data \u003d json.load(infile)"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    data_generator \u003d iter(data)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    extracted \u003d Tasks.perform_action_phrase_extraction(data_generator)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    Client.write(extracted, output_path)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "def make_local_wordcloud(context):"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    names_filepath \u003d context.input"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    with open(names_filepath) as infile:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "        names_data \u003d json.load(infile)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "        frequencies \u003d Util.get_frequencies(names_data)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "        WordCloud.make_image(frequencies)"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "if __name__ \u003d\u003d \"__main__\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    Create an overall ArgumentParser, which expects the user to specify a"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    command (such as \"pull\" or \"names\")"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    parser \u003d argparse.ArgumentParser()"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    subparsers \u003d parser.add_subparsers(dest\u003d\u0027command\u0027)"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    # The user must specify a command"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    subparsers.required \u003d True"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    # Create a parser for the \"names\" command."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    name_command \u003d subparsers.add_parser(\u0027names\u0027)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    name_command.add_argument(\u0027--input\u0027, type\u003dstr, required\u003dTrue,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                              help\u003d\u0027a path to a file containing \\"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                                    downloaded reddit data\u0027)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    name_command.add_argument(\u0027--output\u0027, type\u003dstr, required\u003dTrue,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                              help\u003d\u0027a location for storing results\u0027)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    name_command.set_defaults(handler\u003dextract_names)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    # Create a parser for the \"pull\" command."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    pull_command \u003d subparsers.add_parser(\u0027pull\u0027)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    pull_command.add_argument(\u0027subreddit\u0027, type\u003dstr,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                              help\u003d\"a subreddit\u0027s name\")"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    pull_command.add_argument(\u0027--start\u0027, nargs\u003d\"+\", type\u003dstr, required\u003dTrue)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    pull_command.add_argument(\u0027--end\u0027, nargs\u003d\"+\", type\u003dstr, required\u003dTrue)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    pull_command.add_argument(\u0027--output\u0027, type\u003dstr, required\u003dTrue)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    pull_command.set_defaults(handler\u003dpull_data)"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    # Create parser for the \"view\" command."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    view_command \u003d subparsers.add_parser(\u0027view\u0027)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    view_command.add_argument(\u0027--input\u0027, type\u003dstr, required\u003dTrue,"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "                              help\u003d\u0027a path to the file containing \\"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "                                    extracted names\u0027)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    view_command.set_defaults(handler\u003dmake_local_wordcloud)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    Parse the user input into a \"context\" object that encapsulates"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    the arguments and options specified in the input"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    context \u003d parser.parse_args()"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    # Run the handler function associated with the user\u0027s chosen command"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    context.handler(context)"
      }
    ],
    "authorContributionMap": {
      "jhengy": 4,
      "Anubhav": 30,
      "anubh-v": 76
    }
  },
  {
    "path": "docs/results.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "A Reddit forum about college applications, over Nov 2018 - Dec 2018:"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jhengy"
        },
        "content": "![Word cloud from a Reddit forum about college applications, over Nov 2018 - Dec 2018](visuals/collegeNovDec2018.png)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "A Reddit forum about US news, over the last week of September 2018:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jhengy"
        },
        "content": "![Word cloud from a Reddit forum about US news, over the last week of Sept 2018](visuals/politicsNovDec2018.jpg)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "A Reddit forum about world news, over Nov 2018 - Dec 2018:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jhengy"
        },
        "content": "![Word cloud from /r/worldnews, over Nov 2018 - Dec 2018](visuals/worldnewsNovDec2018.png)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "A Reddit forum about computer science career questions, over Nov 2018 - Dec 2018:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jhengy"
        },
        "content": "![Word cloud from /r/cscareerquestions, over Nov 2018 - Dec 2018](visuals/cscareerquestionsNovDec2018.png)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "A Reddit forum about privacy, over Nov 2018 - Dec 2018:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jhengy"
        },
        "content": "![World cloud from /r/privacy, over Nov 2018 - Dec 2018](visuals/privacyNovDec2018.png)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "A Reddit forum about the United Kingdom, over Nov 2018 - Dec 2018:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jhengy"
        },
        "content": "![World cloud from /r/unitedkingdom,  over Nov 2018 - Dec 2018](visuals/unitedkingdomNovDec2018.png)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "A Reddit forum about data analysis, over Nov 2018 - Dec 2018:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jhengy"
        },
        "content": "![World clouds from /r/dataisbeautiful, over Nov 2018 - Dec 2018](visuals/dataisbeautifulNovDec2018.png)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "**\"OC\" is a common abbreviation used, meaning \"Original Content\"**"
      }
    ],
    "authorContributionMap": {
      "jhengy": 7,
      "anubh-v": 15
    }
  },
  {
    "path": "etl/Client.py",
    "fileType": "py",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "\"\"\""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "This module provides methods to download, read and write Reddit data."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "Downloading is done using the Pushshift API."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "\"\"\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "from datetime import datetime"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import json"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import requests"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import time"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jhengy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "def pull(subreddit, start_date, end_date):"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    This generator function downloads Reddit submissions from Pushshift."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    Starting from the a given date, this function yields the next available"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    submission (as a Python dictionary), until the specified end date is"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    reached."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    :param subreddit: a string representing the subreddit name"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    :param start_date: a list of integers representing the starting date"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    :param end_date: a list of integers representing the end date"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    :yield the next submission (as a Python dictionary)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    Example:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    To download submissions from r/politics, dated between 1st March 2019,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    and 5th March 2019, set the arguments as:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    - subreddit \u003d \"politics\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    - start_date \u003d [2019, 3, 1]"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    - end_date \u003d [2019, 3, 5]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    # Convert the given lists into datetime objects"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    start \u003d int(datetime(*start_date).timestamp())"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    end \u003d int(datetime(*end_date).timestamp())"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    # This is the Pushshift API endpoint for searching Reddit submissions"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    base_url \u003d \"https://api.pushshift.io/reddit/search/submission/?\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    # Define parameters for the HTTP GET request that will be sent to Pushshift"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    subreddit_name \u003d \"subreddit\u003d\" + subreddit"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    time_period \u003d \"\u0026after\u003d\" + str(start) + \"\u0026before\u003d\" + str(end)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    # Request for up to 500 results"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    requested_size \u003d \"\u0026size\u003d500\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    Keep requesting for submissions till we have obtained submissions for"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    the entire time period specified in the query"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    while(start \u003c end):"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        query_url \u003d base_url + subreddit_name + time_period + requested_size"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        print(query_url)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        raw_response \u003d requests.get(query_url)"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        # Response body will be in JSON"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        json_response \u003d json.loads(raw_response.text)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        if len(json_response[\u0027data\u0027]) \u003d\u003d 0:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            \"\"\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            If there are no results returned in the response, it means there"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            are no Reddit submissions in the given time period."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            We can stop searching."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            \"\"\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jhengy"
        },
        "content": "            break"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        else:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            \"\"\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            If there are results in the response, yield the next submission."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            \"\"\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            for data in json_response[\u0027data\u0027]:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                yield data"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        \"\"\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        Once all results in response have been iterated through, update the"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        time period and make another request to Pushshift."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        \"\"\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        time.sleep(1)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        last_submission_time \u003d json_response[\u0027data\u0027][-1][\u0027created_utc\u0027]"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jhengy"
        },
        "content": "        print(\"Retrieved till \""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jhengy"
        },
        "content": "              + datetime.utcfromtimestamp(last_submission_time)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "              .strftime(\u0027%Y-%m-%d %H:%M:%S\u0027))"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        start \u003d last_submission_time"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        time_period \u003d \"\u0026after\u003d\" + str(start) + \"\u0026before\u003d\" + str(end)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "def write(data_generator, output_path):"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    Given a iterator of Reddit submissions, this method writes the submissions"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    to a test file. The submissions are first cached into lists of"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    size \u003ccache_size\u003e."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    Each list is then written onto a line in the file."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    :param data_generator: an iterator of Reddit submissions."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    :param output_path: path to a text file"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jhengy"
        },
        "content": "    cache_size \u003d 1000"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    cache \u003d []"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    count \u003d 0"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    # Each cache is appended onto the existing file contents, in a new line."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    with open(output_path, \u0027a\u0027) as outfile:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        for data in data_generator:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            # Add the next submission into the cache"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            count +\u003d 1"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            cache.append(data)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            if len(cache) \u003e cache_size:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                # Once the cache limit is reached, write out the cached"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                # submissions."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                outfile.write(json.dumps(cache))"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                outfile.write(\u0027\\n\u0027)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                cache \u003d []"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        # After iterating through all submissions, the cache may still be"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        # partially full. Write out these remaining submissions."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        outfile.write(json.dumps(cache))"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        outfile.write(\u0027\\n\u0027)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        print(\"Written {} submissions in total\".format(count))"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jhengy"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "def read(input_path):"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    Given a text file containing Reddit submissions, yield the next submission,"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    as a Python dictionary. The method continues to yield the next submission,"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    until all submissions in the file have been exhausted."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    The structure of the data in the text file should be similar to the"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    structure adopted in the \u0027write\u0027 method."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    :param input_path: path to a text file containing Reddit submissions."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    :yield: the next submission"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    count \u003d 0"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    with open(input_path, \u0027r\u0027) as infile:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        for line in infile:"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            data_store \u003d json.loads(line)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            for data in data_store:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                count +\u003d 1"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                yield data"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    print(\"Number read \u003d \" + str(count))"
      }
    ],
    "authorContributionMap": {
      "jhengy": 6,
      "anubh-v": 141
    }
  },
  {
    "path": "etl/Heuristics.py",
    "fileType": "py",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "from functools import reduce"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import nltk"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "def naive_name_detector(text):"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    Given a piece of text, return a list of names identified in the text."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    # Create a tokenizer that creates tokens of only alphanumeric characters"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    # i.e. sets of characters with punctuation do not appear as a token"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    tokenizer \u003d nltk.RegexpTokenizer(r\u0027\\w+\u0027)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    # use tokenizer to break the text into tokens"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    tokens \u003d tokenizer.tokenize(text)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    # use \u0027part-of-speech\u0027 tagging to determine meaning of each token"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    tagged_tokens \u003d nltk.pos_tag(tokens)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    Now, we identify the names in the text."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    We assume that:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "     (1) all tokens tagged as singular proper nouns are part of names"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "     (2) names are comprised of at most 2 singular proper nouns"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    Hence, we identify names by identifying the singular proper nouns."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    If there are 2 consecutive singular proper nouns, they are considered to be"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    1 name."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    # \u0027NNP\u0027 is nltk\u0027s code for singular proper noun"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    PROPER_NOUN_SINGULAR \u003d \u0027NNP\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    # Create a list to store the final list of names associated with this text."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    completed_names \u003d []"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    # Create a list to store the name currently being tracked, as we iterate"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    # through the tokens."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    current_name \u003d []"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    for tagged_token in tagged_tokens:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        # For each tagged token, retrieve the tag and the token string"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        tag \u003d tagged_token[1]"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        token \u003d tagged_token[0].lower()"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        if tag \u003d\u003d PROPER_NOUN_SINGULAR:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            # If the current token is a proper noun (singular), it is either"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            # part of the current name being tracked, or the start of a"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            # new name."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            if len(current_name) \u003d\u003d 0:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                # If we are not currently tracking a name, consider the current"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                # token to be the start of a new name."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                current_name.append(token)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            elif len(current_name) !\u003d 0:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                # If we are currently tracking a name, consider the current"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                # token part of it."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                # Append token to the current name."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                current_name[0] \u003d current_name[0] + \" \" + token"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                # Assume each name will have at most 2 NNP tokens."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                completed_names.append(current_name[0])"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                current_name \u003d []"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        elif current_name:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            # If the current token is NOT a proper noun (singular), it"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            # signifies the end of the current name."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            completed_names.append(current_name[0])"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            current_name \u003d []"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    return completed_names"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "def action_phrase_detector(text, name):"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    tokenizer \u003d nltk.RegexpTokenizer(r\u0027\\w+\u0027)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    # use tokenizer to break the text into tokens"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    text \u003d text.lower()"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    tokens \u003d tokenizer.tokenize(text)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    # use \u0027part-of-speech\u0027 tagging to determine meaning of each token"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    tagged_tokens \u003d nltk.pos_tag(tokens)"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    for index, tagged_token in enumerate(tagged_tokens):"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "        if tagged_token[0] in name:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "            tagged_tokens[index] \u003d (tagged_token[0], \"NAME\")"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    grammar \u003d \"phrase: {\u003cNAME\u003e+\u003cV.*\u003e\u003c.*\u003e{0,4}\u003cNN.*\u003e}\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    cp \u003d nltk.RegexpParser(grammar)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    phrases \u003d []"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    result \u003d cp.parse(tagged_tokens)"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    for subtree in result.subtrees():"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "        if subtree.label() \u003d\u003d \"phrase\":"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "            phrase \u003d reduce(lambda string_so_far, token2:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "                            \" \".join([string_so_far, token2[0]]),"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "                            subtree.flatten(),"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "                            \"\")"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "            phrases.append(phrase)"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    if phrases:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "        print(name)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "        print(text)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "        print(phrases)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    return phrases"
      }
    ],
    "authorContributionMap": {
      "Anubhav": 39,
      "anubh-v": 72
    }
  },
  {
    "path": "etl/Tasks.py",
    "fileType": "py",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "\"\"\""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "This module provides methods to perform extract names from Reddit submissions."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "\"\"\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "from functools import reduce"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import json"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "from etl.Heuristics import naive_name_detector, action_phrase_detector"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "def perform_name_extraction(submissions, output_path):"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    Given an iterator of Reddit submissions, identifies the names present"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    and collates the submissions associated with each name."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    The collated submissions are then written to the specified file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    :param submissions: an iterator of Reddit submissions"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    :param output_path:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    # remove unnecessary fields from every submission"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    trimmed_submissions \u003d map(trim, submissions)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    # identify the names present in each submission"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    # a submission could be associated with more than 1 name"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    with_extracted_names \u003d map(extract_names, trimmed_submissions)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    # remove submissions with no identified names"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    named_submissions \u003d filter(has_name, with_extracted_names)"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    For submissions with multiple names, create copies of the submission with"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    1 name each"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    def unpack(submission, name):"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        return dict(title\u003dsubmission[\u0027title\u0027],"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                    id\u003dsubmission[\u0027id\u0027],"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                    name\u003dname)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jhengy"
        },
        "content": "    unpacked_named_submissions \u003d (unpack(submission, name)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jhengy"
        },
        "content": "                                  for submission in named_submissions"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jhengy"
        },
        "content": "                                  for name in submission[\u0027names\u0027])"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jhengy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    Remove submissions associated with very short names."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    These names are unlikely to be meaningful."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    cleaned_submissions \u003d filter(does_not_have_short_names,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                                 unpacked_named_submissions)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    Sort submissions with respect to their names (i.e. sort using the"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    submission\u0027s name as the key)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    sorted_submissions \u003d sorted(cleaned_submissions,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                                key\u003dlambda submission: submission[\u0027name\u0027])"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    Group together named submissions which are associated with the same name."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    # Prepare named submissions for grouping"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    ready_to_be_grouped \u003d [prepare_for_grouping(submission)"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                           for submission in sorted_submissions]"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    ready_to_be_grouped[0] \u003d [ready_to_be_grouped[0]]"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    grouped \u003d reduce(group, ready_to_be_grouped)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    Sort named submissions, in order of number of titles associated with"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    each name."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    grouped.sort("
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        key\u003dlambda named_submission: len(named_submission[\u0027titles\u0027]),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        reverse\u003dTrue)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    Write sorted named submissions to file."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    with open(output_path, \u0027w\u0027) as outfile:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        json.dump(grouped, outfile, indent\u003d1)"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "def extract_names(submission):"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    submission[\u0027names\u0027] \u003d naive_name_detector(submission[\u0027title\u0027])"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    return submission"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "def prepare_for_grouping(submission):"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    return dict(titles\u003d[submission[\u0027title\u0027]],"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "                ids\u003d[submission[\u0027id\u0027]],"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                name\u003dsubmission[\u0027name\u0027])"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "def group(uniq_data_so_far, next_data):"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    data_to_be_compared \u003d uniq_data_so_far[-1]"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    if data_to_be_compared[\u0027name\u0027] !\u003d next_data[\u0027name\u0027]:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        uniq_data_so_far.append(next_data)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        return uniq_data_so_far"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    else:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        data_to_be_compared[\u0027titles\u0027].append(next_data[\u0027titles\u0027][0])"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        data_to_be_compared[\u0027ids\u0027].append(next_data[\u0027ids\u0027][0])"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        return uniq_data_so_far"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "def trim(submission):"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    # Create a new dictionary, keeping only the title and id"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    return dict(title\u003dsubmission[\u0027title\u0027],"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "                id\u003dsubmission[\u0027id\u0027])"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "def does_not_have_short_names(submission):"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    return len(submission[\u0027name\u0027]) \u003e 3"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "def has_name(submission):"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    return len(submission[\u0027names\u0027]) !\u003d 0"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "def perform_action_phrase_extraction(submissions):"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    return map(extract_action_phrases, submissions)"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "def extract_action_phrases(submission):"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    action_phrases \u003d []"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    for title in submission[\u0027titles\u0027]:"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "        name \u003d submission[\u0027name\u0027]"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "        action_phrases.extend(action_phrase_detector(title, name))"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    submission[\u0027action_phrases\u0027] \u003d action_phrases"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    return submission"
      }
    ],
    "authorContributionMap": {
      "Anubhav": 20,
      "jhengy": 4,
      "anubh-v": 113
    }
  },
  {
    "path": "etl/Util.py",
    "fileType": "py",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "def get_frequencies(names_data_generator):"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    freq_dict \u003d {}"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    for name_data in names_data_generator:"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "        name \u003d name_data[\"name\"]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "        frequency \u003d len(name_data[\"titles\"])"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "        freq_dict[name] \u003d frequency"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    return freq_dict"
      }
    ],
    "authorContributionMap": {
      "Anubhav": 9
    }
  },
  {
    "path": "etl/WordCloud.py",
    "fileType": "py",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "from wordcloud import WordCloud"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "import matplotlib.pyplot as plt"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "def make_image(text):"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    wc \u003d WordCloud(background_color\u003d\"white\", max_words\u003d1000)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    # generate word cloud"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    wc.generate_from_frequencies(text)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Anubhav"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    # show"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    plt.imshow(wc, interpolation\u003d\"bilinear\")"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    plt.axis(\"off\")"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    plt.show()"
      }
    ],
    "authorContributionMap": {
      "Anubhav": 13
    }
  },
  {
    "path": "requirements.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "certifi\u003d\u003d2019.3.9"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "chardet\u003d\u003d3.0.4"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "Click\u003d\u003d7.0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "cycler\u003d\u003d0.10.0"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "entrypoints\u003d\u003d0.3"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "flake8\u003d\u003d3.7.7"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "Flask\u003d\u003d1.0.3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "Flask-Cors\u003d\u003d3.0.8"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "idna\u003d\u003d2.8"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "itsdangerous\u003d\u003d1.1.0"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "Jinja2\u003d\u003d2.10.1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "kiwisolver\u003d\u003d1.1.0"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "MarkupSafe\u003d\u003d1.1.1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "matplotlib\u003d\u003d3.1.2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "mccabe\u003d\u003d0.6.1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "nltk\u003d\u003d3.4.3"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "numpy\u003d\u003d1.17.4"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "Pillow\u003d\u003d6.2.1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "psaw\u003d\u003d0.0.7"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "pycodestyle\u003d\u003d2.5.0"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "pyflakes\u003d\u003d2.1.1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "pyparsing\u003d\u003d2.4.5"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "python-dateutil\u003d\u003d2.8.1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "requests\u003d\u003d2.22.0"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "six\u003d\u003d1.12.0"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "urllib3\u003d\u003d1.25.3"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "Werkzeug\u003d\u003d0.15.4"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "wordcloud\u003d\u003d1.6.0"
      }
    ],
    "authorContributionMap": {
      "Anubhav": 8,
      "anubh-v": 20
    }
  },
  {
    "path": "server/modules/extract.py",
    "fileType": "py",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "from psaw import PushshiftAPI"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import datetime as dt"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import nltk"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "from modules.tokenizer import tokenize"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "from modules.objectify import make_object_array"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jhengy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "def extract_data():"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    api \u003d PushshiftAPI()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    start \u003d int(dt.datetime(2018, 6, 1).timestamp())"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jhengy"
        },
        "content": "    end \u003d int(dt.datetime(2018, 6, 30).timestamp())"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jhengy"
        },
        "content": "    gen \u003d api.search_submissions("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jhengy"
        },
        "content": "        after\u003dstart, before\u003dend, subreddit\u003d\u0027singapore\u0027)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    results \u003d list(gen)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    print(len(results))"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    data \u003d {}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    data[\u0027titles\u0027] \u003d []"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    for result in results:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        data[\u0027titles\u0027].extend(tokenize(result.title))"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    freq \u003d nltk.FreqDist(data[\u0027titles\u0027])"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    print(freq.most_common(50))"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    return make_object_array(freq.most_common(50))"
      }
    ],
    "authorContributionMap": {
      "jhengy": 4,
      "anubh-v": 25
    }
  },
  {
    "path": "server/modules/objectify.py",
    "fileType": "py",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "import json"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jhengy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "def make_object_array(list_of_tuples):"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    \"\"\" Converts a list of tuples to a JSON array of objects. \"\"\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    object_list \u003d []"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    for tuple in list_of_tuples:"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        word \u003d tuple[0]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        frequency \u003d tuple[1]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        # Store word-frequency pair in a Python dictionary"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        pair \u003d {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "            \u0027text\u0027: word,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jhengy"
        },
        "content": "            \u0027value\u0027: frequency"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        # Add this dictionary to the list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "        object_list.append(pair)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    # Convert the list into a JSON array"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    return json.dumps(object_list)"
      }
    ],
    "authorContributionMap": {
      "jhengy": 2,
      "anubh-v": 21
    }
  },
  {
    "path": "server/modules/tokenizer.py",
    "fileType": "py",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jhengy"
        },
        "content": "from nltk.corpus import stopwords"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jhengy"
        },
        "content": "from nltk.tokenize import word_tokenize"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jhengy"
        },
        "content": "import string"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jhengy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jhengy"
        },
        "content": "# return an array of tokens (with stopwords and punctuation filtered, stemed)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jhengy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jhengy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jhengy"
        },
        "content": "def tokenize(sentence):"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jhengy"
        },
        "content": "    MISC_STOPWORDS \u003d [\"\u0027s\", \"http\", \"https\", \"‘\", \"’\"]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jhengy"
        },
        "content": "    tokens \u003d word_tokenize(sentence)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jhengy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    tokens \u003d [w.lower() for w in tokens]"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    stop_words \u003d list(stopwords.words(\u0027english\u0027)) + MISC_STOPWORDS"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jhengy"
        },
        "content": "    tokens \u003d [w for w in tokens if w not in stop_words]"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jhengy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "    punctSet \u003d list(string.punctuation)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jhengy"
        },
        "content": "    tokens \u003d [w for w in tokens if w not in punctSet]"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jhengy"
        },
        "content": "    return tokens"
      }
    ],
    "authorContributionMap": {
      "jhengy": 15,
      "anubh-v": 8
    }
  },
  {
    "path": "server/run_app.py",
    "fileType": "py",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "from web.app import app"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jhengy"
        },
        "content": "app.run(debug\u003dTrue)"
      }
    ],
    "authorContributionMap": {
      "jhengy": 1,
      "anubh-v": 2
    }
  },
  {
    "path": "server/web/app.py",
    "fileType": "py",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jhengy"
        },
        "content": "from flask import Flask, jsonify"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jhengy"
        },
        "content": "from flask_cors import CORS"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "from modules.extract import extract_data"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "import os"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jhengy"
        },
        "content": "# instantiate the app"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "app \u003d Flask(__name__)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jhengy"
        },
        "content": "app.config.from_object(__name__)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jhengy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jhengy"
        },
        "content": "# enable CORS"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jhengy"
        },
        "content": "CORS(app, resources\u003d{r\u0027/*\u0027: {\u0027origins\u0027: \u0027*\u0027}})"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jhengy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jhengy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jhengy"
        },
        "content": "# sanity check route"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jhengy"
        },
        "content": "@app.route(\u0027/ping\u0027, methods\u003d[\u0027GET\u0027])"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jhengy"
        },
        "content": "def ping_pong():"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jhengy"
        },
        "content": "    return jsonify(\u0027pong!\u0027)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "anubh-v"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jhengy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jhengy"
        },
        "content": "@app.route(\u0027/freqdist\u0027, methods\u003d[\u0027GET\u0027])"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jhengy"
        },
        "content": "def getfreqDist():"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jhengy"
        },
        "content": "    data \u003d extract_data()"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jhengy"
        },
        "content": "    return jsonify(data)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jhengy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jhengy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "@app.route(\"/\")"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "anubh-v"
        },
        "content": "def entry():"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    data_dir \u003d \"../data\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    print(os.getcwd())"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Anubhav"
        },
        "content": "    return jsonify(os.listdir(data_dir))"
      }
    ],
    "authorContributionMap": {
      "jhengy": 20,
      "Anubhav": 4,
      "anubh-v": 6
    }
  },
  {
    "path": "server/web/templates/index.html",
    "fileType": "html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jhengy"
        },
        "content": "\u003c!DOCTYPE html\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jhengy"
        },
        "content": "\u003chtml\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jhengy"
        },
        "content": "  \u003chead\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jhengy"
        },
        "content": "    \u003cscript src\u003d\"https://cdn.zingchart.com/zingchart.min.js\"\u003e\u003c/script\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jhengy"
        },
        "content": "    \u003cscript\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jhengy"
        },
        "content": "      zingchart.MODULESDIR \u003d \"https://cdn.zingchart.com/modules/\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jhengy"
        },
        "content": "      ZC.LICENSE \u003d ["
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jhengy"
        },
        "content": "        \"569d52cefae586f634c54f86dc99e6a9\","
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jhengy"
        },
        "content": "        \"ee6b7db5b51705a13dc2339db3edaf6d\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jhengy"
        },
        "content": "      ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jhengy"
        },
        "content": "    \u003c/script\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jhengy"
        },
        "content": "  \u003c/head\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jhengy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jhengy"
        },
        "content": "  \u003cbody\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jhengy"
        },
        "content": "    \u003cdiv\u003etest\u003c/div\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jhengy"
        },
        "content": "    \u003cdiv id\u003d\"myChart\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jhengy"
        },
        "content": "  \u003c/body\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jhengy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jhengy"
        },
        "content": "  \u003cscript type\u003d\"text/javascript\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jhengy"
        },
        "content": "    var arr \u003d {{ data | safe}}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jhengy"
        },
        "content": "    console.log(arr)"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jhengy"
        },
        "content": "    var wordArr \u003d ["
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jhengy"
        },
        "content": "      {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jhengy"
        },
        "content": "        text: \"hello\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jhengy"
        },
        "content": "        count: 10"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jhengy"
        },
        "content": "      },"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jhengy"
        },
        "content": "      {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jhengy"
        },
        "content": "        text: \"test\","
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jhengy"
        },
        "content": "        count: 89"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jhengy"
        },
        "content": "      }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jhengy"
        },
        "content": "    ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jhengy"
        },
        "content": "    var myConfig \u003d {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jhengy"
        },
        "content": "      type: \"wordcloud\","
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jhengy"
        },
        "content": "      options: {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jhengy"
        },
        "content": "        words: arr"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jhengy"
        },
        "content": "      }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jhengy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jhengy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jhengy"
        },
        "content": "    zingchart.render({"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jhengy"
        },
        "content": "      id: \"myChart\","
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jhengy"
        },
        "content": "      data: myConfig,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jhengy"
        },
        "content": "      height: 500,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jhengy"
        },
        "content": "      width: \"100%\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jhengy"
        },
        "content": "    })"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jhengy"
        },
        "content": "  \u003c/script\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jhengy"
        },
        "content": "\u003c/html\u003e"
      }
    ],
    "authorContributionMap": {
      "jhengy": 46
    }
  }
]
